<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="869.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="869.00"> </text><svg id="frames" x="10" width="1180" total_samples="54137"><g><title>perf (6 samples, 0.01%)</title><rect x="0.0000%" y="821" width="0.0111%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="6"/><text x="0.2500%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="0.0000%" y="805" width="0.0111%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="6"/><text x="0.2500%" y="815.50"></text></g><g><title>do_syscall_64 (6 samples, 0.01%)</title><rect x="0.0000%" y="789" width="0.0111%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="6"/><text x="0.2500%" y="799.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.01%)</title><rect x="0.0000%" y="773" width="0.0111%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="6"/><text x="0.2500%" y="783.50"></text></g><g><title>__do_execve_file.isra.0 (6 samples, 0.01%)</title><rect x="0.0000%" y="757" width="0.0111%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="6"/><text x="0.2500%" y="767.50"></text></g><g><title>search_binary_handler (6 samples, 0.01%)</title><rect x="0.0000%" y="741" width="0.0111%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="6"/><text x="0.2500%" y="751.50"></text></g><g><title>load_elf_binary (6 samples, 0.01%)</title><rect x="0.0000%" y="725" width="0.0111%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="6"/><text x="0.2500%" y="735.50"></text></g><g><title>setup_new_exec (6 samples, 0.01%)</title><rect x="0.0000%" y="709" width="0.0111%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="6"/><text x="0.2500%" y="719.50"></text></g><g><title>perf_event_exec (6 samples, 0.01%)</title><rect x="0.0000%" y="693" width="0.0111%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="6"/><text x="0.2500%" y="703.50"></text></g><g><title>ctx_resched (6 samples, 0.01%)</title><rect x="0.0000%" y="677" width="0.0111%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="6"/><text x="0.2500%" y="687.50"></text></g><g><title>perf_pmu_enable.part.0 (6 samples, 0.01%)</title><rect x="0.0000%" y="661" width="0.0111%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="6"/><text x="0.2500%" y="671.50"></text></g><g><title>x86_pmu_enable (6 samples, 0.01%)</title><rect x="0.0000%" y="645" width="0.0111%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="6"/><text x="0.2500%" y="655.50"></text></g><g><title>intel_pmu_enable_all (6 samples, 0.01%)</title><rect x="0.0000%" y="629" width="0.0111%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="6"/><text x="0.2500%" y="639.50"></text></g><g><title>native_write_msr (6 samples, 0.01%)</title><rect x="0.0000%" y="613" width="0.0111%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="6"/><text x="0.2500%" y="623.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (14 samples, 0.03%)</title><rect x="0.0185%" y="805" width="0.0259%" height="15" fill="rgb(217,207,13)" fg:x="10" fg:w="14"/><text x="0.2685%" y="815.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (6 samples, 0.01%)</title><rect x="0.0702%" y="789" width="0.0111%" height="15" fill="rgb(231,73,38)" fg:x="38" fg:w="6"/><text x="0.3202%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (6 samples, 0.01%)</title><rect x="0.1127%" y="773" width="0.0111%" height="15" fill="rgb(225,20,46)" fg:x="61" fg:w="6"/><text x="0.3627%" y="783.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (26 samples, 0.05%)</title><rect x="0.0813%" y="789" width="0.0480%" height="15" fill="rgb(210,31,41)" fg:x="44" fg:w="26"/><text x="0.3313%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (33 samples, 0.06%)</title><rect x="0.1311%" y="789" width="0.0610%" height="15" fill="rgb(221,200,47)" fg:x="71" fg:w="33"/><text x="0.3811%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (24 samples, 0.04%)</title><rect x="0.1478%" y="773" width="0.0443%" height="15" fill="rgb(226,26,5)" fg:x="80" fg:w="24"/><text x="0.3978%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (24 samples, 0.04%)</title><rect x="0.1478%" y="757" width="0.0443%" height="15" fill="rgb(249,33,26)" fg:x="80" fg:w="24"/><text x="0.3978%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (24 samples, 0.04%)</title><rect x="0.1478%" y="741" width="0.0443%" height="15" fill="rgb(235,183,28)" fg:x="80" fg:w="24"/><text x="0.3978%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.04%)</title><rect x="0.1478%" y="725" width="0.0443%" height="15" fill="rgb(221,5,38)" fg:x="80" fg:w="24"/><text x="0.3978%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.04%)</title><rect x="0.1478%" y="709" width="0.0443%" height="15" fill="rgb(247,18,42)" fg:x="80" fg:w="24"/><text x="0.3978%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (24 samples, 0.04%)</title><rect x="0.1478%" y="693" width="0.0443%" height="15" fill="rgb(241,131,45)" fg:x="80" fg:w="24"/><text x="0.3978%" y="703.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (24 samples, 0.04%)</title><rect x="0.1478%" y="677" width="0.0443%" height="15" fill="rgb(249,31,29)" fg:x="80" fg:w="24"/><text x="0.3978%" y="687.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (24 samples, 0.04%)</title><rect x="0.1478%" y="661" width="0.0443%" height="15" fill="rgb(225,111,53)" fg:x="80" fg:w="24"/><text x="0.3978%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.04%)</title><rect x="0.1976%" y="757" width="0.0388%" height="15" fill="rgb(238,160,17)" fg:x="107" fg:w="21"/><text x="0.4476%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (21 samples, 0.04%)</title><rect x="0.1976%" y="741" width="0.0388%" height="15" fill="rgb(214,148,48)" fg:x="107" fg:w="21"/><text x="0.4476%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (21 samples, 0.04%)</title><rect x="0.1976%" y="725" width="0.0388%" height="15" fill="rgb(232,36,49)" fg:x="107" fg:w="21"/><text x="0.4476%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (21 samples, 0.04%)</title><rect x="0.1976%" y="709" width="0.0388%" height="15" fill="rgb(209,103,24)" fg:x="107" fg:w="21"/><text x="0.4476%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (21 samples, 0.04%)</title><rect x="0.1976%" y="693" width="0.0388%" height="15" fill="rgb(229,88,8)" fg:x="107" fg:w="21"/><text x="0.4476%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.04%)</title><rect x="0.1976%" y="677" width="0.0388%" height="15" fill="rgb(213,181,19)" fg:x="107" fg:w="21"/><text x="0.4476%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.04%)</title><rect x="0.1976%" y="661" width="0.0388%" height="15" fill="rgb(254,191,54)" fg:x="107" fg:w="21"/><text x="0.4476%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.04%)</title><rect x="0.1976%" y="645" width="0.0388%" height="15" fill="rgb(241,83,37)" fg:x="107" fg:w="21"/><text x="0.4476%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (23 samples, 0.04%)</title><rect x="0.1976%" y="773" width="0.0425%" height="15" fill="rgb(233,36,39)" fg:x="107" fg:w="23"/><text x="0.4476%" y="783.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove (48 samples, 0.09%)</title><rect x="0.1921%" y="789" width="0.0887%" height="15" fill="rgb(226,3,54)" fg:x="104" fg:w="48"/><text x="0.4421%" y="799.50"></text></g><g><title>yakvdb::disk::block::put_slice (22 samples, 0.04%)</title><rect x="0.2401%" y="773" width="0.0406%" height="15" fill="rgb(245,192,40)" fg:x="130" fg:w="22"/><text x="0.4901%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (22 samples, 0.04%)</title><rect x="0.2401%" y="757" width="0.0406%" height="15" fill="rgb(238,167,29)" fg:x="130" fg:w="22"/><text x="0.4901%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.04%)</title><rect x="0.2401%" y="741" width="0.0406%" height="15" fill="rgb(232,182,51)" fg:x="130" fg:w="22"/><text x="0.4901%" y="751.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (27 samples, 0.05%)</title><rect x="0.2808%" y="789" width="0.0499%" height="15" fill="rgb(231,60,39)" fg:x="152" fg:w="27"/><text x="0.5308%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (13 samples, 0.02%)</title><rect x="0.3436%" y="789" width="0.0240%" height="15" fill="rgb(208,69,12)" fg:x="186" fg:w="13"/><text x="0.5936%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (20 samples, 0.04%)</title><rect x="0.3676%" y="789" width="0.0369%" height="15" fill="rgb(235,93,37)" fg:x="199" fg:w="20"/><text x="0.6176%" y="799.50"></text></g><g><title>__GI___libc_malloc (36 samples, 0.07%)</title><rect x="0.4156%" y="789" width="0.0665%" height="15" fill="rgb(213,116,39)" fg:x="225" fg:w="36"/><text x="0.6656%" y="799.50"></text></g><g><title>__calloc (17 samples, 0.03%)</title><rect x="0.4840%" y="789" width="0.0314%" height="15" fill="rgb(222,207,29)" fg:x="262" fg:w="17"/><text x="0.7340%" y="799.50"></text></g><g><title>_int_free (68 samples, 0.13%)</title><rect x="0.5246%" y="789" width="0.1256%" height="15" fill="rgb(206,96,30)" fg:x="284" fg:w="68"/><text x="0.7746%" y="799.50"></text></g><g><title>_int_malloc (122 samples, 0.23%)</title><rect x="0.6502%" y="789" width="0.2254%" height="15" fill="rgb(218,138,4)" fg:x="352" fg:w="122"/><text x="0.9002%" y="799.50"></text></g><g><title>_int_realloc (9 samples, 0.02%)</title><rect x="0.8756%" y="789" width="0.0166%" height="15" fill="rgb(250,191,14)" fg:x="474" fg:w="9"/><text x="1.1256%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.01%)</title><rect x="0.9051%" y="789" width="0.0129%" height="15" fill="rgb(239,60,40)" fg:x="490" fg:w="7"/><text x="1.1551%" y="799.50"></text></g><g><title>std::io::Write::write_all (12 samples, 0.02%)</title><rect x="0.9236%" y="789" width="0.0222%" height="15" fill="rgb(206,27,48)" fg:x="500" fg:w="12"/><text x="1.1736%" y="799.50"></text></g><g><title>unlink_chunk.isra.0 (71 samples, 0.13%)</title><rect x="0.9457%" y="789" width="0.1311%" height="15" fill="rgb(225,35,8)" fg:x="512" fg:w="71"/><text x="1.1957%" y="799.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry (12 samples, 0.02%)</title><rect x="1.0769%" y="789" width="0.0222%" height="15" fill="rgb(250,213,24)" fg:x="583" fg:w="12"/><text x="1.3269%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (31 samples, 0.06%)</title><rect x="1.1175%" y="773" width="0.0573%" height="15" fill="rgb(247,123,22)" fg:x="605" fg:w="31"/><text x="1.3675%" y="783.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (31 samples, 0.06%)</title><rect x="1.1175%" y="757" width="0.0573%" height="15" fill="rgb(231,138,38)" fg:x="605" fg:w="31"/><text x="1.3675%" y="767.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (64 samples, 0.12%)</title><rect x="1.0991%" y="789" width="0.1182%" height="15" fill="rgb(231,145,46)" fg:x="595" fg:w="64"/><text x="1.3491%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (23 samples, 0.04%)</title><rect x="1.1748%" y="773" width="0.0425%" height="15" fill="rgb(251,118,11)" fg:x="636" fg:w="23"/><text x="1.4248%" y="783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (23 samples, 0.04%)</title><rect x="1.1748%" y="757" width="0.0425%" height="15" fill="rgb(217,147,25)" fg:x="636" fg:w="23"/><text x="1.4248%" y="767.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (23 samples, 0.04%)</title><rect x="1.1748%" y="741" width="0.0425%" height="15" fill="rgb(247,81,37)" fg:x="636" fg:w="23"/><text x="1.4248%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (18 samples, 0.03%)</title><rect x="1.2173%" y="773" width="0.0332%" height="15" fill="rgb(209,12,38)" fg:x="659" fg:w="18"/><text x="1.4673%" y="783.50"></text></g><g><title>core::intrinsics::copy (18 samples, 0.03%)</title><rect x="1.2173%" y="757" width="0.0332%" height="15" fill="rgb(227,1,9)" fg:x="659" fg:w="18"/><text x="1.4673%" y="767.50"></text></g><g><title>[[heap]] (651 samples, 1.20%)</title><rect x="0.0517%" y="805" width="1.2025%" height="15" fill="rgb(248,47,43)" fg:x="28" fg:w="651"/><text x="0.3017%" y="815.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (20 samples, 0.04%)</title><rect x="1.2173%" y="789" width="0.0369%" height="15" fill="rgb(221,10,30)" fg:x="659" fg:w="20"/><text x="1.4673%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="1.2542%" y="789" width="0.0148%" height="15" fill="rgb(210,229,1)" fg:x="679" fg:w="8"/><text x="1.5042%" y="799.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="1.2690%" y="789" width="0.0166%" height="15" fill="rgb(222,148,37)" fg:x="687" fg:w="9"/><text x="1.5190%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.06%)</title><rect x="1.2912%" y="661" width="0.0591%" height="15" fill="rgb(234,67,33)" fg:x="699" fg:w="32"/><text x="1.5412%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32 samples, 0.06%)</title><rect x="1.2912%" y="645" width="0.0591%" height="15" fill="rgb(247,98,35)" fg:x="699" fg:w="32"/><text x="1.5412%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (32 samples, 0.06%)</title><rect x="1.2912%" y="629" width="0.0591%" height="15" fill="rgb(247,138,52)" fg:x="699" fg:w="32"/><text x="1.5412%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.06%)</title><rect x="1.2912%" y="613" width="0.0591%" height="15" fill="rgb(213,79,30)" fg:x="699" fg:w="32"/><text x="1.5412%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.06%)</title><rect x="1.2912%" y="597" width="0.0591%" height="15" fill="rgb(246,177,23)" fg:x="699" fg:w="32"/><text x="1.5412%" y="607.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.06%)</title><rect x="1.2912%" y="581" width="0.0591%" height="15" fill="rgb(230,62,27)" fg:x="699" fg:w="32"/><text x="1.5412%" y="591.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (83 samples, 0.15%)</title><rect x="1.2912%" y="741" width="0.1533%" height="15" fill="rgb(216,154,8)" fg:x="699" fg:w="83"/><text x="1.5412%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (83 samples, 0.15%)</title><rect x="1.2912%" y="725" width="0.1533%" height="15" fill="rgb(244,35,45)" fg:x="699" fg:w="83"/><text x="1.5412%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (83 samples, 0.15%)</title><rect x="1.2912%" y="709" width="0.1533%" height="15" fill="rgb(251,115,12)" fg:x="699" fg:w="83"/><text x="1.5412%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (83 samples, 0.15%)</title><rect x="1.2912%" y="693" width="0.1533%" height="15" fill="rgb(240,54,50)" fg:x="699" fg:w="83"/><text x="1.5412%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (83 samples, 0.15%)</title><rect x="1.2912%" y="677" width="0.1533%" height="15" fill="rgb(233,84,52)" fg:x="699" fg:w="83"/><text x="1.5412%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (51 samples, 0.09%)</title><rect x="1.3503%" y="661" width="0.0942%" height="15" fill="rgb(207,117,47)" fg:x="731" fg:w="51"/><text x="1.6003%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (51 samples, 0.09%)</title><rect x="1.3503%" y="645" width="0.0942%" height="15" fill="rgb(249,43,39)" fg:x="731" fg:w="51"/><text x="1.6003%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (87 samples, 0.16%)</title><rect x="1.2856%" y="789" width="0.1607%" height="15" fill="rgb(209,38,44)" fg:x="696" fg:w="87"/><text x="1.5356%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (84 samples, 0.16%)</title><rect x="1.2912%" y="773" width="0.1552%" height="15" fill="rgb(236,212,23)" fg:x="699" fg:w="84"/><text x="1.5412%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (84 samples, 0.16%)</title><rect x="1.2912%" y="757" width="0.1552%" height="15" fill="rgb(242,79,21)" fg:x="699" fg:w="84"/><text x="1.5412%" y="767.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (8 samples, 0.01%)</title><rect x="1.4463%" y="789" width="0.0148%" height="15" fill="rgb(211,96,35)" fg:x="783" fg:w="8"/><text x="1.6963%" y="799.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (12 samples, 0.02%)</title><rect x="1.4611%" y="789" width="0.0222%" height="15" fill="rgb(253,215,40)" fg:x="791" fg:w="12"/><text x="1.7111%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (48 samples, 0.09%)</title><rect x="1.4907%" y="789" width="0.0887%" height="15" fill="rgb(211,81,21)" fg:x="807" fg:w="48"/><text x="1.7407%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (45 samples, 0.08%)</title><rect x="1.4962%" y="773" width="0.0831%" height="15" fill="rgb(208,190,38)" fg:x="810" fg:w="45"/><text x="1.7462%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (45 samples, 0.08%)</title><rect x="1.4962%" y="757" width="0.0831%" height="15" fill="rgb(235,213,38)" fg:x="810" fg:w="45"/><text x="1.7462%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (45 samples, 0.08%)</title><rect x="1.4962%" y="741" width="0.0831%" height="15" fill="rgb(237,122,38)" fg:x="810" fg:w="45"/><text x="1.7462%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.08%)</title><rect x="1.4962%" y="725" width="0.0831%" height="15" fill="rgb(244,218,35)" fg:x="810" fg:w="45"/><text x="1.7462%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.08%)</title><rect x="1.4962%" y="709" width="0.0831%" height="15" fill="rgb(240,68,47)" fg:x="810" fg:w="45"/><text x="1.7462%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (45 samples, 0.08%)</title><rect x="1.4962%" y="693" width="0.0831%" height="15" fill="rgb(210,16,53)" fg:x="810" fg:w="45"/><text x="1.7462%" y="703.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (45 samples, 0.08%)</title><rect x="1.4962%" y="677" width="0.0831%" height="15" fill="rgb(235,124,12)" fg:x="810" fg:w="45"/><text x="1.7462%" y="687.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (45 samples, 0.08%)</title><rect x="1.4962%" y="661" width="0.0831%" height="15" fill="rgb(224,169,11)" fg:x="810" fg:w="45"/><text x="1.7462%" y="671.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (50 samples, 0.09%)</title><rect x="1.5867%" y="789" width="0.0924%" height="15" fill="rgb(250,166,2)" fg:x="859" fg:w="50"/><text x="1.8367%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (13 samples, 0.02%)</title><rect x="1.6791%" y="789" width="0.0240%" height="15" fill="rgb(242,216,29)" fg:x="909" fg:w="13"/><text x="1.9291%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u32&gt;&gt; (9 samples, 0.02%)</title><rect x="1.7086%" y="773" width="0.0166%" height="15" fill="rgb(230,116,27)" fg:x="925" fg:w="9"/><text x="1.9586%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="1.7086%" y="757" width="0.0166%" height="15" fill="rgb(228,99,48)" fg:x="925" fg:w="9"/><text x="1.9586%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u32,alloc::alloc::Global&gt;&gt; (9 samples, 0.02%)</title><rect x="1.7086%" y="741" width="0.0166%" height="15" fill="rgb(253,11,6)" fg:x="925" fg:w="9"/><text x="1.9586%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="1.7086%" y="725" width="0.0166%" height="15" fill="rgb(247,143,39)" fg:x="925" fg:w="9"/><text x="1.9586%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (9 samples, 0.02%)</title><rect x="1.7086%" y="709" width="0.0166%" height="15" fill="rgb(236,97,10)" fg:x="925" fg:w="9"/><text x="1.9586%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="1.7086%" y="693" width="0.0166%" height="15" fill="rgb(233,208,19)" fg:x="925" fg:w="9"/><text x="1.9586%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.02%)</title><rect x="1.7086%" y="677" width="0.0166%" height="15" fill="rgb(216,164,2)" fg:x="925" fg:w="9"/><text x="1.9586%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.02%)</title><rect x="1.7086%" y="661" width="0.0166%" height="15" fill="rgb(220,129,5)" fg:x="925" fg:w="9"/><text x="1.9586%" y="671.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::flush (16 samples, 0.03%)</title><rect x="1.7031%" y="789" width="0.0296%" height="15" fill="rgb(242,17,10)" fg:x="922" fg:w="16"/><text x="1.9531%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::insert (9 samples, 0.02%)</title><rect x="1.7326%" y="789" width="0.0166%" height="15" fill="rgb(242,107,0)" fg:x="938" fg:w="9"/><text x="1.9826%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::lookup (6 samples, 0.01%)</title><rect x="1.7493%" y="789" width="0.0111%" height="15" fill="rgb(251,28,31)" fg:x="947" fg:w="6"/><text x="1.9993%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (6 samples, 0.01%)</title><rect x="1.7603%" y="789" width="0.0111%" height="15" fill="rgb(233,223,10)" fg:x="953" fg:w="6"/><text x="2.0103%" y="799.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (6 samples, 0.01%)</title><rect x="1.7751%" y="757" width="0.0111%" height="15" fill="rgb(215,21,27)" fg:x="961" fg:w="6"/><text x="2.0251%" y="767.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (6 samples, 0.01%)</title><rect x="1.7751%" y="741" width="0.0111%" height="15" fill="rgb(232,23,21)" fg:x="961" fg:w="6"/><text x="2.0251%" y="751.50"></text></g><g><title>core::cell::BorrowRefMut::new (6 samples, 0.01%)</title><rect x="1.7751%" y="725" width="0.0111%" height="15" fill="rgb(244,5,23)" fg:x="961" fg:w="6"/><text x="2.0251%" y="735.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::root_mut (7 samples, 0.01%)</title><rect x="1.7751%" y="789" width="0.0129%" height="15" fill="rgb(226,81,46)" fg:x="961" fg:w="7"/><text x="2.0251%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (7 samples, 0.01%)</title><rect x="1.7751%" y="773" width="0.0129%" height="15" fill="rgb(247,70,30)" fg:x="961" fg:w="7"/><text x="2.0251%" y="783.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (17 samples, 0.03%)</title><rect x="1.7899%" y="789" width="0.0314%" height="15" fill="rgb(212,68,19)" fg:x="969" fg:w="17"/><text x="2.0399%" y="799.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get_mut (13 samples, 0.02%)</title><rect x="1.8213%" y="789" width="0.0240%" height="15" fill="rgb(240,187,13)" fg:x="986" fg:w="13"/><text x="2.0713%" y="799.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::put (16 samples, 0.03%)</title><rect x="1.8453%" y="789" width="0.0296%" height="15" fill="rgb(223,113,26)" fg:x="999" fg:w="16"/><text x="2.0953%" y="799.50"></text></g><g><title>__GI___libc_malloc (91 samples, 0.17%)</title><rect x="1.8823%" y="789" width="0.1681%" height="15" fill="rgb(206,192,2)" fg:x="1019" fg:w="91"/><text x="2.1323%" y="799.50"></text></g><g><title>__GI___libc_realloc (14 samples, 0.03%)</title><rect x="2.0504%" y="789" width="0.0259%" height="15" fill="rgb(241,108,4)" fg:x="1110" fg:w="14"/><text x="2.3004%" y="799.50"></text></g><g><title>__GI___libc_write (258 samples, 0.48%)</title><rect x="2.0762%" y="789" width="0.4766%" height="15" fill="rgb(247,173,49)" fg:x="1124" fg:w="258"/><text x="2.3262%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (241 samples, 0.45%)</title><rect x="2.1076%" y="773" width="0.4452%" height="15" fill="rgb(224,114,35)" fg:x="1141" fg:w="241"/><text x="2.3576%" y="783.50"></text></g><g><title>__GI___read (31 samples, 0.06%)</title><rect x="2.5528%" y="789" width="0.0573%" height="15" fill="rgb(245,159,27)" fg:x="1382" fg:w="31"/><text x="2.8028%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 0.02%)</title><rect x="2.5897%" y="773" width="0.0203%" height="15" fill="rgb(245,172,44)" fg:x="1402" fg:w="11"/><text x="2.8397%" y="783.50"></text></g><g><title>__calloc (29 samples, 0.05%)</title><rect x="2.6100%" y="789" width="0.0536%" height="15" fill="rgb(236,23,11)" fg:x="1413" fg:w="29"/><text x="2.8600%" y="799.50"></text></g><g><title>__lseek64 (751 samples, 1.39%)</title><rect x="2.6636%" y="789" width="1.3872%" height="15" fill="rgb(205,117,38)" fg:x="1442" fg:w="751"/><text x="2.9136%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (724 samples, 1.34%)</title><rect x="2.7135%" y="773" width="1.3373%" height="15" fill="rgb(237,72,25)" fg:x="1469" fg:w="724"/><text x="2.9635%" y="783.50"></text></g><g><title>__memcmp_sse4_1 (45 samples, 0.08%)</title><rect x="4.0508%" y="789" width="0.0831%" height="15" fill="rgb(244,70,9)" fg:x="2193" fg:w="45"/><text x="4.3008%" y="799.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (66 samples, 0.12%)</title><rect x="4.1340%" y="789" width="0.1219%" height="15" fill="rgb(217,125,39)" fg:x="2238" fg:w="66"/><text x="4.3840%" y="799.50"></text></g><g><title>__rdl_alloc (79 samples, 0.15%)</title><rect x="4.2559%" y="789" width="0.1459%" height="15" fill="rgb(235,36,10)" fg:x="2304" fg:w="79"/><text x="4.5059%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (79 samples, 0.15%)</title><rect x="4.2559%" y="773" width="0.1459%" height="15" fill="rgb(251,123,47)" fg:x="2304" fg:w="79"/><text x="4.5059%" y="783.50"></text></g><g><title>_int_free (37 samples, 0.07%)</title><rect x="4.4184%" y="789" width="0.0683%" height="15" fill="rgb(221,13,13)" fg:x="2392" fg:w="37"/><text x="4.6684%" y="799.50"></text></g><g><title>_int_realloc (7 samples, 0.01%)</title><rect x="4.4923%" y="789" width="0.0129%" height="15" fill="rgb(238,131,9)" fg:x="2432" fg:w="7"/><text x="4.7423%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (9 samples, 0.02%)</title><rect x="4.5145%" y="789" width="0.0166%" height="15" fill="rgb(211,50,8)" fg:x="2444" fg:w="9"/><text x="4.7645%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (8 samples, 0.01%)</title><rect x="4.5311%" y="789" width="0.0148%" height="15" fill="rgb(245,182,24)" fg:x="2453" fg:w="8"/><text x="4.7811%" y="799.50"></text></g><g><title>std::io::default_read_exact (10 samples, 0.02%)</title><rect x="4.5459%" y="789" width="0.0185%" height="15" fill="rgb(242,14,37)" fg:x="2461" fg:w="10"/><text x="4.7959%" y="799.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry (7 samples, 0.01%)</title><rect x="4.5773%" y="789" width="0.0129%" height="15" fill="rgb(246,228,12)" fg:x="2478" fg:w="7"/><text x="4.8273%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (6 samples, 0.01%)</title><rect x="4.6050%" y="773" width="0.0111%" height="15" fill="rgb(213,55,15)" fg:x="2493" fg:w="6"/><text x="4.8550%" y="783.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (6 samples, 0.01%)</title><rect x="4.6050%" y="757" width="0.0111%" height="15" fill="rgb(209,9,3)" fg:x="2493" fg:w="6"/><text x="4.8550%" y="767.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (12 samples, 0.02%)</title><rect x="4.6013%" y="789" width="0.0222%" height="15" fill="rgb(230,59,30)" fg:x="2491" fg:w="12"/><text x="4.8513%" y="799.50"></text></g><g><title>[[stack]] (1,832 samples, 3.38%)</title><rect x="1.2542%" y="805" width="3.3840%" height="15" fill="rgb(209,121,21)" fg:x="679" fg:w="1832"/><text x="1.5042%" y="815.50">[[s..</text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (8 samples, 0.01%)</title><rect x="4.6235%" y="789" width="0.0148%" height="15" fill="rgb(220,109,13)" fg:x="2503" fg:w="8"/><text x="4.8735%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::lookup (6 samples, 0.01%)</title><rect x="4.6438%" y="789" width="0.0111%" height="15" fill="rgb(232,18,1)" fg:x="2514" fg:w="6"/><text x="4.8938%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::remove (20 samples, 0.04%)</title><rect x="4.6567%" y="789" width="0.0369%" height="15" fill="rgb(215,41,42)" fg:x="2521" fg:w="20"/><text x="4.9067%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (10 samples, 0.02%)</title><rect x="4.7066%" y="789" width="0.0185%" height="15" fill="rgb(224,123,36)" fg:x="2548" fg:w="10"/><text x="4.9566%" y="799.50"></text></g><g><title>[anon] (56 samples, 0.10%)</title><rect x="4.6382%" y="805" width="0.1034%" height="15" fill="rgb(240,125,3)" fg:x="2511" fg:w="56"/><text x="4.8882%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 0.01%)</title><rect x="4.7638%" y="741" width="0.0129%" height="15" fill="rgb(205,98,50)" fg:x="2579" fg:w="7"/><text x="5.0138%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="4.7638%" y="757" width="0.0148%" height="15" fill="rgb(205,185,37)" fg:x="2579" fg:w="8"/><text x="5.0138%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 0.04%)</title><rect x="4.7417%" y="789" width="0.0388%" height="15" fill="rgb(238,207,15)" fg:x="2567" fg:w="21"/><text x="4.9917%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="4.7638%" y="773" width="0.0166%" height="15" fill="rgb(213,199,42)" fg:x="2579" fg:w="9"/><text x="5.0138%" y="783.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (7 samples, 0.01%)</title><rect x="4.7842%" y="789" width="0.0129%" height="15" fill="rgb(235,201,11)" fg:x="2590" fg:w="7"/><text x="5.0342%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (11 samples, 0.02%)</title><rect x="4.8045%" y="789" width="0.0203%" height="15" fill="rgb(207,46,11)" fg:x="2601" fg:w="11"/><text x="5.0545%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (97 samples, 0.18%)</title><rect x="4.8266%" y="789" width="0.1792%" height="15" fill="rgb(241,35,35)" fg:x="2613" fg:w="97"/><text x="5.0766%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (80 samples, 0.15%)</title><rect x="4.8580%" y="773" width="0.1478%" height="15" fill="rgb(243,32,47)" fg:x="2630" fg:w="80"/><text x="5.1080%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (80 samples, 0.15%)</title><rect x="4.8580%" y="757" width="0.1478%" height="15" fill="rgb(247,202,23)" fg:x="2630" fg:w="80"/><text x="5.1080%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (80 samples, 0.15%)</title><rect x="4.8580%" y="741" width="0.1478%" height="15" fill="rgb(219,102,11)" fg:x="2630" fg:w="80"/><text x="5.1080%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80 samples, 0.15%)</title><rect x="4.8580%" y="725" width="0.1478%" height="15" fill="rgb(243,110,44)" fg:x="2630" fg:w="80"/><text x="5.1080%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80 samples, 0.15%)</title><rect x="4.8580%" y="709" width="0.1478%" height="15" fill="rgb(222,74,54)" fg:x="2630" fg:w="80"/><text x="5.1080%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (80 samples, 0.15%)</title><rect x="4.8580%" y="693" width="0.1478%" height="15" fill="rgb(216,99,12)" fg:x="2630" fg:w="80"/><text x="5.1080%" y="703.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (80 samples, 0.15%)</title><rect x="4.8580%" y="677" width="0.1478%" height="15" fill="rgb(226,22,26)" fg:x="2630" fg:w="80"/><text x="5.1080%" y="687.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (80 samples, 0.15%)</title><rect x="4.8580%" y="661" width="0.1478%" height="15" fill="rgb(217,163,10)" fg:x="2630" fg:w="80"/><text x="5.1080%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (17 samples, 0.03%)</title><rect x="5.0151%" y="773" width="0.0314%" height="15" fill="rgb(213,25,53)" fg:x="2715" fg:w="17"/><text x="5.2651%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="5.0151%" y="757" width="0.0314%" height="15" fill="rgb(252,105,26)" fg:x="2715" fg:w="17"/><text x="5.2651%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (17 samples, 0.03%)</title><rect x="5.0151%" y="741" width="0.0314%" height="15" fill="rgb(220,39,43)" fg:x="2715" fg:w="17"/><text x="5.2651%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (17 samples, 0.03%)</title><rect x="5.0151%" y="725" width="0.0314%" height="15" fill="rgb(229,68,48)" fg:x="2715" fg:w="17"/><text x="5.2651%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (17 samples, 0.03%)</title><rect x="5.0151%" y="709" width="0.0314%" height="15" fill="rgb(252,8,32)" fg:x="2715" fg:w="17"/><text x="5.2651%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (17 samples, 0.03%)</title><rect x="5.0151%" y="693" width="0.0314%" height="15" fill="rgb(223,20,43)" fg:x="2715" fg:w="17"/><text x="5.2651%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="5.0151%" y="677" width="0.0314%" height="15" fill="rgb(229,81,49)" fg:x="2715" fg:w="17"/><text x="5.2651%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.03%)</title><rect x="5.0151%" y="661" width="0.0314%" height="15" fill="rgb(236,28,36)" fg:x="2715" fg:w="17"/><text x="5.2651%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.03%)</title><rect x="5.0151%" y="645" width="0.0314%" height="15" fill="rgb(249,185,26)" fg:x="2715" fg:w="17"/><text x="5.2651%" y="655.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove (40 samples, 0.07%)</title><rect x="5.0058%" y="789" width="0.0739%" height="15" fill="rgb(249,174,33)" fg:x="2710" fg:w="40"/><text x="5.2558%" y="799.50"></text></g><g><title>yakvdb::disk::block::put_slice (18 samples, 0.03%)</title><rect x="5.0465%" y="773" width="0.0332%" height="15" fill="rgb(233,201,37)" fg:x="2732" fg:w="18"/><text x="5.2965%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (18 samples, 0.03%)</title><rect x="5.0465%" y="757" width="0.0332%" height="15" fill="rgb(221,78,26)" fg:x="2732" fg:w="18"/><text x="5.2965%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.03%)</title><rect x="5.0465%" y="741" width="0.0332%" height="15" fill="rgb(250,127,30)" fg:x="2732" fg:w="18"/><text x="5.2965%" y="751.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::reserve (21 samples, 0.04%)</title><rect x="5.0797%" y="789" width="0.0388%" height="15" fill="rgb(230,49,44)" fg:x="2750" fg:w="21"/><text x="5.3297%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (89 samples, 0.16%)</title><rect x="5.1185%" y="789" width="0.1644%" height="15" fill="rgb(229,67,23)" fg:x="2771" fg:w="89"/><text x="5.3685%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (20 samples, 0.04%)</title><rect x="5.2829%" y="789" width="0.0369%" height="15" fill="rgb(249,83,47)" fg:x="2860" fg:w="20"/><text x="5.5329%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::flush (12 samples, 0.02%)</title><rect x="5.3198%" y="789" width="0.0222%" height="15" fill="rgb(215,43,3)" fg:x="2880" fg:w="12"/><text x="5.5698%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (7 samples, 0.01%)</title><rect x="5.3531%" y="789" width="0.0129%" height="15" fill="rgb(238,154,13)" fg:x="2898" fg:w="7"/><text x="5.6031%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (8 samples, 0.01%)</title><rect x="5.4030%" y="773" width="0.0148%" height="15" fill="rgb(219,56,2)" fg:x="2925" fg:w="8"/><text x="5.6530%" y="783.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (8 samples, 0.01%)</title><rect x="5.4030%" y="757" width="0.0148%" height="15" fill="rgb(233,0,4)" fg:x="2925" fg:w="8"/><text x="5.6530%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (8 samples, 0.01%)</title><rect x="5.4030%" y="741" width="0.0148%" height="15" fill="rgb(235,30,7)" fg:x="2925" fg:w="8"/><text x="5.6530%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.01%)</title><rect x="5.4030%" y="725" width="0.0148%" height="15" fill="rgb(250,79,13)" fg:x="2925" fg:w="8"/><text x="5.6530%" y="735.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut (32 samples, 0.06%)</title><rect x="5.3660%" y="789" width="0.0591%" height="15" fill="rgb(211,146,34)" fg:x="2905" fg:w="32"/><text x="5.6160%" y="799.50"></text></g><g><title>__GI___libc_free (8 samples, 0.01%)</title><rect x="5.4454%" y="789" width="0.0148%" height="15" fill="rgb(228,22,38)" fg:x="2948" fg:w="8"/><text x="5.6954%" y="799.50"></text></g><g><title>__GI___libc_malloc (47 samples, 0.09%)</title><rect x="5.4602%" y="789" width="0.0868%" height="15" fill="rgb(235,168,5)" fg:x="2956" fg:w="47"/><text x="5.7102%" y="799.50"></text></g><g><title>__GI___libc_realloc (19 samples, 0.04%)</title><rect x="5.5470%" y="789" width="0.0351%" height="15" fill="rgb(221,155,16)" fg:x="3003" fg:w="19"/><text x="5.7970%" y="799.50"></text></g><g><title>__GI___read (109 samples, 0.20%)</title><rect x="5.5877%" y="789" width="0.2013%" height="15" fill="rgb(215,215,53)" fg:x="3025" fg:w="109"/><text x="5.8377%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (109 samples, 0.20%)</title><rect x="5.5877%" y="773" width="0.2013%" height="15" fill="rgb(223,4,10)" fg:x="3025" fg:w="109"/><text x="5.8377%" y="783.50"></text></g><g><title>__calloc (10 samples, 0.02%)</title><rect x="5.7890%" y="789" width="0.0185%" height="15" fill="rgb(234,103,6)" fg:x="3134" fg:w="10"/><text x="6.0390%" y="799.50"></text></g><g><title>__memcmp_sse4_1 (10 samples, 0.02%)</title><rect x="5.8075%" y="789" width="0.0185%" height="15" fill="rgb(227,97,0)" fg:x="3144" fg:w="10"/><text x="6.0575%" y="799.50"></text></g><g><title>__memset_sse2_unaligned_erms (30 samples, 0.06%)</title><rect x="5.8278%" y="789" width="0.0554%" height="15" fill="rgb(234,150,53)" fg:x="3155" fg:w="30"/><text x="6.0778%" y="799.50"></text></g><g><title>__rdl_realloc (15 samples, 0.03%)</title><rect x="5.8906%" y="789" width="0.0277%" height="15" fill="rgb(228,201,54)" fg:x="3189" fg:w="15"/><text x="6.1406%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (15 samples, 0.03%)</title><rect x="5.8906%" y="773" width="0.0277%" height="15" fill="rgb(222,22,37)" fg:x="3189" fg:w="15"/><text x="6.1406%" y="783.50"></text></g><g><title>_int_free (178 samples, 0.33%)</title><rect x="5.9183%" y="789" width="0.3288%" height="15" fill="rgb(237,53,32)" fg:x="3204" fg:w="178"/><text x="6.1683%" y="799.50"></text></g><g><title>_int_malloc (153 samples, 0.28%)</title><rect x="6.2471%" y="789" width="0.2826%" height="15" fill="rgb(233,25,53)" fg:x="3382" fg:w="153"/><text x="6.4971%" y="799.50"></text></g><g><title>_int_realloc (16 samples, 0.03%)</title><rect x="6.5297%" y="789" width="0.0296%" height="15" fill="rgb(210,40,34)" fg:x="3535" fg:w="16"/><text x="6.7797%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.04%)</title><rect x="6.5648%" y="789" width="0.0369%" height="15" fill="rgb(241,220,44)" fg:x="3554" fg:w="20"/><text x="6.8148%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.01%)</title><rect x="6.5870%" y="773" width="0.0148%" height="15" fill="rgb(235,28,35)" fg:x="3566" fg:w="8"/><text x="6.8370%" y="783.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.01%)</title><rect x="6.5870%" y="757" width="0.0148%" height="15" fill="rgb(210,56,17)" fg:x="3566" fg:w="8"/><text x="6.8370%" y="767.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.01%)</title><rect x="6.5870%" y="741" width="0.0148%" height="15" fill="rgb(224,130,29)" fg:x="3566" fg:w="8"/><text x="6.8370%" y="751.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (18 samples, 0.03%)</title><rect x="6.6018%" y="789" width="0.0332%" height="15" fill="rgb(235,212,8)" fg:x="3574" fg:w="18"/><text x="6.8518%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.01%)</title><rect x="6.6387%" y="789" width="0.0129%" height="15" fill="rgb(223,33,50)" fg:x="3594" fg:w="7"/><text x="6.8887%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.02%)</title><rect x="6.6609%" y="789" width="0.0240%" height="15" fill="rgb(219,149,13)" fg:x="3606" fg:w="13"/><text x="6.9109%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (13 samples, 0.02%)</title><rect x="6.6923%" y="789" width="0.0240%" height="15" fill="rgb(250,156,29)" fg:x="3623" fg:w="13"/><text x="6.9423%" y="799.50"></text></g><g><title>malloc_consolidate (55 samples, 0.10%)</title><rect x="6.7163%" y="789" width="0.1016%" height="15" fill="rgb(216,193,19)" fg:x="3636" fg:w="55"/><text x="6.9663%" y="799.50"></text></g><g><title>std::io::Write::write_all (15 samples, 0.03%)</title><rect x="6.8179%" y="789" width="0.0277%" height="15" fill="rgb(216,135,14)" fg:x="3691" fg:w="15"/><text x="7.0679%" y="799.50"></text></g><g><title>unlink_chunk.isra.0 (15 samples, 0.03%)</title><rect x="6.8474%" y="789" width="0.0277%" height="15" fill="rgb(241,47,5)" fg:x="3707" fg:w="15"/><text x="7.0974%" y="799.50"></text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (13 samples, 0.02%)</title><rect x="6.8752%" y="789" width="0.0240%" height="15" fill="rgb(233,42,35)" fg:x="3722" fg:w="13"/><text x="7.1252%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (6 samples, 0.01%)</title><rect x="6.9250%" y="773" width="0.0111%" height="15" fill="rgb(231,13,6)" fg:x="3749" fg:w="6"/><text x="7.1750%" y="783.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (6 samples, 0.01%)</title><rect x="6.9250%" y="757" width="0.0111%" height="15" fill="rgb(207,181,40)" fg:x="3749" fg:w="6"/><text x="7.1750%" y="767.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (21 samples, 0.04%)</title><rect x="6.8992%" y="789" width="0.0388%" height="15" fill="rgb(254,173,49)" fg:x="3735" fg:w="21"/><text x="7.1492%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (6 samples, 0.01%)</title><rect x="7.0063%" y="773" width="0.0111%" height="15" fill="rgb(221,1,38)" fg:x="3793" fg:w="6"/><text x="7.2563%" y="783.50"></text></g><g><title>core::intrinsics::copy (6 samples, 0.01%)</title><rect x="7.0063%" y="757" width="0.0111%" height="15" fill="rgb(206,124,46)" fg:x="3793" fg:w="6"/><text x="7.2563%" y="767.50"></text></g><g><title>[unknown] (1,239 samples, 2.29%)</title><rect x="4.7417%" y="805" width="2.2886%" height="15" fill="rgb(249,21,11)" fg:x="2567" fg:w="1239"/><text x="4.9917%" y="815.50">[..</text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (50 samples, 0.09%)</title><rect x="6.9380%" y="789" width="0.0924%" height="15" fill="rgb(222,201,40)" fg:x="3756" fg:w="50"/><text x="7.1880%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (7 samples, 0.01%)</title><rect x="7.0174%" y="773" width="0.0129%" height="15" fill="rgb(235,61,29)" fg:x="3799" fg:w="7"/><text x="7.2674%" y="783.50"></text></g><g><title>__GI___read (39 samples, 0.07%)</title><rect x="7.0303%" y="805" width="0.0720%" height="15" fill="rgb(219,207,3)" fg:x="3806" fg:w="39"/><text x="7.2803%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (39 samples, 0.07%)</title><rect x="7.0303%" y="789" width="0.0720%" height="15" fill="rgb(222,56,46)" fg:x="3806" fg:w="39"/><text x="7.2803%" y="799.50"></text></g><g><title>__memcmp_sse4_1 (8 samples, 0.01%)</title><rect x="7.1042%" y="805" width="0.0148%" height="15" fill="rgb(239,76,54)" fg:x="3846" fg:w="8"/><text x="7.3542%" y="815.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (19 samples, 0.04%)</title><rect x="7.1190%" y="805" width="0.0351%" height="15" fill="rgb(231,124,27)" fg:x="3854" fg:w="19"/><text x="7.3690%" y="815.50"></text></g><g><title>_int_free (42 samples, 0.08%)</title><rect x="7.1559%" y="805" width="0.0776%" height="15" fill="rgb(249,195,6)" fg:x="3874" fg:w="42"/><text x="7.4059%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (66 samples, 0.12%)</title><rect x="7.2483%" y="549" width="0.1219%" height="15" fill="rgb(237,174,47)" fg:x="3924" fg:w="66"/><text x="7.4983%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (40 samples, 0.07%)</title><rect x="7.2963%" y="533" width="0.0739%" height="15" fill="rgb(206,201,31)" fg:x="3950" fg:w="40"/><text x="7.5463%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (9 samples, 0.02%)</title><rect x="7.4090%" y="501" width="0.0166%" height="15" fill="rgb(231,57,52)" fg:x="4011" fg:w="9"/><text x="7.6590%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (15 samples, 0.03%)</title><rect x="7.4071%" y="517" width="0.0277%" height="15" fill="rgb(248,177,22)" fg:x="4010" fg:w="15"/><text x="7.6571%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (20 samples, 0.04%)</title><rect x="7.4367%" y="517" width="0.0369%" height="15" fill="rgb(215,211,37)" fg:x="4026" fg:w="20"/><text x="7.6867%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::ge (20 samples, 0.04%)</title><rect x="7.4367%" y="501" width="0.0369%" height="15" fill="rgb(241,128,51)" fg:x="4026" fg:w="20"/><text x="7.6867%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (20 samples, 0.04%)</title><rect x="7.4367%" y="485" width="0.0369%" height="15" fill="rgb(227,165,31)" fg:x="4026" fg:w="20"/><text x="7.6867%" y="495.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (20 samples, 0.04%)</title><rect x="7.4367%" y="469" width="0.0369%" height="15" fill="rgb(228,167,24)" fg:x="4026" fg:w="20"/><text x="7.6867%" y="479.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (20 samples, 0.04%)</title><rect x="7.4367%" y="453" width="0.0369%" height="15" fill="rgb(228,143,12)" fg:x="4026" fg:w="20"/><text x="7.6867%" y="463.50"></text></g><g><title>__memcmp_sse4_1 (14 samples, 0.03%)</title><rect x="7.4478%" y="437" width="0.0259%" height="15" fill="rgb(249,149,8)" fg:x="4032" fg:w="14"/><text x="7.6978%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (14 samples, 0.03%)</title><rect x="7.5826%" y="453" width="0.0259%" height="15" fill="rgb(243,35,44)" fg:x="4105" fg:w="14"/><text x="7.8326%" y="463.50"></text></g><g><title>yakvdb::disk::block::get_u32 (12 samples, 0.02%)</title><rect x="7.5863%" y="437" width="0.0222%" height="15" fill="rgb(246,89,9)" fg:x="4107" fg:w="12"/><text x="7.8363%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (69 samples, 0.13%)</title><rect x="7.5383%" y="469" width="0.1275%" height="15" fill="rgb(233,213,13)" fg:x="4081" fg:w="69"/><text x="7.7883%" y="479.50"></text></g><g><title>yakvdb::disk::block::get_u32 (31 samples, 0.06%)</title><rect x="7.6085%" y="453" width="0.0573%" height="15" fill="rgb(233,141,41)" fg:x="4119" fg:w="31"/><text x="7.8585%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (15 samples, 0.03%)</title><rect x="7.6380%" y="437" width="0.0277%" height="15" fill="rgb(239,167,4)" fg:x="4135" fg:w="15"/><text x="7.8880%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (15 samples, 0.03%)</title><rect x="7.6380%" y="421" width="0.0277%" height="15" fill="rgb(209,217,16)" fg:x="4135" fg:w="15"/><text x="7.8880%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (93 samples, 0.17%)</title><rect x="7.5346%" y="501" width="0.1718%" height="15" fill="rgb(219,88,35)" fg:x="4079" fg:w="93"/><text x="7.7846%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (93 samples, 0.17%)</title><rect x="7.5346%" y="485" width="0.1718%" height="15" fill="rgb(220,193,23)" fg:x="4079" fg:w="93"/><text x="7.7846%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.04%)</title><rect x="7.6657%" y="469" width="0.0406%" height="15" fill="rgb(230,90,52)" fg:x="4150" fg:w="22"/><text x="7.9157%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key::{{closure}} (13 samples, 0.02%)</title><rect x="7.6824%" y="453" width="0.0240%" height="15" fill="rgb(252,106,19)" fg:x="4159" fg:w="13"/><text x="7.9324%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (9 samples, 0.02%)</title><rect x="7.6898%" y="437" width="0.0166%" height="15" fill="rgb(206,74,20)" fg:x="4163" fg:w="9"/><text x="7.9398%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.02%)</title><rect x="7.6898%" y="421" width="0.0166%" height="15" fill="rgb(230,138,44)" fg:x="4163" fg:w="9"/><text x="7.9398%" y="431.50"></text></g><g><title>__memcmp_sse4_1 (70 samples, 0.13%)</title><rect x="7.7341%" y="453" width="0.1293%" height="15" fill="rgb(235,182,43)" fg:x="4187" fg:w="70"/><text x="7.9841%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (100 samples, 0.18%)</title><rect x="7.7064%" y="501" width="0.1847%" height="15" fill="rgb(242,16,51)" fg:x="4172" fg:w="100"/><text x="7.9564%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (100 samples, 0.18%)</title><rect x="7.7064%" y="485" width="0.1847%" height="15" fill="rgb(248,9,4)" fg:x="4172" fg:w="100"/><text x="7.9564%" y="495.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (100 samples, 0.18%)</title><rect x="7.7064%" y="469" width="0.1847%" height="15" fill="rgb(210,31,22)" fg:x="4172" fg:w="100"/><text x="7.9564%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (15 samples, 0.03%)</title><rect x="7.8634%" y="453" width="0.0277%" height="15" fill="rgb(239,54,39)" fg:x="4257" fg:w="15"/><text x="8.1134%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (274 samples, 0.51%)</title><rect x="7.3924%" y="533" width="0.5061%" height="15" fill="rgb(230,99,41)" fg:x="4002" fg:w="274"/><text x="7.6424%" y="543.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (230 samples, 0.42%)</title><rect x="7.4736%" y="517" width="0.4248%" height="15" fill="rgb(253,106,12)" fg:x="4046" fg:w="230"/><text x="7.7236%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (8 samples, 0.01%)</title><rect x="7.9003%" y="517" width="0.0148%" height="15" fill="rgb(213,46,41)" fg:x="4277" fg:w="8"/><text x="8.1503%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (12 samples, 0.02%)</title><rect x="7.8985%" y="533" width="0.0222%" height="15" fill="rgb(215,133,35)" fg:x="4276" fg:w="12"/><text x="8.1485%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (10 samples, 0.02%)</title><rect x="7.9206%" y="533" width="0.0185%" height="15" fill="rgb(213,28,5)" fg:x="4288" fg:w="10"/><text x="8.1706%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.02%)</title><rect x="7.9650%" y="341" width="0.0185%" height="15" fill="rgb(215,77,49)" fg:x="4312" fg:w="10"/><text x="8.2150%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (24 samples, 0.04%)</title><rect x="7.9484%" y="405" width="0.0443%" height="15" fill="rgb(248,100,22)" fg:x="4303" fg:w="24"/><text x="8.1984%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (24 samples, 0.04%)</title><rect x="7.9484%" y="389" width="0.0443%" height="15" fill="rgb(208,67,9)" fg:x="4303" fg:w="24"/><text x="8.1984%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (24 samples, 0.04%)</title><rect x="7.9484%" y="373" width="0.0443%" height="15" fill="rgb(219,133,21)" fg:x="4303" fg:w="24"/><text x="8.1984%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.03%)</title><rect x="7.9613%" y="357" width="0.0314%" height="15" fill="rgb(246,46,29)" fg:x="4310" fg:w="17"/><text x="8.2113%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 0.05%)</title><rect x="7.9484%" y="437" width="0.0462%" height="15" fill="rgb(246,185,52)" fg:x="4303" fg:w="25"/><text x="8.1984%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (25 samples, 0.05%)</title><rect x="7.9484%" y="421" width="0.0462%" height="15" fill="rgb(252,136,11)" fg:x="4303" fg:w="25"/><text x="8.1984%" y="431.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (42 samples, 0.08%)</title><rect x="7.9447%" y="501" width="0.0776%" height="15" fill="rgb(219,138,53)" fg:x="4301" fg:w="42"/><text x="8.1947%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (42 samples, 0.08%)</title><rect x="7.9447%" y="485" width="0.0776%" height="15" fill="rgb(211,51,23)" fg:x="4301" fg:w="42"/><text x="8.1947%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (42 samples, 0.08%)</title><rect x="7.9447%" y="469" width="0.0776%" height="15" fill="rgb(247,221,28)" fg:x="4301" fg:w="42"/><text x="8.1947%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (42 samples, 0.08%)</title><rect x="7.9447%" y="453" width="0.0776%" height="15" fill="rgb(251,222,45)" fg:x="4301" fg:w="42"/><text x="8.1947%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.03%)</title><rect x="7.9945%" y="437" width="0.0277%" height="15" fill="rgb(217,162,53)" fg:x="4328" fg:w="15"/><text x="8.2445%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.03%)</title><rect x="7.9945%" y="421" width="0.0277%" height="15" fill="rgb(229,93,14)" fg:x="4328" fg:w="15"/><text x="8.2445%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.03%)</title><rect x="7.9945%" y="405" width="0.0277%" height="15" fill="rgb(209,67,49)" fg:x="4328" fg:w="15"/><text x="8.2445%" y="415.50"></text></g><g><title>__vfs_read (11 samples, 0.02%)</title><rect x="8.0444%" y="309" width="0.0203%" height="15" fill="rgb(213,87,29)" fg:x="4355" fg:w="11"/><text x="8.2944%" y="319.50"></text></g><g><title>new_sync_read (11 samples, 0.02%)</title><rect x="8.0444%" y="293" width="0.0203%" height="15" fill="rgb(205,151,52)" fg:x="4355" fg:w="11"/><text x="8.2944%" y="303.50"></text></g><g><title>ext4_file_read_iter (11 samples, 0.02%)</title><rect x="8.0444%" y="277" width="0.0203%" height="15" fill="rgb(253,215,39)" fg:x="4355" fg:w="11"/><text x="8.2944%" y="287.50"></text></g><g><title>generic_file_read_iter (9 samples, 0.02%)</title><rect x="8.0481%" y="261" width="0.0166%" height="15" fill="rgb(221,220,41)" fg:x="4357" fg:w="9"/><text x="8.2981%" y="271.50"></text></g><g><title>generic_file_buffered_read (9 samples, 0.02%)</title><rect x="8.0481%" y="245" width="0.0166%" height="15" fill="rgb(218,133,21)" fg:x="4357" fg:w="9"/><text x="8.2981%" y="255.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (67 samples, 0.12%)</title><rect x="7.9447%" y="517" width="0.1238%" height="15" fill="rgb(221,193,43)" fg:x="4301" fg:w="67"/><text x="8.1947%" y="527.50"></text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (24 samples, 0.04%)</title><rect x="8.0241%" y="501" width="0.0443%" height="15" fill="rgb(240,128,52)" fg:x="4344" fg:w="24"/><text x="8.2741%" y="511.50"></text></g><g><title>std::io::Read::read_exact (15 samples, 0.03%)</title><rect x="8.0407%" y="485" width="0.0277%" height="15" fill="rgb(253,114,12)" fg:x="4353" fg:w="15"/><text x="8.2907%" y="495.50"></text></g><g><title>std::io::default_read_exact (15 samples, 0.03%)</title><rect x="8.0407%" y="469" width="0.0277%" height="15" fill="rgb(215,223,47)" fg:x="4353" fg:w="15"/><text x="8.2907%" y="479.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (15 samples, 0.03%)</title><rect x="8.0407%" y="453" width="0.0277%" height="15" fill="rgb(248,225,23)" fg:x="4353" fg:w="15"/><text x="8.2907%" y="463.50"></text></g><g><title>std::sys::unix::fs::File::read (15 samples, 0.03%)</title><rect x="8.0407%" y="437" width="0.0277%" height="15" fill="rgb(250,108,0)" fg:x="4353" fg:w="15"/><text x="8.2907%" y="447.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (15 samples, 0.03%)</title><rect x="8.0407%" y="421" width="0.0277%" height="15" fill="rgb(228,208,7)" fg:x="4353" fg:w="15"/><text x="8.2907%" y="431.50"></text></g><g><title>__GI___read (15 samples, 0.03%)</title><rect x="8.0407%" y="405" width="0.0277%" height="15" fill="rgb(244,45,10)" fg:x="4353" fg:w="15"/><text x="8.2907%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.03%)</title><rect x="8.0407%" y="389" width="0.0277%" height="15" fill="rgb(207,125,25)" fg:x="4353" fg:w="15"/><text x="8.2907%" y="399.50"></text></g><g><title>do_syscall_64 (15 samples, 0.03%)</title><rect x="8.0407%" y="373" width="0.0277%" height="15" fill="rgb(210,195,18)" fg:x="4353" fg:w="15"/><text x="8.2907%" y="383.50"></text></g><g><title>__x64_sys_read (13 samples, 0.02%)</title><rect x="8.0444%" y="357" width="0.0240%" height="15" fill="rgb(249,80,12)" fg:x="4355" fg:w="13"/><text x="8.2944%" y="367.50"></text></g><g><title>ksys_read (13 samples, 0.02%)</title><rect x="8.0444%" y="341" width="0.0240%" height="15" fill="rgb(221,65,9)" fg:x="4355" fg:w="13"/><text x="8.2944%" y="351.50"></text></g><g><title>vfs_read (13 samples, 0.02%)</title><rect x="8.0444%" y="325" width="0.0240%" height="15" fill="rgb(235,49,36)" fg:x="4355" fg:w="13"/><text x="8.2944%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="8.0703%" y="389" width="0.0148%" height="15" fill="rgb(225,32,20)" fg:x="4369" fg:w="8"/><text x="8.3203%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="8.0703%" y="373" width="0.0148%" height="15" fill="rgb(215,141,46)" fg:x="4369" fg:w="8"/><text x="8.3203%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="8.0703%" y="357" width="0.0148%" height="15" fill="rgb(250,160,47)" fg:x="4369" fg:w="8"/><text x="8.3203%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.02%)</title><rect x="8.0684%" y="421" width="0.0203%" height="15" fill="rgb(216,222,40)" fg:x="4368" fg:w="11"/><text x="8.3184%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="8.0684%" y="405" width="0.0203%" height="15" fill="rgb(234,217,39)" fg:x="4368" fg:w="11"/><text x="8.3184%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (24 samples, 0.04%)</title><rect x="8.0684%" y="469" width="0.0443%" height="15" fill="rgb(207,178,40)" fg:x="4368" fg:w="24"/><text x="8.3184%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (24 samples, 0.04%)</title><rect x="8.0684%" y="453" width="0.0443%" height="15" fill="rgb(221,136,13)" fg:x="4368" fg:w="24"/><text x="8.3184%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (24 samples, 0.04%)</title><rect x="8.0684%" y="437" width="0.0443%" height="15" fill="rgb(249,199,10)" fg:x="4368" fg:w="24"/><text x="8.3184%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.02%)</title><rect x="8.0887%" y="421" width="0.0240%" height="15" fill="rgb(249,222,13)" fg:x="4379" fg:w="13"/><text x="8.3387%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.02%)</title><rect x="8.0887%" y="405" width="0.0240%" height="15" fill="rgb(244,185,38)" fg:x="4379" fg:w="13"/><text x="8.3387%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (13 samples, 0.02%)</title><rect x="8.0887%" y="389" width="0.0240%" height="15" fill="rgb(236,202,9)" fg:x="4379" fg:w="13"/><text x="8.3387%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="8.1220%" y="325" width="0.0148%" height="15" fill="rgb(250,229,37)" fg:x="4397" fg:w="8"/><text x="8.3720%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="8.1183%" y="421" width="0.0222%" height="15" fill="rgb(206,174,23)" fg:x="4395" fg:w="12"/><text x="8.3683%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="8.1183%" y="405" width="0.0222%" height="15" fill="rgb(211,33,43)" fg:x="4395" fg:w="12"/><text x="8.3683%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="8.1183%" y="389" width="0.0222%" height="15" fill="rgb(245,58,50)" fg:x="4395" fg:w="12"/><text x="8.3683%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="8.1183%" y="373" width="0.0222%" height="15" fill="rgb(244,68,36)" fg:x="4395" fg:w="12"/><text x="8.3683%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="8.1183%" y="357" width="0.0222%" height="15" fill="rgb(232,229,15)" fg:x="4395" fg:w="12"/><text x="8.3683%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.02%)</title><rect x="8.1220%" y="341" width="0.0185%" height="15" fill="rgb(254,30,23)" fg:x="4397" fg:w="10"/><text x="8.3720%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (6 samples, 0.01%)</title><rect x="8.1626%" y="373" width="0.0111%" height="15" fill="rgb(235,160,14)" fg:x="4419" fg:w="6"/><text x="8.4126%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (25 samples, 0.05%)</title><rect x="8.1405%" y="421" width="0.0462%" height="15" fill="rgb(212,155,44)" fg:x="4407" fg:w="25"/><text x="8.3905%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 0.05%)</title><rect x="8.1405%" y="405" width="0.0462%" height="15" fill="rgb(226,2,50)" fg:x="4407" fg:w="25"/><text x="8.3905%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (25 samples, 0.05%)</title><rect x="8.1405%" y="389" width="0.0462%" height="15" fill="rgb(234,177,6)" fg:x="4407" fg:w="25"/><text x="8.3905%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.01%)</title><rect x="8.1737%" y="373" width="0.0129%" height="15" fill="rgb(217,24,9)" fg:x="4425" fg:w="7"/><text x="8.4237%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.01%)</title><rect x="8.1737%" y="357" width="0.0129%" height="15" fill="rgb(220,13,46)" fg:x="4425" fg:w="7"/><text x="8.4237%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (42 samples, 0.08%)</title><rect x="8.1128%" y="469" width="0.0776%" height="15" fill="rgb(239,221,27)" fg:x="4392" fg:w="42"/><text x="8.3628%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (42 samples, 0.08%)</title><rect x="8.1128%" y="453" width="0.0776%" height="15" fill="rgb(222,198,25)" fg:x="4392" fg:w="42"/><text x="8.3628%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (41 samples, 0.08%)</title><rect x="8.1146%" y="437" width="0.0757%" height="15" fill="rgb(211,99,13)" fg:x="4393" fg:w="41"/><text x="8.3646%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (29 samples, 0.05%)</title><rect x="8.2070%" y="453" width="0.0536%" height="15" fill="rgb(232,111,31)" fg:x="4443" fg:w="29"/><text x="8.4570%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (29 samples, 0.05%)</title><rect x="8.2070%" y="437" width="0.0536%" height="15" fill="rgb(245,82,37)" fg:x="4443" fg:w="29"/><text x="8.4570%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (29 samples, 0.05%)</title><rect x="8.2070%" y="421" width="0.0536%" height="15" fill="rgb(227,149,46)" fg:x="4443" fg:w="29"/><text x="8.4570%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.03%)</title><rect x="8.2310%" y="405" width="0.0296%" height="15" fill="rgb(218,36,50)" fg:x="4456" fg:w="16"/><text x="8.4810%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="8.2679%" y="309" width="0.0111%" height="15" fill="rgb(226,80,48)" fg:x="4476" fg:w="6"/><text x="8.5179%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.02%)</title><rect x="8.2605%" y="405" width="0.0203%" height="15" fill="rgb(238,224,15)" fg:x="4472" fg:w="11"/><text x="8.5105%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="8.2605%" y="389" width="0.0203%" height="15" fill="rgb(241,136,10)" fg:x="4472" fg:w="11"/><text x="8.5105%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="8.2642%" y="373" width="0.0166%" height="15" fill="rgb(208,32,45)" fg:x="4474" fg:w="9"/><text x="8.5142%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="8.2642%" y="357" width="0.0166%" height="15" fill="rgb(207,135,9)" fg:x="4474" fg:w="9"/><text x="8.5142%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="8.2642%" y="341" width="0.0166%" height="15" fill="rgb(206,86,44)" fg:x="4474" fg:w="9"/><text x="8.5142%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="8.2661%" y="325" width="0.0148%" height="15" fill="rgb(245,177,15)" fg:x="4475" fg:w="8"/><text x="8.5161%" y="335.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (124 samples, 0.23%)</title><rect x="8.0684%" y="517" width="0.2290%" height="15" fill="rgb(206,64,50)" fg:x="4368" fg:w="124"/><text x="8.3184%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (124 samples, 0.23%)</title><rect x="8.0684%" y="501" width="0.2290%" height="15" fill="rgb(234,36,40)" fg:x="4368" fg:w="124"/><text x="8.3184%" y="511.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (124 samples, 0.23%)</title><rect x="8.0684%" y="485" width="0.2290%" height="15" fill="rgb(213,64,8)" fg:x="4368" fg:w="124"/><text x="8.3184%" y="495.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (58 samples, 0.11%)</title><rect x="8.1903%" y="469" width="0.1071%" height="15" fill="rgb(210,75,36)" fg:x="4434" fg:w="58"/><text x="8.4403%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (20 samples, 0.04%)</title><rect x="8.2605%" y="453" width="0.0369%" height="15" fill="rgb(229,88,21)" fg:x="4472" fg:w="20"/><text x="8.5105%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (20 samples, 0.04%)</title><rect x="8.2605%" y="437" width="0.0369%" height="15" fill="rgb(252,204,47)" fg:x="4472" fg:w="20"/><text x="8.5105%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.04%)</title><rect x="8.2605%" y="421" width="0.0369%" height="15" fill="rgb(208,77,27)" fg:x="4472" fg:w="20"/><text x="8.5105%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.02%)</title><rect x="8.2808%" y="405" width="0.0166%" height="15" fill="rgb(221,76,26)" fg:x="4483" fg:w="9"/><text x="8.5308%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.02%)</title><rect x="8.2808%" y="389" width="0.0166%" height="15" fill="rgb(225,139,18)" fg:x="4483" fg:w="9"/><text x="8.5308%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.02%)</title><rect x="8.2808%" y="373" width="0.0166%" height="15" fill="rgb(230,137,11)" fg:x="4483" fg:w="9"/><text x="8.5308%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (196 samples, 0.36%)</title><rect x="7.9391%" y="533" width="0.3620%" height="15" fill="rgb(212,28,1)" fg:x="4298" fg:w="196"/><text x="8.1891%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.01%)</title><rect x="8.3196%" y="373" width="0.0111%" height="15" fill="rgb(248,164,17)" fg:x="4504" fg:w="6"/><text x="8.5696%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (19 samples, 0.04%)</title><rect x="8.3012%" y="501" width="0.0351%" height="15" fill="rgb(222,171,42)" fg:x="4494" fg:w="19"/><text x="8.5512%" y="511.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (19 samples, 0.04%)</title><rect x="8.3012%" y="485" width="0.0351%" height="15" fill="rgb(243,84,45)" fg:x="4494" fg:w="19"/><text x="8.5512%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (19 samples, 0.04%)</title><rect x="8.3012%" y="469" width="0.0351%" height="15" fill="rgb(252,49,23)" fg:x="4494" fg:w="19"/><text x="8.5512%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (19 samples, 0.04%)</title><rect x="8.3012%" y="453" width="0.0351%" height="15" fill="rgb(215,19,7)" fg:x="4494" fg:w="19"/><text x="8.5512%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (19 samples, 0.04%)</title><rect x="8.3012%" y="437" width="0.0351%" height="15" fill="rgb(238,81,41)" fg:x="4494" fg:w="19"/><text x="8.5512%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.03%)</title><rect x="8.3104%" y="421" width="0.0259%" height="15" fill="rgb(210,199,37)" fg:x="4499" fg:w="14"/><text x="8.5604%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.03%)</title><rect x="8.3104%" y="405" width="0.0259%" height="15" fill="rgb(244,192,49)" fg:x="4499" fg:w="14"/><text x="8.5604%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.03%)</title><rect x="8.3104%" y="389" width="0.0259%" height="15" fill="rgb(226,211,11)" fg:x="4499" fg:w="14"/><text x="8.5604%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="8.3381%" y="309" width="0.0111%" height="15" fill="rgb(236,162,54)" fg:x="4514" fg:w="6"/><text x="8.5881%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="8.3363%" y="373" width="0.0148%" height="15" fill="rgb(220,229,9)" fg:x="4513" fg:w="8"/><text x="8.5863%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="8.3363%" y="357" width="0.0148%" height="15" fill="rgb(250,87,22)" fg:x="4513" fg:w="8"/><text x="8.5863%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="8.3363%" y="341" width="0.0148%" height="15" fill="rgb(239,43,17)" fg:x="4513" fg:w="8"/><text x="8.5863%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="8.3363%" y="325" width="0.0148%" height="15" fill="rgb(231,177,25)" fg:x="4513" fg:w="8"/><text x="8.5863%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.02%)</title><rect x="8.3363%" y="405" width="0.0185%" height="15" fill="rgb(219,179,1)" fg:x="4513" fg:w="10"/><text x="8.5863%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="8.3363%" y="389" width="0.0185%" height="15" fill="rgb(238,219,53)" fg:x="4513" fg:w="10"/><text x="8.5863%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (16 samples, 0.03%)</title><rect x="8.3363%" y="453" width="0.0296%" height="15" fill="rgb(232,167,36)" fg:x="4513" fg:w="16"/><text x="8.5863%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (16 samples, 0.03%)</title><rect x="8.3363%" y="437" width="0.0296%" height="15" fill="rgb(244,19,51)" fg:x="4513" fg:w="16"/><text x="8.5863%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.03%)</title><rect x="8.3363%" y="421" width="0.0296%" height="15" fill="rgb(224,6,22)" fg:x="4513" fg:w="16"/><text x="8.5863%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.01%)</title><rect x="8.3547%" y="405" width="0.0111%" height="15" fill="rgb(224,145,5)" fg:x="4523" fg:w="6"/><text x="8.6047%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="8.3547%" y="389" width="0.0111%" height="15" fill="rgb(234,130,49)" fg:x="4523" fg:w="6"/><text x="8.6047%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.01%)</title><rect x="8.3547%" y="373" width="0.0111%" height="15" fill="rgb(254,6,2)" fg:x="4523" fg:w="6"/><text x="8.6047%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="8.3658%" y="373" width="0.0185%" height="15" fill="rgb(208,96,46)" fg:x="4529" fg:w="10"/><text x="8.6158%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="8.3658%" y="357" width="0.0185%" height="15" fill="rgb(239,3,39)" fg:x="4529" fg:w="10"/><text x="8.6158%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="8.3658%" y="341" width="0.0185%" height="15" fill="rgb(233,210,1)" fg:x="4529" fg:w="10"/><text x="8.6158%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="8.3714%" y="325" width="0.0129%" height="15" fill="rgb(244,137,37)" fg:x="4532" fg:w="7"/><text x="8.6214%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.02%)</title><rect x="8.3658%" y="405" width="0.0203%" height="15" fill="rgb(240,136,2)" fg:x="4529" fg:w="11"/><text x="8.6158%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="8.3658%" y="389" width="0.0203%" height="15" fill="rgb(239,18,37)" fg:x="4529" fg:w="11"/><text x="8.6158%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.01%)</title><rect x="8.3898%" y="357" width="0.0111%" height="15" fill="rgb(218,185,22)" fg:x="4542" fg:w="6"/><text x="8.6398%" y="367.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.01%)</title><rect x="8.3898%" y="341" width="0.0111%" height="15" fill="rgb(225,218,4)" fg:x="4542" fg:w="6"/><text x="8.6398%" y="351.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (23 samples, 0.04%)</title><rect x="8.3658%" y="453" width="0.0425%" height="15" fill="rgb(230,182,32)" fg:x="4529" fg:w="23"/><text x="8.6158%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (23 samples, 0.04%)</title><rect x="8.3658%" y="437" width="0.0425%" height="15" fill="rgb(242,56,43)" fg:x="4529" fg:w="23"/><text x="8.6158%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (23 samples, 0.04%)</title><rect x="8.3658%" y="421" width="0.0425%" height="15" fill="rgb(233,99,24)" fg:x="4529" fg:w="23"/><text x="8.6158%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.02%)</title><rect x="8.3861%" y="405" width="0.0222%" height="15" fill="rgb(234,209,42)" fg:x="4540" fg:w="12"/><text x="8.6361%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.02%)</title><rect x="8.3880%" y="389" width="0.0203%" height="15" fill="rgb(227,7,12)" fg:x="4541" fg:w="11"/><text x="8.6380%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (11 samples, 0.02%)</title><rect x="8.3880%" y="373" width="0.0203%" height="15" fill="rgb(245,203,43)" fg:x="4541" fg:w="11"/><text x="8.6380%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (10 samples, 0.02%)</title><rect x="8.4286%" y="389" width="0.0185%" height="15" fill="rgb(238,205,33)" fg:x="4563" fg:w="10"/><text x="8.6786%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (7 samples, 0.01%)</title><rect x="8.4342%" y="373" width="0.0129%" height="15" fill="rgb(231,56,7)" fg:x="4566" fg:w="7"/><text x="8.6842%" y="383.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (7 samples, 0.01%)</title><rect x="8.4342%" y="357" width="0.0129%" height="15" fill="rgb(244,186,29)" fg:x="4566" fg:w="7"/><text x="8.6842%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.01%)</title><rect x="8.4342%" y="341" width="0.0129%" height="15" fill="rgb(234,111,31)" fg:x="4566" fg:w="7"/><text x="8.6842%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.01%)</title><rect x="8.4342%" y="325" width="0.0129%" height="15" fill="rgb(241,149,10)" fg:x="4566" fg:w="7"/><text x="8.6842%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (7 samples, 0.01%)</title><rect x="8.4342%" y="309" width="0.0129%" height="15" fill="rgb(249,206,44)" fg:x="4566" fg:w="7"/><text x="8.6842%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (26 samples, 0.05%)</title><rect x="8.4138%" y="437" width="0.0480%" height="15" fill="rgb(251,153,30)" fg:x="4555" fg:w="26"/><text x="8.6638%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.05%)</title><rect x="8.4138%" y="421" width="0.0480%" height="15" fill="rgb(239,152,38)" fg:x="4555" fg:w="26"/><text x="8.6638%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.05%)</title><rect x="8.4138%" y="405" width="0.0480%" height="15" fill="rgb(249,139,47)" fg:x="4555" fg:w="26"/><text x="8.6638%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="8.4471%" y="389" width="0.0148%" height="15" fill="rgb(244,64,35)" fg:x="4573" fg:w="8"/><text x="8.6971%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.01%)</title><rect x="8.4619%" y="389" width="0.0148%" height="15" fill="rgb(216,46,15)" fg:x="4581" fg:w="8"/><text x="8.7119%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.01%)</title><rect x="8.4619%" y="373" width="0.0148%" height="15" fill="rgb(250,74,19)" fg:x="4581" fg:w="8"/><text x="8.7119%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.01%)</title><rect x="8.4637%" y="357" width="0.0129%" height="15" fill="rgb(249,42,33)" fg:x="4582" fg:w="7"/><text x="8.7137%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.01%)</title><rect x="8.4637%" y="341" width="0.0129%" height="15" fill="rgb(242,149,17)" fg:x="4582" fg:w="7"/><text x="8.7137%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.01%)</title><rect x="8.4637%" y="325" width="0.0129%" height="15" fill="rgb(244,29,21)" fg:x="4582" fg:w="7"/><text x="8.7137%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.01%)</title><rect x="8.4656%" y="309" width="0.0111%" height="15" fill="rgb(220,130,37)" fg:x="4583" fg:w="6"/><text x="8.7156%" y="319.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (86 samples, 0.16%)</title><rect x="8.3363%" y="501" width="0.1589%" height="15" fill="rgb(211,67,2)" fg:x="4513" fg:w="86"/><text x="8.5863%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (86 samples, 0.16%)</title><rect x="8.3363%" y="485" width="0.1589%" height="15" fill="rgb(235,68,52)" fg:x="4513" fg:w="86"/><text x="8.5863%" y="495.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (86 samples, 0.16%)</title><rect x="8.3363%" y="469" width="0.1589%" height="15" fill="rgb(246,142,3)" fg:x="4513" fg:w="86"/><text x="8.5863%" y="479.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (47 samples, 0.09%)</title><rect x="8.4083%" y="453" width="0.0868%" height="15" fill="rgb(241,25,7)" fg:x="4552" fg:w="47"/><text x="8.6583%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (18 samples, 0.03%)</title><rect x="8.4619%" y="437" width="0.0332%" height="15" fill="rgb(242,119,39)" fg:x="4581" fg:w="18"/><text x="8.7119%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (18 samples, 0.03%)</title><rect x="8.4619%" y="421" width="0.0332%" height="15" fill="rgb(241,98,45)" fg:x="4581" fg:w="18"/><text x="8.7119%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18 samples, 0.03%)</title><rect x="8.4619%" y="405" width="0.0332%" height="15" fill="rgb(254,28,30)" fg:x="4581" fg:w="18"/><text x="8.7119%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.02%)</title><rect x="8.4766%" y="389" width="0.0185%" height="15" fill="rgb(241,142,54)" fg:x="4589" fg:w="10"/><text x="8.7266%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.02%)</title><rect x="8.4766%" y="373" width="0.0185%" height="15" fill="rgb(222,85,15)" fg:x="4589" fg:w="10"/><text x="8.7266%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.02%)</title><rect x="8.4766%" y="357" width="0.0185%" height="15" fill="rgb(210,85,47)" fg:x="4589" fg:w="10"/><text x="8.7266%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (106 samples, 0.20%)</title><rect x="8.3012%" y="517" width="0.1958%" height="15" fill="rgb(224,206,25)" fg:x="4494" fg:w="106"/><text x="8.5512%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::root (107 samples, 0.20%)</title><rect x="8.3012%" y="533" width="0.1976%" height="15" fill="rgb(243,201,19)" fg:x="4494" fg:w="107"/><text x="8.5512%" y="543.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.02%)</title><rect x="8.5025%" y="421" width="0.0166%" height="15" fill="rgb(236,59,4)" fg:x="4603" fg:w="9"/><text x="8.7525%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.02%)</title><rect x="8.5025%" y="533" width="0.0185%" height="15" fill="rgb(254,179,45)" fg:x="4603" fg:w="10"/><text x="8.7525%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.02%)</title><rect x="8.5025%" y="517" width="0.0185%" height="15" fill="rgb(226,14,10)" fg:x="4603" fg:w="10"/><text x="8.7525%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.02%)</title><rect x="8.5025%" y="501" width="0.0185%" height="15" fill="rgb(244,27,41)" fg:x="4603" fg:w="10"/><text x="8.7525%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.02%)</title><rect x="8.5025%" y="485" width="0.0185%" height="15" fill="rgb(235,35,32)" fg:x="4603" fg:w="10"/><text x="8.7525%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.02%)</title><rect x="8.5025%" y="469" width="0.0185%" height="15" fill="rgb(218,68,31)" fg:x="4603" fg:w="10"/><text x="8.7525%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.02%)</title><rect x="8.5025%" y="453" width="0.0185%" height="15" fill="rgb(207,120,37)" fg:x="4603" fg:w="10"/><text x="8.7525%" y="463.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.02%)</title><rect x="8.5025%" y="437" width="0.0185%" height="15" fill="rgb(227,98,0)" fg:x="4603" fg:w="10"/><text x="8.7525%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::above (642 samples, 1.19%)</title><rect x="7.3702%" y="549" width="1.1859%" height="15" fill="rgb(207,7,3)" fg:x="3990" fg:w="642"/><text x="7.6202%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u32,u32)&gt;&gt; (7 samples, 0.01%)</title><rect x="8.5431%" y="533" width="0.0129%" height="15" fill="rgb(206,98,19)" fg:x="4625" fg:w="7"/><text x="8.7931%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u32,u32)&gt;&gt; (7 samples, 0.01%)</title><rect x="8.5431%" y="517" width="0.0129%" height="15" fill="rgb(217,5,26)" fg:x="4625" fg:w="7"/><text x="8.7931%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="8.5431%" y="501" width="0.0129%" height="15" fill="rgb(235,190,38)" fg:x="4625" fg:w="7"/><text x="8.7931%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.01%)</title><rect x="8.5431%" y="485" width="0.0129%" height="15" fill="rgb(247,86,24)" fg:x="4625" fg:w="7"/><text x="8.7931%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.01%)</title><rect x="8.5431%" y="469" width="0.0129%" height="15" fill="rgb(205,101,16)" fg:x="4625" fg:w="7"/><text x="8.7931%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (10 samples, 0.02%)</title><rect x="8.5801%" y="501" width="0.0185%" height="15" fill="rgb(246,168,33)" fg:x="4645" fg:w="10"/><text x="8.8301%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (12 samples, 0.02%)</title><rect x="8.5801%" y="517" width="0.0222%" height="15" fill="rgb(231,114,1)" fg:x="4645" fg:w="12"/><text x="8.8301%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (14 samples, 0.03%)</title><rect x="8.6041%" y="517" width="0.0259%" height="15" fill="rgb(207,184,53)" fg:x="4658" fg:w="14"/><text x="8.8541%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::ge (14 samples, 0.03%)</title><rect x="8.6041%" y="501" width="0.0259%" height="15" fill="rgb(224,95,51)" fg:x="4658" fg:w="14"/><text x="8.8541%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (14 samples, 0.03%)</title><rect x="8.6041%" y="485" width="0.0259%" height="15" fill="rgb(212,188,45)" fg:x="4658" fg:w="14"/><text x="8.8541%" y="495.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (14 samples, 0.03%)</title><rect x="8.6041%" y="469" width="0.0259%" height="15" fill="rgb(223,154,38)" fg:x="4658" fg:w="14"/><text x="8.8541%" y="479.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (14 samples, 0.03%)</title><rect x="8.6041%" y="453" width="0.0259%" height="15" fill="rgb(251,22,52)" fg:x="4658" fg:w="14"/><text x="8.8541%" y="463.50"></text></g><g><title>__memcmp_sse4_1 (14 samples, 0.03%)</title><rect x="8.6041%" y="437" width="0.0259%" height="15" fill="rgb(229,209,22)" fg:x="4658" fg:w="14"/><text x="8.8541%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (8 samples, 0.01%)</title><rect x="8.7556%" y="421" width="0.0148%" height="15" fill="rgb(234,138,34)" fg:x="4740" fg:w="8"/><text x="9.0056%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="8.7556%" y="405" width="0.0148%" height="15" fill="rgb(212,95,11)" fg:x="4740" fg:w="8"/><text x="9.0056%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (23 samples, 0.04%)</title><rect x="8.7389%" y="453" width="0.0425%" height="15" fill="rgb(240,179,47)" fg:x="4731" fg:w="23"/><text x="8.9889%" y="463.50"></text></g><g><title>yakvdb::disk::block::get_u32 (18 samples, 0.03%)</title><rect x="8.7482%" y="437" width="0.0332%" height="15" fill="rgb(240,163,11)" fg:x="4736" fg:w="18"/><text x="8.9982%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.01%)</title><rect x="8.7703%" y="421" width="0.0111%" height="15" fill="rgb(236,37,12)" fg:x="4748" fg:w="6"/><text x="9.0203%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.01%)</title><rect x="8.7703%" y="405" width="0.0111%" height="15" fill="rgb(232,164,16)" fg:x="4748" fg:w="6"/><text x="9.0203%" y="415.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (7 samples, 0.01%)</title><rect x="8.7851%" y="437" width="0.0129%" height="15" fill="rgb(244,205,15)" fg:x="4756" fg:w="7"/><text x="9.0351%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (7 samples, 0.01%)</title><rect x="8.7851%" y="421" width="0.0129%" height="15" fill="rgb(223,117,47)" fg:x="4756" fg:w="7"/><text x="9.0351%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (7 samples, 0.01%)</title><rect x="8.7851%" y="405" width="0.0129%" height="15" fill="rgb(244,107,35)" fg:x="4756" fg:w="7"/><text x="9.0351%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (79 samples, 0.15%)</title><rect x="8.6891%" y="469" width="0.1459%" height="15" fill="rgb(205,140,8)" fg:x="4704" fg:w="79"/><text x="8.9391%" y="479.50"></text></g><g><title>yakvdb::disk::block::get_u32 (29 samples, 0.05%)</title><rect x="8.7814%" y="453" width="0.0536%" height="15" fill="rgb(228,84,46)" fg:x="4754" fg:w="29"/><text x="9.0314%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (16 samples, 0.03%)</title><rect x="8.8054%" y="437" width="0.0296%" height="15" fill="rgb(254,188,9)" fg:x="4767" fg:w="16"/><text x="9.0554%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (16 samples, 0.03%)</title><rect x="8.8054%" y="421" width="0.0296%" height="15" fill="rgb(206,112,54)" fg:x="4767" fg:w="16"/><text x="9.0554%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (116 samples, 0.21%)</title><rect x="8.6835%" y="501" width="0.2143%" height="15" fill="rgb(216,84,49)" fg:x="4701" fg:w="116"/><text x="8.9335%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (116 samples, 0.21%)</title><rect x="8.6835%" y="485" width="0.2143%" height="15" fill="rgb(214,194,35)" fg:x="4701" fg:w="116"/><text x="8.9335%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (34 samples, 0.06%)</title><rect x="8.8350%" y="469" width="0.0628%" height="15" fill="rgb(249,28,3)" fg:x="4783" fg:w="34"/><text x="9.0850%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key::{{closure}} (24 samples, 0.04%)</title><rect x="8.8535%" y="453" width="0.0443%" height="15" fill="rgb(222,56,52)" fg:x="4793" fg:w="24"/><text x="9.1035%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (16 samples, 0.03%)</title><rect x="8.8682%" y="437" width="0.0296%" height="15" fill="rgb(245,217,50)" fg:x="4801" fg:w="16"/><text x="9.1182%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (16 samples, 0.03%)</title><rect x="8.8682%" y="421" width="0.0296%" height="15" fill="rgb(213,201,24)" fg:x="4801" fg:w="16"/><text x="9.1182%" y="431.50"></text></g><g><title>__memcmp_sse4_1 (59 samples, 0.11%)</title><rect x="8.9292%" y="453" width="0.1090%" height="15" fill="rgb(248,116,28)" fg:x="4834" fg:w="59"/><text x="9.1792%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (98 samples, 0.18%)</title><rect x="8.8978%" y="501" width="0.1810%" height="15" fill="rgb(219,72,43)" fg:x="4817" fg:w="98"/><text x="9.1478%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (98 samples, 0.18%)</title><rect x="8.8978%" y="485" width="0.1810%" height="15" fill="rgb(209,138,14)" fg:x="4817" fg:w="98"/><text x="9.1478%" y="495.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (98 samples, 0.18%)</title><rect x="8.8978%" y="469" width="0.1810%" height="15" fill="rgb(222,18,33)" fg:x="4817" fg:w="98"/><text x="9.1478%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (22 samples, 0.04%)</title><rect x="9.0382%" y="453" width="0.0406%" height="15" fill="rgb(213,199,7)" fg:x="4893" fg:w="22"/><text x="9.2882%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (284 samples, 0.52%)</title><rect x="8.5635%" y="533" width="0.5246%" height="15" fill="rgb(250,110,10)" fg:x="4636" fg:w="284"/><text x="8.8135%" y="543.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (248 samples, 0.46%)</title><rect x="8.6300%" y="517" width="0.4581%" height="15" fill="rgb(248,123,6)" fg:x="4672" fg:w="248"/><text x="8.8800%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (7 samples, 0.01%)</title><rect x="9.0991%" y="533" width="0.0129%" height="15" fill="rgb(206,91,31)" fg:x="4926" fg:w="7"/><text x="9.3491%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.01%)</title><rect x="9.1195%" y="357" width="0.0111%" height="15" fill="rgb(211,154,13)" fg:x="4937" fg:w="6"/><text x="9.3695%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.04%)</title><rect x="9.1176%" y="437" width="0.0369%" height="15" fill="rgb(225,148,7)" fg:x="4936" fg:w="20"/><text x="9.3676%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20 samples, 0.04%)</title><rect x="9.1176%" y="421" width="0.0369%" height="15" fill="rgb(220,160,43)" fg:x="4936" fg:w="20"/><text x="9.3676%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (19 samples, 0.04%)</title><rect x="9.1195%" y="405" width="0.0351%" height="15" fill="rgb(213,52,39)" fg:x="4937" fg:w="19"/><text x="9.3695%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (19 samples, 0.04%)</title><rect x="9.1195%" y="389" width="0.0351%" height="15" fill="rgb(243,137,7)" fg:x="4937" fg:w="19"/><text x="9.3695%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (19 samples, 0.04%)</title><rect x="9.1195%" y="373" width="0.0351%" height="15" fill="rgb(230,79,13)" fg:x="4937" fg:w="19"/><text x="9.3695%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.02%)</title><rect x="9.1305%" y="357" width="0.0240%" height="15" fill="rgb(247,105,23)" fg:x="4943" fg:w="13"/><text x="9.3805%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.02%)</title><rect x="9.1324%" y="341" width="0.0222%" height="15" fill="rgb(223,179,41)" fg:x="4944" fg:w="12"/><text x="9.3824%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.01%)</title><rect x="9.1582%" y="389" width="0.0111%" height="15" fill="rgb(218,9,34)" fg:x="4958" fg:w="6"/><text x="9.4082%" y="399.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (35 samples, 0.06%)</title><rect x="9.1176%" y="501" width="0.0647%" height="15" fill="rgb(222,106,8)" fg:x="4936" fg:w="35"/><text x="9.3676%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (35 samples, 0.06%)</title><rect x="9.1176%" y="485" width="0.0647%" height="15" fill="rgb(211,220,0)" fg:x="4936" fg:w="35"/><text x="9.3676%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (35 samples, 0.06%)</title><rect x="9.1176%" y="469" width="0.0647%" height="15" fill="rgb(229,52,16)" fg:x="4936" fg:w="35"/><text x="9.3676%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (35 samples, 0.06%)</title><rect x="9.1176%" y="453" width="0.0647%" height="15" fill="rgb(212,155,18)" fg:x="4936" fg:w="35"/><text x="9.3676%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.03%)</title><rect x="9.1546%" y="437" width="0.0277%" height="15" fill="rgb(242,21,14)" fg:x="4956" fg:w="15"/><text x="9.4046%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.03%)</title><rect x="9.1546%" y="421" width="0.0277%" height="15" fill="rgb(222,19,48)" fg:x="4956" fg:w="15"/><text x="9.4046%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.03%)</title><rect x="9.1546%" y="405" width="0.0277%" height="15" fill="rgb(232,45,27)" fg:x="4956" fg:w="15"/><text x="9.4046%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.01%)</title><rect x="9.2063%" y="389" width="0.0148%" height="15" fill="rgb(249,103,42)" fg:x="4984" fg:w="8"/><text x="9.4563%" y="399.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="9.2081%" y="373" width="0.0129%" height="15" fill="rgb(246,81,33)" fg:x="4985" fg:w="7"/><text x="9.4581%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (61 samples, 0.11%)</title><rect x="9.1158%" y="517" width="0.1127%" height="15" fill="rgb(252,33,42)" fg:x="4935" fg:w="61"/><text x="9.3658%" y="527.50"></text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (22 samples, 0.04%)</title><rect x="9.1878%" y="501" width="0.0406%" height="15" fill="rgb(209,212,41)" fg:x="4974" fg:w="22"/><text x="9.4378%" y="511.50"></text></g><g><title>std::io::Read::read_exact (12 samples, 0.02%)</title><rect x="9.2063%" y="485" width="0.0222%" height="15" fill="rgb(207,154,6)" fg:x="4984" fg:w="12"/><text x="9.4563%" y="495.50"></text></g><g><title>std::io::default_read_exact (12 samples, 0.02%)</title><rect x="9.2063%" y="469" width="0.0222%" height="15" fill="rgb(223,64,47)" fg:x="4984" fg:w="12"/><text x="9.4563%" y="479.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (12 samples, 0.02%)</title><rect x="9.2063%" y="453" width="0.0222%" height="15" fill="rgb(211,161,38)" fg:x="4984" fg:w="12"/><text x="9.4563%" y="463.50"></text></g><g><title>std::sys::unix::fs::File::read (12 samples, 0.02%)</title><rect x="9.2063%" y="437" width="0.0222%" height="15" fill="rgb(219,138,40)" fg:x="4984" fg:w="12"/><text x="9.4563%" y="447.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (12 samples, 0.02%)</title><rect x="9.2063%" y="421" width="0.0222%" height="15" fill="rgb(241,228,46)" fg:x="4984" fg:w="12"/><text x="9.4563%" y="431.50"></text></g><g><title>__GI___read (12 samples, 0.02%)</title><rect x="9.2063%" y="405" width="0.0222%" height="15" fill="rgb(223,209,38)" fg:x="4984" fg:w="12"/><text x="9.4563%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="9.2358%" y="325" width="0.0111%" height="15" fill="rgb(236,164,45)" fg:x="5000" fg:w="6"/><text x="9.4858%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="9.2321%" y="389" width="0.0166%" height="15" fill="rgb(231,15,5)" fg:x="4998" fg:w="9"/><text x="9.4821%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="9.2321%" y="373" width="0.0166%" height="15" fill="rgb(252,35,15)" fg:x="4998" fg:w="9"/><text x="9.4821%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="9.2321%" y="357" width="0.0166%" height="15" fill="rgb(248,181,18)" fg:x="4998" fg:w="9"/><text x="9.4821%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="9.2340%" y="341" width="0.0148%" height="15" fill="rgb(233,39,42)" fg:x="4999" fg:w="8"/><text x="9.4840%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="9.2284%" y="421" width="0.0222%" height="15" fill="rgb(238,110,33)" fg:x="4996" fg:w="12"/><text x="9.4784%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="9.2284%" y="405" width="0.0222%" height="15" fill="rgb(233,195,10)" fg:x="4996" fg:w="12"/><text x="9.4784%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.01%)</title><rect x="9.2598%" y="373" width="0.0111%" height="15" fill="rgb(254,105,3)" fg:x="5013" fg:w="6"/><text x="9.5098%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.01%)</title><rect x="9.2598%" y="357" width="0.0111%" height="15" fill="rgb(221,225,9)" fg:x="5013" fg:w="6"/><text x="9.5098%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (24 samples, 0.04%)</title><rect x="9.2284%" y="469" width="0.0443%" height="15" fill="rgb(224,227,45)" fg:x="4996" fg:w="24"/><text x="9.4784%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (24 samples, 0.04%)</title><rect x="9.2284%" y="453" width="0.0443%" height="15" fill="rgb(229,198,43)" fg:x="4996" fg:w="24"/><text x="9.4784%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (24 samples, 0.04%)</title><rect x="9.2284%" y="437" width="0.0443%" height="15" fill="rgb(206,209,35)" fg:x="4996" fg:w="24"/><text x="9.4784%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.02%)</title><rect x="9.2506%" y="421" width="0.0222%" height="15" fill="rgb(245,195,53)" fg:x="5008" fg:w="12"/><text x="9.5006%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.02%)</title><rect x="9.2506%" y="405" width="0.0222%" height="15" fill="rgb(240,92,26)" fg:x="5008" fg:w="12"/><text x="9.5006%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.02%)</title><rect x="9.2506%" y="389" width="0.0222%" height="15" fill="rgb(207,40,23)" fg:x="5008" fg:w="12"/><text x="9.5006%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="9.2875%" y="325" width="0.0148%" height="15" fill="rgb(223,111,35)" fg:x="5028" fg:w="8"/><text x="9.5375%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (14 samples, 0.03%)</title><rect x="9.2783%" y="389" width="0.0259%" height="15" fill="rgb(229,147,28)" fg:x="5023" fg:w="14"/><text x="9.5283%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (14 samples, 0.03%)</title><rect x="9.2783%" y="373" width="0.0259%" height="15" fill="rgb(211,29,28)" fg:x="5023" fg:w="14"/><text x="9.5283%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (14 samples, 0.03%)</title><rect x="9.2783%" y="357" width="0.0259%" height="15" fill="rgb(228,72,33)" fg:x="5023" fg:w="14"/><text x="9.5283%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.02%)</title><rect x="9.2875%" y="341" width="0.0166%" height="15" fill="rgb(205,214,31)" fg:x="5028" fg:w="9"/><text x="9.5375%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.03%)</title><rect x="9.2783%" y="421" width="0.0314%" height="15" fill="rgb(224,111,15)" fg:x="5023" fg:w="17"/><text x="9.5283%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.03%)</title><rect x="9.2783%" y="405" width="0.0314%" height="15" fill="rgb(253,21,26)" fg:x="5023" fg:w="17"/><text x="9.5283%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (41 samples, 0.08%)</title><rect x="9.2728%" y="469" width="0.0757%" height="15" fill="rgb(245,139,43)" fg:x="5020" fg:w="41"/><text x="9.5228%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (41 samples, 0.08%)</title><rect x="9.2728%" y="453" width="0.0757%" height="15" fill="rgb(252,170,7)" fg:x="5020" fg:w="41"/><text x="9.5228%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (39 samples, 0.07%)</title><rect x="9.2765%" y="437" width="0.0720%" height="15" fill="rgb(231,118,14)" fg:x="5022" fg:w="39"/><text x="9.5265%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (21 samples, 0.04%)</title><rect x="9.3097%" y="421" width="0.0388%" height="15" fill="rgb(238,83,0)" fg:x="5040" fg:w="21"/><text x="9.5597%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.04%)</title><rect x="9.3097%" y="405" width="0.0388%" height="15" fill="rgb(221,39,39)" fg:x="5040" fg:w="21"/><text x="9.5597%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (21 samples, 0.04%)</title><rect x="9.3097%" y="389" width="0.0388%" height="15" fill="rgb(222,119,46)" fg:x="5040" fg:w="21"/><text x="9.5597%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (6 samples, 0.01%)</title><rect x="9.3522%" y="453" width="0.0111%" height="15" fill="rgb(222,165,49)" fg:x="5063" fg:w="6"/><text x="9.6022%" y="463.50"></text></g><g><title>core::intrinsics::copy (6 samples, 0.01%)</title><rect x="9.3522%" y="437" width="0.0111%" height="15" fill="rgb(219,113,52)" fg:x="5063" fg:w="6"/><text x="9.6022%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (14 samples, 0.03%)</title><rect x="9.3799%" y="405" width="0.0259%" height="15" fill="rgb(214,7,15)" fg:x="5078" fg:w="14"/><text x="9.6299%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (8 samples, 0.01%)</title><rect x="9.3910%" y="389" width="0.0148%" height="15" fill="rgb(235,32,4)" fg:x="5084" fg:w="8"/><text x="9.6410%" y="399.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (8 samples, 0.01%)</title><rect x="9.3910%" y="373" width="0.0148%" height="15" fill="rgb(238,90,54)" fg:x="5084" fg:w="8"/><text x="9.6410%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.01%)</title><rect x="9.3910%" y="357" width="0.0148%" height="15" fill="rgb(213,208,19)" fg:x="5084" fg:w="8"/><text x="9.6410%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.01%)</title><rect x="9.3910%" y="341" width="0.0148%" height="15" fill="rgb(233,156,4)" fg:x="5084" fg:w="8"/><text x="9.6410%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (8 samples, 0.01%)</title><rect x="9.3910%" y="325" width="0.0148%" height="15" fill="rgb(207,194,5)" fg:x="5084" fg:w="8"/><text x="9.6410%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (34 samples, 0.06%)</title><rect x="9.3688%" y="453" width="0.0628%" height="15" fill="rgb(206,111,30)" fg:x="5072" fg:w="34"/><text x="9.6188%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.06%)</title><rect x="9.3688%" y="437" width="0.0628%" height="15" fill="rgb(243,70,54)" fg:x="5072" fg:w="34"/><text x="9.6188%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34 samples, 0.06%)</title><rect x="9.3688%" y="421" width="0.0628%" height="15" fill="rgb(242,28,8)" fg:x="5072" fg:w="34"/><text x="9.6188%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="9.4058%" y="405" width="0.0259%" height="15" fill="rgb(219,106,18)" fg:x="5092" fg:w="14"/><text x="9.6558%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.01%)</title><rect x="9.4335%" y="325" width="0.0129%" height="15" fill="rgb(244,222,10)" fg:x="5107" fg:w="7"/><text x="9.6835%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.02%)</title><rect x="9.4501%" y="309" width="0.0185%" height="15" fill="rgb(236,179,52)" fg:x="5116" fg:w="10"/><text x="9.7001%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.04%)</title><rect x="9.4316%" y="405" width="0.0388%" height="15" fill="rgb(213,23,39)" fg:x="5106" fg:w="21"/><text x="9.6816%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.04%)</title><rect x="9.4316%" y="389" width="0.0388%" height="15" fill="rgb(238,48,10)" fg:x="5106" fg:w="21"/><text x="9.6816%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.04%)</title><rect x="9.4335%" y="373" width="0.0369%" height="15" fill="rgb(251,196,23)" fg:x="5107" fg:w="20"/><text x="9.6835%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 0.04%)</title><rect x="9.4335%" y="357" width="0.0369%" height="15" fill="rgb(250,152,24)" fg:x="5107" fg:w="20"/><text x="9.6835%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 0.04%)</title><rect x="9.4335%" y="341" width="0.0369%" height="15" fill="rgb(209,150,17)" fg:x="5107" fg:w="20"/><text x="9.6835%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.02%)</title><rect x="9.4464%" y="325" width="0.0240%" height="15" fill="rgb(234,202,34)" fg:x="5114" fg:w="13"/><text x="9.6964%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (7 samples, 0.01%)</title><rect x="9.4778%" y="357" width="0.0129%" height="15" fill="rgb(253,148,53)" fg:x="5131" fg:w="7"/><text x="9.7278%" y="367.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (146 samples, 0.27%)</title><rect x="9.2284%" y="517" width="0.2697%" height="15" fill="rgb(218,129,16)" fg:x="4996" fg:w="146"/><text x="9.4784%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (146 samples, 0.27%)</title><rect x="9.2284%" y="501" width="0.2697%" height="15" fill="rgb(216,85,19)" fg:x="4996" fg:w="146"/><text x="9.4784%" y="511.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (146 samples, 0.27%)</title><rect x="9.2284%" y="485" width="0.2697%" height="15" fill="rgb(235,228,7)" fg:x="4996" fg:w="146"/><text x="9.4784%" y="495.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (81 samples, 0.15%)</title><rect x="9.3485%" y="469" width="0.1496%" height="15" fill="rgb(245,175,0)" fg:x="5061" fg:w="81"/><text x="9.5985%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (36 samples, 0.07%)</title><rect x="9.4316%" y="453" width="0.0665%" height="15" fill="rgb(208,168,36)" fg:x="5106" fg:w="36"/><text x="9.6816%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (36 samples, 0.07%)</title><rect x="9.4316%" y="437" width="0.0665%" height="15" fill="rgb(246,171,24)" fg:x="5106" fg:w="36"/><text x="9.6816%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.07%)</title><rect x="9.4316%" y="421" width="0.0665%" height="15" fill="rgb(215,142,24)" fg:x="5106" fg:w="36"/><text x="9.6816%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.03%)</title><rect x="9.4704%" y="405" width="0.0277%" height="15" fill="rgb(250,187,7)" fg:x="5127" fg:w="15"/><text x="9.7204%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.03%)</title><rect x="9.4704%" y="389" width="0.0277%" height="15" fill="rgb(228,66,33)" fg:x="5127" fg:w="15"/><text x="9.7204%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.03%)</title><rect x="9.4704%" y="373" width="0.0277%" height="15" fill="rgb(234,215,21)" fg:x="5127" fg:w="15"/><text x="9.7204%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (214 samples, 0.40%)</title><rect x="9.1121%" y="533" width="0.3953%" height="15" fill="rgb(222,191,20)" fg:x="4933" fg:w="214"/><text x="9.3621%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.02%)</title><rect x="9.5092%" y="421" width="0.0240%" height="15" fill="rgb(245,79,54)" fg:x="5148" fg:w="13"/><text x="9.7592%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.02%)</title><rect x="9.5092%" y="405" width="0.0240%" height="15" fill="rgb(240,10,37)" fg:x="5148" fg:w="13"/><text x="9.7592%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.02%)</title><rect x="9.5129%" y="389" width="0.0203%" height="15" fill="rgb(214,192,32)" fg:x="5150" fg:w="11"/><text x="9.7629%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.02%)</title><rect x="9.5129%" y="373" width="0.0203%" height="15" fill="rgb(209,36,54)" fg:x="5150" fg:w="11"/><text x="9.7629%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.02%)</title><rect x="9.5129%" y="357" width="0.0203%" height="15" fill="rgb(220,10,11)" fg:x="5150" fg:w="11"/><text x="9.7629%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="9.5184%" y="341" width="0.0148%" height="15" fill="rgb(221,106,17)" fg:x="5153" fg:w="8"/><text x="9.7684%" y="351.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (17 samples, 0.03%)</title><rect x="9.5092%" y="485" width="0.0314%" height="15" fill="rgb(251,142,44)" fg:x="5148" fg:w="17"/><text x="9.7592%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (17 samples, 0.03%)</title><rect x="9.5092%" y="469" width="0.0314%" height="15" fill="rgb(238,13,15)" fg:x="5148" fg:w="17"/><text x="9.7592%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (17 samples, 0.03%)</title><rect x="9.5092%" y="453" width="0.0314%" height="15" fill="rgb(208,107,27)" fg:x="5148" fg:w="17"/><text x="9.7592%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.03%)</title><rect x="9.5092%" y="437" width="0.0314%" height="15" fill="rgb(205,136,37)" fg:x="5148" fg:w="17"/><text x="9.7592%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (19 samples, 0.04%)</title><rect x="9.5092%" y="501" width="0.0351%" height="15" fill="rgb(250,205,27)" fg:x="5148" fg:w="19"/><text x="9.7592%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.01%)</title><rect x="9.5443%" y="405" width="0.0148%" height="15" fill="rgb(210,80,43)" fg:x="5167" fg:w="8"/><text x="9.7943%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.01%)</title><rect x="9.5443%" y="389" width="0.0148%" height="15" fill="rgb(247,160,36)" fg:x="5167" fg:w="8"/><text x="9.7943%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="9.5443%" y="373" width="0.0148%" height="15" fill="rgb(234,13,49)" fg:x="5167" fg:w="8"/><text x="9.7943%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="9.5443%" y="357" width="0.0148%" height="15" fill="rgb(234,122,0)" fg:x="5167" fg:w="8"/><text x="9.7943%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="9.5443%" y="341" width="0.0148%" height="15" fill="rgb(207,146,38)" fg:x="5167" fg:w="8"/><text x="9.7943%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="9.5462%" y="325" width="0.0129%" height="15" fill="rgb(207,177,25)" fg:x="5168" fg:w="7"/><text x="9.7962%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (14 samples, 0.03%)</title><rect x="9.5443%" y="453" width="0.0259%" height="15" fill="rgb(211,178,42)" fg:x="5167" fg:w="14"/><text x="9.7943%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (14 samples, 0.03%)</title><rect x="9.5443%" y="437" width="0.0259%" height="15" fill="rgb(230,69,54)" fg:x="5167" fg:w="14"/><text x="9.7943%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.03%)</title><rect x="9.5443%" y="421" width="0.0259%" height="15" fill="rgb(214,135,41)" fg:x="5167" fg:w="14"/><text x="9.7943%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.01%)</title><rect x="9.5591%" y="405" width="0.0111%" height="15" fill="rgb(237,67,25)" fg:x="5175" fg:w="6"/><text x="9.8091%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="9.5591%" y="389" width="0.0111%" height="15" fill="rgb(222,189,50)" fg:x="5175" fg:w="6"/><text x="9.8091%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.01%)</title><rect x="9.5591%" y="373" width="0.0111%" height="15" fill="rgb(245,148,34)" fg:x="5175" fg:w="6"/><text x="9.8091%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="9.5739%" y="309" width="0.0111%" height="15" fill="rgb(222,29,6)" fg:x="5183" fg:w="6"/><text x="9.8239%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="9.5702%" y="373" width="0.0166%" height="15" fill="rgb(221,189,43)" fg:x="5181" fg:w="9"/><text x="9.8202%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="9.5702%" y="357" width="0.0166%" height="15" fill="rgb(207,36,27)" fg:x="5181" fg:w="9"/><text x="9.8202%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="9.5702%" y="341" width="0.0166%" height="15" fill="rgb(217,90,24)" fg:x="5181" fg:w="9"/><text x="9.8202%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="9.5739%" y="325" width="0.0129%" height="15" fill="rgb(224,66,35)" fg:x="5183" fg:w="7"/><text x="9.8239%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="9.5702%" y="405" width="0.0222%" height="15" fill="rgb(221,13,50)" fg:x="5181" fg:w="12"/><text x="9.8202%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="9.5702%" y="389" width="0.0222%" height="15" fill="rgb(236,68,49)" fg:x="5181" fg:w="12"/><text x="9.8202%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.02%)</title><rect x="9.5923%" y="405" width="0.0166%" height="15" fill="rgb(229,146,28)" fg:x="5193" fg:w="9"/><text x="9.8423%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.02%)</title><rect x="9.5923%" y="389" width="0.0166%" height="15" fill="rgb(225,31,38)" fg:x="5193" fg:w="9"/><text x="9.8423%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.02%)</title><rect x="9.5923%" y="373" width="0.0166%" height="15" fill="rgb(250,208,3)" fg:x="5193" fg:w="9"/><text x="9.8423%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (22 samples, 0.04%)</title><rect x="9.5702%" y="453" width="0.0406%" height="15" fill="rgb(246,54,23)" fg:x="5181" fg:w="22"/><text x="9.8202%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (22 samples, 0.04%)</title><rect x="9.5702%" y="437" width="0.0406%" height="15" fill="rgb(243,76,11)" fg:x="5181" fg:w="22"/><text x="9.8202%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22 samples, 0.04%)</title><rect x="9.5702%" y="421" width="0.0406%" height="15" fill="rgb(245,21,50)" fg:x="5181" fg:w="22"/><text x="9.8202%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (15 samples, 0.03%)</title><rect x="9.6182%" y="437" width="0.0277%" height="15" fill="rgb(228,9,43)" fg:x="5207" fg:w="15"/><text x="9.8682%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.03%)</title><rect x="9.6182%" y="421" width="0.0277%" height="15" fill="rgb(208,100,47)" fg:x="5207" fg:w="15"/><text x="9.8682%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.03%)</title><rect x="9.6182%" y="405" width="0.0277%" height="15" fill="rgb(232,26,8)" fg:x="5207" fg:w="15"/><text x="9.8682%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="9.6330%" y="389" width="0.0129%" height="15" fill="rgb(216,166,38)" fg:x="5215" fg:w="7"/><text x="9.8830%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::root (84 samples, 0.16%)</title><rect x="9.5074%" y="533" width="0.1552%" height="15" fill="rgb(251,202,51)" fg:x="5147" fg:w="84"/><text x="9.7574%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (84 samples, 0.16%)</title><rect x="9.5074%" y="517" width="0.1552%" height="15" fill="rgb(254,216,34)" fg:x="5147" fg:w="84"/><text x="9.7574%" y="527.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (64 samples, 0.12%)</title><rect x="9.5443%" y="501" width="0.1182%" height="15" fill="rgb(251,32,27)" fg:x="5167" fg:w="64"/><text x="9.7943%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (64 samples, 0.12%)</title><rect x="9.5443%" y="485" width="0.1182%" height="15" fill="rgb(208,127,28)" fg:x="5167" fg:w="64"/><text x="9.7943%" y="495.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (64 samples, 0.12%)</title><rect x="9.5443%" y="469" width="0.1182%" height="15" fill="rgb(224,137,22)" fg:x="5167" fg:w="64"/><text x="9.7943%" y="479.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (28 samples, 0.05%)</title><rect x="9.6108%" y="453" width="0.0517%" height="15" fill="rgb(254,70,32)" fg:x="5203" fg:w="28"/><text x="9.8608%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (9 samples, 0.02%)</title><rect x="9.6459%" y="437" width="0.0166%" height="15" fill="rgb(229,75,37)" fg:x="5222" fg:w="9"/><text x="9.8959%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (9 samples, 0.02%)</title><rect x="9.6459%" y="421" width="0.0166%" height="15" fill="rgb(252,64,23)" fg:x="5222" fg:w="9"/><text x="9.8959%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.02%)</title><rect x="9.6459%" y="405" width="0.0166%" height="15" fill="rgb(232,162,48)" fg:x="5222" fg:w="9"/><text x="9.8959%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.01%)</title><rect x="9.6625%" y="533" width="0.0148%" height="15" fill="rgb(246,160,12)" fg:x="5231" fg:w="8"/><text x="9.9125%" y="543.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="9.6625%" y="517" width="0.0148%" height="15" fill="rgb(247,166,0)" fg:x="5231" fg:w="8"/><text x="9.9125%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.01%)</title><rect x="9.6773%" y="533" width="0.0111%" height="15" fill="rgb(249,219,21)" fg:x="5239" fg:w="6"/><text x="9.9273%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="9.6773%" y="517" width="0.0111%" height="15" fill="rgb(205,209,3)" fg:x="5239" fg:w="6"/><text x="9.9273%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="9.6773%" y="501" width="0.0111%" height="15" fill="rgb(243,44,1)" fg:x="5239" fg:w="6"/><text x="9.9273%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.01%)</title><rect x="9.6773%" y="485" width="0.0111%" height="15" fill="rgb(206,159,16)" fg:x="5239" fg:w="6"/><text x="9.9273%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.01%)</title><rect x="9.6773%" y="469" width="0.0111%" height="15" fill="rgb(244,77,30)" fg:x="5239" fg:w="6"/><text x="9.9273%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="9.6773%" y="453" width="0.0111%" height="15" fill="rgb(218,69,12)" fg:x="5239" fg:w="6"/><text x="9.9273%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (7 samples, 0.01%)</title><rect x="9.6939%" y="533" width="0.0129%" height="15" fill="rgb(212,87,7)" fg:x="5248" fg:w="7"/><text x="9.9439%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::gt (7 samples, 0.01%)</title><rect x="9.6939%" y="517" width="0.0129%" height="15" fill="rgb(245,114,25)" fg:x="5248" fg:w="7"/><text x="9.9439%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (7 samples, 0.01%)</title><rect x="9.6939%" y="501" width="0.0129%" height="15" fill="rgb(210,61,42)" fg:x="5248" fg:w="7"/><text x="9.9439%" y="511.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (7 samples, 0.01%)</title><rect x="9.6939%" y="485" width="0.0129%" height="15" fill="rgb(211,52,33)" fg:x="5248" fg:w="7"/><text x="9.9439%" y="495.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (7 samples, 0.01%)</title><rect x="9.6939%" y="469" width="0.0129%" height="15" fill="rgb(234,58,33)" fg:x="5248" fg:w="7"/><text x="9.9439%" y="479.50"></text></g><g><title>__memcmp_sse4_1 (7 samples, 0.01%)</title><rect x="9.6939%" y="453" width="0.0129%" height="15" fill="rgb(220,115,36)" fg:x="5248" fg:w="7"/><text x="9.9439%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::below (635 samples, 1.17%)</title><rect x="8.5561%" y="549" width="1.1730%" height="15" fill="rgb(243,153,54)" fg:x="4632" fg:w="635"/><text x="8.8061%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u32,u32)&gt;&gt; (9 samples, 0.02%)</title><rect x="9.7124%" y="533" width="0.0166%" height="15" fill="rgb(251,47,18)" fg:x="5258" fg:w="9"/><text x="9.9624%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u32,u32)&gt;&gt; (9 samples, 0.02%)</title><rect x="9.7124%" y="517" width="0.0166%" height="15" fill="rgb(242,102,42)" fg:x="5258" fg:w="9"/><text x="9.9624%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="9.7124%" y="501" width="0.0166%" height="15" fill="rgb(234,31,38)" fg:x="5258" fg:w="9"/><text x="9.9624%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.02%)</title><rect x="9.7124%" y="485" width="0.0166%" height="15" fill="rgb(221,117,51)" fg:x="5258" fg:w="9"/><text x="9.9624%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.02%)</title><rect x="9.7124%" y="469" width="0.0166%" height="15" fill="rgb(212,20,18)" fg:x="5258" fg:w="9"/><text x="9.9624%" y="479.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="9.7179%" y="453" width="0.0111%" height="15" fill="rgb(245,133,36)" fg:x="5261" fg:w="6"/><text x="9.9679%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (8 samples, 0.01%)</title><rect x="9.8694%" y="485" width="0.0148%" height="15" fill="rgb(212,6,19)" fg:x="5343" fg:w="8"/><text x="10.1194%" y="495.50"></text></g><g><title>yakvdb::disk::block::get_u32 (7 samples, 0.01%)</title><rect x="9.8713%" y="469" width="0.0129%" height="15" fill="rgb(218,1,36)" fg:x="5344" fg:w="7"/><text x="10.1213%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (15 samples, 0.03%)</title><rect x="9.8676%" y="501" width="0.0277%" height="15" fill="rgb(246,84,54)" fg:x="5342" fg:w="15"/><text x="10.1176%" y="511.50"></text></g><g><title>yakvdb::disk::block::get_u32 (6 samples, 0.01%)</title><rect x="9.8842%" y="485" width="0.0111%" height="15" fill="rgb(242,110,6)" fg:x="5351" fg:w="6"/><text x="10.1342%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (18 samples, 0.03%)</title><rect x="9.8676%" y="517" width="0.0332%" height="15" fill="rgb(214,47,5)" fg:x="5342" fg:w="18"/><text x="10.1176%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (12 samples, 0.02%)</title><rect x="9.9027%" y="517" width="0.0222%" height="15" fill="rgb(218,159,25)" fg:x="5361" fg:w="12"/><text x="10.1527%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::ge (12 samples, 0.02%)</title><rect x="9.9027%" y="501" width="0.0222%" height="15" fill="rgb(215,211,28)" fg:x="5361" fg:w="12"/><text x="10.1527%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (12 samples, 0.02%)</title><rect x="9.9027%" y="485" width="0.0222%" height="15" fill="rgb(238,59,32)" fg:x="5361" fg:w="12"/><text x="10.1527%" y="495.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (12 samples, 0.02%)</title><rect x="9.9027%" y="469" width="0.0222%" height="15" fill="rgb(226,82,3)" fg:x="5361" fg:w="12"/><text x="10.1527%" y="479.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (12 samples, 0.02%)</title><rect x="9.9027%" y="453" width="0.0222%" height="15" fill="rgb(240,164,32)" fg:x="5361" fg:w="12"/><text x="10.1527%" y="463.50"></text></g><g><title>__memcmp_sse4_1 (10 samples, 0.02%)</title><rect x="9.9063%" y="437" width="0.0185%" height="15" fill="rgb(232,46,7)" fg:x="5363" fg:w="10"/><text x="10.1563%" y="447.50"></text></g><g><title>&lt;u32 as core::ops::arith::Sub&gt;::sub (6 samples, 0.01%)</title><rect x="10.0560%" y="501" width="0.0111%" height="15" fill="rgb(229,129,53)" fg:x="5444" fg:w="6"/><text x="10.3060%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (13 samples, 0.02%)</title><rect x="10.1668%" y="421" width="0.0240%" height="15" fill="rgb(234,188,29)" fg:x="5504" fg:w="13"/><text x="10.4168%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="10.1668%" y="405" width="0.0240%" height="15" fill="rgb(246,141,4)" fg:x="5504" fg:w="13"/><text x="10.4168%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (27 samples, 0.05%)</title><rect x="10.1576%" y="453" width="0.0499%" height="15" fill="rgb(229,23,39)" fg:x="5499" fg:w="27"/><text x="10.4076%" y="463.50"></text></g><g><title>yakvdb::disk::block::get_u32 (25 samples, 0.05%)</title><rect x="10.1613%" y="437" width="0.0462%" height="15" fill="rgb(206,12,3)" fg:x="5501" fg:w="25"/><text x="10.4113%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (9 samples, 0.02%)</title><rect x="10.1908%" y="421" width="0.0166%" height="15" fill="rgb(252,226,20)" fg:x="5517" fg:w="9"/><text x="10.4408%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.02%)</title><rect x="10.1908%" y="405" width="0.0166%" height="15" fill="rgb(216,123,35)" fg:x="5517" fg:w="9"/><text x="10.4408%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (92 samples, 0.17%)</title><rect x="10.0800%" y="469" width="0.1699%" height="15" fill="rgb(212,68,40)" fg:x="5457" fg:w="92"/><text x="10.3300%" y="479.50"></text></g><g><title>yakvdb::disk::block::get_u32 (23 samples, 0.04%)</title><rect x="10.2074%" y="453" width="0.0425%" height="15" fill="rgb(254,125,32)" fg:x="5526" fg:w="23"/><text x="10.4574%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (13 samples, 0.02%)</title><rect x="10.2259%" y="437" width="0.0240%" height="15" fill="rgb(253,97,22)" fg:x="5536" fg:w="13"/><text x="10.4759%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.02%)</title><rect x="10.2259%" y="421" width="0.0240%" height="15" fill="rgb(241,101,14)" fg:x="5536" fg:w="13"/><text x="10.4759%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (28 samples, 0.05%)</title><rect x="10.2499%" y="469" width="0.0517%" height="15" fill="rgb(238,103,29)" fg:x="5549" fg:w="28"/><text x="10.4999%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key::{{closure}} (14 samples, 0.03%)</title><rect x="10.2758%" y="453" width="0.0259%" height="15" fill="rgb(233,195,47)" fg:x="5563" fg:w="14"/><text x="10.5258%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.01%)</title><rect x="10.2906%" y="437" width="0.0111%" height="15" fill="rgb(246,218,30)" fg:x="5571" fg:w="6"/><text x="10.5406%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.01%)</title><rect x="10.2906%" y="421" width="0.0111%" height="15" fill="rgb(219,145,47)" fg:x="5571" fg:w="6"/><text x="10.5406%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (129 samples, 0.24%)</title><rect x="10.0671%" y="501" width="0.2383%" height="15" fill="rgb(243,12,26)" fg:x="5450" fg:w="129"/><text x="10.3171%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (129 samples, 0.24%)</title><rect x="10.0671%" y="485" width="0.2383%" height="15" fill="rgb(214,87,16)" fg:x="5450" fg:w="129"/><text x="10.3171%" y="495.50"></text></g><g><title>__memcmp_sse4_1 (169 samples, 0.31%)</title><rect x="10.3552%" y="453" width="0.3122%" height="15" fill="rgb(208,99,42)" fg:x="5606" fg:w="169"/><text x="10.6052%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (208 samples, 0.38%)</title><rect x="10.3072%" y="501" width="0.3842%" height="15" fill="rgb(253,99,2)" fg:x="5580" fg:w="208"/><text x="10.5572%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (208 samples, 0.38%)</title><rect x="10.3072%" y="485" width="0.3842%" height="15" fill="rgb(220,168,23)" fg:x="5580" fg:w="208"/><text x="10.5572%" y="495.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (208 samples, 0.38%)</title><rect x="10.3072%" y="469" width="0.3842%" height="15" fill="rgb(242,38,24)" fg:x="5580" fg:w="208"/><text x="10.5572%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (13 samples, 0.02%)</title><rect x="10.6674%" y="453" width="0.0240%" height="15" fill="rgb(225,182,9)" fg:x="5775" fg:w="13"/><text x="10.9174%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (461 samples, 0.85%)</title><rect x="9.8565%" y="533" width="0.8515%" height="15" fill="rgb(243,178,37)" fg:x="5336" fg:w="461"/><text x="10.1065%" y="543.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (424 samples, 0.78%)</title><rect x="9.9248%" y="517" width="0.7832%" height="15" fill="rgb(232,139,19)" fg:x="5373" fg:w="424"/><text x="10.1748%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (8 samples, 0.01%)</title><rect x="10.6932%" y="501" width="0.0148%" height="15" fill="rgb(225,201,24)" fg:x="5789" fg:w="8"/><text x="10.9432%" y="511.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (6 samples, 0.01%)</title><rect x="11.1938%" y="325" width="0.0111%" height="15" fill="rgb(221,47,46)" fg:x="6060" fg:w="6"/><text x="11.4438%" y="335.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (6 samples, 0.01%)</title><rect x="11.1938%" y="309" width="0.0111%" height="15" fill="rgb(249,23,13)" fg:x="6060" fg:w="6"/><text x="11.4438%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (6 samples, 0.01%)</title><rect x="11.1938%" y="293" width="0.0111%" height="15" fill="rgb(219,9,5)" fg:x="6060" fg:w="6"/><text x="11.4438%" y="303.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (61 samples, 0.11%)</title><rect x="11.1458%" y="357" width="0.1127%" height="15" fill="rgb(254,171,16)" fg:x="6034" fg:w="61"/><text x="11.3958%" y="367.50"></text></g><g><title>yakvdb::disk::block::get_u32 (35 samples, 0.06%)</title><rect x="11.1938%" y="341" width="0.0647%" height="15" fill="rgb(230,171,20)" fg:x="6060" fg:w="35"/><text x="11.4438%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (29 samples, 0.05%)</title><rect x="11.2049%" y="325" width="0.0536%" height="15" fill="rgb(210,71,41)" fg:x="6066" fg:w="29"/><text x="11.4549%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.05%)</title><rect x="11.2049%" y="309" width="0.0536%" height="15" fill="rgb(206,173,20)" fg:x="6066" fg:w="29"/><text x="11.4549%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (25 samples, 0.05%)</title><rect x="11.2899%" y="341" width="0.0462%" height="15" fill="rgb(233,88,34)" fg:x="6112" fg:w="25"/><text x="11.5399%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (25 samples, 0.05%)</title><rect x="11.2899%" y="325" width="0.0462%" height="15" fill="rgb(223,209,46)" fg:x="6112" fg:w="25"/><text x="11.5399%" y="335.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (25 samples, 0.05%)</title><rect x="11.2899%" y="309" width="0.0462%" height="15" fill="rgb(250,43,18)" fg:x="6112" fg:w="25"/><text x="11.5399%" y="319.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (254 samples, 0.47%)</title><rect x="10.9297%" y="389" width="0.4692%" height="15" fill="rgb(208,13,10)" fg:x="5917" fg:w="254"/><text x="11.1797%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (251 samples, 0.46%)</title><rect x="10.9352%" y="373" width="0.4636%" height="15" fill="rgb(212,200,36)" fg:x="5920" fg:w="251"/><text x="11.1852%" y="383.50"></text></g><g><title>yakvdb::disk::block::get_u32 (76 samples, 0.14%)</title><rect x="11.2585%" y="357" width="0.1404%" height="15" fill="rgb(225,90,30)" fg:x="6095" fg:w="76"/><text x="11.5085%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (31 samples, 0.06%)</title><rect x="11.3416%" y="341" width="0.0573%" height="15" fill="rgb(236,182,39)" fg:x="6140" fg:w="31"/><text x="11.5916%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (31 samples, 0.06%)</title><rect x="11.3416%" y="325" width="0.0573%" height="15" fill="rgb(212,144,35)" fg:x="6140" fg:w="31"/><text x="11.5916%" y="335.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (367 samples, 0.68%)</title><rect x="10.7228%" y="405" width="0.6779%" height="15" fill="rgb(228,63,44)" fg:x="5805" fg:w="367"/><text x="10.9728%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (394 samples, 0.73%)</title><rect x="10.7228%" y="453" width="0.7278%" height="15" fill="rgb(228,109,6)" fg:x="5805" fg:w="394"/><text x="10.9728%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (394 samples, 0.73%)</title><rect x="10.7228%" y="437" width="0.7278%" height="15" fill="rgb(238,117,24)" fg:x="5805" fg:w="394"/><text x="10.9728%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (394 samples, 0.73%)</title><rect x="10.7228%" y="421" width="0.7278%" height="15" fill="rgb(242,26,26)" fg:x="5805" fg:w="394"/><text x="10.9728%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (27 samples, 0.05%)</title><rect x="11.4007%" y="405" width="0.0499%" height="15" fill="rgb(221,92,48)" fg:x="6172" fg:w="27"/><text x="11.6507%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (27 samples, 0.05%)</title><rect x="11.4007%" y="389" width="0.0499%" height="15" fill="rgb(209,209,32)" fg:x="6172" fg:w="27"/><text x="11.6507%" y="399.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (27 samples, 0.05%)</title><rect x="11.4007%" y="373" width="0.0499%" height="15" fill="rgb(221,70,22)" fg:x="6172" fg:w="27"/><text x="11.6507%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (27 samples, 0.05%)</title><rect x="11.4007%" y="357" width="0.0499%" height="15" fill="rgb(248,145,5)" fg:x="6172" fg:w="27"/><text x="11.6507%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::fits (405 samples, 0.75%)</title><rect x="10.7080%" y="533" width="0.7481%" height="15" fill="rgb(226,116,26)" fg:x="5797" fg:w="405"/><text x="10.9580%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (404 samples, 0.75%)</title><rect x="10.7099%" y="517" width="0.7463%" height="15" fill="rgb(244,5,17)" fg:x="5798" fg:w="404"/><text x="10.9599%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (397 samples, 0.73%)</title><rect x="10.7228%" y="501" width="0.7333%" height="15" fill="rgb(252,159,33)" fg:x="5805" fg:w="397"/><text x="10.9728%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (397 samples, 0.73%)</title><rect x="10.7228%" y="485" width="0.7333%" height="15" fill="rgb(206,71,0)" fg:x="5805" fg:w="397"/><text x="10.9728%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (397 samples, 0.73%)</title><rect x="10.7228%" y="469" width="0.7333%" height="15" fill="rgb(233,118,54)" fg:x="5805" fg:w="397"/><text x="10.9728%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::cap (7 samples, 0.01%)</title><rect x="11.4986%" y="517" width="0.0129%" height="15" fill="rgb(234,83,48)" fg:x="6225" fg:w="7"/><text x="11.7486%" y="527.50"></text></g><g><title>yakvdb::disk::block::get_u32 (7 samples, 0.01%)</title><rect x="11.4986%" y="501" width="0.0129%" height="15" fill="rgb(228,3,54)" fg:x="6225" fg:w="7"/><text x="11.7486%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.01%)</title><rect x="11.4986%" y="485" width="0.0129%" height="15" fill="rgb(226,155,13)" fg:x="6225" fg:w="7"/><text x="11.7486%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="11.4986%" y="469" width="0.0129%" height="15" fill="rgb(241,28,37)" fg:x="6225" fg:w="7"/><text x="11.7486%" y="479.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (17 samples, 0.03%)</title><rect x="13.0447%" y="325" width="0.0314%" height="15" fill="rgb(233,93,10)" fg:x="7062" fg:w="17"/><text x="13.2947%" y="335.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (17 samples, 0.03%)</title><rect x="13.0447%" y="309" width="0.0314%" height="15" fill="rgb(225,113,19)" fg:x="7062" fg:w="17"/><text x="13.2947%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (17 samples, 0.03%)</title><rect x="13.0447%" y="293" width="0.0314%" height="15" fill="rgb(241,2,18)" fg:x="7062" fg:w="17"/><text x="13.2947%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (82 samples, 0.15%)</title><rect x="13.0761%" y="325" width="0.1515%" height="15" fill="rgb(228,207,21)" fg:x="7079" fg:w="82"/><text x="13.3261%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (82 samples, 0.15%)</title><rect x="13.0761%" y="309" width="0.1515%" height="15" fill="rgb(213,211,35)" fg:x="7079" fg:w="82"/><text x="13.3261%" y="319.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (191 samples, 0.35%)</title><rect x="12.8895%" y="357" width="0.3528%" height="15" fill="rgb(209,83,10)" fg:x="6978" fg:w="191"/><text x="13.1395%" y="367.50"></text></g><g><title>yakvdb::disk::block::get_u32 (107 samples, 0.20%)</title><rect x="13.0447%" y="341" width="0.1976%" height="15" fill="rgb(209,164,1)" fg:x="7062" fg:w="107"/><text x="13.2947%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.01%)</title><rect x="13.2276%" y="325" width="0.0148%" height="15" fill="rgb(213,184,43)" fg:x="7161" fg:w="8"/><text x="13.4776%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.01%)</title><rect x="13.2276%" y="309" width="0.0148%" height="15" fill="rgb(231,61,34)" fg:x="7161" fg:w="8"/><text x="13.4776%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (70 samples, 0.13%)</title><rect x="13.3864%" y="341" width="0.1293%" height="15" fill="rgb(235,75,3)" fg:x="7247" fg:w="70"/><text x="13.6364%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (70 samples, 0.13%)</title><rect x="13.3864%" y="325" width="0.1293%" height="15" fill="rgb(220,106,47)" fg:x="7247" fg:w="70"/><text x="13.6364%" y="335.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (70 samples, 0.13%)</title><rect x="13.3864%" y="309" width="0.1293%" height="15" fill="rgb(210,196,33)" fg:x="7247" fg:w="70"/><text x="13.6364%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (12 samples, 0.02%)</title><rect x="13.5157%" y="341" width="0.0222%" height="15" fill="rgb(229,154,42)" fg:x="7317" fg:w="12"/><text x="13.7657%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="13.5157%" y="325" width="0.0222%" height="15" fill="rgb(228,114,26)" fg:x="7317" fg:w="12"/><text x="13.7657%" y="335.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (1,213 samples, 2.24%)</title><rect x="11.5522%" y="405" width="2.2406%" height="15" fill="rgb(208,144,1)" fg:x="6254" fg:w="1213"/><text x="11.8022%" y="415.50">c..</text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (844 samples, 1.56%)</title><rect x="12.2338%" y="389" width="1.5590%" height="15" fill="rgb(239,112,37)" fg:x="6623" fg:w="844"/><text x="12.4838%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (836 samples, 1.54%)</title><rect x="12.2486%" y="373" width="1.5442%" height="15" fill="rgb(210,96,50)" fg:x="6631" fg:w="836"/><text x="12.4986%" y="383.50"></text></g><g><title>yakvdb::disk::block::get_u32 (298 samples, 0.55%)</title><rect x="13.2423%" y="357" width="0.5505%" height="15" fill="rgb(222,178,2)" fg:x="7169" fg:w="298"/><text x="13.4923%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (138 samples, 0.25%)</title><rect x="13.5379%" y="341" width="0.2549%" height="15" fill="rgb(226,74,18)" fg:x="7329" fg:w="138"/><text x="13.7879%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (138 samples, 0.25%)</title><rect x="13.5379%" y="325" width="0.2549%" height="15" fill="rgb(225,67,54)" fg:x="7329" fg:w="138"/><text x="13.7879%" y="335.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (64 samples, 0.12%)</title><rect x="13.7928%" y="373" width="0.1182%" height="15" fill="rgb(251,92,32)" fg:x="7467" fg:w="64"/><text x="14.0428%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (64 samples, 0.12%)</title><rect x="13.7928%" y="357" width="0.1182%" height="15" fill="rgb(228,149,22)" fg:x="7467" fg:w="64"/><text x="14.0428%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,278 samples, 2.36%)</title><rect x="11.5522%" y="453" width="2.3607%" height="15" fill="rgb(243,54,13)" fg:x="6254" fg:w="1278"/><text x="11.8022%" y="463.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,278 samples, 2.36%)</title><rect x="11.5522%" y="437" width="2.3607%" height="15" fill="rgb(243,180,28)" fg:x="6254" fg:w="1278"/><text x="11.8022%" y="447.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,278 samples, 2.36%)</title><rect x="11.5522%" y="421" width="2.3607%" height="15" fill="rgb(208,167,24)" fg:x="6254" fg:w="1278"/><text x="11.8022%" y="431.50">co..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (65 samples, 0.12%)</title><rect x="13.7928%" y="405" width="0.1201%" height="15" fill="rgb(245,73,45)" fg:x="7467" fg:w="65"/><text x="14.0428%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (65 samples, 0.12%)</title><rect x="13.7928%" y="389" width="0.1201%" height="15" fill="rgb(237,203,48)" fg:x="7467" fg:w="65"/><text x="14.0428%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::full (1,343 samples, 2.48%)</title><rect x="11.4561%" y="533" width="2.4807%" height="15" fill="rgb(211,197,16)" fg:x="6202" fg:w="1343"/><text x="11.7061%" y="543.50">&lt;y..</text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (1,313 samples, 2.43%)</title><rect x="11.5115%" y="517" width="2.4253%" height="15" fill="rgb(243,99,51)" fg:x="6232" fg:w="1313"/><text x="11.7615%" y="527.50">&lt;y..</text></g><g><title>core::iter::traits::iterator::Iterator::min (1,291 samples, 2.38%)</title><rect x="11.5522%" y="501" width="2.3847%" height="15" fill="rgb(215,123,29)" fg:x="6254" fg:w="1291"/><text x="11.8022%" y="511.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1,291 samples, 2.38%)</title><rect x="11.5522%" y="485" width="2.3847%" height="15" fill="rgb(239,186,37)" fg:x="6254" fg:w="1291"/><text x="11.8022%" y="495.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1,291 samples, 2.38%)</title><rect x="11.5522%" y="469" width="2.3847%" height="15" fill="rgb(252,136,39)" fg:x="6254" fg:w="1291"/><text x="11.8022%" y="479.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="13.9129%" y="453" width="0.0240%" height="15" fill="rgb(223,213,32)" fg:x="7532" fg:w="13"/><text x="14.1629%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="13.9129%" y="437" width="0.0240%" height="15" fill="rgb(233,115,5)" fg:x="7532" fg:w="13"/><text x="14.1629%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (13 samples, 0.02%)</title><rect x="13.9129%" y="421" width="0.0240%" height="15" fill="rgb(207,226,44)" fg:x="7532" fg:w="13"/><text x="14.1629%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.02%)</title><rect x="13.9129%" y="405" width="0.0240%" height="15" fill="rgb(208,126,0)" fg:x="7532" fg:w="13"/><text x="14.1629%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (13 samples, 0.02%)</title><rect x="13.9129%" y="389" width="0.0240%" height="15" fill="rgb(244,66,21)" fg:x="7532" fg:w="13"/><text x="14.1629%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.02%)</title><rect x="13.9129%" y="373" width="0.0240%" height="15" fill="rgb(222,97,12)" fg:x="7532" fg:w="13"/><text x="14.1629%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (13 samples, 0.02%)</title><rect x="13.9129%" y="357" width="0.0240%" height="15" fill="rgb(219,213,19)" fg:x="7532" fg:w="13"/><text x="14.1629%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (13 samples, 0.02%)</title><rect x="13.9129%" y="341" width="0.0240%" height="15" fill="rgb(252,169,30)" fg:x="7532" fg:w="13"/><text x="14.1629%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (10 samples, 0.02%)</title><rect x="13.9720%" y="469" width="0.0185%" height="15" fill="rgb(206,32,51)" fg:x="7564" fg:w="10"/><text x="14.2220%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (13 samples, 0.02%)</title><rect x="13.9720%" y="485" width="0.0240%" height="15" fill="rgb(250,172,42)" fg:x="7564" fg:w="13"/><text x="14.2220%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (16 samples, 0.03%)</title><rect x="13.9978%" y="485" width="0.0296%" height="15" fill="rgb(209,34,43)" fg:x="7578" fg:w="16"/><text x="14.2478%" y="495.50"></text></g><g><title>core::cmp::PartialOrd::ge (16 samples, 0.03%)</title><rect x="13.9978%" y="469" width="0.0296%" height="15" fill="rgb(223,11,35)" fg:x="7578" fg:w="16"/><text x="14.2478%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (16 samples, 0.03%)</title><rect x="13.9978%" y="453" width="0.0296%" height="15" fill="rgb(251,219,26)" fg:x="7578" fg:w="16"/><text x="14.2478%" y="463.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (16 samples, 0.03%)</title><rect x="13.9978%" y="437" width="0.0296%" height="15" fill="rgb(231,119,3)" fg:x="7578" fg:w="16"/><text x="14.2478%" y="447.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (16 samples, 0.03%)</title><rect x="13.9978%" y="421" width="0.0296%" height="15" fill="rgb(216,97,11)" fg:x="7578" fg:w="16"/><text x="14.2478%" y="431.50"></text></g><g><title>__memcmp_sse4_1 (10 samples, 0.02%)</title><rect x="14.0089%" y="405" width="0.0185%" height="15" fill="rgb(223,59,9)" fg:x="7584" fg:w="10"/><text x="14.2589%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.01%)</title><rect x="14.1456%" y="389" width="0.0111%" height="15" fill="rgb(233,93,31)" fg:x="7658" fg:w="6"/><text x="14.3956%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="14.1456%" y="373" width="0.0111%" height="15" fill="rgb(239,81,33)" fg:x="7658" fg:w="6"/><text x="14.3956%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (14 samples, 0.03%)</title><rect x="14.1401%" y="421" width="0.0259%" height="15" fill="rgb(213,120,34)" fg:x="7655" fg:w="14"/><text x="14.3901%" y="431.50"></text></g><g><title>yakvdb::disk::block::get_u32 (13 samples, 0.02%)</title><rect x="14.1419%" y="405" width="0.0240%" height="15" fill="rgb(243,49,53)" fg:x="7656" fg:w="13"/><text x="14.3919%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (62 samples, 0.11%)</title><rect x="14.0865%" y="437" width="0.1145%" height="15" fill="rgb(247,216,33)" fg:x="7626" fg:w="62"/><text x="14.3365%" y="447.50"></text></g><g><title>yakvdb::disk::block::get_u32 (19 samples, 0.04%)</title><rect x="14.1659%" y="421" width="0.0351%" height="15" fill="rgb(226,26,14)" fg:x="7669" fg:w="19"/><text x="14.4159%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.02%)</title><rect x="14.1825%" y="405" width="0.0185%" height="15" fill="rgb(215,49,53)" fg:x="7678" fg:w="10"/><text x="14.4325%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.02%)</title><rect x="14.1825%" y="389" width="0.0185%" height="15" fill="rgb(245,162,40)" fg:x="7678" fg:w="10"/><text x="14.4325%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.03%)</title><rect x="14.2010%" y="437" width="0.0332%" height="15" fill="rgb(229,68,17)" fg:x="7688" fg:w="18"/><text x="14.4510%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key::{{closure}} (14 samples, 0.03%)</title><rect x="14.2084%" y="421" width="0.0259%" height="15" fill="rgb(213,182,10)" fg:x="7692" fg:w="14"/><text x="14.4584%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.01%)</title><rect x="14.2195%" y="405" width="0.0148%" height="15" fill="rgb(245,125,30)" fg:x="7698" fg:w="8"/><text x="14.4695%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.01%)</title><rect x="14.2195%" y="389" width="0.0148%" height="15" fill="rgb(232,202,2)" fg:x="7698" fg:w="8"/><text x="14.4695%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (84 samples, 0.16%)</title><rect x="14.0846%" y="469" width="0.1552%" height="15" fill="rgb(237,140,51)" fg:x="7625" fg:w="84"/><text x="14.3346%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (84 samples, 0.16%)</title><rect x="14.0846%" y="453" width="0.1552%" height="15" fill="rgb(236,157,25)" fg:x="7625" fg:w="84"/><text x="14.3346%" y="463.50"></text></g><g><title>__memcmp_sse4_1 (44 samples, 0.08%)</title><rect x="14.2601%" y="421" width="0.0813%" height="15" fill="rgb(219,209,0)" fg:x="7720" fg:w="44"/><text x="14.5101%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (65 samples, 0.12%)</title><rect x="14.2398%" y="469" width="0.1201%" height="15" fill="rgb(240,116,54)" fg:x="7709" fg:w="65"/><text x="14.4898%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (65 samples, 0.12%)</title><rect x="14.2398%" y="453" width="0.1201%" height="15" fill="rgb(216,10,36)" fg:x="7709" fg:w="65"/><text x="14.4898%" y="463.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (65 samples, 0.12%)</title><rect x="14.2398%" y="437" width="0.1201%" height="15" fill="rgb(222,72,44)" fg:x="7709" fg:w="65"/><text x="14.4898%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (10 samples, 0.02%)</title><rect x="14.3414%" y="421" width="0.0185%" height="15" fill="rgb(232,159,9)" fg:x="7764" fg:w="10"/><text x="14.5914%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (218 samples, 0.40%)</title><rect x="13.9646%" y="501" width="0.4027%" height="15" fill="rgb(210,39,32)" fg:x="7560" fg:w="218"/><text x="14.2146%" y="511.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (184 samples, 0.34%)</title><rect x="14.0274%" y="485" width="0.3399%" height="15" fill="rgb(216,194,45)" fg:x="7594" fg:w="184"/><text x="14.2774%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (6 samples, 0.01%)</title><rect x="14.7589%" y="293" width="0.0111%" height="15" fill="rgb(218,18,35)" fg:x="7990" fg:w="6"/><text x="15.0089%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (6 samples, 0.01%)</title><rect x="14.7589%" y="277" width="0.0111%" height="15" fill="rgb(207,83,51)" fg:x="7990" fg:w="6"/><text x="15.0089%" y="287.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (6 samples, 0.01%)</title><rect x="14.7589%" y="261" width="0.0111%" height="15" fill="rgb(225,63,43)" fg:x="7990" fg:w="6"/><text x="15.0089%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (22 samples, 0.04%)</title><rect x="14.7699%" y="293" width="0.0406%" height="15" fill="rgb(207,57,36)" fg:x="7996" fg:w="22"/><text x="15.0199%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.04%)</title><rect x="14.7699%" y="277" width="0.0406%" height="15" fill="rgb(216,99,33)" fg:x="7996" fg:w="22"/><text x="15.0199%" y="287.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (49 samples, 0.09%)</title><rect x="14.7219%" y="325" width="0.0905%" height="15" fill="rgb(225,42,16)" fg:x="7970" fg:w="49"/><text x="14.9719%" y="335.50"></text></g><g><title>yakvdb::disk::block::get_u32 (29 samples, 0.05%)</title><rect x="14.7589%" y="309" width="0.0536%" height="15" fill="rgb(220,201,45)" fg:x="7990" fg:w="29"/><text x="15.0089%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (19 samples, 0.04%)</title><rect x="14.8457%" y="309" width="0.0351%" height="15" fill="rgb(225,33,4)" fg:x="8037" fg:w="19"/><text x="15.0957%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (19 samples, 0.04%)</title><rect x="14.8457%" y="293" width="0.0351%" height="15" fill="rgb(224,33,50)" fg:x="8037" fg:w="19"/><text x="15.0957%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (19 samples, 0.04%)</title><rect x="14.8457%" y="277" width="0.0351%" height="15" fill="rgb(246,198,51)" fg:x="8037" fg:w="19"/><text x="15.0957%" y="287.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (314 samples, 0.58%)</title><rect x="14.3839%" y="373" width="0.5800%" height="15" fill="rgb(205,22,4)" fg:x="7787" fg:w="314"/><text x="14.6339%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (222 samples, 0.41%)</title><rect x="14.5538%" y="357" width="0.4101%" height="15" fill="rgb(206,3,8)" fg:x="7879" fg:w="222"/><text x="14.8038%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (221 samples, 0.41%)</title><rect x="14.5557%" y="341" width="0.4082%" height="15" fill="rgb(251,23,15)" fg:x="7880" fg:w="221"/><text x="14.8057%" y="351.50"></text></g><g><title>yakvdb::disk::block::get_u32 (82 samples, 0.15%)</title><rect x="14.8124%" y="325" width="0.1515%" height="15" fill="rgb(252,88,28)" fg:x="8019" fg:w="82"/><text x="15.0624%" y="335.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (43 samples, 0.08%)</title><rect x="14.8845%" y="309" width="0.0794%" height="15" fill="rgb(212,127,14)" fg:x="8058" fg:w="43"/><text x="15.1345%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (43 samples, 0.08%)</title><rect x="14.8845%" y="293" width="0.0794%" height="15" fill="rgb(247,145,37)" fg:x="8058" fg:w="43"/><text x="15.1345%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (330 samples, 0.61%)</title><rect x="14.3839%" y="421" width="0.6096%" height="15" fill="rgb(209,117,53)" fg:x="7787" fg:w="330"/><text x="14.6339%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (330 samples, 0.61%)</title><rect x="14.3839%" y="405" width="0.6096%" height="15" fill="rgb(212,90,42)" fg:x="7787" fg:w="330"/><text x="14.6339%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (330 samples, 0.61%)</title><rect x="14.3839%" y="389" width="0.6096%" height="15" fill="rgb(218,164,37)" fg:x="7787" fg:w="330"/><text x="14.6339%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16 samples, 0.03%)</title><rect x="14.9639%" y="373" width="0.0296%" height="15" fill="rgb(246,65,34)" fg:x="8101" fg:w="16"/><text x="15.2139%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16 samples, 0.03%)</title><rect x="14.9639%" y="357" width="0.0296%" height="15" fill="rgb(231,100,33)" fg:x="8101" fg:w="16"/><text x="15.2139%" y="367.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (14 samples, 0.03%)</title><rect x="14.9676%" y="341" width="0.0259%" height="15" fill="rgb(228,126,14)" fg:x="8103" fg:w="14"/><text x="15.2176%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (14 samples, 0.03%)</title><rect x="14.9676%" y="325" width="0.0259%" height="15" fill="rgb(215,173,21)" fg:x="8103" fg:w="14"/><text x="15.2176%" y="335.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::fits (343 samples, 0.63%)</title><rect x="14.3673%" y="501" width="0.6336%" height="15" fill="rgb(210,6,40)" fg:x="7778" fg:w="343"/><text x="14.6173%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (343 samples, 0.63%)</title><rect x="14.3673%" y="485" width="0.6336%" height="15" fill="rgb(212,48,18)" fg:x="7778" fg:w="343"/><text x="14.6173%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (334 samples, 0.62%)</title><rect x="14.3839%" y="469" width="0.6170%" height="15" fill="rgb(230,214,11)" fg:x="7787" fg:w="334"/><text x="14.6339%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (334 samples, 0.62%)</title><rect x="14.3839%" y="453" width="0.6170%" height="15" fill="rgb(254,105,39)" fg:x="7787" fg:w="334"/><text x="14.6339%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (334 samples, 0.62%)</title><rect x="14.3839%" y="437" width="0.6170%" height="15" fill="rgb(245,158,5)" fg:x="7787" fg:w="334"/><text x="14.6339%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (6 samples, 0.01%)</title><rect x="15.0008%" y="501" width="0.0111%" height="15" fill="rgb(249,208,11)" fg:x="8121" fg:w="6"/><text x="15.2508%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (9 samples, 0.02%)</title><rect x="15.0119%" y="501" width="0.0166%" height="15" fill="rgb(210,39,28)" fg:x="8127" fg:w="9"/><text x="15.2619%" y="511.50"></text></g><g><title>__memcpy_sse2_unaligned (9 samples, 0.02%)</title><rect x="15.0359%" y="469" width="0.0166%" height="15" fill="rgb(211,56,53)" fg:x="8140" fg:w="9"/><text x="15.2859%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (44 samples, 0.08%)</title><rect x="15.0285%" y="501" width="0.0813%" height="15" fill="rgb(226,201,30)" fg:x="8136" fg:w="44"/><text x="15.2785%" y="511.50"></text></g><g><title>core::intrinsics::copy (40 samples, 0.07%)</title><rect x="15.0359%" y="485" width="0.0739%" height="15" fill="rgb(239,101,34)" fg:x="8140" fg:w="40"/><text x="15.2859%" y="495.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (31 samples, 0.06%)</title><rect x="15.0526%" y="469" width="0.0573%" height="15" fill="rgb(226,209,5)" fg:x="8149" fg:w="31"/><text x="15.3026%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (15 samples, 0.03%)</title><rect x="15.1560%" y="357" width="0.0277%" height="15" fill="rgb(250,105,47)" fg:x="8205" fg:w="15"/><text x="15.4060%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (15 samples, 0.03%)</title><rect x="15.1560%" y="341" width="0.0277%" height="15" fill="rgb(230,72,3)" fg:x="8205" fg:w="15"/><text x="15.4060%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (15 samples, 0.03%)</title><rect x="15.1560%" y="325" width="0.0277%" height="15" fill="rgb(232,218,39)" fg:x="8205" fg:w="15"/><text x="15.4060%" y="335.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (24 samples, 0.04%)</title><rect x="16.2200%" y="293" width="0.0443%" height="15" fill="rgb(248,166,6)" fg:x="8781" fg:w="24"/><text x="16.4700%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (22 samples, 0.04%)</title><rect x="16.3216%" y="277" width="0.0406%" height="15" fill="rgb(247,89,20)" fg:x="8836" fg:w="22"/><text x="16.5716%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.04%)</title><rect x="16.3216%" y="261" width="0.0406%" height="15" fill="rgb(248,130,54)" fg:x="8836" fg:w="22"/><text x="16.5716%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (707 samples, 1.31%)</title><rect x="15.1560%" y="405" width="1.3059%" height="15" fill="rgb(234,196,4)" fg:x="8205" fg:w="707"/><text x="15.4060%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (707 samples, 1.31%)</title><rect x="15.1560%" y="389" width="1.3059%" height="15" fill="rgb(250,143,31)" fg:x="8205" fg:w="707"/><text x="15.4060%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (707 samples, 1.31%)</title><rect x="15.1560%" y="373" width="1.3059%" height="15" fill="rgb(211,110,34)" fg:x="8205" fg:w="707"/><text x="15.4060%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (692 samples, 1.28%)</title><rect x="15.1837%" y="357" width="1.2782%" height="15" fill="rgb(215,124,48)" fg:x="8220" fg:w="692"/><text x="15.4337%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (261 samples, 0.48%)</title><rect x="15.9798%" y="341" width="0.4821%" height="15" fill="rgb(216,46,13)" fg:x="8651" fg:w="261"/><text x="16.2298%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (261 samples, 0.48%)</title><rect x="15.9798%" y="325" width="0.4821%" height="15" fill="rgb(205,184,25)" fg:x="8651" fg:w="261"/><text x="16.2298%" y="335.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (242 samples, 0.45%)</title><rect x="16.0149%" y="309" width="0.4470%" height="15" fill="rgb(228,1,10)" fg:x="8670" fg:w="242"/><text x="16.2649%" y="319.50"></text></g><g><title>yakvdb::disk::block::get_u32 (107 samples, 0.20%)</title><rect x="16.2643%" y="293" width="0.1976%" height="15" fill="rgb(213,116,27)" fg:x="8805" fg:w="107"/><text x="16.5143%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (54 samples, 0.10%)</title><rect x="16.3622%" y="277" width="0.0997%" height="15" fill="rgb(241,95,50)" fg:x="8858" fg:w="54"/><text x="16.6122%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (54 samples, 0.10%)</title><rect x="16.3622%" y="261" width="0.0997%" height="15" fill="rgb(238,48,32)" fg:x="8858" fg:w="54"/><text x="16.6122%" y="271.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.01%)</title><rect x="16.5875%" y="245" width="0.0129%" height="15" fill="rgb(235,113,49)" fg:x="8980" fg:w="7"/><text x="16.8375%" y="255.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (38 samples, 0.07%)</title><rect x="16.6079%" y="245" width="0.0702%" height="15" fill="rgb(205,127,43)" fg:x="8991" fg:w="38"/><text x="16.8579%" y="255.50"></text></g><g><title>_int_free (52 samples, 0.10%)</title><rect x="16.6781%" y="245" width="0.0961%" height="15" fill="rgb(250,162,2)" fg:x="9029" fg:w="52"/><text x="16.9281%" y="255.50"></text></g><g><title>__GI___libc_realloc (270 samples, 0.50%)</title><rect x="16.5137%" y="277" width="0.4987%" height="15" fill="rgb(220,13,41)" fg:x="8940" fg:w="270"/><text x="16.7637%" y="287.50"></text></g><g><title>_int_realloc (251 samples, 0.46%)</title><rect x="16.5488%" y="261" width="0.4636%" height="15" fill="rgb(249,221,25)" fg:x="8959" fg:w="251"/><text x="16.7988%" y="271.50"></text></g><g><title>_int_malloc (129 samples, 0.24%)</title><rect x="16.7741%" y="245" width="0.2383%" height="15" fill="rgb(215,208,19)" fg:x="9081" fg:w="129"/><text x="17.0241%" y="255.50"></text></g><g><title>unlink_chunk.isra.0 (16 samples, 0.03%)</title><rect x="16.9828%" y="229" width="0.0296%" height="15" fill="rgb(236,175,2)" fg:x="9194" fg:w="16"/><text x="17.2328%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (281 samples, 0.52%)</title><rect x="16.5044%" y="325" width="0.5191%" height="15" fill="rgb(241,52,2)" fg:x="8935" fg:w="281"/><text x="16.7544%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (281 samples, 0.52%)</title><rect x="16.5044%" y="309" width="0.5191%" height="15" fill="rgb(248,140,14)" fg:x="8935" fg:w="281"/><text x="16.7544%" y="319.50"></text></g><g><title>alloc::alloc::realloc (281 samples, 0.52%)</title><rect x="16.5044%" y="293" width="0.5191%" height="15" fill="rgb(253,22,42)" fg:x="8935" fg:w="281"/><text x="16.7544%" y="303.50"></text></g><g><title>__rdl_realloc (6 samples, 0.01%)</title><rect x="17.0124%" y="277" width="0.0111%" height="15" fill="rgb(234,61,47)" fg:x="9210" fg:w="6"/><text x="17.2624%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (299 samples, 0.55%)</title><rect x="16.4896%" y="341" width="0.5523%" height="15" fill="rgb(208,226,15)" fg:x="8927" fg:w="299"/><text x="16.7396%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (10 samples, 0.02%)</title><rect x="17.0235%" y="325" width="0.0185%" height="15" fill="rgb(217,221,4)" fg:x="9216" fg:w="10"/><text x="17.2735%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (318 samples, 0.59%)</title><rect x="16.4619%" y="405" width="0.5874%" height="15" fill="rgb(212,174,34)" fg:x="8912" fg:w="318"/><text x="16.7119%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (318 samples, 0.59%)</title><rect x="16.4619%" y="389" width="0.5874%" height="15" fill="rgb(253,83,4)" fg:x="8912" fg:w="318"/><text x="16.7119%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (314 samples, 0.58%)</title><rect x="16.4693%" y="373" width="0.5800%" height="15" fill="rgb(250,195,49)" fg:x="8916" fg:w="314"/><text x="16.7193%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (314 samples, 0.58%)</title><rect x="16.4693%" y="357" width="0.5800%" height="15" fill="rgb(241,192,25)" fg:x="8916" fg:w="314"/><text x="16.7193%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,147 samples, 2.12%)</title><rect x="15.1209%" y="437" width="2.1187%" height="15" fill="rgb(208,124,10)" fg:x="8186" fg:w="1147"/><text x="15.3709%" y="447.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,147 samples, 2.12%)</title><rect x="15.1209%" y="421" width="2.1187%" height="15" fill="rgb(222,33,0)" fg:x="8186" fg:w="1147"/><text x="15.3709%" y="431.50">a..</text></g><g><title>core::ptr::write (103 samples, 0.19%)</title><rect x="17.0493%" y="405" width="0.1903%" height="15" fill="rgb(234,209,28)" fg:x="9230" fg:w="103"/><text x="17.2993%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="17.2396%" y="437" width="0.0185%" height="15" fill="rgb(224,11,23)" fg:x="9333" fg:w="10"/><text x="17.4896%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (10 samples, 0.02%)</title><rect x="17.2396%" y="421" width="0.0185%" height="15" fill="rgb(232,99,1)" fg:x="9333" fg:w="10"/><text x="17.4896%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.02%)</title><rect x="17.2396%" y="405" width="0.0185%" height="15" fill="rgb(237,95,45)" fg:x="9333" fg:w="10"/><text x="17.4896%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (10 samples, 0.02%)</title><rect x="17.2396%" y="389" width="0.0185%" height="15" fill="rgb(208,109,11)" fg:x="9333" fg:w="10"/><text x="17.4896%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,173 samples, 2.17%)</title><rect x="15.1135%" y="501" width="2.1667%" height="15" fill="rgb(216,190,48)" fg:x="8182" fg:w="1173"/><text x="15.3635%" y="511.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,173 samples, 2.17%)</title><rect x="15.1135%" y="485" width="2.1667%" height="15" fill="rgb(251,171,36)" fg:x="8182" fg:w="1173"/><text x="15.3635%" y="495.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,172 samples, 2.16%)</title><rect x="15.1154%" y="469" width="2.1649%" height="15" fill="rgb(230,62,22)" fg:x="8183" fg:w="1172"/><text x="15.3654%" y="479.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,170 samples, 2.16%)</title><rect x="15.1190%" y="453" width="2.1612%" height="15" fill="rgb(225,114,35)" fg:x="8185" fg:w="1170"/><text x="15.3690%" y="463.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.02%)</title><rect x="17.2581%" y="437" width="0.0222%" height="15" fill="rgb(215,118,42)" fg:x="9343" fg:w="12"/><text x="17.5081%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="17.2581%" y="421" width="0.0222%" height="15" fill="rgb(243,119,21)" fg:x="9343" fg:w="12"/><text x="17.5081%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="17.2581%" y="405" width="0.0222%" height="15" fill="rgb(252,177,53)" fg:x="9343" fg:w="12"/><text x="17.5081%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.02%)</title><rect x="17.2581%" y="389" width="0.0222%" height="15" fill="rgb(237,209,29)" fg:x="9343" fg:w="12"/><text x="17.5081%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="17.2581%" y="373" width="0.0222%" height="15" fill="rgb(212,65,23)" fg:x="9343" fg:w="12"/><text x="17.5081%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="17.2581%" y="357" width="0.0222%" height="15" fill="rgb(230,222,46)" fg:x="9343" fg:w="12"/><text x="17.5081%" y="367.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="17.2581%" y="341" width="0.0222%" height="15" fill="rgb(215,135,32)" fg:x="9343" fg:w="12"/><text x="17.5081%" y="351.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.02%)</title><rect x="17.2581%" y="325" width="0.0222%" height="15" fill="rgb(246,101,22)" fg:x="9343" fg:w="12"/><text x="17.5081%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.04%)</title><rect x="17.2821%" y="453" width="0.0388%" height="15" fill="rgb(206,107,13)" fg:x="9356" fg:w="21"/><text x="17.5321%" y="463.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (36 samples, 0.07%)</title><rect x="17.4077%" y="373" width="0.0665%" height="15" fill="rgb(250,100,44)" fg:x="9424" fg:w="36"/><text x="17.6577%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (36 samples, 0.07%)</title><rect x="17.4077%" y="357" width="0.0665%" height="15" fill="rgb(231,147,38)" fg:x="9424" fg:w="36"/><text x="17.6577%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (36 samples, 0.07%)</title><rect x="17.4077%" y="341" width="0.0665%" height="15" fill="rgb(229,8,40)" fg:x="9424" fg:w="36"/><text x="17.6577%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (59 samples, 0.11%)</title><rect x="17.4742%" y="373" width="0.1090%" height="15" fill="rgb(221,135,30)" fg:x="9460" fg:w="59"/><text x="17.7242%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (59 samples, 0.11%)</title><rect x="17.4742%" y="357" width="0.1090%" height="15" fill="rgb(249,193,18)" fg:x="9460" fg:w="59"/><text x="17.7242%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (188 samples, 0.35%)</title><rect x="17.3209%" y="453" width="0.3473%" height="15" fill="rgb(209,133,39)" fg:x="9377" fg:w="188"/><text x="17.5709%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (188 samples, 0.35%)</title><rect x="17.3209%" y="437" width="0.3473%" height="15" fill="rgb(232,100,14)" fg:x="9377" fg:w="188"/><text x="17.5709%" y="447.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (188 samples, 0.35%)</title><rect x="17.3209%" y="421" width="0.3473%" height="15" fill="rgb(224,185,1)" fg:x="9377" fg:w="188"/><text x="17.5709%" y="431.50"></text></g><g><title>yakvdb::disk::block::put_slot (161 samples, 0.30%)</title><rect x="17.3707%" y="405" width="0.2974%" height="15" fill="rgb(223,139,8)" fg:x="9404" fg:w="161"/><text x="17.6207%" y="415.50"></text></g><g><title>yakvdb::disk::block::put_u32 (152 samples, 0.28%)</title><rect x="17.3874%" y="389" width="0.2808%" height="15" fill="rgb(232,213,38)" fg:x="9413" fg:w="152"/><text x="17.6374%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (46 samples, 0.08%)</title><rect x="17.5832%" y="373" width="0.0850%" height="15" fill="rgb(207,94,22)" fg:x="9519" fg:w="46"/><text x="17.8332%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (46 samples, 0.08%)</title><rect x="17.5832%" y="357" width="0.0850%" height="15" fill="rgb(219,183,54)" fg:x="9519" fg:w="46"/><text x="17.8332%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.03%)</title><rect x="17.6681%" y="357" width="0.0314%" height="15" fill="rgb(216,185,54)" fg:x="9565" fg:w="17"/><text x="17.9181%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.03%)</title><rect x="17.6700%" y="341" width="0.0296%" height="15" fill="rgb(254,217,39)" fg:x="9566" fg:w="16"/><text x="17.9200%" y="351.50"></text></g><g><title>_int_free (11 samples, 0.02%)</title><rect x="17.6792%" y="325" width="0.0203%" height="15" fill="rgb(240,178,23)" fg:x="9571" fg:w="11"/><text x="17.9292%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (230 samples, 0.42%)</title><rect x="17.2802%" y="501" width="0.4248%" height="15" fill="rgb(218,11,47)" fg:x="9355" fg:w="230"/><text x="17.5302%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (230 samples, 0.42%)</title><rect x="17.2802%" y="485" width="0.4248%" height="15" fill="rgb(218,51,51)" fg:x="9355" fg:w="230"/><text x="17.5302%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (229 samples, 0.42%)</title><rect x="17.2821%" y="469" width="0.4230%" height="15" fill="rgb(238,126,27)" fg:x="9356" fg:w="229"/><text x="17.5321%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;yakvdb::api::page::Slot&gt;&gt; (20 samples, 0.04%)</title><rect x="17.6681%" y="453" width="0.0369%" height="15" fill="rgb(249,202,22)" fg:x="9565" fg:w="20"/><text x="17.9181%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.04%)</title><rect x="17.6681%" y="437" width="0.0369%" height="15" fill="rgb(254,195,49)" fg:x="9565" fg:w="20"/><text x="17.9181%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;yakvdb::api::page::Slot,alloc::alloc::Global&gt;&gt; (20 samples, 0.04%)</title><rect x="17.6681%" y="421" width="0.0369%" height="15" fill="rgb(208,123,14)" fg:x="9565" fg:w="20"/><text x="17.9181%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.04%)</title><rect x="17.6681%" y="405" width="0.0369%" height="15" fill="rgb(224,200,8)" fg:x="9565" fg:w="20"/><text x="17.9181%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;yakvdb::api::page::Slot&gt;&gt; (20 samples, 0.04%)</title><rect x="17.6681%" y="389" width="0.0369%" height="15" fill="rgb(217,61,36)" fg:x="9565" fg:w="20"/><text x="17.9181%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.04%)</title><rect x="17.6681%" y="373" width="0.0369%" height="15" fill="rgb(206,35,45)" fg:x="9565" fg:w="20"/><text x="17.9181%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (58 samples, 0.11%)</title><rect x="17.7051%" y="501" width="0.1071%" height="15" fill="rgb(217,65,33)" fg:x="9585" fg:w="58"/><text x="17.9551%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (58 samples, 0.11%)</title><rect x="17.7051%" y="485" width="0.1071%" height="15" fill="rgb(222,158,48)" fg:x="9585" fg:w="58"/><text x="17.9551%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (58 samples, 0.11%)</title><rect x="17.7051%" y="469" width="0.1071%" height="15" fill="rgb(254,2,54)" fg:x="9585" fg:w="58"/><text x="17.9551%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (58 samples, 0.11%)</title><rect x="17.7051%" y="453" width="0.1071%" height="15" fill="rgb(250,143,38)" fg:x="9585" fg:w="58"/><text x="17.9551%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (58 samples, 0.11%)</title><rect x="17.7051%" y="437" width="0.1071%" height="15" fill="rgb(248,25,0)" fg:x="9585" fg:w="58"/><text x="17.9551%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (42 samples, 0.08%)</title><rect x="17.7346%" y="421" width="0.0776%" height="15" fill="rgb(206,152,27)" fg:x="9601" fg:w="42"/><text x="17.9846%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::{{closure}} (42 samples, 0.08%)</title><rect x="17.7346%" y="405" width="0.0776%" height="15" fill="rgb(240,77,30)" fg:x="9601" fg:w="42"/><text x="17.9846%" y="415.50"></text></g><g><title>core::cmp::min_by (42 samples, 0.08%)</title><rect x="17.7346%" y="389" width="0.0776%" height="15" fill="rgb(231,5,3)" fg:x="9601" fg:w="42"/><text x="17.9846%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.01%)</title><rect x="17.8141%" y="485" width="0.0129%" height="15" fill="rgb(207,226,32)" fg:x="9644" fg:w="7"/><text x="18.0641%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="17.8141%" y="469" width="0.0129%" height="15" fill="rgb(222,207,47)" fg:x="9644" fg:w="7"/><text x="18.0641%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::put_val (2,102 samples, 3.88%)</title><rect x="13.9479%" y="533" width="3.8827%" height="15" fill="rgb(229,115,45)" fg:x="7551" fg:w="2102"/><text x="14.1979%" y="543.50">&lt;yak..</text></g><g><title>yakvdb::disk::block::Block::put_entry (2,100 samples, 3.88%)</title><rect x="13.9516%" y="517" width="3.8790%" height="15" fill="rgb(224,191,6)" fg:x="7553" fg:w="2100"/><text x="14.2016%" y="527.50">yakv..</text></g><g><title>yakvdb::disk::block::put_slice (9 samples, 0.02%)</title><rect x="17.8141%" y="501" width="0.0166%" height="15" fill="rgb(230,227,24)" fg:x="9644" fg:w="9"/><text x="18.0641%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (8 samples, 0.01%)</title><rect x="17.8307%" y="533" width="0.0148%" height="15" fill="rgb(228,80,19)" fg:x="9653" fg:w="8"/><text x="18.0807%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="17.8565%" y="517" width="0.0148%" height="15" fill="rgb(247,229,0)" fg:x="9667" fg:w="8"/><text x="18.1065%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.02%)</title><rect x="17.9009%" y="325" width="0.0185%" height="15" fill="rgb(237,194,15)" fg:x="9691" fg:w="10"/><text x="18.1509%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (23 samples, 0.04%)</title><rect x="17.8824%" y="389" width="0.0425%" height="15" fill="rgb(219,203,20)" fg:x="9681" fg:w="23"/><text x="18.1324%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (23 samples, 0.04%)</title><rect x="17.8824%" y="373" width="0.0425%" height="15" fill="rgb(234,128,8)" fg:x="9681" fg:w="23"/><text x="18.1324%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (23 samples, 0.04%)</title><rect x="17.8824%" y="357" width="0.0425%" height="15" fill="rgb(248,202,8)" fg:x="9681" fg:w="23"/><text x="18.1324%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.02%)</title><rect x="17.9009%" y="341" width="0.0240%" height="15" fill="rgb(206,104,37)" fg:x="9691" fg:w="13"/><text x="18.1509%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.05%)</title><rect x="17.8787%" y="421" width="0.0499%" height="15" fill="rgb(223,8,27)" fg:x="9679" fg:w="27"/><text x="18.1287%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 0.05%)</title><rect x="17.8806%" y="405" width="0.0480%" height="15" fill="rgb(216,217,28)" fg:x="9680" fg:w="26"/><text x="18.1306%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.01%)</title><rect x="17.9434%" y="357" width="0.0129%" height="15" fill="rgb(249,199,1)" fg:x="9714" fg:w="7"/><text x="18.1934%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (6 samples, 0.01%)</title><rect x="17.9452%" y="341" width="0.0111%" height="15" fill="rgb(240,85,17)" fg:x="9715" fg:w="6"/><text x="18.1952%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (10 samples, 0.02%)</title><rect x="17.9434%" y="373" width="0.0185%" height="15" fill="rgb(206,108,45)" fg:x="9714" fg:w="10"/><text x="18.1934%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (18 samples, 0.03%)</title><rect x="17.9637%" y="373" width="0.0332%" height="15" fill="rgb(245,210,41)" fg:x="9725" fg:w="18"/><text x="18.2137%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (18 samples, 0.03%)</title><rect x="17.9637%" y="357" width="0.0332%" height="15" fill="rgb(206,13,37)" fg:x="9725" fg:w="18"/><text x="18.2137%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.03%)</title><rect x="17.9637%" y="341" width="0.0332%" height="15" fill="rgb(250,61,18)" fg:x="9725" fg:w="18"/><text x="18.2137%" y="351.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (68 samples, 0.13%)</title><rect x="17.8769%" y="485" width="0.1256%" height="15" fill="rgb(235,172,48)" fg:x="9678" fg:w="68"/><text x="18.1269%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (68 samples, 0.13%)</title><rect x="17.8769%" y="469" width="0.1256%" height="15" fill="rgb(249,201,17)" fg:x="9678" fg:w="68"/><text x="18.1269%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (68 samples, 0.13%)</title><rect x="17.8769%" y="453" width="0.1256%" height="15" fill="rgb(219,208,6)" fg:x="9678" fg:w="68"/><text x="18.1269%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (68 samples, 0.13%)</title><rect x="17.8769%" y="437" width="0.1256%" height="15" fill="rgb(248,31,23)" fg:x="9678" fg:w="68"/><text x="18.1269%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (40 samples, 0.07%)</title><rect x="17.9286%" y="421" width="0.0739%" height="15" fill="rgb(245,15,42)" fg:x="9706" fg:w="40"/><text x="18.1786%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.07%)</title><rect x="17.9286%" y="405" width="0.0739%" height="15" fill="rgb(222,217,39)" fg:x="9706" fg:w="40"/><text x="18.1786%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (40 samples, 0.07%)</title><rect x="17.9286%" y="389" width="0.0739%" height="15" fill="rgb(210,219,27)" fg:x="9706" fg:w="40"/><text x="18.1786%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (73 samples, 0.13%)</title><rect x="17.8750%" y="501" width="0.1348%" height="15" fill="rgb(252,166,36)" fg:x="9677" fg:w="73"/><text x="18.1250%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.02%)</title><rect x="18.0173%" y="325" width="0.0166%" height="15" fill="rgb(245,132,34)" fg:x="9754" fg:w="9"/><text x="18.2673%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.02%)</title><rect x="18.0431%" y="309" width="0.0203%" height="15" fill="rgb(236,54,3)" fg:x="9768" fg:w="11"/><text x="18.2931%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (27 samples, 0.05%)</title><rect x="18.0173%" y="373" width="0.0499%" height="15" fill="rgb(241,173,43)" fg:x="9754" fg:w="27"/><text x="18.2673%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (27 samples, 0.05%)</title><rect x="18.0173%" y="357" width="0.0499%" height="15" fill="rgb(215,190,9)" fg:x="9754" fg:w="27"/><text x="18.2673%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (27 samples, 0.05%)</title><rect x="18.0173%" y="341" width="0.0499%" height="15" fill="rgb(242,101,16)" fg:x="9754" fg:w="27"/><text x="18.2673%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.03%)</title><rect x="18.0339%" y="325" width="0.0332%" height="15" fill="rgb(223,190,21)" fg:x="9763" fg:w="18"/><text x="18.2839%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.05%)</title><rect x="18.0154%" y="405" width="0.0536%" height="15" fill="rgb(215,228,25)" fg:x="9753" fg:w="29"/><text x="18.2654%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29 samples, 0.05%)</title><rect x="18.0154%" y="389" width="0.0536%" height="15" fill="rgb(225,36,22)" fg:x="9753" fg:w="29"/><text x="18.2654%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (41 samples, 0.08%)</title><rect x="18.0154%" y="453" width="0.0757%" height="15" fill="rgb(251,106,46)" fg:x="9753" fg:w="41"/><text x="18.2654%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (41 samples, 0.08%)</title><rect x="18.0154%" y="437" width="0.0757%" height="15" fill="rgb(208,90,1)" fg:x="9753" fg:w="41"/><text x="18.2654%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (41 samples, 0.08%)</title><rect x="18.0154%" y="421" width="0.0757%" height="15" fill="rgb(243,10,4)" fg:x="9753" fg:w="41"/><text x="18.2654%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.02%)</title><rect x="18.0690%" y="405" width="0.0222%" height="15" fill="rgb(212,137,27)" fg:x="9782" fg:w="12"/><text x="18.3190%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.02%)</title><rect x="18.0690%" y="389" width="0.0222%" height="15" fill="rgb(231,220,49)" fg:x="9782" fg:w="12"/><text x="18.3190%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.02%)</title><rect x="18.0690%" y="373" width="0.0222%" height="15" fill="rgb(237,96,20)" fg:x="9782" fg:w="12"/><text x="18.3190%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.01%)</title><rect x="18.0985%" y="325" width="0.0129%" height="15" fill="rgb(239,229,30)" fg:x="9798" fg:w="7"/><text x="18.3485%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="18.1004%" y="309" width="0.0111%" height="15" fill="rgb(219,65,33)" fg:x="9799" fg:w="6"/><text x="18.3504%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.03%)</title><rect x="18.1152%" y="309" width="0.0314%" height="15" fill="rgb(243,134,7)" fg:x="9807" fg:w="17"/><text x="18.3652%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (33 samples, 0.06%)</title><rect x="18.0948%" y="373" width="0.0610%" height="15" fill="rgb(216,177,54)" fg:x="9796" fg:w="33"/><text x="18.3448%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (33 samples, 0.06%)</title><rect x="18.0948%" y="357" width="0.0610%" height="15" fill="rgb(211,160,20)" fg:x="9796" fg:w="33"/><text x="18.3448%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (33 samples, 0.06%)</title><rect x="18.0948%" y="341" width="0.0610%" height="15" fill="rgb(239,85,39)" fg:x="9796" fg:w="33"/><text x="18.3448%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.04%)</title><rect x="18.1115%" y="325" width="0.0443%" height="15" fill="rgb(232,125,22)" fg:x="9805" fg:w="24"/><text x="18.3615%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (36 samples, 0.07%)</title><rect x="18.0930%" y="405" width="0.0665%" height="15" fill="rgb(244,57,34)" fg:x="9795" fg:w="36"/><text x="18.3430%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (36 samples, 0.07%)</title><rect x="18.0930%" y="389" width="0.0665%" height="15" fill="rgb(214,203,32)" fg:x="9795" fg:w="36"/><text x="18.3430%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (7 samples, 0.01%)</title><rect x="18.1632%" y="357" width="0.0129%" height="15" fill="rgb(207,58,43)" fg:x="9833" fg:w="7"/><text x="18.4132%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18 samples, 0.03%)</title><rect x="18.1595%" y="405" width="0.0332%" height="15" fill="rgb(215,193,15)" fg:x="9831" fg:w="18"/><text x="18.4095%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.03%)</title><rect x="18.1595%" y="389" width="0.0332%" height="15" fill="rgb(232,15,44)" fg:x="9831" fg:w="18"/><text x="18.4095%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (18 samples, 0.03%)</title><rect x="18.1595%" y="373" width="0.0332%" height="15" fill="rgb(212,3,48)" fg:x="9831" fg:w="18"/><text x="18.4095%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (59 samples, 0.11%)</title><rect x="18.0911%" y="453" width="0.1090%" height="15" fill="rgb(218,128,7)" fg:x="9794" fg:w="59"/><text x="18.3411%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (59 samples, 0.11%)</title><rect x="18.0911%" y="437" width="0.1090%" height="15" fill="rgb(226,216,39)" fg:x="9794" fg:w="59"/><text x="18.3411%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (58 samples, 0.11%)</title><rect x="18.0930%" y="421" width="0.1071%" height="15" fill="rgb(243,47,51)" fg:x="9795" fg:w="58"/><text x="18.3430%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (18 samples, 0.03%)</title><rect x="18.2167%" y="437" width="0.0332%" height="15" fill="rgb(241,183,40)" fg:x="9862" fg:w="18"/><text x="18.4667%" y="447.50"></text></g><g><title>core::intrinsics::copy (16 samples, 0.03%)</title><rect x="18.2204%" y="421" width="0.0296%" height="15" fill="rgb(231,217,32)" fg:x="9864" fg:w="16"/><text x="18.4704%" y="431.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (14 samples, 0.03%)</title><rect x="18.2241%" y="405" width="0.0259%" height="15" fill="rgb(229,61,38)" fg:x="9866" fg:w="14"/><text x="18.4741%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (33 samples, 0.06%)</title><rect x="18.2888%" y="389" width="0.0610%" height="15" fill="rgb(225,210,5)" fg:x="9901" fg:w="33"/><text x="18.5388%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (23 samples, 0.04%)</title><rect x="18.3073%" y="373" width="0.0425%" height="15" fill="rgb(231,79,45)" fg:x="9911" fg:w="23"/><text x="18.5573%" y="383.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (23 samples, 0.04%)</title><rect x="18.3073%" y="357" width="0.0425%" height="15" fill="rgb(224,100,7)" fg:x="9911" fg:w="23"/><text x="18.5573%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (23 samples, 0.04%)</title><rect x="18.3073%" y="341" width="0.0425%" height="15" fill="rgb(241,198,18)" fg:x="9911" fg:w="23"/><text x="18.5573%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (23 samples, 0.04%)</title><rect x="18.3073%" y="325" width="0.0425%" height="15" fill="rgb(252,97,53)" fg:x="9911" fg:w="23"/><text x="18.5573%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (23 samples, 0.04%)</title><rect x="18.3073%" y="309" width="0.0425%" height="15" fill="rgb(220,88,7)" fg:x="9911" fg:w="23"/><text x="18.5573%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (76 samples, 0.14%)</title><rect x="18.2611%" y="437" width="0.1404%" height="15" fill="rgb(213,176,14)" fg:x="9886" fg:w="76"/><text x="18.5111%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (76 samples, 0.14%)</title><rect x="18.2611%" y="421" width="0.1404%" height="15" fill="rgb(246,73,7)" fg:x="9886" fg:w="76"/><text x="18.5111%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (76 samples, 0.14%)</title><rect x="18.2611%" y="405" width="0.1404%" height="15" fill="rgb(245,64,36)" fg:x="9886" fg:w="76"/><text x="18.5111%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.05%)</title><rect x="18.3497%" y="389" width="0.0517%" height="15" fill="rgb(245,80,10)" fg:x="9934" fg:w="28"/><text x="18.5997%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;alloc::vec::Vec&lt;u32&gt;&gt;&gt; (11 samples, 0.02%)</title><rect x="18.4015%" y="437" width="0.0203%" height="15" fill="rgb(232,107,50)" fg:x="9962" fg:w="11"/><text x="18.6515%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (11 samples, 0.02%)</title><rect x="18.4015%" y="421" width="0.0203%" height="15" fill="rgb(253,3,0)" fg:x="9962" fg:w="11"/><text x="18.6515%" y="431.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="18.4015%" y="405" width="0.0203%" height="15" fill="rgb(212,99,53)" fg:x="9962" fg:w="11"/><text x="18.6515%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (11 samples, 0.02%)</title><rect x="18.4015%" y="389" width="0.0203%" height="15" fill="rgb(249,111,54)" fg:x="9962" fg:w="11"/><text x="18.6515%" y="399.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (11 samples, 0.02%)</title><rect x="18.4015%" y="373" width="0.0203%" height="15" fill="rgb(249,55,30)" fg:x="9962" fg:w="11"/><text x="18.6515%" y="383.50"></text></g><g><title>core::mem::replace (11 samples, 0.02%)</title><rect x="18.4015%" y="357" width="0.0203%" height="15" fill="rgb(237,47,42)" fg:x="9962" fg:w="11"/><text x="18.6515%" y="367.50"></text></g><g><title>core::ptr::write (11 samples, 0.02%)</title><rect x="18.4015%" y="341" width="0.0203%" height="15" fill="rgb(211,20,18)" fg:x="9962" fg:w="11"/><text x="18.6515%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.02%)</title><rect x="18.4384%" y="293" width="0.0166%" height="15" fill="rgb(231,203,46)" fg:x="9982" fg:w="9"/><text x="18.6884%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.04%)</title><rect x="18.4218%" y="389" width="0.0388%" height="15" fill="rgb(237,142,3)" fg:x="9973" fg:w="21"/><text x="18.6718%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.04%)</title><rect x="18.4218%" y="373" width="0.0388%" height="15" fill="rgb(241,107,1)" fg:x="9973" fg:w="21"/><text x="18.6718%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="18.4273%" y="357" width="0.0332%" height="15" fill="rgb(229,83,13)" fg:x="9976" fg:w="18"/><text x="18.6773%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="18.4273%" y="341" width="0.0332%" height="15" fill="rgb(241,91,40)" fg:x="9976" fg:w="18"/><text x="18.6773%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="18.4273%" y="325" width="0.0332%" height="15" fill="rgb(225,3,45)" fg:x="9976" fg:w="18"/><text x="18.6773%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.02%)</title><rect x="18.4366%" y="309" width="0.0240%" height="15" fill="rgb(244,223,14)" fg:x="9981" fg:w="13"/><text x="18.6866%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (10 samples, 0.02%)</title><rect x="18.4753%" y="341" width="0.0185%" height="15" fill="rgb(224,124,37)" fg:x="10002" fg:w="10"/><text x="18.7253%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (10 samples, 0.02%)</title><rect x="18.4753%" y="325" width="0.0185%" height="15" fill="rgb(251,171,30)" fg:x="10002" fg:w="10"/><text x="18.7253%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (9 samples, 0.02%)</title><rect x="18.4772%" y="309" width="0.0166%" height="15" fill="rgb(236,46,54)" fg:x="10003" fg:w="9"/><text x="18.7272%" y="319.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (274 samples, 0.51%)</title><rect x="18.0099%" y="501" width="0.5061%" height="15" fill="rgb(245,213,5)" fg:x="9750" fg:w="274"/><text x="18.2599%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (274 samples, 0.51%)</title><rect x="18.0099%" y="485" width="0.5061%" height="15" fill="rgb(230,144,27)" fg:x="9750" fg:w="274"/><text x="18.2599%" y="495.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (272 samples, 0.50%)</title><rect x="18.0136%" y="469" width="0.5024%" height="15" fill="rgb(220,86,6)" fg:x="9752" fg:w="272"/><text x="18.2636%" y="479.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (171 samples, 0.32%)</title><rect x="18.2001%" y="453" width="0.3159%" height="15" fill="rgb(240,20,13)" fg:x="9853" fg:w="171"/><text x="18.4501%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (51 samples, 0.09%)</title><rect x="18.4218%" y="437" width="0.0942%" height="15" fill="rgb(217,89,34)" fg:x="9973" fg:w="51"/><text x="18.6718%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (51 samples, 0.09%)</title><rect x="18.4218%" y="421" width="0.0942%" height="15" fill="rgb(229,13,5)" fg:x="9973" fg:w="51"/><text x="18.6718%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (51 samples, 0.09%)</title><rect x="18.4218%" y="405" width="0.0942%" height="15" fill="rgb(244,67,35)" fg:x="9973" fg:w="51"/><text x="18.6718%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (30 samples, 0.06%)</title><rect x="18.4606%" y="389" width="0.0554%" height="15" fill="rgb(221,40,2)" fg:x="9994" fg:w="30"/><text x="18.7106%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (30 samples, 0.06%)</title><rect x="18.4606%" y="373" width="0.0554%" height="15" fill="rgb(237,157,21)" fg:x="9994" fg:w="30"/><text x="18.7106%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (30 samples, 0.06%)</title><rect x="18.4606%" y="357" width="0.0554%" height="15" fill="rgb(222,94,11)" fg:x="9994" fg:w="30"/><text x="18.7106%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (352 samples, 0.65%)</title><rect x="17.8713%" y="517" width="0.6502%" height="15" fill="rgb(249,113,6)" fg:x="9675" fg:w="352"/><text x="18.1213%" y="527.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.04%)</title><rect x="18.5437%" y="405" width="0.0388%" height="15" fill="rgb(238,137,36)" fg:x="10039" fg:w="21"/><text x="18.7937%" y="415.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.04%)</title><rect x="18.5437%" y="389" width="0.0388%" height="15" fill="rgb(210,102,26)" fg:x="10039" fg:w="21"/><text x="18.7937%" y="399.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.04%)</title><rect x="18.5437%" y="373" width="0.0388%" height="15" fill="rgb(218,30,30)" fg:x="10039" fg:w="21"/><text x="18.7937%" y="383.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.04%)</title><rect x="18.5437%" y="357" width="0.0388%" height="15" fill="rgb(214,67,26)" fg:x="10039" fg:w="21"/><text x="18.7937%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.04%)</title><rect x="18.5455%" y="341" width="0.0369%" height="15" fill="rgb(251,9,53)" fg:x="10040" fg:w="20"/><text x="18.7955%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.03%)</title><rect x="18.5511%" y="325" width="0.0314%" height="15" fill="rgb(228,204,25)" fg:x="10043" fg:w="17"/><text x="18.8011%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.05%)</title><rect x="18.5418%" y="453" width="0.0462%" height="15" fill="rgb(207,153,8)" fg:x="10038" fg:w="25"/><text x="18.7918%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (24 samples, 0.04%)</title><rect x="18.5437%" y="437" width="0.0443%" height="15" fill="rgb(242,9,16)" fg:x="10039" fg:w="24"/><text x="18.7937%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.04%)</title><rect x="18.5437%" y="421" width="0.0443%" height="15" fill="rgb(217,211,10)" fg:x="10039" fg:w="24"/><text x="18.7937%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.01%)</title><rect x="18.6010%" y="389" width="0.0111%" height="15" fill="rgb(219,228,52)" fg:x="10070" fg:w="6"/><text x="18.8510%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="18.6010%" y="373" width="0.0111%" height="15" fill="rgb(231,92,29)" fg:x="10070" fg:w="6"/><text x="18.8510%" y="383.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.01%)</title><rect x="18.6010%" y="357" width="0.0111%" height="15" fill="rgb(232,8,23)" fg:x="10070" fg:w="6"/><text x="18.8510%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.01%)</title><rect x="18.6010%" y="453" width="0.0148%" height="15" fill="rgb(216,211,34)" fg:x="10070" fg:w="8"/><text x="18.8510%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="18.6010%" y="437" width="0.0148%" height="15" fill="rgb(236,151,0)" fg:x="10070" fg:w="8"/><text x="18.8510%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.01%)</title><rect x="18.6010%" y="421" width="0.0148%" height="15" fill="rgb(209,168,3)" fg:x="10070" fg:w="8"/><text x="18.8510%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.01%)</title><rect x="18.6010%" y="405" width="0.0148%" height="15" fill="rgb(208,129,28)" fg:x="10070" fg:w="8"/><text x="18.8510%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (52 samples, 0.10%)</title><rect x="18.5289%" y="517" width="0.0961%" height="15" fill="rgb(229,78,22)" fg:x="10031" fg:w="52"/><text x="18.7789%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (52 samples, 0.10%)</title><rect x="18.5289%" y="501" width="0.0961%" height="15" fill="rgb(228,187,13)" fg:x="10031" fg:w="52"/><text x="18.7789%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 0.09%)</title><rect x="18.5308%" y="485" width="0.0942%" height="15" fill="rgb(240,119,24)" fg:x="10032" fg:w="51"/><text x="18.7808%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (46 samples, 0.08%)</title><rect x="18.5400%" y="469" width="0.0850%" height="15" fill="rgb(209,194,42)" fg:x="10037" fg:w="46"/><text x="18.7900%" y="479.50"></text></g><g><title>__GI___libc_free (16 samples, 0.03%)</title><rect x="18.6434%" y="389" width="0.0296%" height="15" fill="rgb(247,200,46)" fg:x="10093" fg:w="16"/><text x="18.8934%" y="399.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.01%)</title><rect x="18.6730%" y="389" width="0.0111%" height="15" fill="rgb(218,76,16)" fg:x="10109" fg:w="6"/><text x="18.9230%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6 samples, 0.01%)</title><rect x="18.6730%" y="373" width="0.0111%" height="15" fill="rgb(225,21,48)" fg:x="10109" fg:w="6"/><text x="18.9230%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.05%)</title><rect x="18.6434%" y="421" width="0.0462%" height="15" fill="rgb(239,223,50)" fg:x="10093" fg:w="25"/><text x="18.8934%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.05%)</title><rect x="18.6434%" y="405" width="0.0462%" height="15" fill="rgb(244,45,21)" fg:x="10093" fg:w="25"/><text x="18.8934%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u32&gt;&gt; (36 samples, 0.07%)</title><rect x="18.6250%" y="517" width="0.0665%" height="15" fill="rgb(232,33,43)" fg:x="10083" fg:w="36"/><text x="18.8750%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.07%)</title><rect x="18.6250%" y="501" width="0.0665%" height="15" fill="rgb(209,8,3)" fg:x="10083" fg:w="36"/><text x="18.8750%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u32,alloc::alloc::Global&gt;&gt; (36 samples, 0.07%)</title><rect x="18.6250%" y="485" width="0.0665%" height="15" fill="rgb(214,25,53)" fg:x="10083" fg:w="36"/><text x="18.8750%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.07%)</title><rect x="18.6250%" y="469" width="0.0665%" height="15" fill="rgb(254,186,54)" fg:x="10083" fg:w="36"/><text x="18.8750%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (26 samples, 0.05%)</title><rect x="18.6434%" y="453" width="0.0480%" height="15" fill="rgb(208,174,49)" fg:x="10093" fg:w="26"/><text x="18.8934%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.05%)</title><rect x="18.6434%" y="437" width="0.0480%" height="15" fill="rgb(233,191,51)" fg:x="10093" fg:w="26"/><text x="18.8934%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;std::collections::hash::set::HashSet&lt;u32&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="18.6915%" y="517" width="0.0111%" height="15" fill="rgb(222,134,10)" fg:x="10119" fg:w="6"/><text x="18.9415%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (6 samples, 0.01%)</title><rect x="18.6915%" y="501" width="0.0111%" height="15" fill="rgb(230,226,20)" fg:x="10119" fg:w="6"/><text x="18.9415%" y="511.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="18.6915%" y="485" width="0.0111%" height="15" fill="rgb(251,111,25)" fg:x="10119" fg:w="6"/><text x="18.9415%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.01%)</title><rect x="18.6915%" y="469" width="0.0111%" height="15" fill="rgb(224,40,46)" fg:x="10119" fg:w="6"/><text x="18.9415%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.01%)</title><rect x="18.6915%" y="453" width="0.0111%" height="15" fill="rgb(236,108,47)" fg:x="10119" fg:w="6"/><text x="18.9415%" y="463.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="18.6915%" y="437" width="0.0111%" height="15" fill="rgb(234,93,0)" fg:x="10119" fg:w="6"/><text x="18.9415%" y="447.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="18.6915%" y="421" width="0.0111%" height="15" fill="rgb(224,213,32)" fg:x="10119" fg:w="6"/><text x="18.9415%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (7 samples, 0.01%)</title><rect x="18.7136%" y="373" width="0.0129%" height="15" fill="rgb(251,11,48)" fg:x="10131" fg:w="7"/><text x="18.9636%" y="383.50"></text></g><g><title>core::intrinsics::write_bytes (7 samples, 0.01%)</title><rect x="18.7136%" y="357" width="0.0129%" height="15" fill="rgb(236,173,5)" fg:x="10131" fg:w="7"/><text x="18.9636%" y="367.50"></text></g><g><title>__memset_sse2_unaligned_erms (6 samples, 0.01%)</title><rect x="18.7155%" y="341" width="0.0111%" height="15" fill="rgb(230,95,12)" fg:x="10132" fg:w="6"/><text x="18.9655%" y="351.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (11 samples, 0.02%)</title><rect x="18.7081%" y="517" width="0.0203%" height="15" fill="rgb(232,209,1)" fg:x="10128" fg:w="11"/><text x="18.9581%" y="527.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (11 samples, 0.02%)</title><rect x="18.7081%" y="501" width="0.0203%" height="15" fill="rgb(232,6,1)" fg:x="10128" fg:w="11"/><text x="18.9581%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (11 samples, 0.02%)</title><rect x="18.7081%" y="485" width="0.0203%" height="15" fill="rgb(210,224,50)" fg:x="10128" fg:w="11"/><text x="18.9581%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (11 samples, 0.02%)</title><rect x="18.7081%" y="469" width="0.0203%" height="15" fill="rgb(228,127,35)" fg:x="10128" fg:w="11"/><text x="18.9581%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(u32,())&gt;,hashbrown::raw::RawTable&lt;(u32,())&gt;::clear::{{closure}}&gt;&gt; (11 samples, 0.02%)</title><rect x="18.7081%" y="453" width="0.0203%" height="15" fill="rgb(245,102,45)" fg:x="10128" fg:w="11"/><text x="18.9581%" y="463.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="18.7081%" y="437" width="0.0203%" height="15" fill="rgb(214,1,49)" fg:x="10128" fg:w="11"/><text x="18.9581%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (11 samples, 0.02%)</title><rect x="18.7081%" y="421" width="0.0203%" height="15" fill="rgb(226,163,40)" fg:x="10128" fg:w="11"/><text x="18.9581%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (11 samples, 0.02%)</title><rect x="18.7081%" y="405" width="0.0203%" height="15" fill="rgb(239,212,28)" fg:x="10128" fg:w="11"/><text x="18.9581%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (11 samples, 0.02%)</title><rect x="18.7081%" y="389" width="0.0203%" height="15" fill="rgb(220,20,13)" fg:x="10128" fg:w="11"/><text x="18.9581%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 0.05%)</title><rect x="18.8799%" y="453" width="0.0462%" height="15" fill="rgb(210,164,35)" fg:x="10221" fg:w="25"/><text x="19.1299%" y="463.50"></text></g><g><title>__x64_sys_lseek (21 samples, 0.04%)</title><rect x="18.9575%" y="437" width="0.0388%" height="15" fill="rgb(248,109,41)" fg:x="10263" fg:w="21"/><text x="19.2075%" y="447.50"></text></g><g><title>ext4_llseek (26 samples, 0.05%)</title><rect x="19.8940%" y="405" width="0.0480%" height="15" fill="rgb(238,23,50)" fg:x="10770" fg:w="26"/><text x="20.1440%" y="415.50"></text></g><g><title>__fdget_pos (65 samples, 0.12%)</title><rect x="19.9568%" y="389" width="0.1201%" height="15" fill="rgb(211,48,49)" fg:x="10804" fg:w="65"/><text x="20.2068%" y="399.50"></text></g><g><title>__fget_light (64 samples, 0.12%)</title><rect x="19.9586%" y="373" width="0.1182%" height="15" fill="rgb(223,36,21)" fg:x="10805" fg:w="64"/><text x="20.2086%" y="383.50"></text></g><g><title>__x64_sys_lseek (158 samples, 0.29%)</title><rect x="19.8884%" y="421" width="0.2919%" height="15" fill="rgb(207,123,46)" fg:x="10767" fg:w="158"/><text x="20.1384%" y="431.50"></text></g><g><title>ksys_lseek (129 samples, 0.24%)</title><rect x="19.9420%" y="405" width="0.2383%" height="15" fill="rgb(240,218,32)" fg:x="10796" fg:w="129"/><text x="20.1920%" y="415.50"></text></g><g><title>ext4_llseek (54 samples, 0.10%)</title><rect x="20.0805%" y="389" width="0.0997%" height="15" fill="rgb(252,5,43)" fg:x="10871" fg:w="54"/><text x="20.3305%" y="399.50"></text></g><g><title>generic_file_llseek_size (7 samples, 0.01%)</title><rect x="20.1674%" y="373" width="0.0129%" height="15" fill="rgb(252,84,19)" fg:x="10918" fg:w="7"/><text x="20.4174%" y="383.50"></text></g><g><title>fpregs_assert_state_consistent (8 samples, 0.01%)</title><rect x="20.1803%" y="421" width="0.0148%" height="15" fill="rgb(243,152,39)" fg:x="10925" fg:w="8"/><text x="20.4303%" y="431.50"></text></g><g><title>do_syscall_64 (652 samples, 1.20%)</title><rect x="18.9981%" y="437" width="1.2044%" height="15" fill="rgb(234,160,15)" fg:x="10285" fg:w="652"/><text x="19.2481%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (692 samples, 1.28%)</title><rect x="18.9261%" y="453" width="1.2782%" height="15" fill="rgb(237,34,20)" fg:x="10246" fg:w="692"/><text x="19.1761%" y="463.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (995 samples, 1.84%)</title><rect x="18.7894%" y="501" width="1.8379%" height="15" fill="rgb(229,97,13)" fg:x="10172" fg:w="995"/><text x="19.0394%" y="511.50">&lt;..</text></g><g><title>std::sys::unix::fs::File::seek (991 samples, 1.83%)</title><rect x="18.7968%" y="485" width="1.8305%" height="15" fill="rgb(234,71,50)" fg:x="10176" fg:w="991"/><text x="19.0468%" y="495.50">s..</text></g><g><title>__lseek64 (984 samples, 1.82%)</title><rect x="18.8097%" y="469" width="1.8176%" height="15" fill="rgb(253,155,4)" fg:x="10183" fg:w="984"/><text x="19.0597%" y="479.50">_..</text></g><g><title>syscall_return_via_sysret (229 samples, 0.42%)</title><rect x="20.2043%" y="453" width="0.4230%" height="15" fill="rgb(222,185,37)" fg:x="10938" fg:w="229"/><text x="20.4543%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::fs::File&gt;&gt; (6 samples, 0.01%)</title><rect x="20.6421%" y="501" width="0.0111%" height="15" fill="rgb(251,177,13)" fg:x="11175" fg:w="6"/><text x="20.8921%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (6 samples, 0.01%)</title><rect x="20.6421%" y="485" width="0.0111%" height="15" fill="rgb(250,179,40)" fg:x="11175" fg:w="6"/><text x="20.8921%" y="495.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="20.6421%" y="469" width="0.0111%" height="15" fill="rgb(242,44,2)" fg:x="11175" fg:w="6"/><text x="20.8921%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.01%)</title><rect x="20.6421%" y="453" width="0.0111%" height="15" fill="rgb(216,177,13)" fg:x="11175" fg:w="6"/><text x="20.8921%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.01%)</title><rect x="20.6421%" y="437" width="0.0111%" height="15" fill="rgb(216,106,43)" fg:x="11175" fg:w="6"/><text x="20.8921%" y="447.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="20.6421%" y="421" width="0.0111%" height="15" fill="rgb(216,183,2)" fg:x="11175" fg:w="6"/><text x="20.8921%" y="431.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="20.6421%" y="405" width="0.0111%" height="15" fill="rgb(249,75,3)" fg:x="11175" fg:w="6"/><text x="20.8921%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (33 samples, 0.06%)</title><rect x="20.8009%" y="421" width="0.0610%" height="15" fill="rgb(219,67,39)" fg:x="11261" fg:w="33"/><text x="21.0509%" y="431.50"></text></g><g><title>__x64_sys_write (24 samples, 0.04%)</title><rect x="20.8914%" y="405" width="0.0443%" height="15" fill="rgb(253,228,2)" fg:x="11310" fg:w="24"/><text x="21.1414%" y="415.50"></text></g><g><title>__fdget_pos (70 samples, 0.13%)</title><rect x="21.8076%" y="357" width="0.1293%" height="15" fill="rgb(235,138,27)" fg:x="11806" fg:w="70"/><text x="22.0576%" y="367.50"></text></g><g><title>__fget_light (66 samples, 0.12%)</title><rect x="21.8150%" y="341" width="0.1219%" height="15" fill="rgb(236,97,51)" fg:x="11810" fg:w="66"/><text x="22.0650%" y="351.50"></text></g><g><title>__sb_end_write (11 samples, 0.02%)</title><rect x="21.9425%" y="357" width="0.0203%" height="15" fill="rgb(240,80,30)" fg:x="11879" fg:w="11"/><text x="22.1925%" y="367.50"></text></g><g><title>__fsnotify_parent (10 samples, 0.02%)</title><rect x="22.0256%" y="341" width="0.0185%" height="15" fill="rgb(230,178,19)" fg:x="11924" fg:w="10"/><text x="22.2756%" y="351.50"></text></g><g><title>__sb_start_write (10 samples, 0.02%)</title><rect x="22.0441%" y="341" width="0.0185%" height="15" fill="rgb(210,190,27)" fg:x="11934" fg:w="10"/><text x="22.2941%" y="351.50"></text></g><g><title>ext4_file_write_iter (19 samples, 0.04%)</title><rect x="22.0736%" y="325" width="0.0351%" height="15" fill="rgb(222,107,31)" fg:x="11950" fg:w="19"/><text x="22.3236%" y="335.50"></text></g><g><title>iov_iter_init (7 samples, 0.01%)</title><rect x="22.1087%" y="325" width="0.0129%" height="15" fill="rgb(216,127,34)" fg:x="11969" fg:w="7"/><text x="22.3587%" y="335.50"></text></g><g><title>__generic_file_write_iter (7 samples, 0.01%)</title><rect x="22.1604%" y="309" width="0.0129%" height="15" fill="rgb(234,116,52)" fg:x="11997" fg:w="7"/><text x="22.4104%" y="319.50"></text></g><g><title>__x86_indirect_thunk_r11 (6 samples, 0.01%)</title><rect x="22.2971%" y="277" width="0.0111%" height="15" fill="rgb(222,124,15)" fg:x="12071" fg:w="6"/><text x="22.5471%" y="287.50"></text></g><g><title>ext4_da_write_begin (50 samples, 0.09%)</title><rect x="22.3359%" y="277" width="0.0924%" height="15" fill="rgb(231,179,28)" fg:x="12092" fg:w="50"/><text x="22.5859%" y="287.50"></text></g><g><title>ext4_da_write_end (46 samples, 0.08%)</title><rect x="22.4283%" y="277" width="0.0850%" height="15" fill="rgb(226,93,45)" fg:x="12142" fg:w="46"/><text x="22.6783%" y="287.50"></text></g><g><title>file_remove_privs (13 samples, 0.02%)</title><rect x="22.5133%" y="277" width="0.0240%" height="15" fill="rgb(215,8,51)" fg:x="12188" fg:w="13"/><text x="22.7633%" y="287.50"></text></g><g><title>ktime_get_coarse_real_ts64 (10 samples, 0.02%)</title><rect x="22.5964%" y="245" width="0.0185%" height="15" fill="rgb(223,106,5)" fg:x="12233" fg:w="10"/><text x="22.8464%" y="255.50"></text></g><g><title>current_time (32 samples, 0.06%)</title><rect x="22.5687%" y="261" width="0.0591%" height="15" fill="rgb(250,191,5)" fg:x="12218" fg:w="32"/><text x="22.8187%" y="271.50"></text></g><g><title>timestamp_truncate (7 samples, 0.01%)</title><rect x="22.6148%" y="245" width="0.0129%" height="15" fill="rgb(242,132,44)" fg:x="12243" fg:w="7"/><text x="22.8648%" y="255.50"></text></g><g><title>generic_update_time (6 samples, 0.01%)</title><rect x="22.6278%" y="261" width="0.0111%" height="15" fill="rgb(251,152,29)" fg:x="12250" fg:w="6"/><text x="22.8778%" y="271.50"></text></g><g><title>__mark_inode_dirty (6 samples, 0.01%)</title><rect x="22.6278%" y="245" width="0.0111%" height="15" fill="rgb(218,179,5)" fg:x="12250" fg:w="6"/><text x="22.8778%" y="255.50"></text></g><g><title>ext4_dirty_inode (6 samples, 0.01%)</title><rect x="22.6278%" y="229" width="0.0111%" height="15" fill="rgb(227,67,19)" fg:x="12250" fg:w="6"/><text x="22.8778%" y="239.50"></text></g><g><title>file_update_time (69 samples, 0.13%)</title><rect x="22.5373%" y="277" width="0.1275%" height="15" fill="rgb(233,119,31)" fg:x="12201" fg:w="69"/><text x="22.7873%" y="287.50"></text></g><g><title>ktime_get_coarse_real_ts64 (14 samples, 0.03%)</title><rect x="22.6389%" y="261" width="0.0259%" height="15" fill="rgb(241,120,22)" fg:x="12256" fg:w="14"/><text x="22.8889%" y="271.50"></text></g><g><title>balance_dirty_pages_ratelimited (50 samples, 0.09%)</title><rect x="22.8106%" y="261" width="0.0924%" height="15" fill="rgb(224,102,30)" fg:x="12349" fg:w="50"/><text x="23.0606%" y="271.50"></text></g><g><title>copyin (15 samples, 0.03%)</title><rect x="22.9030%" y="261" width="0.0277%" height="15" fill="rgb(210,164,37)" fg:x="12399" fg:w="15"/><text x="23.1530%" y="271.50"></text></g><g><title>ext4_journal_check_start (16 samples, 0.03%)</title><rect x="23.1542%" y="229" width="0.0296%" height="15" fill="rgb(226,191,16)" fg:x="12535" fg:w="16"/><text x="23.4042%" y="239.50"></text></g><g><title>_raw_read_lock (51 samples, 0.09%)</title><rect x="23.2577%" y="213" width="0.0942%" height="15" fill="rgb(214,40,45)" fg:x="12591" fg:w="51"/><text x="23.5077%" y="223.50"></text></g><g><title>rcu_all_qs (9 samples, 0.02%)</title><rect x="23.5587%" y="197" width="0.0166%" height="15" fill="rgb(244,29,26)" fg:x="12754" fg:w="9"/><text x="23.8087%" y="207.50"></text></g><g><title>kmem_cache_alloc (119 samples, 0.22%)</title><rect x="23.3593%" y="213" width="0.2198%" height="15" fill="rgb(216,16,5)" fg:x="12646" fg:w="119"/><text x="23.6093%" y="223.50"></text></g><g><title>memcg_kmem_put_cache (9 samples, 0.02%)</title><rect x="23.5791%" y="213" width="0.0166%" height="15" fill="rgb(249,76,35)" fg:x="12765" fg:w="9"/><text x="23.8291%" y="223.50"></text></g><g><title>memset (59 samples, 0.11%)</title><rect x="23.5957%" y="213" width="0.1090%" height="15" fill="rgb(207,11,44)" fg:x="12774" fg:w="59"/><text x="23.8457%" y="223.50"></text></g><g><title>should_failslab (6 samples, 0.01%)</title><rect x="23.7047%" y="213" width="0.0111%" height="15" fill="rgb(228,190,49)" fg:x="12833" fg:w="6"/><text x="23.9547%" y="223.50"></text></g><g><title>jbd2__journal_start (530 samples, 0.98%)</title><rect x="23.1838%" y="229" width="0.9790%" height="15" fill="rgb(214,173,12)" fg:x="12551" fg:w="530"/><text x="23.4338%" y="239.50"></text></g><g><title>start_this_handle (242 samples, 0.45%)</title><rect x="23.7158%" y="213" width="0.4470%" height="15" fill="rgb(218,26,35)" fg:x="12839" fg:w="242"/><text x="23.9658%" y="223.50"></text></g><g><title>add_transaction_credits (75 samples, 0.14%)</title><rect x="24.0242%" y="197" width="0.1385%" height="15" fill="rgb(220,200,19)" fg:x="13006" fg:w="75"/><text x="24.2742%" y="207.50"></text></g><g><title>__ext4_journal_start_sb (565 samples, 1.04%)</title><rect x="23.1321%" y="245" width="1.0436%" height="15" fill="rgb(239,95,49)" fg:x="12523" fg:w="565"/><text x="23.3821%" y="255.50"></text></g><g><title>ext4_block_write_begin (137 samples, 0.25%)</title><rect x="24.1812%" y="245" width="0.2531%" height="15" fill="rgb(235,85,53)" fg:x="13091" fg:w="137"/><text x="24.4312%" y="255.50"></text></g><g><title>ext4_nonda_switch (38 samples, 0.07%)</title><rect x="24.4343%" y="245" width="0.0702%" height="15" fill="rgb(233,133,31)" fg:x="13228" fg:w="38"/><text x="24.6843%" y="255.50"></text></g><g><title>xas_load (138 samples, 0.25%)</title><rect x="24.9275%" y="197" width="0.2549%" height="15" fill="rgb(218,25,20)" fg:x="13495" fg:w="138"/><text x="25.1775%" y="207.50"></text></g><g><title>find_get_entry (296 samples, 0.55%)</title><rect x="24.6818%" y="213" width="0.5468%" height="15" fill="rgb(252,210,38)" fg:x="13362" fg:w="296"/><text x="24.9318%" y="223.50"></text></g><g><title>xas_start (25 samples, 0.05%)</title><rect x="25.1824%" y="197" width="0.0462%" height="15" fill="rgb(242,134,21)" fg:x="13633" fg:w="25"/><text x="25.4324%" y="207.50"></text></g><g><title>pagecache_get_page (382 samples, 0.71%)</title><rect x="24.5377%" y="229" width="0.7056%" height="15" fill="rgb(213,28,48)" fg:x="13284" fg:w="382"/><text x="24.7877%" y="239.50"></text></g><g><title>xas_load (8 samples, 0.01%)</title><rect x="25.2286%" y="213" width="0.0148%" height="15" fill="rgb(250,196,2)" fg:x="13658" fg:w="8"/><text x="25.4786%" y="223.50"></text></g><g><title>grab_cache_page_write_begin (418 samples, 0.77%)</title><rect x="24.5045%" y="245" width="0.7721%" height="15" fill="rgb(227,5,17)" fg:x="13266" fg:w="418"/><text x="24.7545%" y="255.50"></text></g><g><title>wait_for_stable_page (18 samples, 0.03%)</title><rect x="25.2434%" y="229" width="0.0332%" height="15" fill="rgb(221,226,24)" fg:x="13666" fg:w="18"/><text x="25.4934%" y="239.50"></text></g><g><title>pagecache_get_page (7 samples, 0.01%)</title><rect x="25.2840%" y="245" width="0.0129%" height="15" fill="rgb(211,5,48)" fg:x="13688" fg:w="7"/><text x="25.5340%" y="255.50"></text></g><g><title>ext4_da_write_begin (1,295 samples, 2.39%)</title><rect x="22.9363%" y="261" width="2.3921%" height="15" fill="rgb(219,150,6)" fg:x="12417" fg:w="1295"/><text x="23.1863%" y="271.50">ex..</text></g><g><title>wait_for_stable_page (15 samples, 0.03%)</title><rect x="25.3006%" y="245" width="0.0277%" height="15" fill="rgb(251,46,16)" fg:x="13697" fg:w="15"/><text x="25.5506%" y="255.50"></text></g><g><title>__lock_text_start (13 samples, 0.02%)</title><rect x="25.7587%" y="197" width="0.0240%" height="15" fill="rgb(220,204,40)" fg:x="13945" fg:w="13"/><text x="26.0087%" y="207.50"></text></g><g><title>__lock_text_start (24 samples, 0.04%)</title><rect x="25.8622%" y="181" width="0.0443%" height="15" fill="rgb(211,85,2)" fg:x="14001" fg:w="24"/><text x="26.1122%" y="191.50"></text></g><g><title>__wake_up_common (20 samples, 0.04%)</title><rect x="25.9065%" y="181" width="0.0369%" height="15" fill="rgb(229,17,7)" fg:x="14025" fg:w="20"/><text x="26.1565%" y="191.50"></text></g><g><title>__wake_up_common_lock (142 samples, 0.26%)</title><rect x="25.7883%" y="197" width="0.2623%" height="15" fill="rgb(239,72,28)" fg:x="13961" fg:w="142"/><text x="26.0383%" y="207.50"></text></g><g><title>_raw_spin_lock_irqsave (58 samples, 0.11%)</title><rect x="25.9434%" y="181" width="0.1071%" height="15" fill="rgb(230,47,54)" fg:x="14045" fg:w="58"/><text x="26.1934%" y="191.50"></text></g><g><title>__wake_up (162 samples, 0.30%)</title><rect x="25.7569%" y="213" width="0.2992%" height="15" fill="rgb(214,50,8)" fg:x="13944" fg:w="162"/><text x="26.0069%" y="223.50"></text></g><g><title>__ext4_journal_stop (437 samples, 0.81%)</title><rect x="25.4521%" y="245" width="0.8072%" height="15" fill="rgb(216,198,43)" fg:x="13779" fg:w="437"/><text x="25.7021%" y="255.50"></text></g><g><title>jbd2_journal_stop (418 samples, 0.77%)</title><rect x="25.4872%" y="229" width="0.7721%" height="15" fill="rgb(234,20,35)" fg:x="13798" fg:w="418"/><text x="25.7372%" y="239.50"></text></g><g><title>kmem_cache_free (106 samples, 0.20%)</title><rect x="26.0635%" y="213" width="0.1958%" height="15" fill="rgb(254,45,19)" fg:x="14110" fg:w="106"/><text x="26.3135%" y="223.50"></text></g><g><title>__block_commit_write.isra.0 (165 samples, 0.30%)</title><rect x="26.4200%" y="213" width="0.3048%" height="15" fill="rgb(219,14,44)" fg:x="14303" fg:w="165"/><text x="26.6700%" y="223.50"></text></g><g><title>mark_buffer_dirty (42 samples, 0.08%)</title><rect x="26.6472%" y="197" width="0.0776%" height="15" fill="rgb(217,220,26)" fg:x="14426" fg:w="42"/><text x="26.8972%" y="207.50"></text></g><g><title>generic_write_end (249 samples, 0.46%)</title><rect x="26.2685%" y="245" width="0.4599%" height="15" fill="rgb(213,158,28)" fg:x="14221" fg:w="249"/><text x="26.5185%" y="255.50"></text></g><g><title>block_write_end (180 samples, 0.33%)</title><rect x="26.3960%" y="229" width="0.3325%" height="15" fill="rgb(252,51,52)" fg:x="14290" fg:w="180"/><text x="26.6460%" y="239.50"></text></g><g><title>ext4_da_write_end (799 samples, 1.48%)</title><rect x="25.3283%" y="261" width="1.4759%" height="15" fill="rgb(246,89,16)" fg:x="13712" fg:w="799"/><text x="25.5783%" y="271.50"></text></g><g><title>unlock_page (39 samples, 0.07%)</title><rect x="26.7322%" y="245" width="0.0720%" height="15" fill="rgb(216,158,49)" fg:x="14472" fg:w="39"/><text x="26.9822%" y="255.50"></text></g><g><title>generic_write_end (7 samples, 0.01%)</title><rect x="26.8116%" y="261" width="0.0129%" height="15" fill="rgb(236,107,19)" fg:x="14515" fg:w="7"/><text x="27.0616%" y="271.50"></text></g><g><title>grab_cache_page_write_begin (12 samples, 0.02%)</title><rect x="26.8245%" y="261" width="0.0222%" height="15" fill="rgb(228,185,30)" fg:x="14522" fg:w="12"/><text x="27.0745%" y="271.50"></text></g><g><title>iov_iter_advance (78 samples, 0.14%)</title><rect x="26.8467%" y="261" width="0.1441%" height="15" fill="rgb(246,134,8)" fg:x="14534" fg:w="78"/><text x="27.0967%" y="271.50"></text></g><g><title>copy_user_generic_string (551 samples, 1.02%)</title><rect x="27.0721%" y="245" width="1.0178%" height="15" fill="rgb(214,143,50)" fg:x="14656" fg:w="551"/><text x="27.3221%" y="255.50"></text></g><g><title>iov_iter_copy_from_user_atomic (599 samples, 1.11%)</title><rect x="26.9908%" y="261" width="1.1065%" height="15" fill="rgb(228,75,8)" fg:x="14612" fg:w="599"/><text x="27.2408%" y="271.50"></text></g><g><title>iov_iter_fault_in_readable (93 samples, 0.17%)</title><rect x="28.0972%" y="261" width="0.1718%" height="15" fill="rgb(207,175,4)" fg:x="15211" fg:w="93"/><text x="28.3472%" y="271.50"></text></g><g><title>unlock_page (35 samples, 0.06%)</title><rect x="28.2764%" y="261" width="0.0647%" height="15" fill="rgb(205,108,24)" fg:x="15308" fg:w="35"/><text x="28.5264%" y="271.50"></text></g><g><title>generic_perform_write (3,075 samples, 5.68%)</title><rect x="22.6647%" y="277" width="5.6800%" height="15" fill="rgb(244,120,49)" fg:x="12270" fg:w="3075"/><text x="22.9147%" y="287.50">generic..</text></g><g><title>__generic_file_write_iter (3,321 samples, 6.13%)</title><rect x="22.2251%" y="293" width="6.1344%" height="15" fill="rgb(223,47,38)" fg:x="12032" fg:w="3321"/><text x="22.4751%" y="303.50">__generi..</text></g><g><title>down_write_trylock (29 samples, 0.05%)</title><rect x="28.3595%" y="293" width="0.0536%" height="15" fill="rgb(229,179,11)" fg:x="15353" fg:w="29"/><text x="28.6095%" y="303.50"></text></g><g><title>generic_write_check_limits.isra.0 (12 samples, 0.02%)</title><rect x="28.4205%" y="277" width="0.0222%" height="15" fill="rgb(231,122,1)" fg:x="15386" fg:w="12"/><text x="28.6705%" y="287.50"></text></g><g><title>ext4_write_checks (26 samples, 0.05%)</title><rect x="28.4131%" y="293" width="0.0480%" height="15" fill="rgb(245,119,9)" fg:x="15382" fg:w="26"/><text x="28.6631%" y="303.50"></text></g><g><title>generic_write_checks (10 samples, 0.02%)</title><rect x="28.4427%" y="277" width="0.0185%" height="15" fill="rgb(241,163,25)" fg:x="15398" fg:w="10"/><text x="28.6927%" y="287.50"></text></g><g><title>ext4_file_write_iter (3,410 samples, 6.30%)</title><rect x="22.1789%" y="309" width="6.2988%" height="15" fill="rgb(217,214,3)" fg:x="12007" fg:w="3410"/><text x="22.4289%" y="319.50">ext4_fil..</text></g><g><title>__vfs_write (3,493 samples, 6.45%)</title><rect x="22.0625%" y="341" width="6.4521%" height="15" fill="rgb(240,86,28)" fg:x="11944" fg:w="3493"/><text x="22.3125%" y="351.50">__vfs_wr..</text></g><g><title>new_sync_write (3,461 samples, 6.39%)</title><rect x="22.1217%" y="325" width="6.3930%" height="15" fill="rgb(215,47,9)" fg:x="11976" fg:w="3461"/><text x="22.3717%" y="335.50">new_sync..</text></g><g><title>up_write (15 samples, 0.03%)</title><rect x="28.4870%" y="309" width="0.0277%" height="15" fill="rgb(252,25,45)" fg:x="15422" fg:w="15"/><text x="28.7370%" y="319.50"></text></g><g><title>fsnotify (35 samples, 0.06%)</title><rect x="28.5221%" y="341" width="0.0647%" height="15" fill="rgb(251,164,9)" fg:x="15441" fg:w="35"/><text x="28.7721%" y="351.50"></text></g><g><title>apparmor_file_permission (111 samples, 0.21%)</title><rect x="28.6569%" y="309" width="0.2050%" height="15" fill="rgb(233,194,0)" fg:x="15514" fg:w="111"/><text x="28.9069%" y="319.50"></text></g><g><title>common_file_perm (110 samples, 0.20%)</title><rect x="28.6588%" y="293" width="0.2032%" height="15" fill="rgb(249,111,24)" fg:x="15515" fg:w="110"/><text x="28.9088%" y="303.50"></text></g><g><title>aa_file_perm (12 samples, 0.02%)</title><rect x="28.8398%" y="277" width="0.0222%" height="15" fill="rgb(250,223,3)" fg:x="15613" fg:w="12"/><text x="29.0898%" y="287.50"></text></g><g><title>rw_verify_area (174 samples, 0.32%)</title><rect x="28.5886%" y="341" width="0.3214%" height="15" fill="rgb(236,178,37)" fg:x="15477" fg:w="174"/><text x="28.8386%" y="351.50"></text></g><g><title>security_file_permission (144 samples, 0.27%)</title><rect x="28.6440%" y="325" width="0.2660%" height="15" fill="rgb(241,158,50)" fg:x="15507" fg:w="144"/><text x="28.8940%" y="335.50"></text></g><g><title>common_file_perm (26 samples, 0.05%)</title><rect x="28.8620%" y="309" width="0.0480%" height="15" fill="rgb(213,121,41)" fg:x="15625" fg:w="26"/><text x="29.1120%" y="319.50"></text></g><g><title>ksys_write (3,862 samples, 7.13%)</title><rect x="21.7799%" y="373" width="7.1338%" height="15" fill="rgb(240,92,3)" fg:x="11791" fg:w="3862"/><text x="22.0299%" y="383.50">ksys_write</text></g><g><title>vfs_write (3,757 samples, 6.94%)</title><rect x="21.9739%" y="357" width="6.9398%" height="15" fill="rgb(205,123,3)" fg:x="11896" fg:w="3757"/><text x="22.2239%" y="367.50">vfs_write</text></g><g><title>__x64_sys_write (3,866 samples, 7.14%)</title><rect x="21.7762%" y="389" width="7.1411%" height="15" fill="rgb(205,97,47)" fg:x="11789" fg:w="3866"/><text x="22.0262%" y="399.50">__x64_sys_..</text></g><g><title>do_syscall_64 (4,333 samples, 8.00%)</title><rect x="20.9358%" y="405" width="8.0038%" height="15" fill="rgb(247,152,14)" fg:x="11334" fg:w="4333"/><text x="21.1858%" y="415.50">do_syscall_..</text></g><g><title>ksys_write (9 samples, 0.02%)</title><rect x="28.9229%" y="389" width="0.0166%" height="15" fill="rgb(248,195,53)" fg:x="15658" fg:w="9"/><text x="29.1729%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,375 samples, 8.08%)</title><rect x="20.8619%" y="421" width="8.0813%" height="15" fill="rgb(226,201,16)" fg:x="11294" fg:w="4375"/><text x="21.1119%" y="431.50">entry_SYSCA..</text></g><g><title>std::io::Write::write_all (4,732 samples, 8.74%)</title><rect x="20.6532%" y="501" width="8.7408%" height="15" fill="rgb(205,98,0)" fg:x="11181" fg:w="4732"/><text x="20.9032%" y="511.50">std::io::Wri..</text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (4,699 samples, 8.68%)</title><rect x="20.7141%" y="485" width="8.6798%" height="15" fill="rgb(214,191,48)" fg:x="11214" fg:w="4699"/><text x="20.9641%" y="495.50">std::os::uni..</text></g><g><title>std::sys::unix::net::Socket::write (4,699 samples, 8.68%)</title><rect x="20.7141%" y="469" width="8.6798%" height="15" fill="rgb(237,112,39)" fg:x="11214" fg:w="4699"/><text x="20.9641%" y="479.50">std::sys::un..</text></g><g><title>std::sys::unix::fd::FileDesc::write (4,699 samples, 8.68%)</title><rect x="20.7141%" y="453" width="8.6798%" height="15" fill="rgb(247,203,27)" fg:x="11214" fg:w="4699"/><text x="20.9641%" y="463.50">std::sys::un..</text></g><g><title>__GI___libc_write (4,695 samples, 8.67%)</title><rect x="20.7215%" y="437" width="8.6724%" height="15" fill="rgb(235,124,28)" fg:x="11218" fg:w="4695"/><text x="20.9715%" y="447.50">__GI___libc_..</text></g><g><title>syscall_return_via_sysret (244 samples, 0.45%)</title><rect x="28.9432%" y="421" width="0.4507%" height="15" fill="rgb(208,207,46)" fg:x="15669" fg:w="244"/><text x="29.1932%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::flush (6,258 samples, 11.56%)</title><rect x="17.8455%" y="533" width="11.5596%" height="15" fill="rgb(234,176,4)" fg:x="9661" fg:w="6258"/><text x="18.0955%" y="543.50">&lt;yakvdb::disk::fi..</text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::save (5,780 samples, 10.68%)</title><rect x="18.7284%" y="517" width="10.6766%" height="15" fill="rgb(230,133,28)" fg:x="10139" fg:w="5780"/><text x="18.9784%" y="527.50">yakvdb::disk::fi..</text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::offset (6 samples, 0.01%)</title><rect x="29.3939%" y="501" width="0.0111%" height="15" fill="rgb(211,137,40)" fg:x="15913" fg:w="6"/><text x="29.6439%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.02%)</title><rect x="29.4143%" y="341" width="0.0222%" height="15" fill="rgb(254,35,13)" fg:x="15924" fg:w="12"/><text x="29.6643%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.03%)</title><rect x="29.4087%" y="405" width="0.0296%" height="15" fill="rgb(225,49,51)" fg:x="15921" fg:w="16"/><text x="29.6587%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.03%)</title><rect x="29.4087%" y="389" width="0.0296%" height="15" fill="rgb(251,10,15)" fg:x="15921" fg:w="16"/><text x="29.6587%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.03%)</title><rect x="29.4087%" y="373" width="0.0296%" height="15" fill="rgb(228,207,15)" fg:x="15921" fg:w="16"/><text x="29.6587%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.02%)</title><rect x="29.4143%" y="357" width="0.0240%" height="15" fill="rgb(241,99,19)" fg:x="15924" fg:w="13"/><text x="29.6643%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.04%)</title><rect x="29.4050%" y="437" width="0.0369%" height="15" fill="rgb(207,104,49)" fg:x="15919" fg:w="20"/><text x="29.6550%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (19 samples, 0.04%)</title><rect x="29.4069%" y="421" width="0.0351%" height="15" fill="rgb(234,99,18)" fg:x="15920" fg:w="19"/><text x="29.6569%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="29.4475%" y="389" width="0.0111%" height="15" fill="rgb(213,191,49)" fg:x="15942" fg:w="6"/><text x="29.6975%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.01%)</title><rect x="29.4475%" y="373" width="0.0111%" height="15" fill="rgb(210,226,19)" fg:x="15942" fg:w="6"/><text x="29.6975%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.01%)</title><rect x="29.4586%" y="389" width="0.0111%" height="15" fill="rgb(229,97,18)" fg:x="15948" fg:w="6"/><text x="29.7086%" y="399.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.01%)</title><rect x="29.4586%" y="373" width="0.0111%" height="15" fill="rgb(211,167,15)" fg:x="15948" fg:w="6"/><text x="29.7086%" y="383.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (38 samples, 0.07%)</title><rect x="29.4050%" y="501" width="0.0702%" height="15" fill="rgb(210,169,34)" fg:x="15919" fg:w="38"/><text x="29.6550%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (38 samples, 0.07%)</title><rect x="29.4050%" y="485" width="0.0702%" height="15" fill="rgb(241,121,31)" fg:x="15919" fg:w="38"/><text x="29.6550%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (38 samples, 0.07%)</title><rect x="29.4050%" y="469" width="0.0702%" height="15" fill="rgb(232,40,11)" fg:x="15919" fg:w="38"/><text x="29.6550%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (38 samples, 0.07%)</title><rect x="29.4050%" y="453" width="0.0702%" height="15" fill="rgb(205,86,26)" fg:x="15919" fg:w="38"/><text x="29.6550%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18 samples, 0.03%)</title><rect x="29.4420%" y="437" width="0.0332%" height="15" fill="rgb(231,126,28)" fg:x="15939" fg:w="18"/><text x="29.6920%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.03%)</title><rect x="29.4420%" y="421" width="0.0332%" height="15" fill="rgb(219,221,18)" fg:x="15939" fg:w="18"/><text x="29.6920%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (18 samples, 0.03%)</title><rect x="29.4420%" y="405" width="0.0332%" height="15" fill="rgb(211,40,0)" fg:x="15939" fg:w="18"/><text x="29.6920%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (40 samples, 0.07%)</title><rect x="29.4050%" y="517" width="0.0739%" height="15" fill="rgb(239,85,43)" fg:x="15919" fg:w="40"/><text x="29.6550%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="29.4918%" y="325" width="0.0111%" height="15" fill="rgb(231,55,21)" fg:x="15966" fg:w="6"/><text x="29.7418%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.02%)</title><rect x="29.4808%" y="421" width="0.0240%" height="15" fill="rgb(225,184,43)" fg:x="15960" fg:w="13"/><text x="29.7308%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.02%)</title><rect x="29.4808%" y="405" width="0.0240%" height="15" fill="rgb(251,158,41)" fg:x="15960" fg:w="13"/><text x="29.7308%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="29.4826%" y="389" width="0.0222%" height="15" fill="rgb(234,159,37)" fg:x="15961" fg:w="12"/><text x="29.7326%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="29.4826%" y="373" width="0.0222%" height="15" fill="rgb(216,204,22)" fg:x="15961" fg:w="12"/><text x="29.7326%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="29.4826%" y="357" width="0.0222%" height="15" fill="rgb(214,17,3)" fg:x="15961" fg:w="12"/><text x="29.7326%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.02%)</title><rect x="29.4882%" y="341" width="0.0166%" height="15" fill="rgb(212,111,17)" fg:x="15964" fg:w="9"/><text x="29.7382%" y="351.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (22 samples, 0.04%)</title><rect x="29.4808%" y="469" width="0.0406%" height="15" fill="rgb(221,157,24)" fg:x="15960" fg:w="22"/><text x="29.7308%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (22 samples, 0.04%)</title><rect x="29.4808%" y="453" width="0.0406%" height="15" fill="rgb(252,16,13)" fg:x="15960" fg:w="22"/><text x="29.7308%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22 samples, 0.04%)</title><rect x="29.4808%" y="437" width="0.0406%" height="15" fill="rgb(221,62,2)" fg:x="15960" fg:w="22"/><text x="29.7308%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.02%)</title><rect x="29.5048%" y="421" width="0.0166%" height="15" fill="rgb(247,87,22)" fg:x="15973" fg:w="9"/><text x="29.7548%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.02%)</title><rect x="29.5048%" y="405" width="0.0166%" height="15" fill="rgb(215,73,9)" fg:x="15973" fg:w="9"/><text x="29.7548%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.02%)</title><rect x="29.5048%" y="389" width="0.0166%" height="15" fill="rgb(207,175,33)" fg:x="15973" fg:w="9"/><text x="29.7548%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.02%)</title><rect x="29.5288%" y="325" width="0.0222%" height="15" fill="rgb(243,129,54)" fg:x="15986" fg:w="12"/><text x="29.7788%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="29.5214%" y="389" width="0.0314%" height="15" fill="rgb(227,119,45)" fg:x="15982" fg:w="17"/><text x="29.7714%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="29.5214%" y="373" width="0.0314%" height="15" fill="rgb(205,109,36)" fg:x="15982" fg:w="17"/><text x="29.7714%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="29.5214%" y="357" width="0.0314%" height="15" fill="rgb(205,6,39)" fg:x="15982" fg:w="17"/><text x="29.7714%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.03%)</title><rect x="29.5269%" y="341" width="0.0259%" height="15" fill="rgb(221,32,16)" fg:x="15985" fg:w="14"/><text x="29.7769%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.03%)</title><rect x="29.5214%" y="421" width="0.0332%" height="15" fill="rgb(228,144,50)" fg:x="15982" fg:w="18"/><text x="29.7714%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.03%)</title><rect x="29.5214%" y="405" width="0.0332%" height="15" fill="rgb(229,201,53)" fg:x="15982" fg:w="18"/><text x="29.7714%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.01%)</title><rect x="29.5583%" y="357" width="0.0129%" height="15" fill="rgb(249,153,27)" fg:x="16002" fg:w="7"/><text x="29.8083%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (7 samples, 0.01%)</title><rect x="29.5583%" y="341" width="0.0129%" height="15" fill="rgb(227,106,25)" fg:x="16002" fg:w="7"/><text x="29.8083%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.01%)</title><rect x="29.5583%" y="373" width="0.0148%" height="15" fill="rgb(230,65,29)" fg:x="16002" fg:w="8"/><text x="29.8083%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (35 samples, 0.06%)</title><rect x="29.5214%" y="469" width="0.0647%" height="15" fill="rgb(221,57,46)" fg:x="15982" fg:w="35"/><text x="29.7714%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (35 samples, 0.06%)</title><rect x="29.5214%" y="453" width="0.0647%" height="15" fill="rgb(229,161,17)" fg:x="15982" fg:w="35"/><text x="29.7714%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (35 samples, 0.06%)</title><rect x="29.5214%" y="437" width="0.0647%" height="15" fill="rgb(222,213,11)" fg:x="15982" fg:w="35"/><text x="29.7714%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 0.03%)</title><rect x="29.5546%" y="421" width="0.0314%" height="15" fill="rgb(235,35,13)" fg:x="16000" fg:w="17"/><text x="29.8046%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.03%)</title><rect x="29.5546%" y="405" width="0.0314%" height="15" fill="rgb(233,158,34)" fg:x="16000" fg:w="17"/><text x="29.8046%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 0.03%)</title><rect x="29.5546%" y="389" width="0.0314%" height="15" fill="rgb(215,151,48)" fg:x="16000" fg:w="17"/><text x="29.8046%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (11 samples, 0.02%)</title><rect x="29.5916%" y="453" width="0.0203%" height="15" fill="rgb(229,84,14)" fg:x="16020" fg:w="11"/><text x="29.8416%" y="463.50"></text></g><g><title>core::intrinsics::copy (11 samples, 0.02%)</title><rect x="29.5916%" y="437" width="0.0203%" height="15" fill="rgb(229,68,14)" fg:x="16020" fg:w="11"/><text x="29.8416%" y="447.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (10 samples, 0.02%)</title><rect x="29.5934%" y="421" width="0.0185%" height="15" fill="rgb(243,106,26)" fg:x="16021" fg:w="10"/><text x="29.8434%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (15 samples, 0.03%)</title><rect x="29.6322%" y="405" width="0.0277%" height="15" fill="rgb(206,45,38)" fg:x="16042" fg:w="15"/><text x="29.8822%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (7 samples, 0.01%)</title><rect x="29.6470%" y="389" width="0.0129%" height="15" fill="rgb(226,6,15)" fg:x="16050" fg:w="7"/><text x="29.8970%" y="399.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (7 samples, 0.01%)</title><rect x="29.6470%" y="373" width="0.0129%" height="15" fill="rgb(232,22,54)" fg:x="16050" fg:w="7"/><text x="29.8970%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.01%)</title><rect x="29.6470%" y="357" width="0.0129%" height="15" fill="rgb(229,222,32)" fg:x="16050" fg:w="7"/><text x="29.8970%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.01%)</title><rect x="29.6470%" y="341" width="0.0129%" height="15" fill="rgb(228,62,29)" fg:x="16050" fg:w="7"/><text x="29.8970%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (7 samples, 0.01%)</title><rect x="29.6470%" y="325" width="0.0129%" height="15" fill="rgb(251,103,34)" fg:x="16050" fg:w="7"/><text x="29.8970%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (39 samples, 0.07%)</title><rect x="29.6193%" y="453" width="0.0720%" height="15" fill="rgb(233,12,30)" fg:x="16035" fg:w="39"/><text x="29.8693%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 0.07%)</title><rect x="29.6193%" y="437" width="0.0720%" height="15" fill="rgb(238,52,0)" fg:x="16035" fg:w="39"/><text x="29.8693%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (39 samples, 0.07%)</title><rect x="29.6193%" y="421" width="0.0720%" height="15" fill="rgb(223,98,5)" fg:x="16035" fg:w="39"/><text x="29.8693%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.03%)</title><rect x="29.6599%" y="405" width="0.0314%" height="15" fill="rgb(228,75,37)" fg:x="16057" fg:w="17"/><text x="29.9099%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="29.6987%" y="309" width="0.0148%" height="15" fill="rgb(205,115,49)" fg:x="16078" fg:w="8"/><text x="29.9487%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="29.6950%" y="373" width="0.0240%" height="15" fill="rgb(250,154,43)" fg:x="16076" fg:w="13"/><text x="29.9450%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="29.6950%" y="357" width="0.0240%" height="15" fill="rgb(226,43,29)" fg:x="16076" fg:w="13"/><text x="29.9450%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="29.6950%" y="341" width="0.0240%" height="15" fill="rgb(249,228,39)" fg:x="16076" fg:w="13"/><text x="29.9450%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.02%)</title><rect x="29.6950%" y="325" width="0.0240%" height="15" fill="rgb(216,79,43)" fg:x="16076" fg:w="13"/><text x="29.9450%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.03%)</title><rect x="29.6932%" y="405" width="0.0277%" height="15" fill="rgb(228,95,12)" fg:x="16075" fg:w="15"/><text x="29.9432%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.03%)</title><rect x="29.6932%" y="389" width="0.0277%" height="15" fill="rgb(249,221,15)" fg:x="16075" fg:w="15"/><text x="29.9432%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.01%)</title><rect x="29.7264%" y="357" width="0.0111%" height="15" fill="rgb(233,34,13)" fg:x="16093" fg:w="6"/><text x="29.9764%" y="367.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (145 samples, 0.27%)</title><rect x="29.4789%" y="517" width="0.2678%" height="15" fill="rgb(214,103,39)" fg:x="15959" fg:w="145"/><text x="29.7289%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (145 samples, 0.27%)</title><rect x="29.4789%" y="501" width="0.2678%" height="15" fill="rgb(251,126,39)" fg:x="15959" fg:w="145"/><text x="29.7289%" y="511.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (144 samples, 0.27%)</title><rect x="29.4808%" y="485" width="0.2660%" height="15" fill="rgb(214,216,36)" fg:x="15960" fg:w="144"/><text x="29.7308%" y="495.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (87 samples, 0.16%)</title><rect x="29.5861%" y="469" width="0.1607%" height="15" fill="rgb(220,221,8)" fg:x="16017" fg:w="87"/><text x="29.8361%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (29 samples, 0.05%)</title><rect x="29.6932%" y="453" width="0.0536%" height="15" fill="rgb(240,216,3)" fg:x="16075" fg:w="29"/><text x="29.9432%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (29 samples, 0.05%)</title><rect x="29.6932%" y="437" width="0.0536%" height="15" fill="rgb(232,218,17)" fg:x="16075" fg:w="29"/><text x="29.9432%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (29 samples, 0.05%)</title><rect x="29.6932%" y="421" width="0.0536%" height="15" fill="rgb(229,163,45)" fg:x="16075" fg:w="29"/><text x="29.9432%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.03%)</title><rect x="29.7209%" y="405" width="0.0259%" height="15" fill="rgb(231,110,42)" fg:x="16090" fg:w="14"/><text x="29.9709%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.03%)</title><rect x="29.7209%" y="389" width="0.0259%" height="15" fill="rgb(208,170,48)" fg:x="16090" fg:w="14"/><text x="29.9709%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.03%)</title><rect x="29.7209%" y="373" width="0.0259%" height="15" fill="rgb(239,116,25)" fg:x="16090" fg:w="14"/><text x="29.9709%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (186 samples, 0.34%)</title><rect x="29.4050%" y="533" width="0.3436%" height="15" fill="rgb(219,200,50)" fg:x="15919" fg:w="186"/><text x="29.6550%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (19 samples, 0.04%)</title><rect x="29.7745%" y="501" width="0.0351%" height="15" fill="rgb(245,200,0)" fg:x="16119" fg:w="19"/><text x="30.0245%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.02%)</title><rect x="29.8465%" y="357" width="0.0222%" height="15" fill="rgb(245,119,33)" fg:x="16158" fg:w="12"/><text x="30.0965%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (33 samples, 0.06%)</title><rect x="29.8724%" y="341" width="0.0610%" height="15" fill="rgb(231,125,12)" fg:x="16172" fg:w="33"/><text x="30.1224%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (68 samples, 0.13%)</title><rect x="29.8206%" y="405" width="0.1256%" height="15" fill="rgb(216,96,41)" fg:x="16144" fg:w="68"/><text x="30.0706%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (68 samples, 0.13%)</title><rect x="29.8206%" y="389" width="0.1256%" height="15" fill="rgb(248,43,45)" fg:x="16144" fg:w="68"/><text x="30.0706%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (68 samples, 0.13%)</title><rect x="29.8206%" y="373" width="0.1256%" height="15" fill="rgb(217,222,7)" fg:x="16144" fg:w="68"/><text x="30.0706%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (42 samples, 0.08%)</title><rect x="29.8687%" y="357" width="0.0776%" height="15" fill="rgb(233,28,6)" fg:x="16170" fg:w="42"/><text x="30.1187%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.01%)</title><rect x="29.9333%" y="341" width="0.0129%" height="15" fill="rgb(231,218,15)" fg:x="16205" fg:w="7"/><text x="30.1833%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (74 samples, 0.14%)</title><rect x="29.8169%" y="437" width="0.1367%" height="15" fill="rgb(226,171,48)" fg:x="16142" fg:w="74"/><text x="30.0669%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (74 samples, 0.14%)</title><rect x="29.8169%" y="421" width="0.1367%" height="15" fill="rgb(235,201,9)" fg:x="16142" fg:w="74"/><text x="30.0669%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="29.9610%" y="389" width="0.0111%" height="15" fill="rgb(217,80,15)" fg:x="16220" fg:w="6"/><text x="30.2110%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.01%)</title><rect x="29.9610%" y="373" width="0.0111%" height="15" fill="rgb(219,152,8)" fg:x="16220" fg:w="6"/><text x="30.2110%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (19 samples, 0.04%)</title><rect x="29.9721%" y="373" width="0.0351%" height="15" fill="rgb(243,107,38)" fg:x="16226" fg:w="19"/><text x="30.2221%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (15 samples, 0.03%)</title><rect x="29.9795%" y="357" width="0.0277%" height="15" fill="rgb(231,17,5)" fg:x="16230" fg:w="15"/><text x="30.2295%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (21 samples, 0.04%)</title><rect x="29.9721%" y="389" width="0.0388%" height="15" fill="rgb(209,25,54)" fg:x="16226" fg:w="21"/><text x="30.2221%" y="399.50"></text></g><g><title>hashbrown::raw::h2 (7 samples, 0.01%)</title><rect x="30.0127%" y="389" width="0.0129%" height="15" fill="rgb(219,0,2)" fg:x="16248" fg:w="7"/><text x="30.2627%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (14 samples, 0.03%)</title><rect x="30.0331%" y="389" width="0.0259%" height="15" fill="rgb(246,9,5)" fg:x="16259" fg:w="14"/><text x="30.2831%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (14 samples, 0.03%)</title><rect x="30.0331%" y="373" width="0.0259%" height="15" fill="rgb(226,159,4)" fg:x="16259" fg:w="14"/><text x="30.2831%" y="383.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (136 samples, 0.25%)</title><rect x="29.8096%" y="501" width="0.2512%" height="15" fill="rgb(219,175,34)" fg:x="16138" fg:w="136"/><text x="30.0596%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (136 samples, 0.25%)</title><rect x="29.8096%" y="485" width="0.2512%" height="15" fill="rgb(236,10,46)" fg:x="16138" fg:w="136"/><text x="30.0596%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (136 samples, 0.25%)</title><rect x="29.8096%" y="469" width="0.2512%" height="15" fill="rgb(240,211,16)" fg:x="16138" fg:w="136"/><text x="30.0596%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (136 samples, 0.25%)</title><rect x="29.8096%" y="453" width="0.2512%" height="15" fill="rgb(205,3,43)" fg:x="16138" fg:w="136"/><text x="30.0596%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (58 samples, 0.11%)</title><rect x="29.9536%" y="437" width="0.1071%" height="15" fill="rgb(245,7,22)" fg:x="16216" fg:w="58"/><text x="30.2036%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (58 samples, 0.11%)</title><rect x="29.9536%" y="421" width="0.1071%" height="15" fill="rgb(239,132,32)" fg:x="16216" fg:w="58"/><text x="30.2036%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (58 samples, 0.11%)</title><rect x="29.9536%" y="405" width="0.1071%" height="15" fill="rgb(228,202,34)" fg:x="16216" fg:w="58"/><text x="30.2036%" y="415.50"></text></g><g><title>__GI___libc_free (14 samples, 0.03%)</title><rect x="30.0755%" y="437" width="0.0259%" height="15" fill="rgb(254,200,22)" fg:x="16282" fg:w="14"/><text x="30.3255%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;yakvdb::disk::block::Block&gt;&gt; (64 samples, 0.12%)</title><rect x="30.0663%" y="485" width="0.1182%" height="15" fill="rgb(219,10,39)" fg:x="16277" fg:w="64"/><text x="30.3163%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;yakvdb::disk::block::Block&gt; (64 samples, 0.12%)</title><rect x="30.0663%" y="469" width="0.1182%" height="15" fill="rgb(226,210,39)" fg:x="16277" fg:w="64"/><text x="30.3163%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (64 samples, 0.12%)</title><rect x="30.0663%" y="453" width="0.1182%" height="15" fill="rgb(208,219,16)" fg:x="16277" fg:w="64"/><text x="30.3163%" y="463.50"></text></g><g><title>_int_free (41 samples, 0.08%)</title><rect x="30.1088%" y="437" width="0.0757%" height="15" fill="rgb(216,158,51)" fg:x="16300" fg:w="41"/><text x="30.3588%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="30.1975%" y="421" width="0.0240%" height="15" fill="rgb(233,14,44)" fg:x="16348" fg:w="13"/><text x="30.4475%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="30.1975%" y="405" width="0.0240%" height="15" fill="rgb(237,97,39)" fg:x="16348" fg:w="13"/><text x="30.4475%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="30.1975%" y="389" width="0.0240%" height="15" fill="rgb(218,198,43)" fg:x="16348" fg:w="13"/><text x="30.4475%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="30.2085%" y="373" width="0.0129%" height="15" fill="rgb(231,104,20)" fg:x="16354" fg:w="7"/><text x="30.4585%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="30.2104%" y="357" width="0.0111%" height="15" fill="rgb(254,36,13)" fg:x="16355" fg:w="6"/><text x="30.4604%" y="367.50"></text></g><g><title>hashbrown::map::make_insert_hash (17 samples, 0.03%)</title><rect x="30.1956%" y="453" width="0.0314%" height="15" fill="rgb(248,14,50)" fg:x="16347" fg:w="17"/><text x="30.4456%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.03%)</title><rect x="30.1956%" y="437" width="0.0314%" height="15" fill="rgb(217,107,29)" fg:x="16347" fg:w="17"/><text x="30.4456%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (16 samples, 0.03%)</title><rect x="30.2270%" y="453" width="0.0296%" height="15" fill="rgb(251,169,33)" fg:x="16364" fg:w="16"/><text x="30.4770%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.03%)</title><rect x="30.2270%" y="437" width="0.0296%" height="15" fill="rgb(217,108,32)" fg:x="16364" fg:w="16"/><text x="30.4770%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (16 samples, 0.03%)</title><rect x="30.2270%" y="421" width="0.0296%" height="15" fill="rgb(219,66,42)" fg:x="16364" fg:w="16"/><text x="30.4770%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (50 samples, 0.09%)</title><rect x="30.1845%" y="485" width="0.0924%" height="15" fill="rgb(206,180,7)" fg:x="16341" fg:w="50"/><text x="30.4345%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (49 samples, 0.09%)</title><rect x="30.1864%" y="469" width="0.0905%" height="15" fill="rgb(208,226,31)" fg:x="16342" fg:w="49"/><text x="30.4364%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.02%)</title><rect x="30.2566%" y="453" width="0.0203%" height="15" fill="rgb(218,26,49)" fg:x="16380" fg:w="11"/><text x="30.5066%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="30.2898%" y="341" width="0.0111%" height="15" fill="rgb(233,197,48)" fg:x="16398" fg:w="6"/><text x="30.5398%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="30.2787%" y="405" width="0.0240%" height="15" fill="rgb(252,181,51)" fg:x="16392" fg:w="13"/><text x="30.5287%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="30.2787%" y="389" width="0.0240%" height="15" fill="rgb(253,90,19)" fg:x="16392" fg:w="13"/><text x="30.5287%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="30.2787%" y="373" width="0.0240%" height="15" fill="rgb(215,171,30)" fg:x="16392" fg:w="13"/><text x="30.5287%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="30.2880%" y="357" width="0.0148%" height="15" fill="rgb(214,222,9)" fg:x="16397" fg:w="8"/><text x="30.5380%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.03%)</title><rect x="30.2787%" y="437" width="0.0259%" height="15" fill="rgb(223,3,22)" fg:x="16392" fg:w="14"/><text x="30.5287%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.03%)</title><rect x="30.2787%" y="421" width="0.0259%" height="15" fill="rgb(225,196,46)" fg:x="16392" fg:w="14"/><text x="30.5287%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (21 samples, 0.04%)</title><rect x="30.3083%" y="373" width="0.0388%" height="15" fill="rgb(209,110,37)" fg:x="16408" fg:w="21"/><text x="30.5583%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (20 samples, 0.04%)</title><rect x="30.3101%" y="357" width="0.0369%" height="15" fill="rgb(249,89,12)" fg:x="16409" fg:w="20"/><text x="30.5601%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (22 samples, 0.04%)</title><rect x="30.3083%" y="389" width="0.0406%" height="15" fill="rgb(226,27,33)" fg:x="16408" fg:w="22"/><text x="30.5583%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (27 samples, 0.05%)</title><rect x="30.3046%" y="421" width="0.0499%" height="15" fill="rgb(213,82,22)" fg:x="16406" fg:w="27"/><text x="30.5546%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (27 samples, 0.05%)</title><rect x="30.3046%" y="405" width="0.0499%" height="15" fill="rgb(248,140,0)" fg:x="16406" fg:w="27"/><text x="30.5546%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (47 samples, 0.09%)</title><rect x="30.2769%" y="485" width="0.0868%" height="15" fill="rgb(228,106,3)" fg:x="16391" fg:w="47"/><text x="30.5269%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (47 samples, 0.09%)</title><rect x="30.2769%" y="469" width="0.0868%" height="15" fill="rgb(209,23,37)" fg:x="16391" fg:w="47"/><text x="30.5269%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (46 samples, 0.08%)</title><rect x="30.2787%" y="453" width="0.0850%" height="15" fill="rgb(241,93,50)" fg:x="16392" fg:w="46"/><text x="30.5287%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (32 samples, 0.06%)</title><rect x="30.3046%" y="437" width="0.0591%" height="15" fill="rgb(253,46,43)" fg:x="16406" fg:w="32"/><text x="30.5546%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (10 samples, 0.02%)</title><rect x="30.3656%" y="469" width="0.0185%" height="15" fill="rgb(226,206,43)" fg:x="16439" fg:w="10"/><text x="30.6156%" y="479.50"></text></g><g><title>core::intrinsics::copy (6 samples, 0.01%)</title><rect x="30.3729%" y="453" width="0.0111%" height="15" fill="rgb(217,54,7)" fg:x="16443" fg:w="6"/><text x="30.6229%" y="463.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (6 samples, 0.01%)</title><rect x="30.3729%" y="437" width="0.0111%" height="15" fill="rgb(223,5,52)" fg:x="16443" fg:w="6"/><text x="30.6229%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="30.3896%" y="389" width="0.0166%" height="15" fill="rgb(206,52,46)" fg:x="16452" fg:w="9"/><text x="30.6396%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="30.3896%" y="373" width="0.0166%" height="15" fill="rgb(253,136,11)" fg:x="16452" fg:w="9"/><text x="30.6396%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="30.3896%" y="357" width="0.0166%" height="15" fill="rgb(208,106,33)" fg:x="16452" fg:w="9"/><text x="30.6396%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="30.3933%" y="341" width="0.0129%" height="15" fill="rgb(206,54,4)" fg:x="16454" fg:w="7"/><text x="30.6433%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.01%)</title><rect x="30.3933%" y="325" width="0.0129%" height="15" fill="rgb(213,3,15)" fg:x="16454" fg:w="7"/><text x="30.6433%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.02%)</title><rect x="30.3877%" y="421" width="0.0203%" height="15" fill="rgb(252,211,39)" fg:x="16451" fg:w="11"/><text x="30.6377%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="30.3877%" y="405" width="0.0203%" height="15" fill="rgb(223,6,36)" fg:x="16451" fg:w="11"/><text x="30.6377%" y="415.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::put (191 samples, 0.35%)</title><rect x="30.0608%" y="501" width="0.3528%" height="15" fill="rgb(252,169,45)" fg:x="16274" fg:w="191"/><text x="30.3108%" y="511.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (27 samples, 0.05%)</title><rect x="30.3637%" y="485" width="0.0499%" height="15" fill="rgb(212,48,26)" fg:x="16438" fg:w="27"/><text x="30.6137%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (14 samples, 0.03%)</title><rect x="30.3877%" y="469" width="0.0259%" height="15" fill="rgb(251,102,48)" fg:x="16451" fg:w="14"/><text x="30.6377%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (14 samples, 0.03%)</title><rect x="30.3877%" y="453" width="0.0259%" height="15" fill="rgb(243,208,16)" fg:x="16451" fg:w="14"/><text x="30.6377%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.03%)</title><rect x="30.3877%" y="437" width="0.0259%" height="15" fill="rgb(219,96,24)" fg:x="16451" fg:w="14"/><text x="30.6377%" y="447.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (6 samples, 0.01%)</title><rect x="30.4136%" y="501" width="0.0111%" height="15" fill="rgb(219,33,29)" fg:x="16465" fg:w="6"/><text x="30.6636%" y="511.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (6 samples, 0.01%)</title><rect x="30.4136%" y="485" width="0.0111%" height="15" fill="rgb(223,176,5)" fg:x="16465" fg:w="6"/><text x="30.6636%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (19 samples, 0.04%)</title><rect x="30.4801%" y="437" width="0.0351%" height="15" fill="rgb(228,140,14)" fg:x="16501" fg:w="19"/><text x="30.7301%" y="447.50"></text></g><g><title>__x64_sys_lseek (14 samples, 0.03%)</title><rect x="30.5318%" y="421" width="0.0259%" height="15" fill="rgb(217,179,31)" fg:x="16529" fg:w="14"/><text x="30.7818%" y="431.50"></text></g><g><title>ext4_llseek (19 samples, 0.04%)</title><rect x="31.0231%" y="389" width="0.0351%" height="15" fill="rgb(230,9,30)" fg:x="16795" fg:w="19"/><text x="31.2731%" y="399.50"></text></g><g><title>__fdget_pos (50 samples, 0.09%)</title><rect x="31.0712%" y="373" width="0.0924%" height="15" fill="rgb(230,136,20)" fg:x="16821" fg:w="50"/><text x="31.3212%" y="383.50"></text></g><g><title>__fget_light (50 samples, 0.09%)</title><rect x="31.0712%" y="357" width="0.0924%" height="15" fill="rgb(215,210,22)" fg:x="16821" fg:w="50"/><text x="31.3212%" y="367.50"></text></g><g><title>ext4_llseek (28 samples, 0.05%)</title><rect x="31.1691%" y="373" width="0.0517%" height="15" fill="rgb(218,43,5)" fg:x="16874" fg:w="28"/><text x="31.4191%" y="383.50"></text></g><g><title>__x64_sys_lseek (108 samples, 0.20%)</title><rect x="31.0231%" y="405" width="0.1995%" height="15" fill="rgb(216,11,5)" fg:x="16795" fg:w="108"/><text x="31.2731%" y="415.50"></text></g><g><title>ksys_lseek (89 samples, 0.16%)</title><rect x="31.0582%" y="389" width="0.1644%" height="15" fill="rgb(209,82,29)" fg:x="16814" fg:w="89"/><text x="31.3082%" y="399.50"></text></g><g><title>do_syscall_64 (363 samples, 0.67%)</title><rect x="30.5595%" y="421" width="0.6705%" height="15" fill="rgb(244,115,12)" fg:x="16544" fg:w="363"/><text x="30.8095%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (388 samples, 0.72%)</title><rect x="30.5152%" y="437" width="0.7167%" height="15" fill="rgb(222,82,18)" fg:x="16520" fg:w="388"/><text x="30.7652%" y="447.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (550 samples, 1.02%)</title><rect x="30.4431%" y="485" width="1.0159%" height="15" fill="rgb(249,227,8)" fg:x="16481" fg:w="550"/><text x="30.6931%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::seek (550 samples, 1.02%)</title><rect x="30.4431%" y="469" width="1.0159%" height="15" fill="rgb(253,141,45)" fg:x="16481" fg:w="550"/><text x="30.6931%" y="479.50"></text></g><g><title>__lseek64 (543 samples, 1.00%)</title><rect x="30.4561%" y="453" width="1.0030%" height="15" fill="rgb(234,184,4)" fg:x="16488" fg:w="543"/><text x="30.7061%" y="463.50"></text></g><g><title>syscall_return_via_sysret (123 samples, 0.23%)</title><rect x="31.2319%" y="437" width="0.2272%" height="15" fill="rgb(218,194,23)" fg:x="16908" fg:w="123"/><text x="31.4819%" y="447.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="31.5514%" y="341" width="0.0166%" height="15" fill="rgb(235,66,41)" fg:x="17081" fg:w="9"/><text x="31.8014%" y="351.50"></text></g><g><title>__memset_sse2_unaligned (18 samples, 0.03%)</title><rect x="31.5681%" y="341" width="0.0332%" height="15" fill="rgb(245,217,1)" fg:x="17090" fg:w="18"/><text x="31.8181%" y="351.50"></text></g><g><title>__memset_sse2_unaligned_erms (167 samples, 0.31%)</title><rect x="31.6013%" y="341" width="0.3085%" height="15" fill="rgb(229,91,1)" fg:x="17108" fg:w="167"/><text x="31.8513%" y="351.50"></text></g><g><title>__calloc (266 samples, 0.49%)</title><rect x="31.4886%" y="357" width="0.4913%" height="15" fill="rgb(207,101,30)" fg:x="17047" fg:w="266"/><text x="31.7386%" y="367.50"></text></g><g><title>_int_malloc (38 samples, 0.07%)</title><rect x="31.9098%" y="341" width="0.0702%" height="15" fill="rgb(223,82,49)" fg:x="17275" fg:w="38"/><text x="32.1598%" y="351.50"></text></g><g><title>alloc::vec::from_elem (273 samples, 0.50%)</title><rect x="31.4812%" y="469" width="0.5043%" height="15" fill="rgb(218,167,17)" fg:x="17043" fg:w="273"/><text x="31.7312%" y="479.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (273 samples, 0.50%)</title><rect x="31.4812%" y="453" width="0.5043%" height="15" fill="rgb(208,103,14)" fg:x="17043" fg:w="273"/><text x="31.7312%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (269 samples, 0.50%)</title><rect x="31.4886%" y="437" width="0.4969%" height="15" fill="rgb(238,20,8)" fg:x="17047" fg:w="269"/><text x="31.7386%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (269 samples, 0.50%)</title><rect x="31.4886%" y="421" width="0.4969%" height="15" fill="rgb(218,80,54)" fg:x="17047" fg:w="269"/><text x="31.7386%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (269 samples, 0.50%)</title><rect x="31.4886%" y="405" width="0.4969%" height="15" fill="rgb(240,144,17)" fg:x="17047" fg:w="269"/><text x="31.7386%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (269 samples, 0.50%)</title><rect x="31.4886%" y="389" width="0.4969%" height="15" fill="rgb(245,27,50)" fg:x="17047" fg:w="269"/><text x="31.7386%" y="399.50"></text></g><g><title>alloc::alloc::alloc_zeroed (269 samples, 0.50%)</title><rect x="31.4886%" y="373" width="0.4969%" height="15" fill="rgb(251,51,7)" fg:x="17047" fg:w="269"/><text x="31.7386%" y="383.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (225 samples, 0.42%)</title><rect x="31.9855%" y="469" width="0.4156%" height="15" fill="rgb(245,217,29)" fg:x="17316" fg:w="225"/><text x="32.2355%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (219 samples, 0.40%)</title><rect x="31.9966%" y="453" width="0.4045%" height="15" fill="rgb(221,176,29)" fg:x="17322" fg:w="219"/><text x="32.2466%" y="463.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (218 samples, 0.40%)</title><rect x="31.9984%" y="437" width="0.4027%" height="15" fill="rgb(212,180,24)" fg:x="17323" fg:w="218"/><text x="32.2484%" y="447.50"></text></g><g><title>malloc_consolidate (22 samples, 0.04%)</title><rect x="32.6080%" y="309" width="0.0406%" height="15" fill="rgb(254,24,2)" fg:x="17653" fg:w="22"/><text x="32.8580%" y="319.50"></text></g><g><title>__GI___libc_malloc (142 samples, 0.26%)</title><rect x="32.4030%" y="341" width="0.2623%" height="15" fill="rgb(230,100,2)" fg:x="17542" fg:w="142"/><text x="32.6530%" y="351.50"></text></g><g><title>_int_malloc (136 samples, 0.25%)</title><rect x="32.4141%" y="325" width="0.2512%" height="15" fill="rgb(219,142,25)" fg:x="17548" fg:w="136"/><text x="32.6641%" y="335.50"></text></g><g><title>unlink_chunk.isra.0 (9 samples, 0.02%)</title><rect x="32.6487%" y="309" width="0.0166%" height="15" fill="rgb(240,73,43)" fg:x="17675" fg:w="9"/><text x="32.8987%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (144 samples, 0.27%)</title><rect x="32.4011%" y="453" width="0.2660%" height="15" fill="rgb(214,114,15)" fg:x="17541" fg:w="144"/><text x="32.6511%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (144 samples, 0.27%)</title><rect x="32.4011%" y="437" width="0.2660%" height="15" fill="rgb(207,130,4)" fg:x="17541" fg:w="144"/><text x="32.6511%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (144 samples, 0.27%)</title><rect x="32.4011%" y="421" width="0.2660%" height="15" fill="rgb(221,25,40)" fg:x="17541" fg:w="144"/><text x="32.6511%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (144 samples, 0.27%)</title><rect x="32.4011%" y="405" width="0.2660%" height="15" fill="rgb(241,184,7)" fg:x="17541" fg:w="144"/><text x="32.6511%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (144 samples, 0.27%)</title><rect x="32.4011%" y="389" width="0.2660%" height="15" fill="rgb(235,159,4)" fg:x="17541" fg:w="144"/><text x="32.6511%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (144 samples, 0.27%)</title><rect x="32.4011%" y="373" width="0.2660%" height="15" fill="rgb(214,87,48)" fg:x="17541" fg:w="144"/><text x="32.6511%" y="383.50"></text></g><g><title>alloc::alloc::alloc (144 samples, 0.27%)</title><rect x="32.4011%" y="357" width="0.2660%" height="15" fill="rgb(246,198,24)" fg:x="17541" fg:w="144"/><text x="32.6511%" y="367.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (153 samples, 0.28%)</title><rect x="32.4011%" y="469" width="0.2826%" height="15" fill="rgb(209,66,40)" fg:x="17541" fg:w="153"/><text x="32.6511%" y="479.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (9 samples, 0.02%)</title><rect x="32.6671%" y="453" width="0.0166%" height="15" fill="rgb(233,147,39)" fg:x="17685" fg:w="9"/><text x="32.9171%" y="463.50"></text></g><g><title>__GI___libc_free (6 samples, 0.01%)</title><rect x="32.6856%" y="389" width="0.0111%" height="15" fill="rgb(231,145,52)" fg:x="17695" fg:w="6"/><text x="32.9356%" y="399.50"></text></g><g><title>__GI___read (33 samples, 0.06%)</title><rect x="32.6967%" y="389" width="0.0610%" height="15" fill="rgb(206,20,26)" fg:x="17701" fg:w="33"/><text x="32.9467%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (33 samples, 0.06%)</title><rect x="32.6967%" y="373" width="0.0610%" height="15" fill="rgb(238,220,4)" fg:x="17701" fg:w="33"/><text x="32.9467%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (84 samples, 0.16%)</title><rect x="32.6837%" y="421" width="0.1552%" height="15" fill="rgb(252,195,42)" fg:x="17694" fg:w="84"/><text x="32.9337%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (84 samples, 0.16%)</title><rect x="32.6837%" y="405" width="0.1552%" height="15" fill="rgb(209,10,6)" fg:x="17694" fg:w="84"/><text x="32.9337%" y="415.50"></text></g><g><title>_int_free (40 samples, 0.07%)</title><rect x="32.7650%" y="389" width="0.0739%" height="15" fill="rgb(229,3,52)" fg:x="17738" fg:w="40"/><text x="33.0150%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::reserve (748 samples, 1.38%)</title><rect x="31.4591%" y="485" width="1.3817%" height="15" fill="rgb(253,49,37)" fg:x="17031" fg:w="748"/><text x="31.7091%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (85 samples, 0.16%)</title><rect x="32.6837%" y="469" width="0.1570%" height="15" fill="rgb(240,103,49)" fg:x="17694" fg:w="85"/><text x="32.9337%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (85 samples, 0.16%)</title><rect x="32.6837%" y="453" width="0.1570%" height="15" fill="rgb(250,182,30)" fg:x="17694" fg:w="85"/><text x="32.9337%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (85 samples, 0.16%)</title><rect x="32.6837%" y="437" width="0.1570%" height="15" fill="rgb(248,8,30)" fg:x="17694" fg:w="85"/><text x="32.9337%" y="447.50"></text></g><g><title>__GI___libc_write (66 samples, 0.12%)</title><rect x="32.8408%" y="485" width="0.1219%" height="15" fill="rgb(237,120,30)" fg:x="17779" fg:w="66"/><text x="33.0908%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (66 samples, 0.12%)</title><rect x="32.8408%" y="469" width="0.1219%" height="15" fill="rgb(221,146,34)" fg:x="17779" fg:w="66"/><text x="33.0908%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::fs::File&gt;&gt; (7 samples, 0.01%)</title><rect x="32.9627%" y="485" width="0.0129%" height="15" fill="rgb(242,55,13)" fg:x="17845" fg:w="7"/><text x="33.2127%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (7 samples, 0.01%)</title><rect x="32.9627%" y="469" width="0.0129%" height="15" fill="rgb(242,112,31)" fg:x="17845" fg:w="7"/><text x="33.2127%" y="479.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="32.9627%" y="453" width="0.0129%" height="15" fill="rgb(249,192,27)" fg:x="17845" fg:w="7"/><text x="33.2127%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (7 samples, 0.01%)</title><rect x="32.9627%" y="437" width="0.0129%" height="15" fill="rgb(208,204,44)" fg:x="17845" fg:w="7"/><text x="33.2127%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (7 samples, 0.01%)</title><rect x="32.9627%" y="421" width="0.0129%" height="15" fill="rgb(208,93,54)" fg:x="17845" fg:w="7"/><text x="33.2127%" y="431.50"></text></g><g><title>core::mem::replace (7 samples, 0.01%)</title><rect x="32.9627%" y="405" width="0.0129%" height="15" fill="rgb(242,1,31)" fg:x="17845" fg:w="7"/><text x="33.2127%" y="415.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="32.9627%" y="389" width="0.0129%" height="15" fill="rgb(241,83,25)" fg:x="17845" fg:w="7"/><text x="33.2127%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (24 samples, 0.04%)</title><rect x="33.0310%" y="389" width="0.0443%" height="15" fill="rgb(205,169,50)" fg:x="17882" fg:w="24"/><text x="33.2810%" y="399.50"></text></g><g><title>__x64_sys_read (15 samples, 0.03%)</title><rect x="33.0901%" y="373" width="0.0277%" height="15" fill="rgb(239,186,37)" fg:x="17914" fg:w="15"/><text x="33.3401%" y="383.50"></text></g><g><title>__fdget_pos (41 samples, 0.08%)</title><rect x="33.6775%" y="325" width="0.0757%" height="15" fill="rgb(205,221,10)" fg:x="18232" fg:w="41"/><text x="33.9275%" y="335.50"></text></g><g><title>__fget_light (38 samples, 0.07%)</title><rect x="33.6831%" y="309" width="0.0702%" height="15" fill="rgb(218,196,15)" fg:x="18235" fg:w="38"/><text x="33.9331%" y="319.50"></text></g><g><title>__fsnotify_parent (8 samples, 0.01%)</title><rect x="33.7865%" y="309" width="0.0148%" height="15" fill="rgb(218,196,35)" fg:x="18291" fg:w="8"/><text x="34.0365%" y="319.50"></text></g><g><title>ext4_file_read_iter (23 samples, 0.04%)</title><rect x="33.8105%" y="293" width="0.0425%" height="15" fill="rgb(233,63,24)" fg:x="18304" fg:w="23"/><text x="34.0605%" y="303.50"></text></g><g><title>generic_file_buffered_read (7 samples, 0.01%)</title><rect x="33.9121%" y="261" width="0.0129%" height="15" fill="rgb(225,8,4)" fg:x="18359" fg:w="7"/><text x="34.1621%" y="271.50"></text></g><g><title>copy_user_generic_string (508 samples, 0.94%)</title><rect x="34.1763%" y="213" width="0.9384%" height="15" fill="rgb(234,105,35)" fg:x="18502" fg:w="508"/><text x="34.4263%" y="223.50"></text></g><g><title>copy_page_to_iter (539 samples, 1.00%)</title><rect x="34.1208%" y="229" width="0.9956%" height="15" fill="rgb(236,21,32)" fg:x="18472" fg:w="539"/><text x="34.3708%" y="239.50"></text></g><g><title>mark_page_accessed (12 samples, 0.02%)</title><rect x="35.1275%" y="229" width="0.0222%" height="15" fill="rgb(228,109,6)" fg:x="19017" fg:w="12"/><text x="35.3775%" y="239.50"></text></g><g><title>xas_load (95 samples, 0.18%)</title><rect x="35.3880%" y="197" width="0.1755%" height="15" fill="rgb(229,215,31)" fg:x="19158" fg:w="95"/><text x="35.6380%" y="207.50"></text></g><g><title>find_get_entry (226 samples, 0.42%)</title><rect x="35.1756%" y="213" width="0.4175%" height="15" fill="rgb(221,52,54)" fg:x="19043" fg:w="226"/><text x="35.4256%" y="223.50"></text></g><g><title>xas_start (16 samples, 0.03%)</title><rect x="35.5635%" y="197" width="0.0296%" height="15" fill="rgb(252,129,43)" fg:x="19253" fg:w="16"/><text x="35.8135%" y="207.50"></text></g><g><title>pagecache_get_page (245 samples, 0.45%)</title><rect x="35.1497%" y="229" width="0.4526%" height="15" fill="rgb(248,183,27)" fg:x="19029" fg:w="245"/><text x="35.3997%" y="239.50"></text></g><g><title>ktime_get_coarse_real_ts64 (7 samples, 0.01%)</title><rect x="35.6392%" y="181" width="0.0129%" height="15" fill="rgb(250,0,22)" fg:x="19294" fg:w="7"/><text x="35.8892%" y="191.50"></text></g><g><title>current_time (12 samples, 0.02%)</title><rect x="35.6337%" y="197" width="0.0222%" height="15" fill="rgb(213,166,10)" fg:x="19291" fg:w="12"/><text x="35.8837%" y="207.50"></text></g><g><title>atime_needs_update (25 samples, 0.05%)</title><rect x="35.6207%" y="213" width="0.0462%" height="15" fill="rgb(207,163,36)" fg:x="19284" fg:w="25"/><text x="35.8707%" y="223.50"></text></g><g><title>generic_file_buffered_read (936 samples, 1.73%)</title><rect x="33.9491%" y="245" width="1.7289%" height="15" fill="rgb(208,122,22)" fg:x="18379" fg:w="936"/><text x="34.1991%" y="255.50"></text></g><g><title>touch_atime (37 samples, 0.07%)</title><rect x="35.6097%" y="229" width="0.0683%" height="15" fill="rgb(207,104,49)" fg:x="19278" fg:w="37"/><text x="35.8597%" y="239.50"></text></g><g><title>ext4_file_read_iter (981 samples, 1.81%)</title><rect x="33.8899%" y="277" width="1.8121%" height="15" fill="rgb(248,211,50)" fg:x="18347" fg:w="981"/><text x="34.1399%" y="287.50">e..</text></g><g><title>generic_file_read_iter (962 samples, 1.78%)</title><rect x="33.9250%" y="261" width="1.7770%" height="15" fill="rgb(217,13,45)" fg:x="18366" fg:w="962"/><text x="34.1750%" y="271.50">g..</text></g><g><title>touch_atime (7 samples, 0.01%)</title><rect x="35.6891%" y="245" width="0.0129%" height="15" fill="rgb(211,216,49)" fg:x="19321" fg:w="7"/><text x="35.9391%" y="255.50"></text></g><g><title>__vfs_read (1,030 samples, 1.90%)</title><rect x="33.8013%" y="309" width="1.9026%" height="15" fill="rgb(221,58,53)" fg:x="18299" fg:w="1030"/><text x="34.0513%" y="319.50">_..</text></g><g><title>new_sync_read (997 samples, 1.84%)</title><rect x="33.8622%" y="293" width="1.8416%" height="15" fill="rgb(220,112,41)" fg:x="18332" fg:w="997"/><text x="34.1122%" y="303.50">n..</text></g><g><title>fsnotify (15 samples, 0.03%)</title><rect x="35.7039%" y="309" width="0.0277%" height="15" fill="rgb(236,38,28)" fg:x="19329" fg:w="15"/><text x="35.9539%" y="319.50"></text></g><g><title>apparmor_file_permission (11 samples, 0.02%)</title><rect x="35.7556%" y="293" width="0.0203%" height="15" fill="rgb(227,195,22)" fg:x="19357" fg:w="11"/><text x="36.0056%" y="303.50"></text></g><g><title>apparmor_file_permission (61 samples, 0.11%)</title><rect x="35.8128%" y="277" width="0.1127%" height="15" fill="rgb(214,55,33)" fg:x="19388" fg:w="61"/><text x="36.0628%" y="287.50"></text></g><g><title>common_file_perm (60 samples, 0.11%)</title><rect x="35.8147%" y="261" width="0.1108%" height="15" fill="rgb(248,80,13)" fg:x="19389" fg:w="60"/><text x="36.0647%" y="271.50"></text></g><g><title>common_file_perm (25 samples, 0.05%)</title><rect x="35.9255%" y="277" width="0.0462%" height="15" fill="rgb(238,52,6)" fg:x="19449" fg:w="25"/><text x="36.1755%" y="287.50"></text></g><g><title>__x64_sys_read (1,259 samples, 2.33%)</title><rect x="33.6535%" y="357" width="2.3256%" height="15" fill="rgb(224,198,47)" fg:x="18219" fg:w="1259"/><text x="33.9035%" y="367.50">_..</text></g><g><title>ksys_read (1,256 samples, 2.32%)</title><rect x="33.6591%" y="341" width="2.3200%" height="15" fill="rgb(233,171,20)" fg:x="18222" fg:w="1256"/><text x="33.9091%" y="351.50">k..</text></g><g><title>vfs_read (1,202 samples, 2.22%)</title><rect x="33.7588%" y="325" width="2.2203%" height="15" fill="rgb(241,30,25)" fg:x="18276" fg:w="1202"/><text x="34.0088%" y="335.50">v..</text></g><g><title>rw_verify_area (132 samples, 0.24%)</title><rect x="35.7353%" y="309" width="0.2438%" height="15" fill="rgb(207,171,38)" fg:x="19346" fg:w="132"/><text x="35.9853%" y="319.50"></text></g><g><title>security_file_permission (110 samples, 0.20%)</title><rect x="35.7759%" y="293" width="0.2032%" height="15" fill="rgb(234,70,1)" fg:x="19368" fg:w="110"/><text x="36.0259%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,577 samples, 2.91%)</title><rect x="33.0753%" y="389" width="2.9130%" height="15" fill="rgb(232,178,18)" fg:x="17906" fg:w="1577"/><text x="33.3253%" y="399.50">en..</text></g><g><title>do_syscall_64 (1,554 samples, 2.87%)</title><rect x="33.1178%" y="373" width="2.8705%" height="15" fill="rgb(241,78,40)" fg:x="17929" fg:w="1554"/><text x="33.3678%" y="383.50">do..</text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (3,103 samples, 5.73%)</title><rect x="30.4302%" y="501" width="5.7318%" height="15" fill="rgb(222,35,25)" fg:x="16474" fg:w="3103"/><text x="30.6802%" y="511.50">yakvdb:..</text></g><g><title>std::io::Read::read_exact (1,721 samples, 3.18%)</title><rect x="32.9830%" y="485" width="3.1790%" height="15" fill="rgb(207,92,16)" fg:x="17856" fg:w="1721"/><text x="33.2330%" y="495.50">std..</text></g><g><title>std::io::default_read_exact (1,721 samples, 3.18%)</title><rect x="32.9830%" y="469" width="3.1790%" height="15" fill="rgb(216,59,51)" fg:x="17856" fg:w="1721"/><text x="33.2330%" y="479.50">std..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1,718 samples, 3.17%)</title><rect x="32.9885%" y="453" width="3.1734%" height="15" fill="rgb(213,80,28)" fg:x="17859" fg:w="1718"/><text x="33.2385%" y="463.50">&lt;st..</text></g><g><title>std::sys::unix::fs::File::read (1,718 samples, 3.17%)</title><rect x="32.9885%" y="437" width="3.1734%" height="15" fill="rgb(220,93,7)" fg:x="17859" fg:w="1718"/><text x="33.2385%" y="447.50">std..</text></g><g><title>std::sys::unix::fd::FileDesc::read (1,718 samples, 3.17%)</title><rect x="32.9885%" y="421" width="3.1734%" height="15" fill="rgb(225,24,44)" fg:x="17859" fg:w="1718"/><text x="33.2385%" y="431.50">std..</text></g><g><title>__GI___read (1,713 samples, 3.16%)</title><rect x="32.9978%" y="405" width="3.1642%" height="15" fill="rgb(243,74,40)" fg:x="17864" fg:w="1713"/><text x="33.2478%" y="415.50">__G..</text></g><g><title>syscall_return_via_sysret (94 samples, 0.17%)</title><rect x="35.9883%" y="389" width="0.1736%" height="15" fill="rgb(228,39,7)" fg:x="19483" fg:w="94"/><text x="36.2383%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (3,465 samples, 6.40%)</title><rect x="29.7634%" y="517" width="6.4004%" height="15" fill="rgb(227,79,8)" fg:x="16113" fg:w="3465"/><text x="30.0134%" y="527.50">&lt;yakvdb:..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.03%)</title><rect x="36.1749%" y="373" width="0.0296%" height="15" fill="rgb(236,58,11)" fg:x="19584" fg:w="16"/><text x="36.4249%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.03%)</title><rect x="36.1786%" y="357" width="0.0259%" height="15" fill="rgb(249,63,35)" fg:x="19586" fg:w="14"/><text x="36.4286%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.03%)</title><rect x="36.2137%" y="357" width="0.0332%" height="15" fill="rgb(252,114,16)" fg:x="19605" fg:w="18"/><text x="36.4637%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (50 samples, 0.09%)</title><rect x="36.1675%" y="421" width="0.0924%" height="15" fill="rgb(254,151,24)" fg:x="19580" fg:w="50"/><text x="36.4175%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (50 samples, 0.09%)</title><rect x="36.1675%" y="405" width="0.0924%" height="15" fill="rgb(253,54,39)" fg:x="19580" fg:w="50"/><text x="36.4175%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (50 samples, 0.09%)</title><rect x="36.1675%" y="389" width="0.0924%" height="15" fill="rgb(243,25,45)" fg:x="19580" fg:w="50"/><text x="36.4175%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (30 samples, 0.06%)</title><rect x="36.2044%" y="373" width="0.0554%" height="15" fill="rgb(234,134,9)" fg:x="19600" fg:w="30"/><text x="36.4544%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.01%)</title><rect x="36.2469%" y="357" width="0.0129%" height="15" fill="rgb(227,166,31)" fg:x="19623" fg:w="7"/><text x="36.4969%" y="367.50"></text></g><g><title>hashbrown::map::make_insert_hash (51 samples, 0.09%)</title><rect x="36.1675%" y="453" width="0.0942%" height="15" fill="rgb(245,143,41)" fg:x="19580" fg:w="51"/><text x="36.4175%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (51 samples, 0.09%)</title><rect x="36.1675%" y="437" width="0.0942%" height="15" fill="rgb(238,181,32)" fg:x="19580" fg:w="51"/><text x="36.4175%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="36.2820%" y="405" width="0.0111%" height="15" fill="rgb(224,113,18)" fg:x="19642" fg:w="6"/><text x="36.5320%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.01%)</title><rect x="36.2820%" y="389" width="0.0111%" height="15" fill="rgb(240,229,28)" fg:x="19642" fg:w="6"/><text x="36.5320%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (15 samples, 0.03%)</title><rect x="36.2931%" y="405" width="0.0277%" height="15" fill="rgb(250,185,3)" fg:x="19648" fg:w="15"/><text x="36.5431%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (15 samples, 0.03%)</title><rect x="36.2931%" y="389" width="0.0277%" height="15" fill="rgb(212,59,25)" fg:x="19648" fg:w="15"/><text x="36.5431%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (13 samples, 0.02%)</title><rect x="36.2968%" y="373" width="0.0240%" height="15" fill="rgb(221,87,20)" fg:x="19650" fg:w="13"/><text x="36.5468%" y="383.50"></text></g><g><title>hashbrown::raw::h2 (9 samples, 0.02%)</title><rect x="36.3245%" y="405" width="0.0166%" height="15" fill="rgb(213,74,28)" fg:x="19665" fg:w="9"/><text x="36.5745%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (57 samples, 0.11%)</title><rect x="36.2617%" y="453" width="0.1053%" height="15" fill="rgb(224,132,34)" fg:x="19631" fg:w="57"/><text x="36.5117%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (57 samples, 0.11%)</title><rect x="36.2617%" y="437" width="0.1053%" height="15" fill="rgb(222,101,24)" fg:x="19631" fg:w="57"/><text x="36.5117%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (57 samples, 0.11%)</title><rect x="36.2617%" y="421" width="0.1053%" height="15" fill="rgb(254,142,4)" fg:x="19631" fg:w="57"/><text x="36.5117%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (11 samples, 0.02%)</title><rect x="36.3467%" y="405" width="0.0203%" height="15" fill="rgb(230,229,49)" fg:x="19677" fg:w="11"/><text x="36.5967%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.02%)</title><rect x="36.3467%" y="389" width="0.0203%" height="15" fill="rgb(238,70,47)" fg:x="19677" fg:w="11"/><text x="36.5967%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (8 samples, 0.01%)</title><rect x="36.3725%" y="437" width="0.0148%" height="15" fill="rgb(231,160,17)" fg:x="19691" fg:w="8"/><text x="36.6225%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (122 samples, 0.23%)</title><rect x="36.1638%" y="517" width="0.2254%" height="15" fill="rgb(218,68,53)" fg:x="19578" fg:w="122"/><text x="36.4138%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (121 samples, 0.22%)</title><rect x="36.1657%" y="501" width="0.2235%" height="15" fill="rgb(236,111,10)" fg:x="19579" fg:w="121"/><text x="36.4157%" y="511.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (121 samples, 0.22%)</title><rect x="36.1657%" y="485" width="0.2235%" height="15" fill="rgb(224,34,41)" fg:x="19579" fg:w="121"/><text x="36.4157%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (121 samples, 0.22%)</title><rect x="36.1657%" y="469" width="0.2235%" height="15" fill="rgb(241,118,19)" fg:x="19579" fg:w="121"/><text x="36.4157%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.02%)</title><rect x="36.3670%" y="453" width="0.0222%" height="15" fill="rgb(238,129,25)" fg:x="19688" fg:w="12"/><text x="36.6170%" y="463.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (6 samples, 0.01%)</title><rect x="36.3892%" y="517" width="0.0111%" height="15" fill="rgb(238,22,31)" fg:x="19700" fg:w="6"/><text x="36.6392%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (6 samples, 0.01%)</title><rect x="36.3892%" y="501" width="0.0111%" height="15" fill="rgb(222,174,48)" fg:x="19700" fg:w="6"/><text x="36.6392%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="36.4243%" y="325" width="0.0111%" height="15" fill="rgb(206,152,40)" fg:x="19719" fg:w="6"/><text x="36.6743%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.03%)</title><rect x="36.4187%" y="341" width="0.0296%" height="15" fill="rgb(218,99,54)" fg:x="19716" fg:w="16"/><text x="36.6687%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.01%)</title><rect x="36.4353%" y="325" width="0.0129%" height="15" fill="rgb(220,174,26)" fg:x="19725" fg:w="7"/><text x="36.6853%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (32 samples, 0.06%)</title><rect x="36.4575%" y="325" width="0.0591%" height="15" fill="rgb(245,116,9)" fg:x="19737" fg:w="32"/><text x="36.7075%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (61 samples, 0.11%)</title><rect x="36.4113%" y="389" width="0.1127%" height="15" fill="rgb(209,72,35)" fg:x="19712" fg:w="61"/><text x="36.6613%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (61 samples, 0.11%)</title><rect x="36.4113%" y="373" width="0.1127%" height="15" fill="rgb(226,126,21)" fg:x="19712" fg:w="61"/><text x="36.6613%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (61 samples, 0.11%)</title><rect x="36.4113%" y="357" width="0.1127%" height="15" fill="rgb(227,192,1)" fg:x="19712" fg:w="61"/><text x="36.6613%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (41 samples, 0.08%)</title><rect x="36.4483%" y="341" width="0.0757%" height="15" fill="rgb(237,180,29)" fg:x="19732" fg:w="41"/><text x="36.6983%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (67 samples, 0.12%)</title><rect x="36.4039%" y="421" width="0.1238%" height="15" fill="rgb(230,197,35)" fg:x="19708" fg:w="67"/><text x="36.6539%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (67 samples, 0.12%)</title><rect x="36.4039%" y="405" width="0.1238%" height="15" fill="rgb(246,193,31)" fg:x="19708" fg:w="67"/><text x="36.6539%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="36.5406%" y="373" width="0.0129%" height="15" fill="rgb(241,36,4)" fg:x="19782" fg:w="7"/><text x="36.7906%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.01%)</title><rect x="36.5406%" y="357" width="0.0129%" height="15" fill="rgb(241,130,17)" fg:x="19782" fg:w="7"/><text x="36.7906%" y="367.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (11 samples, 0.02%)</title><rect x="36.5536%" y="357" width="0.0203%" height="15" fill="rgb(206,137,32)" fg:x="19789" fg:w="11"/><text x="36.8036%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (10 samples, 0.02%)</title><rect x="36.5554%" y="341" width="0.0185%" height="15" fill="rgb(237,228,51)" fg:x="19790" fg:w="10"/><text x="36.8054%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.02%)</title><rect x="36.5536%" y="373" width="0.0222%" height="15" fill="rgb(243,6,42)" fg:x="19789" fg:w="12"/><text x="36.8036%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (6 samples, 0.01%)</title><rect x="36.5757%" y="373" width="0.0111%" height="15" fill="rgb(251,74,28)" fg:x="19801" fg:w="6"/><text x="36.8257%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (112 samples, 0.21%)</title><rect x="36.4039%" y="469" width="0.2069%" height="15" fill="rgb(218,20,49)" fg:x="19708" fg:w="112"/><text x="36.6539%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (112 samples, 0.21%)</title><rect x="36.4039%" y="453" width="0.2069%" height="15" fill="rgb(238,28,14)" fg:x="19708" fg:w="112"/><text x="36.6539%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (112 samples, 0.21%)</title><rect x="36.4039%" y="437" width="0.2069%" height="15" fill="rgb(229,40,46)" fg:x="19708" fg:w="112"/><text x="36.6539%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (45 samples, 0.08%)</title><rect x="36.5277%" y="421" width="0.0831%" height="15" fill="rgb(244,195,20)" fg:x="19775" fg:w="45"/><text x="36.7777%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (45 samples, 0.08%)</title><rect x="36.5277%" y="405" width="0.0831%" height="15" fill="rgb(253,56,35)" fg:x="19775" fg:w="45"/><text x="36.7777%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (45 samples, 0.08%)</title><rect x="36.5277%" y="389" width="0.0831%" height="15" fill="rgb(210,149,44)" fg:x="19775" fg:w="45"/><text x="36.7777%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.02%)</title><rect x="36.5923%" y="373" width="0.0185%" height="15" fill="rgb(240,135,12)" fg:x="19810" fg:w="10"/><text x="36.8423%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.02%)</title><rect x="36.5923%" y="357" width="0.0185%" height="15" fill="rgb(251,24,50)" fg:x="19810" fg:w="10"/><text x="36.8423%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (32 samples, 0.06%)</title><rect x="36.6570%" y="453" width="0.0591%" height="15" fill="rgb(243,200,47)" fg:x="19845" fg:w="32"/><text x="36.9070%" y="463.50"></text></g><g><title>core::intrinsics::copy (27 samples, 0.05%)</title><rect x="36.6662%" y="437" width="0.0499%" height="15" fill="rgb(224,166,26)" fg:x="19850" fg:w="27"/><text x="36.9162%" y="447.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (22 samples, 0.04%)</title><rect x="36.6755%" y="421" width="0.0406%" height="15" fill="rgb(233,0,47)" fg:x="19855" fg:w="22"/><text x="36.9255%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (48 samples, 0.09%)</title><rect x="36.7808%" y="405" width="0.0887%" height="15" fill="rgb(253,80,5)" fg:x="19912" fg:w="48"/><text x="37.0308%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (33 samples, 0.06%)</title><rect x="36.8085%" y="389" width="0.0610%" height="15" fill="rgb(214,133,25)" fg:x="19927" fg:w="33"/><text x="37.0585%" y="399.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (33 samples, 0.06%)</title><rect x="36.8085%" y="373" width="0.0610%" height="15" fill="rgb(209,27,14)" fg:x="19927" fg:w="33"/><text x="37.0585%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (33 samples, 0.06%)</title><rect x="36.8085%" y="357" width="0.0610%" height="15" fill="rgb(219,102,51)" fg:x="19927" fg:w="33"/><text x="37.0585%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (33 samples, 0.06%)</title><rect x="36.8085%" y="341" width="0.0610%" height="15" fill="rgb(237,18,16)" fg:x="19927" fg:w="33"/><text x="37.0585%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (33 samples, 0.06%)</title><rect x="36.8085%" y="325" width="0.0610%" height="15" fill="rgb(241,85,17)" fg:x="19927" fg:w="33"/><text x="37.0585%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (135 samples, 0.25%)</title><rect x="36.7309%" y="453" width="0.2494%" height="15" fill="rgb(236,90,42)" fg:x="19885" fg:w="135"/><text x="36.9809%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (135 samples, 0.25%)</title><rect x="36.7309%" y="437" width="0.2494%" height="15" fill="rgb(249,57,21)" fg:x="19885" fg:w="135"/><text x="36.9809%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (135 samples, 0.25%)</title><rect x="36.7309%" y="421" width="0.2494%" height="15" fill="rgb(243,12,36)" fg:x="19885" fg:w="135"/><text x="36.9809%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.11%)</title><rect x="36.8694%" y="405" width="0.1108%" height="15" fill="rgb(253,128,47)" fg:x="19960" fg:w="60"/><text x="37.1194%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;alloc::vec::Vec&lt;u32&gt;&gt;&gt; (26 samples, 0.05%)</title><rect x="36.9803%" y="453" width="0.0480%" height="15" fill="rgb(207,33,20)" fg:x="20020" fg:w="26"/><text x="37.2303%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (26 samples, 0.05%)</title><rect x="36.9803%" y="437" width="0.0480%" height="15" fill="rgb(233,215,35)" fg:x="20020" fg:w="26"/><text x="37.2303%" y="447.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (26 samples, 0.05%)</title><rect x="36.9803%" y="421" width="0.0480%" height="15" fill="rgb(249,188,52)" fg:x="20020" fg:w="26"/><text x="37.2303%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (26 samples, 0.05%)</title><rect x="36.9803%" y="405" width="0.0480%" height="15" fill="rgb(225,12,32)" fg:x="20020" fg:w="26"/><text x="37.2303%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (26 samples, 0.05%)</title><rect x="36.9803%" y="389" width="0.0480%" height="15" fill="rgb(247,98,14)" fg:x="20020" fg:w="26"/><text x="37.2303%" y="399.50"></text></g><g><title>core::mem::replace (26 samples, 0.05%)</title><rect x="36.9803%" y="373" width="0.0480%" height="15" fill="rgb(247,219,48)" fg:x="20020" fg:w="26"/><text x="37.2303%" y="383.50"></text></g><g><title>core::ptr::write (26 samples, 0.05%)</title><rect x="36.9803%" y="357" width="0.0480%" height="15" fill="rgb(253,60,48)" fg:x="20020" fg:w="26"/><text x="37.2303%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.02%)</title><rect x="37.0394%" y="325" width="0.0203%" height="15" fill="rgb(245,15,52)" fg:x="20052" fg:w="11"/><text x="37.2894%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.02%)</title><rect x="37.0431%" y="309" width="0.0166%" height="15" fill="rgb(220,133,28)" fg:x="20054" fg:w="9"/><text x="37.2931%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (21 samples, 0.04%)</title><rect x="37.0652%" y="309" width="0.0388%" height="15" fill="rgb(217,180,4)" fg:x="20066" fg:w="21"/><text x="37.3152%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (38 samples, 0.07%)</title><rect x="37.0375%" y="373" width="0.0702%" height="15" fill="rgb(251,24,1)" fg:x="20051" fg:w="38"/><text x="37.2875%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (38 samples, 0.07%)</title><rect x="37.0375%" y="357" width="0.0702%" height="15" fill="rgb(212,185,49)" fg:x="20051" fg:w="38"/><text x="37.2875%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (38 samples, 0.07%)</title><rect x="37.0375%" y="341" width="0.0702%" height="15" fill="rgb(215,175,22)" fg:x="20051" fg:w="38"/><text x="37.2875%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (26 samples, 0.05%)</title><rect x="37.0597%" y="325" width="0.0480%" height="15" fill="rgb(250,205,14)" fg:x="20063" fg:w="26"/><text x="37.3097%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (45 samples, 0.08%)</title><rect x="37.0283%" y="405" width="0.0831%" height="15" fill="rgb(225,211,22)" fg:x="20046" fg:w="45"/><text x="37.2783%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (45 samples, 0.08%)</title><rect x="37.0283%" y="389" width="0.0831%" height="15" fill="rgb(251,179,42)" fg:x="20046" fg:w="45"/><text x="37.2783%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="37.1262%" y="357" width="0.0129%" height="15" fill="rgb(208,216,51)" fg:x="20099" fg:w="7"/><text x="37.3762%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.01%)</title><rect x="37.1262%" y="341" width="0.0129%" height="15" fill="rgb(235,36,11)" fg:x="20099" fg:w="7"/><text x="37.3762%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.02%)</title><rect x="37.1391%" y="341" width="0.0222%" height="15" fill="rgb(213,189,28)" fg:x="20106" fg:w="12"/><text x="37.3891%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (12 samples, 0.02%)</title><rect x="37.1391%" y="325" width="0.0222%" height="15" fill="rgb(227,203,42)" fg:x="20106" fg:w="12"/><text x="37.3891%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (14 samples, 0.03%)</title><rect x="37.1391%" y="357" width="0.0259%" height="15" fill="rgb(244,72,36)" fg:x="20106" fg:w="14"/><text x="37.3891%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (7 samples, 0.01%)</title><rect x="37.1650%" y="357" width="0.0129%" height="15" fill="rgb(213,53,17)" fg:x="20120" fg:w="7"/><text x="37.4150%" y="367.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get_mut (423 samples, 0.78%)</title><rect x="36.4002%" y="485" width="0.7814%" height="15" fill="rgb(207,167,3)" fg:x="19706" fg:w="423"/><text x="36.6502%" y="495.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (305 samples, 0.56%)</title><rect x="36.6182%" y="469" width="0.5634%" height="15" fill="rgb(216,98,30)" fg:x="19824" fg:w="305"/><text x="36.8682%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (83 samples, 0.15%)</title><rect x="37.0283%" y="453" width="0.1533%" height="15" fill="rgb(236,123,15)" fg:x="20046" fg:w="83"/><text x="37.2783%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (83 samples, 0.15%)</title><rect x="37.0283%" y="437" width="0.1533%" height="15" fill="rgb(248,81,50)" fg:x="20046" fg:w="83"/><text x="37.2783%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (83 samples, 0.15%)</title><rect x="37.0283%" y="421" width="0.1533%" height="15" fill="rgb(214,120,4)" fg:x="20046" fg:w="83"/><text x="37.2783%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (38 samples, 0.07%)</title><rect x="37.1114%" y="405" width="0.0702%" height="15" fill="rgb(208,179,34)" fg:x="20091" fg:w="38"/><text x="37.3614%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.07%)</title><rect x="37.1114%" y="389" width="0.0702%" height="15" fill="rgb(227,140,7)" fg:x="20091" fg:w="38"/><text x="37.3614%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (38 samples, 0.07%)</title><rect x="37.1114%" y="373" width="0.0702%" height="15" fill="rgb(214,22,6)" fg:x="20091" fg:w="38"/><text x="37.3614%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.02%)</title><rect x="37.2001%" y="357" width="0.0240%" height="15" fill="rgb(207,137,27)" fg:x="20139" fg:w="13"/><text x="37.4501%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (20 samples, 0.04%)</title><rect x="37.1945%" y="373" width="0.0369%" height="15" fill="rgb(210,8,46)" fg:x="20136" fg:w="20"/><text x="37.4445%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (42 samples, 0.08%)</title><rect x="37.2389%" y="357" width="0.0776%" height="15" fill="rgb(240,16,54)" fg:x="20160" fg:w="42"/><text x="37.4889%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (74 samples, 0.14%)</title><rect x="37.1890%" y="421" width="0.1367%" height="15" fill="rgb(211,209,29)" fg:x="20133" fg:w="74"/><text x="37.4390%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (74 samples, 0.14%)</title><rect x="37.1890%" y="405" width="0.1367%" height="15" fill="rgb(226,228,24)" fg:x="20133" fg:w="74"/><text x="37.4390%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (74 samples, 0.14%)</title><rect x="37.1890%" y="389" width="0.1367%" height="15" fill="rgb(222,84,9)" fg:x="20133" fg:w="74"/><text x="37.4390%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (51 samples, 0.09%)</title><rect x="37.2315%" y="373" width="0.0942%" height="15" fill="rgb(234,203,30)" fg:x="20156" fg:w="51"/><text x="37.4815%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (77 samples, 0.14%)</title><rect x="37.1890%" y="453" width="0.1422%" height="15" fill="rgb(238,109,14)" fg:x="20133" fg:w="77"/><text x="37.4390%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (77 samples, 0.14%)</title><rect x="37.1890%" y="437" width="0.1422%" height="15" fill="rgb(233,206,34)" fg:x="20133" fg:w="77"/><text x="37.4390%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="37.3405%" y="405" width="0.0185%" height="15" fill="rgb(220,167,47)" fg:x="20215" fg:w="10"/><text x="37.5905%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (10 samples, 0.02%)</title><rect x="37.3405%" y="389" width="0.0185%" height="15" fill="rgb(238,105,10)" fg:x="20215" fg:w="10"/><text x="37.5905%" y="399.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.02%)</title><rect x="37.3589%" y="389" width="0.0222%" height="15" fill="rgb(213,227,17)" fg:x="20225" fg:w="12"/><text x="37.6089%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (12 samples, 0.02%)</title><rect x="37.3589%" y="373" width="0.0222%" height="15" fill="rgb(217,132,38)" fg:x="20225" fg:w="12"/><text x="37.6089%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (17 samples, 0.03%)</title><rect x="37.3589%" y="405" width="0.0314%" height="15" fill="rgb(242,146,4)" fg:x="20225" fg:w="17"/><text x="37.6089%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (8 samples, 0.01%)</title><rect x="37.3903%" y="405" width="0.0148%" height="15" fill="rgb(212,61,9)" fg:x="20242" fg:w="8"/><text x="37.6403%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (51 samples, 0.09%)</title><rect x="37.3312%" y="453" width="0.0942%" height="15" fill="rgb(247,126,22)" fg:x="20210" fg:w="51"/><text x="37.5812%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (51 samples, 0.09%)</title><rect x="37.3312%" y="437" width="0.0942%" height="15" fill="rgb(220,196,2)" fg:x="20210" fg:w="51"/><text x="37.5812%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (50 samples, 0.09%)</title><rect x="37.3331%" y="421" width="0.0924%" height="15" fill="rgb(208,46,4)" fg:x="20211" fg:w="50"/><text x="37.5831%" y="431.50"></text></g><g><title>core::cell::RefMut&lt;T&gt;::map (556 samples, 1.03%)</title><rect x="36.4002%" y="517" width="1.0270%" height="15" fill="rgb(252,104,46)" fg:x="19706" fg:w="556"/><text x="36.6502%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut::{{closure}} (556 samples, 1.03%)</title><rect x="36.4002%" y="501" width="1.0270%" height="15" fill="rgb(237,152,48)" fg:x="19706" fg:w="556"/><text x="36.6502%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (132 samples, 0.24%)</title><rect x="37.1834%" y="485" width="0.2438%" height="15" fill="rgb(221,59,37)" fg:x="20130" fg:w="132"/><text x="37.4334%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (130 samples, 0.24%)</title><rect x="37.1871%" y="469" width="0.2401%" height="15" fill="rgb(209,202,51)" fg:x="20132" fg:w="130"/><text x="37.4371%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut (4,181 samples, 7.72%)</title><rect x="29.7486%" y="533" width="7.7230%" height="15" fill="rgb(228,81,30)" fg:x="16105" fg:w="4181"/><text x="29.9986%" y="543.50">&lt;yakvdb::di..</text></g><g><title>core::result::Result&lt;T,E&gt;::ok (24 samples, 0.04%)</title><rect x="37.4273%" y="517" width="0.0443%" height="15" fill="rgb(227,42,39)" fg:x="20262" fg:w="24"/><text x="37.6773%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="37.4771%" y="421" width="0.0222%" height="15" fill="rgb(221,26,2)" fg:x="20289" fg:w="12"/><text x="37.7271%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="37.4771%" y="405" width="0.0222%" height="15" fill="rgb(254,61,31)" fg:x="20289" fg:w="12"/><text x="37.7271%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="37.4771%" y="389" width="0.0222%" height="15" fill="rgb(222,173,38)" fg:x="20289" fg:w="12"/><text x="37.7271%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="37.4845%" y="373" width="0.0148%" height="15" fill="rgb(218,50,12)" fg:x="20293" fg:w="8"/><text x="37.7345%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="37.4845%" y="357" width="0.0148%" height="15" fill="rgb(223,88,40)" fg:x="20293" fg:w="8"/><text x="37.7345%" y="367.50"></text></g><g><title>hashbrown::map::make_insert_hash (13 samples, 0.02%)</title><rect x="37.4771%" y="453" width="0.0240%" height="15" fill="rgb(237,54,19)" fg:x="20289" fg:w="13"/><text x="37.7271%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.02%)</title><rect x="37.4771%" y="437" width="0.0240%" height="15" fill="rgb(251,129,25)" fg:x="20289" fg:w="13"/><text x="37.7271%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6 samples, 0.01%)</title><rect x="37.5012%" y="453" width="0.0111%" height="15" fill="rgb(238,97,19)" fg:x="20302" fg:w="6"/><text x="37.7512%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="37.5012%" y="437" width="0.0111%" height="15" fill="rgb(240,169,18)" fg:x="20302" fg:w="6"/><text x="37.7512%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.01%)</title><rect x="37.5012%" y="421" width="0.0111%" height="15" fill="rgb(230,187,49)" fg:x="20302" fg:w="6"/><text x="37.7512%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (9 samples, 0.02%)</title><rect x="37.5122%" y="437" width="0.0166%" height="15" fill="rgb(209,44,26)" fg:x="20308" fg:w="9"/><text x="37.7622%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (34 samples, 0.06%)</title><rect x="37.4716%" y="517" width="0.0628%" height="15" fill="rgb(244,0,6)" fg:x="20286" fg:w="34"/><text x="37.7216%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (34 samples, 0.06%)</title><rect x="37.4716%" y="501" width="0.0628%" height="15" fill="rgb(248,18,21)" fg:x="20286" fg:w="34"/><text x="37.7216%" y="511.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (34 samples, 0.06%)</title><rect x="37.4716%" y="485" width="0.0628%" height="15" fill="rgb(245,180,19)" fg:x="20286" fg:w="34"/><text x="37.7216%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (34 samples, 0.06%)</title><rect x="37.4716%" y="469" width="0.0628%" height="15" fill="rgb(252,118,36)" fg:x="20286" fg:w="34"/><text x="37.7216%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.02%)</title><rect x="37.5122%" y="453" width="0.0222%" height="15" fill="rgb(210,224,19)" fg:x="20308" fg:w="12"/><text x="37.7622%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="37.5418%" y="389" width="0.0166%" height="15" fill="rgb(218,30,24)" fg:x="20324" fg:w="9"/><text x="37.7918%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="37.5418%" y="373" width="0.0166%" height="15" fill="rgb(219,75,50)" fg:x="20324" fg:w="9"/><text x="37.7918%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="37.5418%" y="357" width="0.0166%" height="15" fill="rgb(234,72,50)" fg:x="20324" fg:w="9"/><text x="37.7918%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.01%)</title><rect x="37.5473%" y="341" width="0.0111%" height="15" fill="rgb(219,100,48)" fg:x="20327" fg:w="6"/><text x="37.7973%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.02%)</title><rect x="37.5418%" y="421" width="0.0185%" height="15" fill="rgb(253,5,41)" fg:x="20324" fg:w="10"/><text x="37.7918%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="37.5418%" y="405" width="0.0185%" height="15" fill="rgb(247,181,11)" fg:x="20324" fg:w="10"/><text x="37.7918%" y="415.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (26 samples, 0.05%)</title><rect x="37.5399%" y="485" width="0.0480%" height="15" fill="rgb(222,223,25)" fg:x="20323" fg:w="26"/><text x="37.7899%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (26 samples, 0.05%)</title><rect x="37.5399%" y="469" width="0.0480%" height="15" fill="rgb(214,198,28)" fg:x="20323" fg:w="26"/><text x="37.7899%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (26 samples, 0.05%)</title><rect x="37.5399%" y="453" width="0.0480%" height="15" fill="rgb(230,46,43)" fg:x="20323" fg:w="26"/><text x="37.7899%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.05%)</title><rect x="37.5399%" y="437" width="0.0480%" height="15" fill="rgb(233,65,53)" fg:x="20323" fg:w="26"/><text x="37.7899%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.03%)</title><rect x="37.5603%" y="421" width="0.0277%" height="15" fill="rgb(221,121,27)" fg:x="20334" fg:w="15"/><text x="37.8103%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.03%)</title><rect x="37.5603%" y="405" width="0.0277%" height="15" fill="rgb(247,70,47)" fg:x="20334" fg:w="15"/><text x="37.8103%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.03%)</title><rect x="37.5603%" y="389" width="0.0277%" height="15" fill="rgb(228,85,35)" fg:x="20334" fg:w="15"/><text x="37.8103%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (28 samples, 0.05%)</title><rect x="37.5399%" y="501" width="0.0517%" height="15" fill="rgb(209,50,18)" fg:x="20323" fg:w="28"/><text x="37.7899%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (13 samples, 0.02%)</title><rect x="37.5917%" y="501" width="0.0240%" height="15" fill="rgb(250,19,35)" fg:x="20351" fg:w="13"/><text x="37.8417%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (12 samples, 0.02%)</title><rect x="37.5935%" y="485" width="0.0222%" height="15" fill="rgb(253,107,29)" fg:x="20352" fg:w="12"/><text x="37.8435%" y="495.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (12 samples, 0.02%)</title><rect x="37.5935%" y="469" width="0.0222%" height="15" fill="rgb(252,179,29)" fg:x="20352" fg:w="12"/><text x="37.8435%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.02%)</title><rect x="37.5935%" y="453" width="0.0222%" height="15" fill="rgb(238,194,6)" fg:x="20352" fg:w="12"/><text x="37.8435%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (7 samples, 0.01%)</title><rect x="37.6027%" y="437" width="0.0129%" height="15" fill="rgb(238,164,29)" fg:x="20357" fg:w="7"/><text x="37.8527%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.01%)</title><rect x="37.6027%" y="421" width="0.0129%" height="15" fill="rgb(224,25,9)" fg:x="20357" fg:w="7"/><text x="37.8527%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (7 samples, 0.01%)</title><rect x="37.6027%" y="405" width="0.0129%" height="15" fill="rgb(244,153,23)" fg:x="20357" fg:w="7"/><text x="37.8527%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (13 samples, 0.02%)</title><rect x="37.6157%" y="453" width="0.0240%" height="15" fill="rgb(212,203,14)" fg:x="20364" fg:w="13"/><text x="37.8657%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (13 samples, 0.02%)</title><rect x="37.6157%" y="437" width="0.0240%" height="15" fill="rgb(220,164,20)" fg:x="20364" fg:w="13"/><text x="37.8657%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.02%)</title><rect x="37.6157%" y="421" width="0.0240%" height="15" fill="rgb(222,203,48)" fg:x="20364" fg:w="13"/><text x="37.8657%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.02%)</title><rect x="37.6231%" y="405" width="0.0166%" height="15" fill="rgb(215,159,22)" fg:x="20368" fg:w="9"/><text x="37.8731%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.02%)</title><rect x="37.6231%" y="389" width="0.0166%" height="15" fill="rgb(216,183,47)" fg:x="20368" fg:w="9"/><text x="37.8731%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.02%)</title><rect x="37.6231%" y="373" width="0.0166%" height="15" fill="rgb(229,195,25)" fg:x="20368" fg:w="9"/><text x="37.8731%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (9 samples, 0.02%)</title><rect x="37.6692%" y="389" width="0.0166%" height="15" fill="rgb(224,132,51)" fg:x="20393" fg:w="9"/><text x="37.9192%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (20 samples, 0.04%)</title><rect x="37.6619%" y="437" width="0.0369%" height="15" fill="rgb(240,63,7)" fg:x="20389" fg:w="20"/><text x="37.9119%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.04%)</title><rect x="37.6619%" y="421" width="0.0369%" height="15" fill="rgb(249,182,41)" fg:x="20389" fg:w="20"/><text x="37.9119%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (20 samples, 0.04%)</title><rect x="37.6619%" y="405" width="0.0369%" height="15" fill="rgb(243,47,26)" fg:x="20389" fg:w="20"/><text x="37.9119%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="37.6859%" y="389" width="0.0129%" height="15" fill="rgb(233,48,2)" fg:x="20402" fg:w="7"/><text x="37.9359%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.01%)</title><rect x="37.7080%" y="389" width="0.0148%" height="15" fill="rgb(244,165,34)" fg:x="20414" fg:w="8"/><text x="37.9580%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.01%)</title><rect x="37.7080%" y="373" width="0.0148%" height="15" fill="rgb(207,89,7)" fg:x="20414" fg:w="8"/><text x="37.9580%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="37.7117%" y="357" width="0.0111%" height="15" fill="rgb(244,117,36)" fg:x="20416" fg:w="6"/><text x="37.9617%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="37.7117%" y="341" width="0.0111%" height="15" fill="rgb(226,144,34)" fg:x="20416" fg:w="6"/><text x="37.9617%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="37.7117%" y="325" width="0.0111%" height="15" fill="rgb(213,23,19)" fg:x="20416" fg:w="6"/><text x="37.9617%" y="335.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get_mut (61 samples, 0.11%)</title><rect x="37.6157%" y="469" width="0.1127%" height="15" fill="rgb(217,75,12)" fg:x="20364" fg:w="61"/><text x="37.8657%" y="479.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (47 samples, 0.09%)</title><rect x="37.6415%" y="453" width="0.0868%" height="15" fill="rgb(224,159,17)" fg:x="20378" fg:w="47"/><text x="37.8915%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (11 samples, 0.02%)</title><rect x="37.7080%" y="437" width="0.0203%" height="15" fill="rgb(217,118,1)" fg:x="20414" fg:w="11"/><text x="37.9580%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (11 samples, 0.02%)</title><rect x="37.7080%" y="421" width="0.0203%" height="15" fill="rgb(232,180,48)" fg:x="20414" fg:w="11"/><text x="37.9580%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.02%)</title><rect x="37.7080%" y="405" width="0.0203%" height="15" fill="rgb(230,27,33)" fg:x="20414" fg:w="11"/><text x="37.9580%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="37.7284%" y="405" width="0.0111%" height="15" fill="rgb(205,31,21)" fg:x="20425" fg:w="6"/><text x="37.9784%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="37.7284%" y="389" width="0.0111%" height="15" fill="rgb(253,59,4)" fg:x="20425" fg:w="6"/><text x="37.9784%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="37.7284%" y="373" width="0.0111%" height="15" fill="rgb(224,201,9)" fg:x="20425" fg:w="6"/><text x="37.9784%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.01%)</title><rect x="37.7284%" y="437" width="0.0129%" height="15" fill="rgb(229,206,30)" fg:x="20425" fg:w="7"/><text x="37.9784%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="37.7284%" y="421" width="0.0129%" height="15" fill="rgb(212,67,47)" fg:x="20425" fg:w="7"/><text x="37.9784%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::root_mut (154 samples, 0.28%)</title><rect x="37.4716%" y="533" width="0.2845%" height="15" fill="rgb(211,96,50)" fg:x="20286" fg:w="154"/><text x="37.7216%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut (120 samples, 0.22%)</title><rect x="37.5344%" y="517" width="0.2217%" height="15" fill="rgb(252,114,18)" fg:x="20320" fg:w="120"/><text x="37.7844%" y="527.50"></text></g><g><title>core::cell::RefMut&lt;T&gt;::map (76 samples, 0.14%)</title><rect x="37.6157%" y="501" width="0.1404%" height="15" fill="rgb(223,58,37)" fg:x="20364" fg:w="76"/><text x="37.8657%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut::{{closure}} (76 samples, 0.14%)</title><rect x="37.6157%" y="485" width="0.1404%" height="15" fill="rgb(237,70,4)" fg:x="20364" fg:w="76"/><text x="37.8657%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (15 samples, 0.03%)</title><rect x="37.7284%" y="469" width="0.0277%" height="15" fill="rgb(244,85,46)" fg:x="20425" fg:w="15"/><text x="37.9784%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (15 samples, 0.03%)</title><rect x="37.7284%" y="453" width="0.0277%" height="15" fill="rgb(223,39,52)" fg:x="20425" fg:w="15"/><text x="37.9784%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (8 samples, 0.01%)</title><rect x="37.7413%" y="437" width="0.0148%" height="15" fill="rgb(218,200,14)" fg:x="20432" fg:w="8"/><text x="37.9913%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.01%)</title><rect x="37.7413%" y="421" width="0.0148%" height="15" fill="rgb(208,171,16)" fg:x="20432" fg:w="8"/><text x="37.9913%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.01%)</title><rect x="37.7413%" y="405" width="0.0148%" height="15" fill="rgb(234,200,18)" fg:x="20432" fg:w="8"/><text x="37.9913%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.03%)</title><rect x="37.7653%" y="389" width="0.0296%" height="15" fill="rgb(228,45,11)" fg:x="20445" fg:w="16"/><text x="38.0153%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (16 samples, 0.03%)</title><rect x="37.7653%" y="373" width="0.0296%" height="15" fill="rgb(237,182,11)" fg:x="20445" fg:w="16"/><text x="38.0153%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.03%)</title><rect x="37.7653%" y="357" width="0.0296%" height="15" fill="rgb(241,175,49)" fg:x="20445" fg:w="16"/><text x="38.0153%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (16 samples, 0.03%)</title><rect x="37.7653%" y="341" width="0.0296%" height="15" fill="rgb(247,38,35)" fg:x="20445" fg:w="16"/><text x="38.0153%" y="351.50"></text></g><g><title>__GI___libc_malloc (61 samples, 0.11%)</title><rect x="37.8189%" y="181" width="0.1127%" height="15" fill="rgb(228,39,49)" fg:x="20474" fg:w="61"/><text x="38.0689%" y="191.50"></text></g><g><title>_int_malloc (48 samples, 0.09%)</title><rect x="37.8429%" y="165" width="0.0887%" height="15" fill="rgb(226,101,26)" fg:x="20487" fg:w="48"/><text x="38.0929%" y="175.50"></text></g><g><title>unlink_chunk.isra.0 (8 samples, 0.01%)</title><rect x="37.9168%" y="149" width="0.0148%" height="15" fill="rgb(206,141,19)" fg:x="20527" fg:w="8"/><text x="38.1668%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (66 samples, 0.12%)</title><rect x="37.8115%" y="277" width="0.1219%" height="15" fill="rgb(211,200,13)" fg:x="20470" fg:w="66"/><text x="38.0615%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (65 samples, 0.12%)</title><rect x="37.8133%" y="261" width="0.1201%" height="15" fill="rgb(241,121,6)" fg:x="20471" fg:w="65"/><text x="38.0633%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (65 samples, 0.12%)</title><rect x="37.8133%" y="245" width="0.1201%" height="15" fill="rgb(234,221,29)" fg:x="20471" fg:w="65"/><text x="38.0633%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (65 samples, 0.12%)</title><rect x="37.8133%" y="229" width="0.1201%" height="15" fill="rgb(229,136,5)" fg:x="20471" fg:w="65"/><text x="38.0633%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (65 samples, 0.12%)</title><rect x="37.8133%" y="213" width="0.1201%" height="15" fill="rgb(238,36,11)" fg:x="20471" fg:w="65"/><text x="38.0633%" y="223.50"></text></g><g><title>alloc::alloc::alloc (63 samples, 0.12%)</title><rect x="37.8170%" y="197" width="0.1164%" height="15" fill="rgb(251,55,41)" fg:x="20473" fg:w="63"/><text x="38.0670%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (73 samples, 0.13%)</title><rect x="37.8115%" y="341" width="0.1348%" height="15" fill="rgb(242,34,40)" fg:x="20470" fg:w="73"/><text x="38.0615%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (73 samples, 0.13%)</title><rect x="37.8115%" y="325" width="0.1348%" height="15" fill="rgb(215,42,17)" fg:x="20470" fg:w="73"/><text x="38.0615%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (73 samples, 0.13%)</title><rect x="37.8115%" y="309" width="0.1348%" height="15" fill="rgb(207,44,46)" fg:x="20470" fg:w="73"/><text x="38.0615%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (73 samples, 0.13%)</title><rect x="37.8115%" y="293" width="0.1348%" height="15" fill="rgb(211,206,28)" fg:x="20470" fg:w="73"/><text x="38.0615%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (7 samples, 0.01%)</title><rect x="37.9334%" y="277" width="0.0129%" height="15" fill="rgb(237,167,16)" fg:x="20536" fg:w="7"/><text x="38.1834%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="37.9334%" y="261" width="0.0129%" height="15" fill="rgb(233,66,6)" fg:x="20536" fg:w="7"/><text x="38.1834%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.19%)</title><rect x="37.7653%" y="405" width="0.1921%" height="15" fill="rgb(246,123,29)" fg:x="20445" fg:w="104"/><text x="38.0153%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (88 samples, 0.16%)</title><rect x="37.7949%" y="389" width="0.1626%" height="15" fill="rgb(209,62,40)" fg:x="20461" fg:w="88"/><text x="38.0449%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (81 samples, 0.15%)</title><rect x="37.8078%" y="373" width="0.1496%" height="15" fill="rgb(218,4,25)" fg:x="20468" fg:w="81"/><text x="38.0578%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::copy::{{closure}} (81 samples, 0.15%)</title><rect x="37.8078%" y="357" width="0.1496%" height="15" fill="rgb(253,91,49)" fg:x="20468" fg:w="81"/><text x="38.0578%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="37.9574%" y="405" width="0.0111%" height="15" fill="rgb(228,155,29)" fg:x="20549" fg:w="6"/><text x="38.2074%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="37.9574%" y="389" width="0.0111%" height="15" fill="rgb(243,57,37)" fg:x="20549" fg:w="6"/><text x="38.2074%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="37.9574%" y="373" width="0.0111%" height="15" fill="rgb(244,167,17)" fg:x="20549" fg:w="6"/><text x="38.2074%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.01%)</title><rect x="37.9574%" y="357" width="0.0111%" height="15" fill="rgb(207,181,38)" fg:x="20549" fg:w="6"/><text x="38.2074%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::copy (126 samples, 0.23%)</title><rect x="37.7579%" y="517" width="0.2327%" height="15" fill="rgb(211,8,23)" fg:x="20441" fg:w="126"/><text x="38.0079%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (126 samples, 0.23%)</title><rect x="37.7579%" y="501" width="0.2327%" height="15" fill="rgb(235,11,44)" fg:x="20441" fg:w="126"/><text x="38.0079%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (126 samples, 0.23%)</title><rect x="37.7579%" y="485" width="0.2327%" height="15" fill="rgb(248,18,52)" fg:x="20441" fg:w="126"/><text x="38.0079%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (126 samples, 0.23%)</title><rect x="37.7579%" y="469" width="0.2327%" height="15" fill="rgb(208,4,7)" fg:x="20441" fg:w="126"/><text x="38.0079%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (126 samples, 0.23%)</title><rect x="37.7579%" y="453" width="0.2327%" height="15" fill="rgb(240,17,39)" fg:x="20441" fg:w="126"/><text x="38.0079%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (126 samples, 0.23%)</title><rect x="37.7579%" y="437" width="0.2327%" height="15" fill="rgb(207,170,3)" fg:x="20441" fg:w="126"/><text x="38.0079%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (126 samples, 0.23%)</title><rect x="37.7579%" y="421" width="0.2327%" height="15" fill="rgb(236,100,52)" fg:x="20441" fg:w="126"/><text x="38.0079%" y="431.50"></text></g><g><title>core::ptr::write (12 samples, 0.02%)</title><rect x="37.9685%" y="405" width="0.0222%" height="15" fill="rgb(246,78,51)" fg:x="20555" fg:w="12"/><text x="38.2185%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (7 samples, 0.01%)</title><rect x="37.9980%" y="485" width="0.0129%" height="15" fill="rgb(211,17,15)" fg:x="20571" fg:w="7"/><text x="38.2480%" y="495.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (6 samples, 0.01%)</title><rect x="37.9999%" y="469" width="0.0111%" height="15" fill="rgb(209,59,46)" fg:x="20572" fg:w="6"/><text x="38.2499%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::fits (10 samples, 0.02%)</title><rect x="38.0110%" y="485" width="0.0185%" height="15" fill="rgb(210,92,25)" fg:x="20578" fg:w="10"/><text x="38.2610%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (10 samples, 0.02%)</title><rect x="38.0110%" y="469" width="0.0185%" height="15" fill="rgb(238,174,52)" fg:x="20578" fg:w="10"/><text x="38.2610%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (10 samples, 0.02%)</title><rect x="38.0110%" y="453" width="0.0185%" height="15" fill="rgb(230,73,7)" fg:x="20578" fg:w="10"/><text x="38.2610%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (10 samples, 0.02%)</title><rect x="38.0110%" y="437" width="0.0185%" height="15" fill="rgb(243,124,40)" fg:x="20578" fg:w="10"/><text x="38.2610%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (10 samples, 0.02%)</title><rect x="38.0110%" y="421" width="0.0185%" height="15" fill="rgb(244,170,11)" fg:x="20578" fg:w="10"/><text x="38.2610%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.02%)</title><rect x="38.0110%" y="405" width="0.0185%" height="15" fill="rgb(207,114,54)" fg:x="20578" fg:w="10"/><text x="38.2610%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.02%)</title><rect x="38.0110%" y="389" width="0.0185%" height="15" fill="rgb(205,42,20)" fg:x="20578" fg:w="10"/><text x="38.2610%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.02%)</title><rect x="38.0110%" y="373" width="0.0185%" height="15" fill="rgb(230,30,28)" fg:x="20578" fg:w="10"/><text x="38.2610%" y="383.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (10 samples, 0.02%)</title><rect x="38.0110%" y="357" width="0.0185%" height="15" fill="rgb(205,73,54)" fg:x="20578" fg:w="10"/><text x="38.2610%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (9 samples, 0.02%)</title><rect x="38.0128%" y="341" width="0.0166%" height="15" fill="rgb(254,227,23)" fg:x="20579" fg:w="9"/><text x="38.2628%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (8 samples, 0.01%)</title><rect x="38.0147%" y="325" width="0.0148%" height="15" fill="rgb(228,202,34)" fg:x="20580" fg:w="8"/><text x="38.2647%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.04%)</title><rect x="38.0331%" y="389" width="0.0388%" height="15" fill="rgb(222,225,37)" fg:x="20590" fg:w="21"/><text x="38.2831%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (21 samples, 0.04%)</title><rect x="38.0331%" y="373" width="0.0388%" height="15" fill="rgb(221,14,54)" fg:x="20590" fg:w="21"/><text x="38.2831%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.04%)</title><rect x="38.0331%" y="357" width="0.0388%" height="15" fill="rgb(254,102,2)" fg:x="20590" fg:w="21"/><text x="38.2831%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (19 samples, 0.04%)</title><rect x="38.0368%" y="341" width="0.0351%" height="15" fill="rgb(232,104,17)" fg:x="20592" fg:w="19"/><text x="38.2868%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.01%)</title><rect x="38.0608%" y="325" width="0.0111%" height="15" fill="rgb(250,220,14)" fg:x="20605" fg:w="6"/><text x="38.3108%" y="335.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (6 samples, 0.01%)</title><rect x="38.0608%" y="309" width="0.0111%" height="15" fill="rgb(241,158,9)" fg:x="20605" fg:w="6"/><text x="38.3108%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.02%)</title><rect x="38.0719%" y="389" width="0.0240%" height="15" fill="rgb(246,9,43)" fg:x="20611" fg:w="13"/><text x="38.3219%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.02%)</title><rect x="38.0719%" y="373" width="0.0240%" height="15" fill="rgb(206,73,33)" fg:x="20611" fg:w="13"/><text x="38.3219%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.02%)</title><rect x="38.0719%" y="357" width="0.0240%" height="15" fill="rgb(222,79,8)" fg:x="20611" fg:w="13"/><text x="38.3219%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.02%)</title><rect x="38.0719%" y="341" width="0.0240%" height="15" fill="rgb(234,8,54)" fg:x="20611" fg:w="13"/><text x="38.3219%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.02%)</title><rect x="38.0719%" y="325" width="0.0240%" height="15" fill="rgb(209,134,38)" fg:x="20611" fg:w="13"/><text x="38.3219%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.02%)</title><rect x="38.0719%" y="309" width="0.0240%" height="15" fill="rgb(230,127,29)" fg:x="20611" fg:w="13"/><text x="38.3219%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.02%)</title><rect x="38.0719%" y="293" width="0.0240%" height="15" fill="rgb(242,44,41)" fg:x="20611" fg:w="13"/><text x="38.3219%" y="303.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.02%)</title><rect x="38.0719%" y="277" width="0.0240%" height="15" fill="rgb(222,56,43)" fg:x="20611" fg:w="13"/><text x="38.3219%" y="287.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.02%)</title><rect x="38.0719%" y="261" width="0.0240%" height="15" fill="rgb(238,39,47)" fg:x="20611" fg:w="13"/><text x="38.3219%" y="271.50"></text></g><g><title>_int_realloc (13 samples, 0.02%)</title><rect x="38.0719%" y="245" width="0.0240%" height="15" fill="rgb(226,79,43)" fg:x="20611" fg:w="13"/><text x="38.3219%" y="255.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="38.0756%" y="229" width="0.0203%" height="15" fill="rgb(242,105,53)" fg:x="20613" fg:w="11"/><text x="38.3256%" y="239.50"></text></g><g><title>malloc_consolidate (9 samples, 0.02%)</title><rect x="38.0793%" y="213" width="0.0166%" height="15" fill="rgb(251,132,46)" fg:x="20615" fg:w="9"/><text x="38.3293%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (36 samples, 0.07%)</title><rect x="38.0313%" y="421" width="0.0665%" height="15" fill="rgb(231,77,14)" fg:x="20589" fg:w="36"/><text x="38.2813%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (36 samples, 0.07%)</title><rect x="38.0313%" y="405" width="0.0665%" height="15" fill="rgb(240,135,9)" fg:x="20589" fg:w="36"/><text x="38.2813%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (38 samples, 0.07%)</title><rect x="38.0313%" y="485" width="0.0702%" height="15" fill="rgb(248,109,14)" fg:x="20589" fg:w="38"/><text x="38.2813%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (38 samples, 0.07%)</title><rect x="38.0313%" y="469" width="0.0702%" height="15" fill="rgb(227,146,52)" fg:x="20589" fg:w="38"/><text x="38.2813%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 0.07%)</title><rect x="38.0313%" y="453" width="0.0702%" height="15" fill="rgb(232,54,3)" fg:x="20589" fg:w="38"/><text x="38.2813%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (38 samples, 0.07%)</title><rect x="38.0313%" y="437" width="0.0702%" height="15" fill="rgb(229,201,43)" fg:x="20589" fg:w="38"/><text x="38.2813%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (12 samples, 0.02%)</title><rect x="38.1033%" y="437" width="0.0222%" height="15" fill="rgb(252,161,33)" fg:x="20628" fg:w="12"/><text x="38.3533%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (12 samples, 0.02%)</title><rect x="38.1033%" y="421" width="0.0222%" height="15" fill="rgb(226,146,40)" fg:x="20628" fg:w="12"/><text x="38.3533%" y="431.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (12 samples, 0.02%)</title><rect x="38.1033%" y="405" width="0.0222%" height="15" fill="rgb(219,47,25)" fg:x="20628" fg:w="12"/><text x="38.3533%" y="415.50"></text></g><g><title>yakvdb::disk::block::put_slot (10 samples, 0.02%)</title><rect x="38.1070%" y="389" width="0.0185%" height="15" fill="rgb(250,135,13)" fg:x="20630" fg:w="10"/><text x="38.3570%" y="399.50"></text></g><g><title>yakvdb::disk::block::put_u32 (9 samples, 0.02%)</title><rect x="38.1089%" y="373" width="0.0166%" height="15" fill="rgb(219,229,18)" fg:x="20631" fg:w="9"/><text x="38.3589%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15 samples, 0.03%)</title><rect x="38.1015%" y="485" width="0.0277%" height="15" fill="rgb(217,152,27)" fg:x="20627" fg:w="15"/><text x="38.3515%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.03%)</title><rect x="38.1015%" y="469" width="0.0277%" height="15" fill="rgb(225,71,47)" fg:x="20627" fg:w="15"/><text x="38.3515%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (15 samples, 0.03%)</title><rect x="38.1015%" y="453" width="0.0277%" height="15" fill="rgb(220,139,14)" fg:x="20627" fg:w="15"/><text x="38.3515%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::put_ref (77 samples, 0.14%)</title><rect x="37.9962%" y="517" width="0.1422%" height="15" fill="rgb(247,54,32)" fg:x="20570" fg:w="77"/><text x="38.2462%" y="527.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry (77 samples, 0.14%)</title><rect x="37.9962%" y="501" width="0.1422%" height="15" fill="rgb(252,131,39)" fg:x="20570" fg:w="77"/><text x="38.2462%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="38.1477%" y="405" width="0.0148%" height="15" fill="rgb(210,108,39)" fg:x="20652" fg:w="8"/><text x="38.3977%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (8 samples, 0.01%)</title><rect x="38.1477%" y="389" width="0.0148%" height="15" fill="rgb(205,23,29)" fg:x="20652" fg:w="8"/><text x="38.3977%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.01%)</title><rect x="38.1477%" y="373" width="0.0148%" height="15" fill="rgb(246,139,46)" fg:x="20652" fg:w="8"/><text x="38.3977%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (8 samples, 0.01%)</title><rect x="38.1477%" y="357" width="0.0148%" height="15" fill="rgb(250,81,26)" fg:x="20652" fg:w="8"/><text x="38.3977%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (17 samples, 0.03%)</title><rect x="38.1458%" y="421" width="0.0314%" height="15" fill="rgb(214,104,7)" fg:x="20651" fg:w="17"/><text x="38.3958%" y="431.50"></text></g><g><title>__GI___libc_malloc (25 samples, 0.05%)</title><rect x="38.1994%" y="181" width="0.0462%" height="15" fill="rgb(233,189,8)" fg:x="20680" fg:w="25"/><text x="38.4494%" y="191.50"></text></g><g><title>_int_malloc (22 samples, 0.04%)</title><rect x="38.2049%" y="165" width="0.0406%" height="15" fill="rgb(228,141,17)" fg:x="20683" fg:w="22"/><text x="38.4549%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31 samples, 0.06%)</title><rect x="38.1920%" y="277" width="0.0573%" height="15" fill="rgb(247,157,1)" fg:x="20676" fg:w="31"/><text x="38.4420%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.05%)</title><rect x="38.1957%" y="261" width="0.0536%" height="15" fill="rgb(249,225,5)" fg:x="20678" fg:w="29"/><text x="38.4457%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (29 samples, 0.05%)</title><rect x="38.1957%" y="245" width="0.0536%" height="15" fill="rgb(242,55,13)" fg:x="20678" fg:w="29"/><text x="38.4457%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.05%)</title><rect x="38.1957%" y="229" width="0.0536%" height="15" fill="rgb(230,49,50)" fg:x="20678" fg:w="29"/><text x="38.4457%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.05%)</title><rect x="38.1957%" y="213" width="0.0536%" height="15" fill="rgb(241,111,38)" fg:x="20678" fg:w="29"/><text x="38.4457%" y="223.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.05%)</title><rect x="38.1975%" y="197" width="0.0517%" height="15" fill="rgb(252,155,4)" fg:x="20679" fg:w="28"/><text x="38.4475%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (34 samples, 0.06%)</title><rect x="38.1920%" y="341" width="0.0628%" height="15" fill="rgb(212,69,32)" fg:x="20676" fg:w="34"/><text x="38.4420%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34 samples, 0.06%)</title><rect x="38.1920%" y="325" width="0.0628%" height="15" fill="rgb(243,107,47)" fg:x="20676" fg:w="34"/><text x="38.4420%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (34 samples, 0.06%)</title><rect x="38.1920%" y="309" width="0.0628%" height="15" fill="rgb(247,130,12)" fg:x="20676" fg:w="34"/><text x="38.4420%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34 samples, 0.06%)</title><rect x="38.1920%" y="293" width="0.0628%" height="15" fill="rgb(233,74,16)" fg:x="20676" fg:w="34"/><text x="38.4420%" y="303.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (43 samples, 0.08%)</title><rect x="38.1809%" y="357" width="0.0794%" height="15" fill="rgb(208,58,18)" fg:x="20670" fg:w="43"/><text x="38.4309%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (66 samples, 0.12%)</title><rect x="38.1458%" y="437" width="0.1219%" height="15" fill="rgb(242,225,1)" fg:x="20651" fg:w="66"/><text x="38.3958%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (49 samples, 0.09%)</title><rect x="38.1772%" y="421" width="0.0905%" height="15" fill="rgb(249,39,40)" fg:x="20668" fg:w="49"/><text x="38.4272%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (48 samples, 0.09%)</title><rect x="38.1791%" y="405" width="0.0887%" height="15" fill="rgb(207,72,44)" fg:x="20669" fg:w="48"/><text x="38.4291%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (47 samples, 0.09%)</title><rect x="38.1809%" y="389" width="0.0868%" height="15" fill="rgb(215,193,12)" fg:x="20670" fg:w="47"/><text x="38.4309%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (47 samples, 0.09%)</title><rect x="38.1809%" y="373" width="0.0868%" height="15" fill="rgb(248,41,39)" fg:x="20670" fg:w="47"/><text x="38.4309%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (67 samples, 0.12%)</title><rect x="38.1458%" y="501" width="0.1238%" height="15" fill="rgb(253,85,4)" fg:x="20651" fg:w="67"/><text x="38.3958%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (67 samples, 0.12%)</title><rect x="38.1458%" y="485" width="0.1238%" height="15" fill="rgb(243,70,31)" fg:x="20651" fg:w="67"/><text x="38.3958%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (67 samples, 0.12%)</title><rect x="38.1458%" y="469" width="0.1238%" height="15" fill="rgb(253,195,26)" fg:x="20651" fg:w="67"/><text x="38.3958%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (67 samples, 0.12%)</title><rect x="38.1458%" y="453" width="0.1238%" height="15" fill="rgb(243,42,11)" fg:x="20651" fg:w="67"/><text x="38.3958%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="38.2751%" y="485" width="0.0203%" height="15" fill="rgb(239,66,17)" fg:x="20721" fg:w="11"/><text x="38.5251%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (11 samples, 0.02%)</title><rect x="38.2751%" y="469" width="0.0203%" height="15" fill="rgb(217,132,21)" fg:x="20721" fg:w="11"/><text x="38.5251%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (11 samples, 0.02%)</title><rect x="38.2751%" y="453" width="0.0203%" height="15" fill="rgb(252,202,21)" fg:x="20721" fg:w="11"/><text x="38.5251%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11 samples, 0.02%)</title><rect x="38.2751%" y="437" width="0.0203%" height="15" fill="rgb(233,98,36)" fg:x="20721" fg:w="11"/><text x="38.5251%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 0.02%)</title><rect x="38.2751%" y="421" width="0.0203%" height="15" fill="rgb(216,153,54)" fg:x="20721" fg:w="11"/><text x="38.5251%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="38.2751%" y="405" width="0.0203%" height="15" fill="rgb(250,99,7)" fg:x="20721" fg:w="11"/><text x="38.5251%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.02%)</title><rect x="38.2770%" y="389" width="0.0185%" height="15" fill="rgb(207,56,50)" fg:x="20722" fg:w="10"/><text x="38.5270%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.02%)</title><rect x="38.2770%" y="373" width="0.0185%" height="15" fill="rgb(244,61,34)" fg:x="20722" fg:w="10"/><text x="38.5270%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (12 samples, 0.02%)</title><rect x="38.2751%" y="501" width="0.0222%" height="15" fill="rgb(241,50,38)" fg:x="20721" fg:w="12"/><text x="38.5251%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove (91 samples, 0.17%)</title><rect x="38.1384%" y="517" width="0.1681%" height="15" fill="rgb(212,166,30)" fg:x="20647" fg:w="91"/><text x="38.3884%" y="527.50"></text></g><g><title>do_syscall_64 (6 samples, 0.01%)</title><rect x="38.3102%" y="437" width="0.0111%" height="15" fill="rgb(249,127,32)" fg:x="20740" fg:w="6"/><text x="38.5602%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="38.3102%" y="453" width="0.0129%" height="15" fill="rgb(209,103,0)" fg:x="20740" fg:w="7"/><text x="38.5602%" y="463.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (8 samples, 0.01%)</title><rect x="38.3102%" y="501" width="0.0148%" height="15" fill="rgb(238,209,51)" fg:x="20740" fg:w="8"/><text x="38.5602%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::seek (8 samples, 0.01%)</title><rect x="38.3102%" y="485" width="0.0148%" height="15" fill="rgb(237,56,23)" fg:x="20740" fg:w="8"/><text x="38.5602%" y="495.50"></text></g><g><title>__lseek64 (8 samples, 0.01%)</title><rect x="38.3102%" y="469" width="0.0148%" height="15" fill="rgb(215,153,46)" fg:x="20740" fg:w="8"/><text x="38.5602%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::create (8 samples, 0.01%)</title><rect x="38.3250%" y="501" width="0.0148%" height="15" fill="rgb(224,49,31)" fg:x="20748" fg:w="8"/><text x="38.5750%" y="511.50"></text></g><g><title>getname_flags (9 samples, 0.02%)</title><rect x="38.3619%" y="325" width="0.0166%" height="15" fill="rgb(250,18,42)" fg:x="20768" fg:w="9"/><text x="38.6119%" y="335.50"></text></g><g><title>user_path_at_empty (14 samples, 0.03%)</title><rect x="38.3545%" y="341" width="0.0259%" height="15" fill="rgb(215,176,39)" fg:x="20764" fg:w="14"/><text x="38.6045%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.04%)</title><rect x="38.3472%" y="421" width="0.0388%" height="15" fill="rgb(223,77,29)" fg:x="20760" fg:w="21"/><text x="38.5972%" y="431.50"></text></g><g><title>do_syscall_64 (21 samples, 0.04%)</title><rect x="38.3472%" y="405" width="0.0388%" height="15" fill="rgb(234,94,52)" fg:x="20760" fg:w="21"/><text x="38.5972%" y="415.50"></text></g><g><title>__x64_sys_statx (20 samples, 0.04%)</title><rect x="38.3490%" y="389" width="0.0369%" height="15" fill="rgb(220,154,50)" fg:x="20761" fg:w="20"/><text x="38.5990%" y="399.50"></text></g><g><title>__do_sys_statx (20 samples, 0.04%)</title><rect x="38.3490%" y="373" width="0.0369%" height="15" fill="rgb(212,11,10)" fg:x="20761" fg:w="20"/><text x="38.5990%" y="383.50"></text></g><g><title>vfs_statx (18 samples, 0.03%)</title><rect x="38.3527%" y="357" width="0.0332%" height="15" fill="rgb(205,166,19)" fg:x="20763" fg:w="18"/><text x="38.6027%" y="367.50"></text></g><g><title>std::fs::File::metadata (25 samples, 0.05%)</title><rect x="38.3435%" y="501" width="0.0462%" height="15" fill="rgb(244,198,16)" fg:x="20758" fg:w="25"/><text x="38.5935%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (24 samples, 0.04%)</title><rect x="38.3453%" y="485" width="0.0443%" height="15" fill="rgb(219,69,12)" fg:x="20759" fg:w="24"/><text x="38.5953%" y="495.50"></text></g><g><title>std::sys::unix::fs::try_statx (24 samples, 0.04%)</title><rect x="38.3453%" y="469" width="0.0443%" height="15" fill="rgb(245,30,7)" fg:x="20759" fg:w="24"/><text x="38.5953%" y="479.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (23 samples, 0.04%)</title><rect x="38.3472%" y="453" width="0.0425%" height="15" fill="rgb(218,221,48)" fg:x="20760" fg:w="23"/><text x="38.5972%" y="463.50"></text></g><g><title>statx (23 samples, 0.04%)</title><rect x="38.3472%" y="437" width="0.0425%" height="15" fill="rgb(216,66,15)" fg:x="20760" fg:w="23"/><text x="38.5972%" y="447.50"></text></g><g><title>__ext4_journal_start_sb (12 samples, 0.02%)</title><rect x="38.4026%" y="245" width="0.0222%" height="15" fill="rgb(226,122,50)" fg:x="20790" fg:w="12"/><text x="38.6526%" y="255.50"></text></g><g><title>jbd2__journal_start (11 samples, 0.02%)</title><rect x="38.4044%" y="229" width="0.0203%" height="15" fill="rgb(239,156,16)" fg:x="20791" fg:w="11"/><text x="38.6544%" y="239.50"></text></g><g><title>start_this_handle (6 samples, 0.01%)</title><rect x="38.4137%" y="213" width="0.0111%" height="15" fill="rgb(224,27,38)" fg:x="20796" fg:w="6"/><text x="38.6637%" y="223.50"></text></g><g><title>create_empty_buffers (6 samples, 0.01%)</title><rect x="38.4284%" y="229" width="0.0111%" height="15" fill="rgb(224,39,27)" fg:x="20804" fg:w="6"/><text x="38.6784%" y="239.50"></text></g><g><title>alloc_page_buffers (6 samples, 0.01%)</title><rect x="38.4284%" y="213" width="0.0111%" height="15" fill="rgb(215,92,29)" fg:x="20804" fg:w="6"/><text x="38.6784%" y="223.50"></text></g><g><title>ext4_da_map_blocks.constprop.0 (6 samples, 0.01%)</title><rect x="38.4395%" y="213" width="0.0111%" height="15" fill="rgb(207,159,16)" fg:x="20810" fg:w="6"/><text x="38.6895%" y="223.50"></text></g><g><title>ext4_block_write_begin (16 samples, 0.03%)</title><rect x="38.4247%" y="245" width="0.0296%" height="15" fill="rgb(238,163,47)" fg:x="20802" fg:w="16"/><text x="38.6747%" y="255.50"></text></g><g><title>ext4_da_get_block_prep (8 samples, 0.01%)</title><rect x="38.4395%" y="229" width="0.0148%" height="15" fill="rgb(219,91,49)" fg:x="20810" fg:w="8"/><text x="38.6895%" y="239.50"></text></g><g><title>clear_page_rep (6 samples, 0.01%)</title><rect x="38.4598%" y="149" width="0.0111%" height="15" fill="rgb(227,167,31)" fg:x="20821" fg:w="6"/><text x="38.7098%" y="159.50"></text></g><g><title>alloc_pages_current (12 samples, 0.02%)</title><rect x="38.4580%" y="197" width="0.0222%" height="15" fill="rgb(234,80,54)" fg:x="20820" fg:w="12"/><text x="38.7080%" y="207.50"></text></g><g><title>__alloc_pages_nodemask (12 samples, 0.02%)</title><rect x="38.4580%" y="181" width="0.0222%" height="15" fill="rgb(212,114,2)" fg:x="20820" fg:w="12"/><text x="38.7080%" y="191.50"></text></g><g><title>get_page_from_freelist (12 samples, 0.02%)</title><rect x="38.4580%" y="165" width="0.0222%" height="15" fill="rgb(234,50,24)" fg:x="20820" fg:w="12"/><text x="38.7080%" y="175.50"></text></g><g><title>__page_cache_alloc (15 samples, 0.03%)</title><rect x="38.4580%" y="213" width="0.0277%" height="15" fill="rgb(221,68,8)" fg:x="20820" fg:w="15"/><text x="38.7080%" y="223.50"></text></g><g><title>grab_cache_page_write_begin (25 samples, 0.05%)</title><rect x="38.4543%" y="245" width="0.0462%" height="15" fill="rgb(254,180,31)" fg:x="20818" fg:w="25"/><text x="38.7043%" y="255.50"></text></g><g><title>pagecache_get_page (25 samples, 0.05%)</title><rect x="38.4543%" y="229" width="0.0462%" height="15" fill="rgb(247,130,50)" fg:x="20818" fg:w="25"/><text x="38.7043%" y="239.50"></text></g><g><title>ext4_da_write_begin (55 samples, 0.10%)</title><rect x="38.4007%" y="261" width="0.1016%" height="15" fill="rgb(211,109,4)" fg:x="20789" fg:w="55"/><text x="38.6507%" y="271.50"></text></g><g><title>ext4_do_update_inode (13 samples, 0.02%)</title><rect x="38.5171%" y="165" width="0.0240%" height="15" fill="rgb(238,50,21)" fg:x="20852" fg:w="13"/><text x="38.7671%" y="175.50"></text></g><g><title>__mark_inode_dirty (19 samples, 0.04%)</title><rect x="38.5079%" y="229" width="0.0351%" height="15" fill="rgb(225,57,45)" fg:x="20847" fg:w="19"/><text x="38.7579%" y="239.50"></text></g><g><title>ext4_dirty_inode (19 samples, 0.04%)</title><rect x="38.5079%" y="213" width="0.0351%" height="15" fill="rgb(209,196,50)" fg:x="20847" fg:w="19"/><text x="38.7579%" y="223.50"></text></g><g><title>ext4_mark_inode_dirty (17 samples, 0.03%)</title><rect x="38.5116%" y="197" width="0.0314%" height="15" fill="rgb(242,140,13)" fg:x="20849" fg:w="17"/><text x="38.7616%" y="207.50"></text></g><g><title>ext4_mark_iloc_dirty (17 samples, 0.03%)</title><rect x="38.5116%" y="181" width="0.0314%" height="15" fill="rgb(217,111,7)" fg:x="20849" fg:w="17"/><text x="38.7616%" y="191.50"></text></g><g><title>ext4_da_write_end (27 samples, 0.05%)</title><rect x="38.5023%" y="261" width="0.0499%" height="15" fill="rgb(253,193,51)" fg:x="20844" fg:w="27"/><text x="38.7523%" y="271.50"></text></g><g><title>generic_write_end (24 samples, 0.04%)</title><rect x="38.5079%" y="245" width="0.0443%" height="15" fill="rgb(252,70,29)" fg:x="20847" fg:w="24"/><text x="38.7579%" y="255.50"></text></g><g><title>__generic_file_write_iter (87 samples, 0.16%)</title><rect x="38.3970%" y="293" width="0.1607%" height="15" fill="rgb(232,127,12)" fg:x="20787" fg:w="87"/><text x="38.6470%" y="303.50"></text></g><g><title>generic_perform_write (86 samples, 0.16%)</title><rect x="38.3989%" y="277" width="0.1589%" height="15" fill="rgb(211,180,21)" fg:x="20788" fg:w="86"/><text x="38.6489%" y="287.50"></text></g><g><title>__vfs_write (88 samples, 0.16%)</title><rect x="38.3970%" y="341" width="0.1626%" height="15" fill="rgb(229,72,13)" fg:x="20787" fg:w="88"/><text x="38.6470%" y="351.50"></text></g><g><title>new_sync_write (88 samples, 0.16%)</title><rect x="38.3970%" y="325" width="0.1626%" height="15" fill="rgb(240,211,49)" fg:x="20787" fg:w="88"/><text x="38.6470%" y="335.50"></text></g><g><title>ext4_file_write_iter (88 samples, 0.16%)</title><rect x="38.3970%" y="309" width="0.1626%" height="15" fill="rgb(219,149,40)" fg:x="20787" fg:w="88"/><text x="38.6470%" y="319.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::next_id (138 samples, 0.25%)</title><rect x="38.3065%" y="517" width="0.2549%" height="15" fill="rgb(210,127,46)" fg:x="20738" fg:w="138"/><text x="38.5565%" y="527.50"></text></g><g><title>std::io::Write::write_all (93 samples, 0.17%)</title><rect x="38.3896%" y="501" width="0.1718%" height="15" fill="rgb(220,106,7)" fg:x="20783" fg:w="93"/><text x="38.6396%" y="511.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (93 samples, 0.17%)</title><rect x="38.3896%" y="485" width="0.1718%" height="15" fill="rgb(249,31,22)" fg:x="20783" fg:w="93"/><text x="38.6396%" y="495.50"></text></g><g><title>std::sys::unix::net::Socket::write (93 samples, 0.17%)</title><rect x="38.3896%" y="469" width="0.1718%" height="15" fill="rgb(253,1,49)" fg:x="20783" fg:w="93"/><text x="38.6396%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (93 samples, 0.17%)</title><rect x="38.3896%" y="453" width="0.1718%" height="15" fill="rgb(227,144,33)" fg:x="20783" fg:w="93"/><text x="38.6396%" y="463.50"></text></g><g><title>__GI___libc_write (93 samples, 0.17%)</title><rect x="38.3896%" y="437" width="0.1718%" height="15" fill="rgb(249,163,44)" fg:x="20783" fg:w="93"/><text x="38.6396%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (91 samples, 0.17%)</title><rect x="38.3933%" y="421" width="0.1681%" height="15" fill="rgb(234,15,39)" fg:x="20785" fg:w="91"/><text x="38.6433%" y="431.50"></text></g><g><title>do_syscall_64 (91 samples, 0.17%)</title><rect x="38.3933%" y="405" width="0.1681%" height="15" fill="rgb(207,66,16)" fg:x="20785" fg:w="91"/><text x="38.6433%" y="415.50"></text></g><g><title>__x64_sys_write (90 samples, 0.17%)</title><rect x="38.3952%" y="389" width="0.1662%" height="15" fill="rgb(233,112,24)" fg:x="20786" fg:w="90"/><text x="38.6452%" y="399.50"></text></g><g><title>ksys_write (90 samples, 0.17%)</title><rect x="38.3952%" y="373" width="0.1662%" height="15" fill="rgb(230,90,22)" fg:x="20786" fg:w="90"/><text x="38.6452%" y="383.50"></text></g><g><title>vfs_write (89 samples, 0.16%)</title><rect x="38.3970%" y="357" width="0.1644%" height="15" fill="rgb(229,61,13)" fg:x="20787" fg:w="89"/><text x="38.6470%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::reserve (20 samples, 0.04%)</title><rect x="38.5633%" y="469" width="0.0369%" height="15" fill="rgb(225,57,24)" fg:x="20877" fg:w="20"/><text x="38.8133%" y="479.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (16 samples, 0.03%)</title><rect x="38.5707%" y="453" width="0.0296%" height="15" fill="rgb(208,169,48)" fg:x="20881" fg:w="16"/><text x="38.8207%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (16 samples, 0.03%)</title><rect x="38.5707%" y="437" width="0.0296%" height="15" fill="rgb(244,218,51)" fg:x="20881" fg:w="16"/><text x="38.8207%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.03%)</title><rect x="38.5707%" y="421" width="0.0296%" height="15" fill="rgb(214,148,10)" fg:x="20881" fg:w="16"/><text x="38.8207%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.03%)</title><rect x="38.5707%" y="405" width="0.0296%" height="15" fill="rgb(225,174,27)" fg:x="20881" fg:w="16"/><text x="38.8207%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.03%)</title><rect x="38.5707%" y="389" width="0.0296%" height="15" fill="rgb(230,96,26)" fg:x="20881" fg:w="16"/><text x="38.8207%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.03%)</title><rect x="38.5707%" y="373" width="0.0296%" height="15" fill="rgb(232,10,30)" fg:x="20881" fg:w="16"/><text x="38.8207%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.03%)</title><rect x="38.5707%" y="357" width="0.0296%" height="15" fill="rgb(222,8,50)" fg:x="20881" fg:w="16"/><text x="38.8207%" y="367.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.03%)</title><rect x="38.5707%" y="341" width="0.0296%" height="15" fill="rgb(213,81,27)" fg:x="20881" fg:w="16"/><text x="38.8207%" y="351.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.03%)</title><rect x="38.5707%" y="325" width="0.0296%" height="15" fill="rgb(245,50,10)" fg:x="20881" fg:w="16"/><text x="38.8207%" y="335.50"></text></g><g><title>_int_malloc (15 samples, 0.03%)</title><rect x="38.5725%" y="309" width="0.0277%" height="15" fill="rgb(216,100,18)" fg:x="20882" fg:w="15"/><text x="38.8225%" y="319.50"></text></g><g><title>malloc_consolidate (15 samples, 0.03%)</title><rect x="38.5725%" y="293" width="0.0277%" height="15" fill="rgb(236,147,54)" fg:x="20882" fg:w="15"/><text x="38.8225%" y="303.50"></text></g><g><title>copy_page_to_iter (7 samples, 0.01%)</title><rect x="38.6095%" y="213" width="0.0129%" height="15" fill="rgb(205,143,26)" fg:x="20902" fg:w="7"/><text x="38.8595%" y="223.50"></text></g><g><title>copy_user_generic_string (6 samples, 0.01%)</title><rect x="38.6113%" y="197" width="0.0111%" height="15" fill="rgb(236,26,9)" fg:x="20903" fg:w="6"/><text x="38.8613%" y="207.50"></text></g><g><title>mark_page_accessed (6 samples, 0.01%)</title><rect x="38.6224%" y="213" width="0.0111%" height="15" fill="rgb(221,165,53)" fg:x="20909" fg:w="6"/><text x="38.8724%" y="223.50"></text></g><g><title>generic_file_buffered_read (15 samples, 0.03%)</title><rect x="38.6095%" y="229" width="0.0277%" height="15" fill="rgb(214,110,17)" fg:x="20902" fg:w="15"/><text x="38.8595%" y="239.50"></text></g><g><title>__vfs_read (18 samples, 0.03%)</title><rect x="38.6076%" y="293" width="0.0332%" height="15" fill="rgb(237,197,12)" fg:x="20901" fg:w="18"/><text x="38.8576%" y="303.50"></text></g><g><title>new_sync_read (18 samples, 0.03%)</title><rect x="38.6076%" y="277" width="0.0332%" height="15" fill="rgb(205,84,17)" fg:x="20901" fg:w="18"/><text x="38.8576%" y="287.50"></text></g><g><title>ext4_file_read_iter (18 samples, 0.03%)</title><rect x="38.6076%" y="261" width="0.0332%" height="15" fill="rgb(237,18,45)" fg:x="20901" fg:w="18"/><text x="38.8576%" y="271.50"></text></g><g><title>generic_file_read_iter (17 samples, 0.03%)</title><rect x="38.6095%" y="245" width="0.0314%" height="15" fill="rgb(221,87,14)" fg:x="20902" fg:w="17"/><text x="38.8595%" y="255.50"></text></g><g><title>__x64_sys_read (20 samples, 0.04%)</title><rect x="38.6058%" y="341" width="0.0369%" height="15" fill="rgb(238,186,15)" fg:x="20900" fg:w="20"/><text x="38.8558%" y="351.50"></text></g><g><title>ksys_read (20 samples, 0.04%)</title><rect x="38.6058%" y="325" width="0.0369%" height="15" fill="rgb(208,115,11)" fg:x="20900" fg:w="20"/><text x="38.8558%" y="335.50"></text></g><g><title>vfs_read (20 samples, 0.04%)</title><rect x="38.6058%" y="309" width="0.0369%" height="15" fill="rgb(254,175,0)" fg:x="20900" fg:w="20"/><text x="38.8558%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (24 samples, 0.04%)</title><rect x="38.6002%" y="373" width="0.0443%" height="15" fill="rgb(227,24,42)" fg:x="20897" fg:w="24"/><text x="38.8502%" y="383.50"></text></g><g><title>do_syscall_64 (22 samples, 0.04%)</title><rect x="38.6039%" y="357" width="0.0406%" height="15" fill="rgb(223,211,37)" fg:x="20899" fg:w="22"/><text x="38.8539%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (47 samples, 0.09%)</title><rect x="38.5614%" y="501" width="0.0868%" height="15" fill="rgb(235,49,27)" fg:x="20876" fg:w="47"/><text x="38.8114%" y="511.50"></text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (47 samples, 0.09%)</title><rect x="38.5614%" y="485" width="0.0868%" height="15" fill="rgb(254,97,51)" fg:x="20876" fg:w="47"/><text x="38.8114%" y="495.50"></text></g><g><title>std::io::Read::read_exact (26 samples, 0.05%)</title><rect x="38.6002%" y="469" width="0.0480%" height="15" fill="rgb(249,51,40)" fg:x="20897" fg:w="26"/><text x="38.8502%" y="479.50"></text></g><g><title>std::io::default_read_exact (26 samples, 0.05%)</title><rect x="38.6002%" y="453" width="0.0480%" height="15" fill="rgb(210,128,45)" fg:x="20897" fg:w="26"/><text x="38.8502%" y="463.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (26 samples, 0.05%)</title><rect x="38.6002%" y="437" width="0.0480%" height="15" fill="rgb(224,137,50)" fg:x="20897" fg:w="26"/><text x="38.8502%" y="447.50"></text></g><g><title>std::sys::unix::fs::File::read (26 samples, 0.05%)</title><rect x="38.6002%" y="421" width="0.0480%" height="15" fill="rgb(242,15,9)" fg:x="20897" fg:w="26"/><text x="38.8502%" y="431.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (26 samples, 0.05%)</title><rect x="38.6002%" y="405" width="0.0480%" height="15" fill="rgb(233,187,41)" fg:x="20897" fg:w="26"/><text x="38.8502%" y="415.50"></text></g><g><title>__GI___read (26 samples, 0.05%)</title><rect x="38.6002%" y="389" width="0.0480%" height="15" fill="rgb(227,2,29)" fg:x="20897" fg:w="26"/><text x="38.8502%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut (52 samples, 0.10%)</title><rect x="38.5614%" y="517" width="0.0961%" height="15" fill="rgb(222,70,3)" fg:x="20876" fg:w="52"/><text x="38.8114%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (14 samples, 0.03%)</title><rect x="38.6981%" y="373" width="0.0259%" height="15" fill="rgb(213,11,42)" fg:x="20950" fg:w="14"/><text x="38.9481%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (18 samples, 0.03%)</title><rect x="38.6981%" y="405" width="0.0332%" height="15" fill="rgb(225,150,9)" fg:x="20950" fg:w="18"/><text x="38.9481%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (18 samples, 0.03%)</title><rect x="38.6981%" y="389" width="0.0332%" height="15" fill="rgb(230,162,45)" fg:x="20950" fg:w="18"/><text x="38.9481%" y="399.50"></text></g><g><title>__memcmp_sse4_1 (21 samples, 0.04%)</title><rect x="38.7406%" y="357" width="0.0388%" height="15" fill="rgb(222,14,52)" fg:x="20973" fg:w="21"/><text x="38.9906%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find (67 samples, 0.12%)</title><rect x="38.6575%" y="437" width="0.1238%" height="15" fill="rgb(254,198,14)" fg:x="20928" fg:w="67"/><text x="38.9075%" y="447.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (58 samples, 0.11%)</title><rect x="38.6741%" y="421" width="0.1071%" height="15" fill="rgb(220,217,30)" fg:x="20937" fg:w="58"/><text x="38.9241%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (27 samples, 0.05%)</title><rect x="38.7314%" y="405" width="0.0499%" height="15" fill="rgb(215,146,41)" fg:x="20968" fg:w="27"/><text x="38.9814%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (27 samples, 0.05%)</title><rect x="38.7314%" y="389" width="0.0499%" height="15" fill="rgb(217,27,36)" fg:x="20968" fg:w="27"/><text x="38.9814%" y="399.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (27 samples, 0.05%)</title><rect x="38.7314%" y="373" width="0.0499%" height="15" fill="rgb(219,218,39)" fg:x="20968" fg:w="27"/><text x="38.9814%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::put_ref (13 samples, 0.02%)</title><rect x="38.7812%" y="437" width="0.0240%" height="15" fill="rgb(219,4,42)" fg:x="20995" fg:w="13"/><text x="39.0312%" y="447.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry (13 samples, 0.02%)</title><rect x="38.7812%" y="421" width="0.0240%" height="15" fill="rgb(249,119,36)" fg:x="20995" fg:w="13"/><text x="39.0312%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (11 samples, 0.02%)</title><rect x="38.8256%" y="389" width="0.0203%" height="15" fill="rgb(209,23,33)" fg:x="21019" fg:w="11"/><text x="39.0756%" y="399.50"></text></g><g><title>core::cmp::PartialOrd::ge (11 samples, 0.02%)</title><rect x="38.8256%" y="373" width="0.0203%" height="15" fill="rgb(211,10,0)" fg:x="21019" fg:w="11"/><text x="39.0756%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (11 samples, 0.02%)</title><rect x="38.8256%" y="357" width="0.0203%" height="15" fill="rgb(208,99,37)" fg:x="21019" fg:w="11"/><text x="39.0756%" y="367.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (11 samples, 0.02%)</title><rect x="38.8256%" y="341" width="0.0203%" height="15" fill="rgb(213,132,31)" fg:x="21019" fg:w="11"/><text x="39.0756%" y="351.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (11 samples, 0.02%)</title><rect x="38.8256%" y="325" width="0.0203%" height="15" fill="rgb(243,129,40)" fg:x="21019" fg:w="11"/><text x="39.0756%" y="335.50"></text></g><g><title>__memcmp_sse4_1 (10 samples, 0.02%)</title><rect x="38.8274%" y="309" width="0.0185%" height="15" fill="rgb(210,66,33)" fg:x="21020" fg:w="10"/><text x="39.0774%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.01%)</title><rect x="38.8939%" y="293" width="0.0129%" height="15" fill="rgb(209,189,4)" fg:x="21056" fg:w="7"/><text x="39.1439%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="38.8939%" y="277" width="0.0129%" height="15" fill="rgb(214,107,37)" fg:x="21056" fg:w="7"/><text x="39.1439%" y="287.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (11 samples, 0.02%)</title><rect x="38.8921%" y="325" width="0.0203%" height="15" fill="rgb(245,88,54)" fg:x="21055" fg:w="11"/><text x="39.1421%" y="335.50"></text></g><g><title>yakvdb::disk::block::get_u32 (11 samples, 0.02%)</title><rect x="38.8921%" y="309" width="0.0203%" height="15" fill="rgb(205,146,20)" fg:x="21055" fg:w="11"/><text x="39.1421%" y="319.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (34 samples, 0.06%)</title><rect x="38.8681%" y="341" width="0.0628%" height="15" fill="rgb(220,161,25)" fg:x="21042" fg:w="34"/><text x="39.1181%" y="351.50"></text></g><g><title>yakvdb::disk::block::get_u32 (10 samples, 0.02%)</title><rect x="38.9124%" y="325" width="0.0185%" height="15" fill="rgb(215,152,15)" fg:x="21066" fg:w="10"/><text x="39.1624%" y="335.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (42 samples, 0.08%)</title><rect x="38.8644%" y="373" width="0.0776%" height="15" fill="rgb(233,192,44)" fg:x="21040" fg:w="42"/><text x="39.1144%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (42 samples, 0.08%)</title><rect x="38.8644%" y="357" width="0.0776%" height="15" fill="rgb(240,170,46)" fg:x="21040" fg:w="42"/><text x="39.1144%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="38.9309%" y="341" width="0.0111%" height="15" fill="rgb(207,104,33)" fg:x="21076" fg:w="6"/><text x="39.1809%" y="351.50"></text></g><g><title>__memcmp_sse4_1 (18 samples, 0.03%)</title><rect x="38.9493%" y="325" width="0.0332%" height="15" fill="rgb(219,21,39)" fg:x="21086" fg:w="18"/><text x="39.1993%" y="335.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (99 samples, 0.18%)</title><rect x="38.8126%" y="405" width="0.1829%" height="15" fill="rgb(214,133,29)" fg:x="21012" fg:w="99"/><text x="39.0626%" y="415.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (81 samples, 0.15%)</title><rect x="38.8459%" y="389" width="0.1496%" height="15" fill="rgb(226,93,6)" fg:x="21030" fg:w="81"/><text x="39.0959%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (29 samples, 0.05%)</title><rect x="38.9419%" y="373" width="0.0536%" height="15" fill="rgb(252,222,34)" fg:x="21082" fg:w="29"/><text x="39.1919%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (29 samples, 0.05%)</title><rect x="38.9419%" y="357" width="0.0536%" height="15" fill="rgb(252,92,48)" fg:x="21082" fg:w="29"/><text x="39.1919%" y="367.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (29 samples, 0.05%)</title><rect x="38.9419%" y="341" width="0.0536%" height="15" fill="rgb(245,223,24)" fg:x="21082" fg:w="29"/><text x="39.1919%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (7 samples, 0.01%)</title><rect x="38.9826%" y="325" width="0.0129%" height="15" fill="rgb(205,176,3)" fg:x="21104" fg:w="7"/><text x="39.2326%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.01%)</title><rect x="39.0823%" y="197" width="0.0129%" height="15" fill="rgb(235,151,15)" fg:x="21158" fg:w="7"/><text x="39.3323%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="39.0823%" y="181" width="0.0129%" height="15" fill="rgb(237,209,11)" fg:x="21158" fg:w="7"/><text x="39.3323%" y="191.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (15 samples, 0.03%)</title><rect x="39.0694%" y="229" width="0.0277%" height="15" fill="rgb(243,227,24)" fg:x="21151" fg:w="15"/><text x="39.3194%" y="239.50"></text></g><g><title>yakvdb::disk::block::get_u32 (12 samples, 0.02%)</title><rect x="39.0749%" y="213" width="0.0222%" height="15" fill="rgb(239,193,16)" fg:x="21154" fg:w="12"/><text x="39.3249%" y="223.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (69 samples, 0.13%)</title><rect x="38.9974%" y="277" width="0.1275%" height="15" fill="rgb(231,27,9)" fg:x="21112" fg:w="69"/><text x="39.2474%" y="287.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (45 samples, 0.08%)</title><rect x="39.0417%" y="261" width="0.0831%" height="15" fill="rgb(219,169,10)" fg:x="21136" fg:w="45"/><text x="39.2917%" y="271.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (45 samples, 0.08%)</title><rect x="39.0417%" y="245" width="0.0831%" height="15" fill="rgb(244,229,43)" fg:x="21136" fg:w="45"/><text x="39.2917%" y="255.50"></text></g><g><title>yakvdb::disk::block::get_u32 (15 samples, 0.03%)</title><rect x="39.0971%" y="229" width="0.0277%" height="15" fill="rgb(254,38,20)" fg:x="21166" fg:w="15"/><text x="39.3471%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (70 samples, 0.13%)</title><rect x="38.9974%" y="325" width="0.1293%" height="15" fill="rgb(250,47,30)" fg:x="21112" fg:w="70"/><text x="39.2474%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (70 samples, 0.13%)</title><rect x="38.9974%" y="309" width="0.1293%" height="15" fill="rgb(224,124,36)" fg:x="21112" fg:w="70"/><text x="39.2474%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (70 samples, 0.13%)</title><rect x="38.9974%" y="293" width="0.1293%" height="15" fill="rgb(246,68,51)" fg:x="21112" fg:w="70"/><text x="39.2474%" y="303.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::fits (75 samples, 0.14%)</title><rect x="38.9955%" y="405" width="0.1385%" height="15" fill="rgb(253,43,49)" fg:x="21111" fg:w="75"/><text x="39.2455%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (75 samples, 0.14%)</title><rect x="38.9955%" y="389" width="0.1385%" height="15" fill="rgb(219,54,36)" fg:x="21111" fg:w="75"/><text x="39.2455%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (74 samples, 0.14%)</title><rect x="38.9974%" y="373" width="0.1367%" height="15" fill="rgb(227,133,34)" fg:x="21112" fg:w="74"/><text x="39.2474%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (74 samples, 0.14%)</title><rect x="38.9974%" y="357" width="0.1367%" height="15" fill="rgb(247,227,15)" fg:x="21112" fg:w="74"/><text x="39.2474%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (74 samples, 0.14%)</title><rect x="38.9974%" y="341" width="0.1367%" height="15" fill="rgb(229,96,14)" fg:x="21112" fg:w="74"/><text x="39.2474%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="39.1359%" y="389" width="0.0111%" height="15" fill="rgb(220,79,17)" fg:x="21187" fg:w="6"/><text x="39.3859%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="39.1359%" y="373" width="0.0111%" height="15" fill="rgb(205,131,53)" fg:x="21187" fg:w="6"/><text x="39.3859%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="39.1359%" y="357" width="0.0111%" height="15" fill="rgb(209,50,29)" fg:x="21187" fg:w="6"/><text x="39.3859%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.01%)</title><rect x="39.1359%" y="341" width="0.0111%" height="15" fill="rgb(245,86,46)" fg:x="21187" fg:w="6"/><text x="39.3859%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="39.1359%" y="325" width="0.0111%" height="15" fill="rgb(235,66,46)" fg:x="21187" fg:w="6"/><text x="39.3859%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (11 samples, 0.02%)</title><rect x="39.1340%" y="405" width="0.0203%" height="15" fill="rgb(232,148,31)" fg:x="21186" fg:w="11"/><text x="39.3840%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (13 samples, 0.02%)</title><rect x="39.3945%" y="197" width="0.0240%" height="15" fill="rgb(217,149,8)" fg:x="21327" fg:w="13"/><text x="39.6445%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.01%)</title><rect x="39.4277%" y="181" width="0.0111%" height="15" fill="rgb(209,183,11)" fg:x="21345" fg:w="6"/><text x="39.6777%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="39.4277%" y="165" width="0.0111%" height="15" fill="rgb(208,55,20)" fg:x="21345" fg:w="6"/><text x="39.6777%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (153 samples, 0.28%)</title><rect x="39.1673%" y="309" width="0.2826%" height="15" fill="rgb(218,39,14)" fg:x="21204" fg:w="153"/><text x="39.4173%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (153 samples, 0.28%)</title><rect x="39.1673%" y="293" width="0.2826%" height="15" fill="rgb(216,169,33)" fg:x="21204" fg:w="153"/><text x="39.4173%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (153 samples, 0.28%)</title><rect x="39.1673%" y="277" width="0.2826%" height="15" fill="rgb(233,80,24)" fg:x="21204" fg:w="153"/><text x="39.4173%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (151 samples, 0.28%)</title><rect x="39.1710%" y="261" width="0.2789%" height="15" fill="rgb(213,179,31)" fg:x="21206" fg:w="151"/><text x="39.4210%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (60 samples, 0.11%)</title><rect x="39.3391%" y="245" width="0.1108%" height="15" fill="rgb(209,19,5)" fg:x="21297" fg:w="60"/><text x="39.5891%" y="255.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (60 samples, 0.11%)</title><rect x="39.3391%" y="229" width="0.1108%" height="15" fill="rgb(219,18,35)" fg:x="21297" fg:w="60"/><text x="39.5891%" y="239.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (51 samples, 0.09%)</title><rect x="39.3557%" y="213" width="0.0942%" height="15" fill="rgb(209,169,16)" fg:x="21306" fg:w="51"/><text x="39.6057%" y="223.50"></text></g><g><title>yakvdb::disk::block::get_u32 (17 samples, 0.03%)</title><rect x="39.4185%" y="197" width="0.0314%" height="15" fill="rgb(245,90,51)" fg:x="21340" fg:w="17"/><text x="39.6685%" y="207.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.01%)</title><rect x="39.4388%" y="181" width="0.0111%" height="15" fill="rgb(220,99,45)" fg:x="21351" fg:w="6"/><text x="39.6888%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.01%)</title><rect x="39.4388%" y="165" width="0.0111%" height="15" fill="rgb(249,89,25)" fg:x="21351" fg:w="6"/><text x="39.6888%" y="175.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (13 samples, 0.02%)</title><rect x="39.5053%" y="149" width="0.0240%" height="15" fill="rgb(239,193,0)" fg:x="21387" fg:w="13"/><text x="39.7553%" y="159.50"></text></g><g><title>_int_free (15 samples, 0.03%)</title><rect x="39.5293%" y="149" width="0.0277%" height="15" fill="rgb(231,126,1)" fg:x="21400" fg:w="15"/><text x="39.7793%" y="159.50"></text></g><g><title>_int_malloc (50 samples, 0.09%)</title><rect x="39.5570%" y="149" width="0.0924%" height="15" fill="rgb(243,166,3)" fg:x="21415" fg:w="50"/><text x="39.8070%" y="159.50"></text></g><g><title>__GI___libc_realloc (98 samples, 0.18%)</title><rect x="39.4702%" y="181" width="0.1810%" height="15" fill="rgb(223,22,34)" fg:x="21368" fg:w="98"/><text x="39.7202%" y="191.50"></text></g><g><title>_int_realloc (89 samples, 0.16%)</title><rect x="39.4869%" y="165" width="0.1644%" height="15" fill="rgb(251,52,51)" fg:x="21377" fg:w="89"/><text x="39.7369%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (102 samples, 0.19%)</title><rect x="39.4684%" y="229" width="0.1884%" height="15" fill="rgb(221,165,28)" fg:x="21367" fg:w="102"/><text x="39.7184%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (102 samples, 0.19%)</title><rect x="39.4684%" y="213" width="0.1884%" height="15" fill="rgb(218,121,47)" fg:x="21367" fg:w="102"/><text x="39.7184%" y="223.50"></text></g><g><title>alloc::alloc::realloc (102 samples, 0.19%)</title><rect x="39.4684%" y="197" width="0.1884%" height="15" fill="rgb(209,120,9)" fg:x="21367" fg:w="102"/><text x="39.7184%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (111 samples, 0.21%)</title><rect x="39.4555%" y="309" width="0.2050%" height="15" fill="rgb(236,68,12)" fg:x="21360" fg:w="111"/><text x="39.7055%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (111 samples, 0.21%)</title><rect x="39.4555%" y="293" width="0.2050%" height="15" fill="rgb(225,194,26)" fg:x="21360" fg:w="111"/><text x="39.7055%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (110 samples, 0.20%)</title><rect x="39.4573%" y="277" width="0.2032%" height="15" fill="rgb(231,84,39)" fg:x="21361" fg:w="110"/><text x="39.7073%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (110 samples, 0.20%)</title><rect x="39.4573%" y="261" width="0.2032%" height="15" fill="rgb(210,11,45)" fg:x="21361" fg:w="110"/><text x="39.7073%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (107 samples, 0.20%)</title><rect x="39.4628%" y="245" width="0.1976%" height="15" fill="rgb(224,54,52)" fg:x="21364" fg:w="107"/><text x="39.7128%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (303 samples, 0.56%)</title><rect x="39.1544%" y="341" width="0.5597%" height="15" fill="rgb(238,102,14)" fg:x="21197" fg:w="303"/><text x="39.4044%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (303 samples, 0.56%)</title><rect x="39.1544%" y="325" width="0.5597%" height="15" fill="rgb(243,160,52)" fg:x="21197" fg:w="303"/><text x="39.4044%" y="335.50"></text></g><g><title>core::ptr::write (29 samples, 0.05%)</title><rect x="39.6605%" y="309" width="0.0536%" height="15" fill="rgb(216,114,19)" fg:x="21471" fg:w="29"/><text x="39.9105%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="39.7141%" y="341" width="0.0111%" height="15" fill="rgb(244,166,37)" fg:x="21500" fg:w="6"/><text x="39.9641%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (6 samples, 0.01%)</title><rect x="39.7141%" y="325" width="0.0111%" height="15" fill="rgb(246,29,44)" fg:x="21500" fg:w="6"/><text x="39.9641%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.01%)</title><rect x="39.7141%" y="309" width="0.0111%" height="15" fill="rgb(215,56,53)" fg:x="21500" fg:w="6"/><text x="39.9641%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (6 samples, 0.01%)</title><rect x="39.7141%" y="293" width="0.0111%" height="15" fill="rgb(217,60,2)" fg:x="21500" fg:w="6"/><text x="39.9641%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (311 samples, 0.57%)</title><rect x="39.1544%" y="405" width="0.5745%" height="15" fill="rgb(207,26,24)" fg:x="21197" fg:w="311"/><text x="39.4044%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (311 samples, 0.57%)</title><rect x="39.1544%" y="389" width="0.5745%" height="15" fill="rgb(252,210,15)" fg:x="21197" fg:w="311"/><text x="39.4044%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (311 samples, 0.57%)</title><rect x="39.1544%" y="373" width="0.5745%" height="15" fill="rgb(253,209,26)" fg:x="21197" fg:w="311"/><text x="39.4044%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (311 samples, 0.57%)</title><rect x="39.1544%" y="357" width="0.5745%" height="15" fill="rgb(238,170,14)" fg:x="21197" fg:w="311"/><text x="39.4044%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (14 samples, 0.03%)</title><rect x="39.7565%" y="277" width="0.0259%" height="15" fill="rgb(216,178,15)" fg:x="21523" fg:w="14"/><text x="40.0065%" y="287.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (14 samples, 0.03%)</title><rect x="39.7565%" y="261" width="0.0259%" height="15" fill="rgb(250,197,2)" fg:x="21523" fg:w="14"/><text x="40.0065%" y="271.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (14 samples, 0.03%)</title><rect x="39.7565%" y="245" width="0.0259%" height="15" fill="rgb(212,70,42)" fg:x="21523" fg:w="14"/><text x="40.0065%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (25 samples, 0.05%)</title><rect x="39.7824%" y="277" width="0.0462%" height="15" fill="rgb(227,213,9)" fg:x="21537" fg:w="25"/><text x="40.0324%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.05%)</title><rect x="39.7824%" y="261" width="0.0462%" height="15" fill="rgb(245,99,25)" fg:x="21537" fg:w="25"/><text x="40.0324%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (59 samples, 0.11%)</title><rect x="39.7418%" y="357" width="0.1090%" height="15" fill="rgb(250,82,29)" fg:x="21515" fg:w="59"/><text x="39.9918%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (59 samples, 0.11%)</title><rect x="39.7418%" y="341" width="0.1090%" height="15" fill="rgb(241,226,54)" fg:x="21515" fg:w="59"/><text x="39.9918%" y="351.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (59 samples, 0.11%)</title><rect x="39.7418%" y="325" width="0.1090%" height="15" fill="rgb(221,99,41)" fg:x="21515" fg:w="59"/><text x="39.9918%" y="335.50"></text></g><g><title>yakvdb::disk::block::put_slot (55 samples, 0.10%)</title><rect x="39.7492%" y="309" width="0.1016%" height="15" fill="rgb(213,90,21)" fg:x="21519" fg:w="55"/><text x="39.9992%" y="319.50"></text></g><g><title>yakvdb::disk::block::put_u32 (52 samples, 0.10%)</title><rect x="39.7547%" y="293" width="0.0961%" height="15" fill="rgb(205,208,24)" fg:x="21522" fg:w="52"/><text x="40.0047%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (12 samples, 0.02%)</title><rect x="39.8286%" y="277" width="0.0222%" height="15" fill="rgb(246,31,12)" fg:x="21562" fg:w="12"/><text x="40.0786%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (12 samples, 0.02%)</title><rect x="39.8286%" y="261" width="0.0222%" height="15" fill="rgb(213,154,6)" fg:x="21562" fg:w="12"/><text x="40.0786%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.03%)</title><rect x="39.8507%" y="261" width="0.0314%" height="15" fill="rgb(222,163,29)" fg:x="21574" fg:w="17"/><text x="40.1007%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.03%)</title><rect x="39.8526%" y="245" width="0.0296%" height="15" fill="rgb(227,201,8)" fg:x="21575" fg:w="16"/><text x="40.1026%" y="255.50"></text></g><g><title>_int_free (13 samples, 0.02%)</title><rect x="39.8581%" y="229" width="0.0240%" height="15" fill="rgb(233,9,32)" fg:x="21578" fg:w="13"/><text x="40.1081%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (84 samples, 0.16%)</title><rect x="39.7288%" y="405" width="0.1552%" height="15" fill="rgb(217,54,24)" fg:x="21508" fg:w="84"/><text x="39.9788%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (84 samples, 0.16%)</title><rect x="39.7288%" y="389" width="0.1552%" height="15" fill="rgb(235,192,0)" fg:x="21508" fg:w="84"/><text x="39.9788%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (82 samples, 0.15%)</title><rect x="39.7325%" y="373" width="0.1515%" height="15" fill="rgb(235,45,9)" fg:x="21510" fg:w="82"/><text x="39.9825%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;yakvdb::api::page::Slot&gt;&gt; (18 samples, 0.03%)</title><rect x="39.8507%" y="357" width="0.0332%" height="15" fill="rgb(246,42,40)" fg:x="21574" fg:w="18"/><text x="40.1007%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.03%)</title><rect x="39.8507%" y="341" width="0.0332%" height="15" fill="rgb(248,111,24)" fg:x="21574" fg:w="18"/><text x="40.1007%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;yakvdb::api::page::Slot,alloc::alloc::Global&gt;&gt; (18 samples, 0.03%)</title><rect x="39.8507%" y="325" width="0.0332%" height="15" fill="rgb(249,65,22)" fg:x="21574" fg:w="18"/><text x="40.1007%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.03%)</title><rect x="39.8507%" y="309" width="0.0332%" height="15" fill="rgb(238,111,51)" fg:x="21574" fg:w="18"/><text x="40.1007%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;yakvdb::api::page::Slot&gt;&gt; (18 samples, 0.03%)</title><rect x="39.8507%" y="293" width="0.0332%" height="15" fill="rgb(250,118,22)" fg:x="21574" fg:w="18"/><text x="40.1007%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.03%)</title><rect x="39.8507%" y="277" width="0.0332%" height="15" fill="rgb(234,84,26)" fg:x="21574" fg:w="18"/><text x="40.1007%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (17 samples, 0.03%)</title><rect x="39.8840%" y="405" width="0.0314%" height="15" fill="rgb(243,172,12)" fg:x="21592" fg:w="17"/><text x="40.1340%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (17 samples, 0.03%)</title><rect x="39.8840%" y="389" width="0.0314%" height="15" fill="rgb(236,150,49)" fg:x="21592" fg:w="17"/><text x="40.1340%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (17 samples, 0.03%)</title><rect x="39.8840%" y="373" width="0.0314%" height="15" fill="rgb(225,197,26)" fg:x="21592" fg:w="17"/><text x="40.1340%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.03%)</title><rect x="39.8840%" y="357" width="0.0314%" height="15" fill="rgb(214,17,42)" fg:x="21592" fg:w="17"/><text x="40.1340%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 0.03%)</title><rect x="39.8840%" y="341" width="0.0314%" height="15" fill="rgb(224,165,40)" fg:x="21592" fg:w="17"/><text x="40.1340%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.02%)</title><rect x="39.8951%" y="325" width="0.0203%" height="15" fill="rgb(246,100,4)" fg:x="21598" fg:w="11"/><text x="40.1451%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::{{closure}} (11 samples, 0.02%)</title><rect x="39.8951%" y="309" width="0.0203%" height="15" fill="rgb(222,103,0)" fg:x="21598" fg:w="11"/><text x="40.1451%" y="319.50"></text></g><g><title>core::cmp::min_by (11 samples, 0.02%)</title><rect x="39.8951%" y="293" width="0.0203%" height="15" fill="rgb(227,189,26)" fg:x="21598" fg:w="11"/><text x="40.1451%" y="303.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::put_val (607 samples, 1.12%)</title><rect x="38.8053%" y="437" width="1.1212%" height="15" fill="rgb(214,202,17)" fg:x="21008" fg:w="607"/><text x="39.0553%" y="447.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry (607 samples, 1.12%)</title><rect x="38.8053%" y="421" width="1.1212%" height="15" fill="rgb(229,111,3)" fg:x="21008" fg:w="607"/><text x="39.0553%" y="431.50"></text></g><g><title>yakvdb::disk::block::put_slice (6 samples, 0.01%)</title><rect x="39.9154%" y="405" width="0.0111%" height="15" fill="rgb(229,172,15)" fg:x="21609" fg:w="6"/><text x="40.1654%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (6 samples, 0.01%)</title><rect x="40.1869%" y="421" width="0.0111%" height="15" fill="rgb(230,224,35)" fg:x="21756" fg:w="6"/><text x="40.4369%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (6 samples, 0.01%)</title><rect x="40.1869%" y="405" width="0.0111%" height="15" fill="rgb(251,141,6)" fg:x="21756" fg:w="6"/><text x="40.4369%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::cap (6 samples, 0.01%)</title><rect x="40.1999%" y="421" width="0.0111%" height="15" fill="rgb(225,208,6)" fg:x="21763" fg:w="6"/><text x="40.4499%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (15 samples, 0.03%)</title><rect x="40.2109%" y="421" width="0.0277%" height="15" fill="rgb(246,181,16)" fg:x="21769" fg:w="15"/><text x="40.4609%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.02%)</title><rect x="40.2387%" y="421" width="0.0203%" height="15" fill="rgb(227,129,36)" fg:x="21784" fg:w="11"/><text x="40.4887%" y="431.50"></text></g><g><title>__calloc (32 samples, 0.06%)</title><rect x="40.2701%" y="309" width="0.0591%" height="15" fill="rgb(248,117,24)" fg:x="21801" fg:w="32"/><text x="40.5201%" y="319.50"></text></g><g><title>_int_malloc (26 samples, 0.05%)</title><rect x="40.2811%" y="293" width="0.0480%" height="15" fill="rgb(214,185,35)" fg:x="21807" fg:w="26"/><text x="40.5311%" y="303.50"></text></g><g><title>alloc::vec::from_elem (36 samples, 0.07%)</title><rect x="40.2664%" y="421" width="0.0665%" height="15" fill="rgb(236,150,34)" fg:x="21799" fg:w="36"/><text x="40.5164%" y="431.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (36 samples, 0.07%)</title><rect x="40.2664%" y="405" width="0.0665%" height="15" fill="rgb(243,228,27)" fg:x="21799" fg:w="36"/><text x="40.5164%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (34 samples, 0.06%)</title><rect x="40.2701%" y="389" width="0.0628%" height="15" fill="rgb(245,77,44)" fg:x="21801" fg:w="34"/><text x="40.5201%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (34 samples, 0.06%)</title><rect x="40.2701%" y="373" width="0.0628%" height="15" fill="rgb(235,214,42)" fg:x="21801" fg:w="34"/><text x="40.5201%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (34 samples, 0.06%)</title><rect x="40.2701%" y="357" width="0.0628%" height="15" fill="rgb(221,74,3)" fg:x="21801" fg:w="34"/><text x="40.5201%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.06%)</title><rect x="40.2701%" y="341" width="0.0628%" height="15" fill="rgb(206,121,29)" fg:x="21801" fg:w="34"/><text x="40.5201%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (34 samples, 0.06%)</title><rect x="40.2701%" y="325" width="0.0628%" height="15" fill="rgb(249,131,53)" fg:x="21801" fg:w="34"/><text x="40.5201%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (20 samples, 0.04%)</title><rect x="40.3753%" y="277" width="0.0369%" height="15" fill="rgb(236,170,29)" fg:x="21858" fg:w="20"/><text x="40.6253%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (20 samples, 0.04%)</title><rect x="40.3753%" y="261" width="0.0369%" height="15" fill="rgb(247,96,15)" fg:x="21858" fg:w="20"/><text x="40.6253%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (18 samples, 0.03%)</title><rect x="40.3790%" y="245" width="0.0332%" height="15" fill="rgb(211,210,7)" fg:x="21860" fg:w="18"/><text x="40.6290%" y="255.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (20 samples, 0.04%)</title><rect x="41.2010%" y="213" width="0.0369%" height="15" fill="rgb(240,88,50)" fg:x="22305" fg:w="20"/><text x="41.4510%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (14 samples, 0.03%)</title><rect x="41.2620%" y="197" width="0.0259%" height="15" fill="rgb(209,229,26)" fg:x="22338" fg:w="14"/><text x="41.5120%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.03%)</title><rect x="41.2620%" y="181" width="0.0259%" height="15" fill="rgb(210,68,23)" fg:x="22338" fg:w="14"/><text x="41.5120%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (529 samples, 0.98%)</title><rect x="40.3753%" y="325" width="0.9772%" height="15" fill="rgb(229,180,13)" fg:x="21858" fg:w="529"/><text x="40.6253%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (529 samples, 0.98%)</title><rect x="40.3753%" y="309" width="0.9772%" height="15" fill="rgb(236,53,44)" fg:x="21858" fg:w="529"/><text x="40.6253%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (529 samples, 0.98%)</title><rect x="40.3753%" y="293" width="0.9772%" height="15" fill="rgb(244,214,29)" fg:x="21858" fg:w="529"/><text x="40.6253%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (509 samples, 0.94%)</title><rect x="40.4123%" y="277" width="0.9402%" height="15" fill="rgb(220,75,29)" fg:x="21878" fg:w="509"/><text x="40.6623%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (178 samples, 0.33%)</title><rect x="41.0237%" y="261" width="0.3288%" height="15" fill="rgb(214,183,37)" fg:x="22209" fg:w="178"/><text x="41.2737%" y="271.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (178 samples, 0.33%)</title><rect x="41.0237%" y="245" width="0.3288%" height="15" fill="rgb(239,117,29)" fg:x="22209" fg:w="178"/><text x="41.2737%" y="255.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (158 samples, 0.29%)</title><rect x="41.0606%" y="229" width="0.2919%" height="15" fill="rgb(237,171,35)" fg:x="22229" fg:w="158"/><text x="41.3106%" y="239.50"></text></g><g><title>yakvdb::disk::block::get_u32 (62 samples, 0.11%)</title><rect x="41.2380%" y="213" width="0.1145%" height="15" fill="rgb(229,178,53)" fg:x="22325" fg:w="62"/><text x="41.4880%" y="223.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (35 samples, 0.06%)</title><rect x="41.2878%" y="197" width="0.0647%" height="15" fill="rgb(210,102,19)" fg:x="22352" fg:w="35"/><text x="41.5378%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (35 samples, 0.06%)</title><rect x="41.2878%" y="181" width="0.0647%" height="15" fill="rgb(235,127,22)" fg:x="22352" fg:w="35"/><text x="41.5378%" y="191.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (28 samples, 0.05%)</title><rect x="41.4301%" y="165" width="0.0517%" height="15" fill="rgb(244,31,31)" fg:x="22429" fg:w="28"/><text x="41.6801%" y="175.50"></text></g><g><title>_int_free (40 samples, 0.07%)</title><rect x="41.4818%" y="165" width="0.0739%" height="15" fill="rgb(231,43,21)" fg:x="22457" fg:w="40"/><text x="41.7318%" y="175.50"></text></g><g><title>malloc_consolidate (812 samples, 1.50%)</title><rect x="41.8623%" y="149" width="1.4999%" height="15" fill="rgb(217,131,35)" fg:x="22663" fg:w="812"/><text x="42.1123%" y="159.50"></text></g><g><title>unlink_chunk.isra.0 (184 samples, 0.34%)</title><rect x="43.0223%" y="133" width="0.3399%" height="15" fill="rgb(221,149,4)" fg:x="23291" fg:w="184"/><text x="43.2723%" y="143.50"></text></g><g><title>__GI___libc_realloc (1,096 samples, 2.02%)</title><rect x="41.3636%" y="197" width="2.0245%" height="15" fill="rgb(232,170,28)" fg:x="22393" fg:w="1096"/><text x="41.6136%" y="207.50">_..</text></g><g><title>_int_realloc (1,078 samples, 1.99%)</title><rect x="41.3968%" y="181" width="1.9912%" height="15" fill="rgb(238,56,10)" fg:x="22411" fg:w="1078"/><text x="41.6468%" y="191.50">_..</text></g><g><title>_int_malloc (992 samples, 1.83%)</title><rect x="41.5557%" y="165" width="1.8324%" height="15" fill="rgb(235,196,14)" fg:x="22497" fg:w="992"/><text x="41.8057%" y="175.50">_..</text></g><g><title>unlink_chunk.isra.0 (14 samples, 0.03%)</title><rect x="43.3622%" y="149" width="0.0259%" height="15" fill="rgb(216,45,48)" fg:x="23475" fg:w="14"/><text x="43.6122%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,103 samples, 2.04%)</title><rect x="41.3636%" y="245" width="2.0374%" height="15" fill="rgb(238,213,17)" fg:x="22393" fg:w="1103"/><text x="41.6136%" y="255.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (1,103 samples, 2.04%)</title><rect x="41.3636%" y="229" width="2.0374%" height="15" fill="rgb(212,13,2)" fg:x="22393" fg:w="1103"/><text x="41.6136%" y="239.50">a..</text></g><g><title>alloc::alloc::realloc (1,103 samples, 2.04%)</title><rect x="41.3636%" y="213" width="2.0374%" height="15" fill="rgb(240,114,20)" fg:x="22393" fg:w="1103"/><text x="41.6136%" y="223.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (1,107 samples, 2.04%)</title><rect x="41.3599%" y="261" width="2.0448%" height="15" fill="rgb(228,41,40)" fg:x="22391" fg:w="1107"/><text x="41.6099%" y="271.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,115 samples, 2.06%)</title><rect x="41.3543%" y="325" width="2.0596%" height="15" fill="rgb(244,132,35)" fg:x="22388" fg:w="1115"/><text x="41.6043%" y="335.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,115 samples, 2.06%)</title><rect x="41.3543%" y="309" width="2.0596%" height="15" fill="rgb(253,189,4)" fg:x="22388" fg:w="1115"/><text x="41.6043%" y="319.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,114 samples, 2.06%)</title><rect x="41.3562%" y="293" width="2.0577%" height="15" fill="rgb(224,37,19)" fg:x="22389" fg:w="1114"/><text x="41.6062%" y="303.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,114 samples, 2.06%)</title><rect x="41.3562%" y="277" width="2.0577%" height="15" fill="rgb(235,223,18)" fg:x="22389" fg:w="1114"/><text x="41.6062%" y="287.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,740 samples, 3.21%)</title><rect x="40.3366%" y="341" width="3.2141%" height="15" fill="rgb(235,163,25)" fg:x="21837" fg:w="1740"/><text x="40.5866%" y="351.50">all..</text></g><g><title>core::ptr::write (74 samples, 0.14%)</title><rect x="43.4139%" y="325" width="0.1367%" height="15" fill="rgb(217,145,28)" fg:x="23503" fg:w="74"/><text x="43.6639%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.04%)</title><rect x="43.5599%" y="293" width="0.0369%" height="15" fill="rgb(223,223,32)" fg:x="23582" fg:w="20"/><text x="43.8099%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (10 samples, 0.02%)</title><rect x="43.7076%" y="197" width="0.0185%" height="15" fill="rgb(227,189,39)" fg:x="23662" fg:w="10"/><text x="43.9576%" y="207.50"></text></g><g><title>__GI___libc_malloc (2,126 samples, 3.93%)</title><rect x="43.8905%" y="101" width="3.9271%" height="15" fill="rgb(248,10,22)" fg:x="23761" fg:w="2126"/><text x="44.1405%" y="111.50">__GI..</text></g><g><title>_int_malloc (1,657 samples, 3.06%)</title><rect x="44.7568%" y="85" width="3.0608%" height="15" fill="rgb(248,46,39)" fg:x="24230" fg:w="1657"/><text x="45.0068%" y="95.50">_in..</text></g><g><title>unlink_chunk.isra.0 (64 samples, 0.12%)</title><rect x="47.6994%" y="69" width="0.1182%" height="15" fill="rgb(248,113,48)" fg:x="25823" fg:w="64"/><text x="47.9494%" y="79.50"></text></g><g><title>__rdl_alloc (100 samples, 0.18%)</title><rect x="47.8176%" y="101" width="0.1847%" height="15" fill="rgb(245,16,25)" fg:x="25887" fg:w="100"/><text x="48.0676%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (100 samples, 0.18%)</title><rect x="47.8176%" y="85" width="0.1847%" height="15" fill="rgb(249,152,16)" fg:x="25887" fg:w="100"/><text x="48.0676%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,348 samples, 4.34%)</title><rect x="43.7261%" y="197" width="4.3371%" height="15" fill="rgb(250,16,1)" fg:x="23672" fg:w="2348"/><text x="43.9761%" y="207.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,323 samples, 4.29%)</title><rect x="43.7723%" y="181" width="4.2910%" height="15" fill="rgb(249,138,3)" fg:x="23697" fg:w="2323"/><text x="44.0223%" y="191.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,323 samples, 4.29%)</title><rect x="43.7723%" y="165" width="4.2910%" height="15" fill="rgb(227,71,41)" fg:x="23697" fg:w="2323"/><text x="44.0223%" y="175.50">alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,322 samples, 4.29%)</title><rect x="43.7741%" y="149" width="4.2891%" height="15" fill="rgb(209,184,23)" fg:x="23698" fg:w="2322"/><text x="44.0241%" y="159.50">&lt;allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,322 samples, 4.29%)</title><rect x="43.7741%" y="133" width="4.2891%" height="15" fill="rgb(223,215,31)" fg:x="23698" fg:w="2322"/><text x="44.0241%" y="143.50">alloc..</text></g><g><title>alloc::alloc::alloc (2,287 samples, 4.22%)</title><rect x="43.8388%" y="117" width="4.2245%" height="15" fill="rgb(210,146,28)" fg:x="23733" fg:w="2287"/><text x="44.0888%" y="127.50">alloc..</text></g><g><title>__rust_alloc (33 samples, 0.06%)</title><rect x="48.0023%" y="101" width="0.0610%" height="15" fill="rgb(209,183,41)" fg:x="25987" fg:w="33"/><text x="48.2523%" y="111.50"></text></g><g><title>__memcpy_sse2_unaligned (36 samples, 0.07%)</title><rect x="48.0817%" y="165" width="0.0665%" height="15" fill="rgb(209,224,45)" fg:x="26030" fg:w="36"/><text x="48.3317%" y="175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,495 samples, 4.61%)</title><rect x="43.7076%" y="261" width="4.6087%" height="15" fill="rgb(224,209,51)" fg:x="23662" fg:w="2495"/><text x="43.9576%" y="271.50">alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,495 samples, 4.61%)</title><rect x="43.7076%" y="245" width="4.6087%" height="15" fill="rgb(223,17,39)" fg:x="23662" fg:w="2495"/><text x="43.9576%" y="255.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (2,495 samples, 4.61%)</title><rect x="43.7076%" y="229" width="4.6087%" height="15" fill="rgb(234,204,37)" fg:x="23662" fg:w="2495"/><text x="43.9576%" y="239.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,495 samples, 4.61%)</title><rect x="43.7076%" y="213" width="4.6087%" height="15" fill="rgb(236,120,5)" fg:x="23662" fg:w="2495"/><text x="43.9576%" y="223.50">&lt;T as..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (137 samples, 0.25%)</title><rect x="48.0632%" y="197" width="0.2531%" height="15" fill="rgb(248,97,27)" fg:x="26020" fg:w="137"/><text x="48.3132%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (137 samples, 0.25%)</title><rect x="48.0632%" y="181" width="0.2531%" height="15" fill="rgb(240,66,17)" fg:x="26020" fg:w="137"/><text x="48.3132%" y="191.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (91 samples, 0.17%)</title><rect x="48.1482%" y="165" width="0.1681%" height="15" fill="rgb(210,79,3)" fg:x="26066" fg:w="91"/><text x="48.3982%" y="175.50"></text></g><g><title>yakvdb::disk::block::get_key (71 samples, 0.13%)</title><rect x="48.3163%" y="261" width="0.1311%" height="15" fill="rgb(214,176,27)" fg:x="26157" fg:w="71"/><text x="48.5663%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (33 samples, 0.06%)</title><rect x="48.3865%" y="245" width="0.0610%" height="15" fill="rgb(235,185,3)" fg:x="26195" fg:w="33"/><text x="48.6365%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (33 samples, 0.06%)</title><rect x="48.3865%" y="229" width="0.0610%" height="15" fill="rgb(227,24,12)" fg:x="26195" fg:w="33"/><text x="48.6365%" y="239.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="48.4364%" y="213" width="0.0111%" height="15" fill="rgb(252,169,48)" fg:x="26222" fg:w="6"/><text x="48.6864%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.01%)</title><rect x="48.4364%" y="197" width="0.0111%" height="15" fill="rgb(212,65,1)" fg:x="26222" fg:w="6"/><text x="48.6864%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (6 samples, 0.01%)</title><rect x="48.4364%" y="181" width="0.0111%" height="15" fill="rgb(242,39,24)" fg:x="26222" fg:w="6"/><text x="48.6864%" y="191.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (2,697 samples, 4.98%)</title><rect x="43.5968%" y="277" width="4.9818%" height="15" fill="rgb(249,32,23)" fg:x="23602" fg:w="2697"/><text x="43.8468%" y="287.50">&lt;yakvd..</text></g><g><title>yakvdb::disk::block::get_val (71 samples, 0.13%)</title><rect x="48.4475%" y="261" width="0.1311%" height="15" fill="rgb(251,195,23)" fg:x="26228" fg:w="71"/><text x="48.6975%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (41 samples, 0.08%)</title><rect x="48.5029%" y="245" width="0.0757%" height="15" fill="rgb(236,174,8)" fg:x="26258" fg:w="41"/><text x="48.7529%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (41 samples, 0.08%)</title><rect x="48.5029%" y="229" width="0.0757%" height="15" fill="rgb(220,197,8)" fg:x="26258" fg:w="41"/><text x="48.7529%" y="239.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.02%)</title><rect x="48.5601%" y="213" width="0.0185%" height="15" fill="rgb(240,108,37)" fg:x="26289" fg:w="10"/><text x="48.8101%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (10 samples, 0.02%)</title><rect x="48.5601%" y="197" width="0.0185%" height="15" fill="rgb(232,176,24)" fg:x="26289" fg:w="10"/><text x="48.8101%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (10 samples, 0.02%)</title><rect x="48.5601%" y="181" width="0.0185%" height="15" fill="rgb(243,35,29)" fg:x="26289" fg:w="10"/><text x="48.8101%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,511 samples, 8.33%)</title><rect x="40.3366%" y="357" width="8.3326%" height="15" fill="rgb(210,37,18)" fg:x="21837" fg:w="4511"/><text x="40.5866%" y="367.50">&lt;alloc::vec:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,771 samples, 5.12%)</title><rect x="43.5506%" y="341" width="5.1185%" height="15" fill="rgb(224,184,40)" fg:x="23577" fg:w="2771"/><text x="43.8006%" y="351.50">core::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,770 samples, 5.12%)</title><rect x="43.5525%" y="325" width="5.1166%" height="15" fill="rgb(236,39,29)" fg:x="23578" fg:w="2770"/><text x="43.8025%" y="335.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,770 samples, 5.12%)</title><rect x="43.5525%" y="309" width="5.1166%" height="15" fill="rgb(232,48,39)" fg:x="23578" fg:w="2770"/><text x="43.8025%" y="319.50">core::..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2,746 samples, 5.07%)</title><rect x="43.5968%" y="293" width="5.0723%" height="15" fill="rgb(236,34,42)" fg:x="23602" fg:w="2746"/><text x="43.8468%" y="303.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (49 samples, 0.09%)</title><rect x="48.5786%" y="277" width="0.0905%" height="15" fill="rgb(243,106,37)" fg:x="26299" fg:w="49"/><text x="48.8286%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (49 samples, 0.09%)</title><rect x="48.5786%" y="261" width="0.0905%" height="15" fill="rgb(218,96,6)" fg:x="26299" fg:w="49"/><text x="48.8286%" y="271.50"></text></g><g><title>core::ptr::write (48 samples, 0.09%)</title><rect x="48.5805%" y="245" width="0.0887%" height="15" fill="rgb(235,130,12)" fg:x="26300" fg:w="48"/><text x="48.8305%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="48.6691%" y="357" width="0.0185%" height="15" fill="rgb(231,95,0)" fg:x="26348" fg:w="10"/><text x="48.9191%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (10 samples, 0.02%)</title><rect x="48.6691%" y="341" width="0.0185%" height="15" fill="rgb(228,12,23)" fg:x="26348" fg:w="10"/><text x="48.9191%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.02%)</title><rect x="48.6691%" y="325" width="0.0185%" height="15" fill="rgb(216,12,1)" fg:x="26348" fg:w="10"/><text x="48.9191%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (10 samples, 0.02%)</title><rect x="48.6691%" y="309" width="0.0185%" height="15" fill="rgb(219,59,3)" fg:x="26348" fg:w="10"/><text x="48.9191%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,555 samples, 8.41%)</title><rect x="40.3329%" y="421" width="8.4138%" height="15" fill="rgb(215,208,46)" fg:x="21835" fg:w="4555"/><text x="40.5829%" y="431.50">core::iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,555 samples, 8.41%)</title><rect x="40.3329%" y="405" width="8.4138%" height="15" fill="rgb(254,224,29)" fg:x="21835" fg:w="4555"/><text x="40.5829%" y="415.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,554 samples, 8.41%)</title><rect x="40.3347%" y="389" width="8.4120%" height="15" fill="rgb(232,14,29)" fg:x="21836" fg:w="4554"/><text x="40.5847%" y="399.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,553 samples, 8.41%)</title><rect x="40.3366%" y="373" width="8.4101%" height="15" fill="rgb(208,45,52)" fg:x="21837" fg:w="4553"/><text x="40.5866%" y="383.50">&lt;alloc::vec:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (32 samples, 0.06%)</title><rect x="48.6876%" y="357" width="0.0591%" height="15" fill="rgb(234,191,28)" fg:x="26358" fg:w="32"/><text x="48.9376%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.06%)</title><rect x="48.6876%" y="341" width="0.0591%" height="15" fill="rgb(244,67,43)" fg:x="26358" fg:w="32"/><text x="48.9376%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32 samples, 0.06%)</title><rect x="48.6876%" y="325" width="0.0591%" height="15" fill="rgb(236,189,24)" fg:x="26358" fg:w="32"/><text x="48.9376%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (32 samples, 0.06%)</title><rect x="48.6876%" y="309" width="0.0591%" height="15" fill="rgb(239,214,33)" fg:x="26358" fg:w="32"/><text x="48.9376%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.06%)</title><rect x="48.6876%" y="293" width="0.0591%" height="15" fill="rgb(226,176,41)" fg:x="26358" fg:w="32"/><text x="48.9376%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.06%)</title><rect x="48.6876%" y="277" width="0.0591%" height="15" fill="rgb(248,47,8)" fg:x="26358" fg:w="32"/><text x="48.9376%" y="287.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.06%)</title><rect x="48.6894%" y="261" width="0.0573%" height="15" fill="rgb(218,81,44)" fg:x="26359" fg:w="31"/><text x="48.9394%" y="271.50"></text></g><g><title>__GI___libc_malloc (31 samples, 0.06%)</title><rect x="48.6894%" y="245" width="0.0573%" height="15" fill="rgb(213,98,6)" fg:x="26359" fg:w="31"/><text x="48.9394%" y="255.50"></text></g><g><title>_int_malloc (28 samples, 0.05%)</title><rect x="48.6950%" y="229" width="0.0517%" height="15" fill="rgb(222,85,22)" fg:x="26362" fg:w="28"/><text x="48.9450%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="48.7485%" y="373" width="0.0277%" height="15" fill="rgb(239,46,39)" fg:x="26391" fg:w="15"/><text x="48.9985%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (40 samples, 0.07%)</title><rect x="48.8538%" y="293" width="0.0739%" height="15" fill="rgb(237,12,29)" fg:x="26448" fg:w="40"/><text x="49.1038%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (40 samples, 0.07%)</title><rect x="48.8538%" y="277" width="0.0739%" height="15" fill="rgb(214,77,8)" fg:x="26448" fg:w="40"/><text x="49.1038%" y="287.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (40 samples, 0.07%)</title><rect x="48.8538%" y="261" width="0.0739%" height="15" fill="rgb(217,168,37)" fg:x="26448" fg:w="40"/><text x="49.1038%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (48 samples, 0.09%)</title><rect x="48.9277%" y="293" width="0.0887%" height="15" fill="rgb(221,217,23)" fg:x="26488" fg:w="48"/><text x="49.1777%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (48 samples, 0.09%)</title><rect x="48.9277%" y="277" width="0.0887%" height="15" fill="rgb(243,229,36)" fg:x="26488" fg:w="48"/><text x="49.1777%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (156 samples, 0.29%)</title><rect x="48.7763%" y="373" width="0.2882%" height="15" fill="rgb(251,163,40)" fg:x="26406" fg:w="156"/><text x="49.0263%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (156 samples, 0.29%)</title><rect x="48.7763%" y="357" width="0.2882%" height="15" fill="rgb(237,222,12)" fg:x="26406" fg:w="156"/><text x="49.0263%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (156 samples, 0.29%)</title><rect x="48.7763%" y="341" width="0.2882%" height="15" fill="rgb(248,132,6)" fg:x="26406" fg:w="156"/><text x="49.0263%" y="351.50"></text></g><g><title>yakvdb::disk::block::put_slot (137 samples, 0.25%)</title><rect x="48.8113%" y="325" width="0.2531%" height="15" fill="rgb(227,167,50)" fg:x="26425" fg:w="137"/><text x="49.0613%" y="335.50"></text></g><g><title>yakvdb::disk::block::put_u32 (122 samples, 0.23%)</title><rect x="48.8391%" y="309" width="0.2254%" height="15" fill="rgb(242,84,37)" fg:x="26440" fg:w="122"/><text x="49.0891%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (26 samples, 0.05%)</title><rect x="49.0164%" y="293" width="0.0480%" height="15" fill="rgb(212,4,50)" fg:x="26536" fg:w="26"/><text x="49.2664%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (26 samples, 0.05%)</title><rect x="49.0164%" y="277" width="0.0480%" height="15" fill="rgb(230,228,32)" fg:x="26536" fg:w="26"/><text x="49.2664%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.02%)</title><rect x="49.0644%" y="277" width="0.0203%" height="15" fill="rgb(248,217,23)" fg:x="26562" fg:w="11"/><text x="49.3144%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.02%)</title><rect x="49.0644%" y="261" width="0.0203%" height="15" fill="rgb(238,197,32)" fg:x="26562" fg:w="11"/><text x="49.3144%" y="271.50"></text></g><g><title>_int_free (8 samples, 0.01%)</title><rect x="49.0700%" y="245" width="0.0148%" height="15" fill="rgb(236,106,1)" fg:x="26565" fg:w="8"/><text x="49.3200%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (187 samples, 0.35%)</title><rect x="48.7467%" y="421" width="0.3454%" height="15" fill="rgb(219,228,13)" fg:x="26390" fg:w="187"/><text x="48.9967%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (187 samples, 0.35%)</title><rect x="48.7467%" y="405" width="0.3454%" height="15" fill="rgb(238,30,35)" fg:x="26390" fg:w="187"/><text x="48.9967%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (186 samples, 0.34%)</title><rect x="48.7485%" y="389" width="0.3436%" height="15" fill="rgb(236,70,23)" fg:x="26391" fg:w="186"/><text x="48.9985%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;yakvdb::api::page::Slot&gt;&gt; (15 samples, 0.03%)</title><rect x="49.0644%" y="373" width="0.0277%" height="15" fill="rgb(249,104,48)" fg:x="26562" fg:w="15"/><text x="49.3144%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="49.0644%" y="357" width="0.0277%" height="15" fill="rgb(254,117,50)" fg:x="26562" fg:w="15"/><text x="49.3144%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;yakvdb::api::page::Slot,alloc::alloc::Global&gt;&gt; (15 samples, 0.03%)</title><rect x="49.0644%" y="341" width="0.0277%" height="15" fill="rgb(223,152,4)" fg:x="26562" fg:w="15"/><text x="49.3144%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="49.0644%" y="325" width="0.0277%" height="15" fill="rgb(245,6,2)" fg:x="26562" fg:w="15"/><text x="49.3144%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;yakvdb::api::page::Slot&gt;&gt; (15 samples, 0.03%)</title><rect x="49.0644%" y="309" width="0.0277%" height="15" fill="rgb(249,150,24)" fg:x="26562" fg:w="15"/><text x="49.3144%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="49.0644%" y="293" width="0.0277%" height="15" fill="rgb(228,185,42)" fg:x="26562" fg:w="15"/><text x="49.3144%" y="303.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (14 samples, 0.03%)</title><rect x="49.0958%" y="341" width="0.0259%" height="15" fill="rgb(226,39,33)" fg:x="26579" fg:w="14"/><text x="49.3458%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (32 samples, 0.06%)</title><rect x="49.0921%" y="421" width="0.0591%" height="15" fill="rgb(221,166,19)" fg:x="26577" fg:w="32"/><text x="49.3421%" y="431.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum (32 samples, 0.06%)</title><rect x="49.0921%" y="405" width="0.0591%" height="15" fill="rgb(209,109,2)" fg:x="26577" fg:w="32"/><text x="49.3421%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (32 samples, 0.06%)</title><rect x="49.0921%" y="389" width="0.0591%" height="15" fill="rgb(252,216,26)" fg:x="26577" fg:w="32"/><text x="49.3421%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (32 samples, 0.06%)</title><rect x="49.0921%" y="373" width="0.0591%" height="15" fill="rgb(227,173,36)" fg:x="26577" fg:w="32"/><text x="49.3421%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (30 samples, 0.06%)</title><rect x="49.0958%" y="357" width="0.0554%" height="15" fill="rgb(209,90,7)" fg:x="26579" fg:w="30"/><text x="49.3458%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (16 samples, 0.03%)</title><rect x="49.1217%" y="341" width="0.0296%" height="15" fill="rgb(250,194,11)" fg:x="26593" fg:w="16"/><text x="49.3717%" y="351.50"></text></g><g><title>__GI___libc_free (197 samples, 0.36%)</title><rect x="49.2953%" y="277" width="0.3639%" height="15" fill="rgb(220,72,50)" fg:x="26687" fg:w="197"/><text x="49.5453%" y="287.50"></text></g><g><title>__rdl_dealloc (37 samples, 0.07%)</title><rect x="49.6592%" y="277" width="0.0683%" height="15" fill="rgb(222,106,48)" fg:x="26884" fg:w="37"/><text x="49.9092%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (37 samples, 0.07%)</title><rect x="49.6592%" y="261" width="0.0683%" height="15" fill="rgb(216,220,45)" fg:x="26884" fg:w="37"/><text x="49.9092%" y="271.50"></text></g><g><title>__rust_dealloc (24 samples, 0.04%)</title><rect x="49.7275%" y="277" width="0.0443%" height="15" fill="rgb(234,112,18)" fg:x="26921" fg:w="24"/><text x="49.9775%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (984 samples, 1.82%)</title><rect x="49.2417%" y="309" width="1.8176%" height="15" fill="rgb(206,179,9)" fg:x="26658" fg:w="984"/><text x="49.4917%" y="319.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (984 samples, 1.82%)</title><rect x="49.2417%" y="293" width="1.8176%" height="15" fill="rgb(215,115,40)" fg:x="26658" fg:w="984"/><text x="49.4917%" y="303.50">a..</text></g><g><title>_int_free (697 samples, 1.29%)</title><rect x="49.7719%" y="277" width="1.2875%" height="15" fill="rgb(222,69,34)" fg:x="26945" fg:w="697"/><text x="50.0219%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,060 samples, 1.96%)</title><rect x="49.1568%" y="405" width="1.9580%" height="15" fill="rgb(209,161,10)" fg:x="26612" fg:w="1060"/><text x="49.4068%" y="415.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (1,060 samples, 1.96%)</title><rect x="49.1568%" y="389" width="1.9580%" height="15" fill="rgb(217,6,38)" fg:x="26612" fg:w="1060"/><text x="49.4068%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (1,060 samples, 1.96%)</title><rect x="49.1568%" y="373" width="1.9580%" height="15" fill="rgb(229,229,48)" fg:x="26612" fg:w="1060"/><text x="49.4068%" y="383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,060 samples, 1.96%)</title><rect x="49.1568%" y="357" width="1.9580%" height="15" fill="rgb(225,21,28)" fg:x="26612" fg:w="1060"/><text x="49.4068%" y="367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,060 samples, 1.96%)</title><rect x="49.1568%" y="341" width="1.9580%" height="15" fill="rgb(206,33,13)" fg:x="26612" fg:w="1060"/><text x="49.4068%" y="351.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,060 samples, 1.96%)</title><rect x="49.1568%" y="325" width="1.9580%" height="15" fill="rgb(242,178,17)" fg:x="26612" fg:w="1060"/><text x="49.4068%" y="335.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (30 samples, 0.06%)</title><rect x="51.0593%" y="309" width="0.0554%" height="15" fill="rgb(220,162,5)" fg:x="27642" fg:w="30"/><text x="51.3093%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (1,070 samples, 1.98%)</title><rect x="49.1568%" y="421" width="1.9765%" height="15" fill="rgb(210,33,43)" fg:x="26612" fg:w="1070"/><text x="49.4068%" y="431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (10 samples, 0.02%)</title><rect x="51.1148%" y="405" width="0.0185%" height="15" fill="rgb(216,116,54)" fg:x="27672" fg:w="10"/><text x="51.3648%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="51.1148%" y="389" width="0.0185%" height="15" fill="rgb(249,92,24)" fg:x="27672" fg:w="10"/><text x="51.3648%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.01%)</title><rect x="51.1222%" y="373" width="0.0111%" height="15" fill="rgb(231,189,14)" fg:x="27676" fg:w="6"/><text x="51.3722%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.01%)</title><rect x="51.1222%" y="357" width="0.0111%" height="15" fill="rgb(230,8,41)" fg:x="27676" fg:w="6"/><text x="51.3722%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="51.1332%" y="421" width="0.0148%" height="15" fill="rgb(249,7,27)" fg:x="27682" fg:w="8"/><text x="51.3832%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="51.1332%" y="405" width="0.0148%" height="15" fill="rgb(232,86,5)" fg:x="27682" fg:w="8"/><text x="51.3832%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="51.1332%" y="389" width="0.0148%" height="15" fill="rgb(224,175,18)" fg:x="27682" fg:w="8"/><text x="51.3832%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="51.1332%" y="373" width="0.0148%" height="15" fill="rgb(220,129,12)" fg:x="27682" fg:w="8"/><text x="51.3832%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="51.1332%" y="357" width="0.0148%" height="15" fill="rgb(210,19,36)" fg:x="27682" fg:w="8"/><text x="51.3832%" y="367.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="51.1369%" y="341" width="0.0111%" height="15" fill="rgb(219,96,14)" fg:x="27684" fg:w="6"/><text x="51.3869%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (20 samples, 0.04%)</title><rect x="51.1480%" y="421" width="0.0369%" height="15" fill="rgb(249,106,1)" fg:x="27690" fg:w="20"/><text x="51.3980%" y="431.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (20 samples, 0.04%)</title><rect x="51.1480%" y="405" width="0.0369%" height="15" fill="rgb(249,155,20)" fg:x="27690" fg:w="20"/><text x="51.3980%" y="415.50"></text></g><g><title>__memcpy_sse2_unaligned (21 samples, 0.04%)</title><rect x="51.2533%" y="373" width="0.0388%" height="15" fill="rgb(244,168,9)" fg:x="27747" fg:w="21"/><text x="51.5033%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (206 samples, 0.38%)</title><rect x="51.2385%" y="405" width="0.3805%" height="15" fill="rgb(216,23,50)" fg:x="27739" fg:w="206"/><text x="51.4885%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (206 samples, 0.38%)</title><rect x="51.2385%" y="389" width="0.3805%" height="15" fill="rgb(224,219,20)" fg:x="27739" fg:w="206"/><text x="51.4885%" y="399.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (177 samples, 0.33%)</title><rect x="51.2921%" y="373" width="0.3269%" height="15" fill="rgb(222,156,15)" fg:x="27768" fg:w="177"/><text x="51.5421%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove (6,353 samples, 11.74%)</title><rect x="39.9265%" y="437" width="11.7350%" height="15" fill="rgb(231,97,17)" fg:x="21615" fg:w="6353"/><text x="40.1765%" y="447.50">&lt;yakvdb::disk::bl..</text></g><g><title>yakvdb::disk::block::put_slice (258 samples, 0.48%)</title><rect x="51.1850%" y="421" width="0.4766%" height="15" fill="rgb(218,70,48)" fg:x="27710" fg:w="258"/><text x="51.4350%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (23 samples, 0.04%)</title><rect x="51.6190%" y="405" width="0.0425%" height="15" fill="rgb(212,196,52)" fg:x="27945" fg:w="23"/><text x="51.8690%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (23 samples, 0.04%)</title><rect x="51.6190%" y="389" width="0.0425%" height="15" fill="rgb(243,203,18)" fg:x="27945" fg:w="23"/><text x="51.8690%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7,041 samples, 13.01%)</title><rect x="38.6575%" y="517" width="13.0059%" height="15" fill="rgb(252,125,41)" fg:x="20928" fg:w="7041"/><text x="38.9075%" y="527.50">core::iter::traits::..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,041 samples, 13.01%)</title><rect x="38.6575%" y="501" width="13.0059%" height="15" fill="rgb(223,180,33)" fg:x="20928" fg:w="7041"/><text x="38.9075%" y="511.50">&lt;core::iter::adapter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (7,041 samples, 13.01%)</title><rect x="38.6575%" y="485" width="13.0059%" height="15" fill="rgb(254,159,46)" fg:x="20928" fg:w="7041"/><text x="38.9075%" y="495.50">core::iter::traits::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7,041 samples, 13.01%)</title><rect x="38.6575%" y="469" width="13.0059%" height="15" fill="rgb(254,38,10)" fg:x="20928" fg:w="7041"/><text x="38.9075%" y="479.50">core::iter::traits::..</text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::split::{{closure}} (7,041 samples, 13.01%)</title><rect x="38.6575%" y="453" width="13.0059%" height="15" fill="rgb(208,217,32)" fg:x="20928" fg:w="7041"/><text x="38.9075%" y="463.50">&lt;yakvdb::disk::file:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.05%)</title><rect x="51.6652%" y="405" width="0.0517%" height="15" fill="rgb(221,120,13)" fg:x="27970" fg:w="28"/><text x="51.9152%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.05%)</title><rect x="51.6652%" y="389" width="0.0517%" height="15" fill="rgb(246,54,52)" fg:x="27970" fg:w="28"/><text x="51.9152%" y="399.50"></text></g><g><title>_int_free (20 samples, 0.04%)</title><rect x="51.6800%" y="373" width="0.0369%" height="15" fill="rgb(242,34,25)" fg:x="27978" fg:w="20"/><text x="51.9300%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::split (7,559 samples, 13.96%)</title><rect x="37.7561%" y="533" width="13.9627%" height="15" fill="rgb(247,209,9)" fg:x="20440" fg:w="7559"/><text x="38.0061%" y="543.50">&lt;yakvdb::disk::file::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;,u32)&gt;&gt; (30 samples, 0.06%)</title><rect x="51.6634%" y="517" width="0.0554%" height="15" fill="rgb(228,71,26)" fg:x="27969" fg:w="30"/><text x="51.9134%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.06%)</title><rect x="51.6634%" y="501" width="0.0554%" height="15" fill="rgb(222,145,49)" fg:x="27969" fg:w="30"/><text x="51.9134%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;,u32)]&gt; (30 samples, 0.06%)</title><rect x="51.6634%" y="485" width="0.0554%" height="15" fill="rgb(218,121,17)" fg:x="27969" fg:w="30"/><text x="51.9134%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;,u32)&gt; (30 samples, 0.06%)</title><rect x="51.6634%" y="469" width="0.0554%" height="15" fill="rgb(244,50,7)" fg:x="27969" fg:w="30"/><text x="51.9134%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (30 samples, 0.06%)</title><rect x="51.6634%" y="453" width="0.0554%" height="15" fill="rgb(246,229,37)" fg:x="27969" fg:w="30"/><text x="51.9134%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (30 samples, 0.06%)</title><rect x="51.6634%" y="437" width="0.0554%" height="15" fill="rgb(225,18,5)" fg:x="27969" fg:w="30"/><text x="51.9134%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.06%)</title><rect x="51.6634%" y="421" width="0.0554%" height="15" fill="rgb(213,204,8)" fg:x="27969" fg:w="30"/><text x="51.9134%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (8 samples, 0.01%)</title><rect x="51.7391%" y="533" width="0.0148%" height="15" fill="rgb(238,103,6)" fg:x="28010" fg:w="8"/><text x="51.9891%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::gt (8 samples, 0.01%)</title><rect x="51.7391%" y="517" width="0.0148%" height="15" fill="rgb(222,25,35)" fg:x="28010" fg:w="8"/><text x="51.9891%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (6 samples, 0.01%)</title><rect x="51.7428%" y="501" width="0.0111%" height="15" fill="rgb(213,203,35)" fg:x="28012" fg:w="6"/><text x="51.9928%" y="511.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (6 samples, 0.01%)</title><rect x="51.7428%" y="485" width="0.0111%" height="15" fill="rgb(221,79,53)" fg:x="28012" fg:w="6"/><text x="51.9928%" y="495.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (6 samples, 0.01%)</title><rect x="51.7428%" y="469" width="0.0111%" height="15" fill="rgb(243,200,35)" fg:x="28012" fg:w="6"/><text x="51.9928%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u32,u32)&gt;&gt; (17 samples, 0.03%)</title><rect x="51.7724%" y="533" width="0.0314%" height="15" fill="rgb(248,60,25)" fg:x="28028" fg:w="17"/><text x="52.0224%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u32,u32)&gt;&gt; (17 samples, 0.03%)</title><rect x="51.7724%" y="517" width="0.0314%" height="15" fill="rgb(227,53,46)" fg:x="28028" fg:w="17"/><text x="52.0224%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="51.7724%" y="501" width="0.0314%" height="15" fill="rgb(216,120,32)" fg:x="28028" fg:w="17"/><text x="52.0224%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.02%)</title><rect x="51.7816%" y="485" width="0.0222%" height="15" fill="rgb(220,134,1)" fg:x="28033" fg:w="12"/><text x="52.0316%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.02%)</title><rect x="51.7853%" y="469" width="0.0185%" height="15" fill="rgb(237,168,5)" fg:x="28035" fg:w="10"/><text x="52.0353%" y="479.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="51.7927%" y="453" width="0.0111%" height="15" fill="rgb(231,100,33)" fg:x="28039" fg:w="6"/><text x="52.0427%" y="463.50"></text></g><g><title>__GI___libc_free (6 samples, 0.01%)</title><rect x="51.8038%" y="389" width="0.0111%" height="15" fill="rgb(236,177,47)" fg:x="28045" fg:w="6"/><text x="52.0538%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.02%)</title><rect x="51.8038%" y="421" width="0.0240%" height="15" fill="rgb(235,7,49)" fg:x="28045" fg:w="13"/><text x="52.0538%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.02%)</title><rect x="51.8038%" y="405" width="0.0240%" height="15" fill="rgb(232,119,22)" fg:x="28045" fg:w="13"/><text x="52.0538%" y="415.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="51.8148%" y="389" width="0.0129%" height="15" fill="rgb(254,73,53)" fg:x="28051" fg:w="7"/><text x="52.0648%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;u32&gt;&gt; (15 samples, 0.03%)</title><rect x="51.8038%" y="533" width="0.0277%" height="15" fill="rgb(251,35,20)" fg:x="28045" fg:w="15"/><text x="52.0538%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;u32,std::collections::hash::map::RandomState&gt;&gt; (15 samples, 0.03%)</title><rect x="51.8038%" y="517" width="0.0277%" height="15" fill="rgb(241,119,20)" fg:x="28045" fg:w="15"/><text x="52.0538%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,(),std::collections::hash::map::RandomState&gt;&gt; (15 samples, 0.03%)</title><rect x="51.8038%" y="501" width="0.0277%" height="15" fill="rgb(207,102,14)" fg:x="28045" fg:w="15"/><text x="52.0538%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,())&gt;&gt; (15 samples, 0.03%)</title><rect x="51.8038%" y="485" width="0.0277%" height="15" fill="rgb(248,201,50)" fg:x="28045" fg:w="15"/><text x="52.0538%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="51.8038%" y="469" width="0.0277%" height="15" fill="rgb(222,185,44)" fg:x="28045" fg:w="15"/><text x="52.0538%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (15 samples, 0.03%)</title><rect x="51.8038%" y="453" width="0.0277%" height="15" fill="rgb(218,107,18)" fg:x="28045" fg:w="15"/><text x="52.0538%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (15 samples, 0.03%)</title><rect x="51.8038%" y="437" width="0.0277%" height="15" fill="rgb(237,177,39)" fg:x="28045" fg:w="15"/><text x="52.0538%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.02%)</title><rect x="51.8647%" y="373" width="0.0222%" height="15" fill="rgb(246,69,6)" fg:x="28078" fg:w="12"/><text x="52.1147%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (26 samples, 0.05%)</title><rect x="51.8425%" y="469" width="0.0480%" height="15" fill="rgb(234,208,37)" fg:x="28066" fg:w="26"/><text x="52.0925%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 0.05%)</title><rect x="51.8425%" y="453" width="0.0480%" height="15" fill="rgb(225,4,6)" fg:x="28066" fg:w="26"/><text x="52.0925%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.05%)</title><rect x="51.8425%" y="437" width="0.0480%" height="15" fill="rgb(233,45,0)" fg:x="28066" fg:w="26"/><text x="52.0925%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (26 samples, 0.05%)</title><rect x="51.8425%" y="421" width="0.0480%" height="15" fill="rgb(226,136,5)" fg:x="28066" fg:w="26"/><text x="52.0925%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (26 samples, 0.05%)</title><rect x="51.8425%" y="405" width="0.0480%" height="15" fill="rgb(211,91,47)" fg:x="28066" fg:w="26"/><text x="52.0925%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.04%)</title><rect x="51.8536%" y="389" width="0.0369%" height="15" fill="rgb(242,88,51)" fg:x="28072" fg:w="20"/><text x="52.1036%" y="399.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (35 samples, 0.06%)</title><rect x="51.8370%" y="533" width="0.0647%" height="15" fill="rgb(230,91,28)" fg:x="28063" fg:w="35"/><text x="52.0870%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (35 samples, 0.06%)</title><rect x="51.8370%" y="517" width="0.0647%" height="15" fill="rgb(254,186,29)" fg:x="28063" fg:w="35"/><text x="52.0870%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (35 samples, 0.06%)</title><rect x="51.8370%" y="501" width="0.0647%" height="15" fill="rgb(238,6,4)" fg:x="28063" fg:w="35"/><text x="52.0870%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (35 samples, 0.06%)</title><rect x="51.8370%" y="485" width="0.0647%" height="15" fill="rgb(221,151,16)" fg:x="28063" fg:w="35"/><text x="52.0870%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.01%)</title><rect x="51.8906%" y="469" width="0.0111%" height="15" fill="rgb(251,143,52)" fg:x="28092" fg:w="6"/><text x="52.1406%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="51.8906%" y="453" width="0.0111%" height="15" fill="rgb(206,90,15)" fg:x="28092" fg:w="6"/><text x="52.1406%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.01%)</title><rect x="51.8906%" y="437" width="0.0111%" height="15" fill="rgb(218,35,8)" fg:x="28092" fg:w="6"/><text x="52.1406%" y="447.50"></text></g><g><title>hashbrown::map::make_insert_hash (22 samples, 0.04%)</title><rect x="51.9035%" y="485" width="0.0406%" height="15" fill="rgb(239,215,6)" fg:x="28099" fg:w="22"/><text x="52.1535%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.04%)</title><rect x="51.9054%" y="469" width="0.0388%" height="15" fill="rgb(245,116,39)" fg:x="28100" fg:w="21"/><text x="52.1554%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="51.9109%" y="453" width="0.0332%" height="15" fill="rgb(242,65,28)" fg:x="28103" fg:w="18"/><text x="52.1609%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="51.9109%" y="437" width="0.0332%" height="15" fill="rgb(252,132,53)" fg:x="28103" fg:w="18"/><text x="52.1609%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="51.9109%" y="421" width="0.0332%" height="15" fill="rgb(224,159,50)" fg:x="28103" fg:w="18"/><text x="52.1609%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.03%)</title><rect x="51.9183%" y="405" width="0.0259%" height="15" fill="rgb(224,93,4)" fg:x="28107" fg:w="14"/><text x="52.1683%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.01%)</title><rect x="51.9331%" y="389" width="0.0111%" height="15" fill="rgb(208,81,34)" fg:x="28115" fg:w="6"/><text x="52.1831%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6 samples, 0.01%)</title><rect x="51.9441%" y="485" width="0.0111%" height="15" fill="rgb(233,92,54)" fg:x="28121" fg:w="6"/><text x="52.1941%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="51.9441%" y="469" width="0.0111%" height="15" fill="rgb(237,21,14)" fg:x="28121" fg:w="6"/><text x="52.1941%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.01%)</title><rect x="51.9441%" y="453" width="0.0111%" height="15" fill="rgb(249,128,51)" fg:x="28121" fg:w="6"/><text x="52.1941%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (7 samples, 0.01%)</title><rect x="51.9571%" y="469" width="0.0129%" height="15" fill="rgb(223,129,24)" fg:x="28128" fg:w="7"/><text x="52.2071%" y="479.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (44 samples, 0.08%)</title><rect x="51.9017%" y="533" width="0.0813%" height="15" fill="rgb(231,168,25)" fg:x="28098" fg:w="44"/><text x="52.1517%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (44 samples, 0.08%)</title><rect x="51.9017%" y="517" width="0.0813%" height="15" fill="rgb(224,39,20)" fg:x="28098" fg:w="44"/><text x="52.1517%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (44 samples, 0.08%)</title><rect x="51.9017%" y="501" width="0.0813%" height="15" fill="rgb(225,152,53)" fg:x="28098" fg:w="44"/><text x="52.1517%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (15 samples, 0.03%)</title><rect x="51.9552%" y="485" width="0.0277%" height="15" fill="rgb(252,17,24)" fg:x="28127" fg:w="15"/><text x="52.2052%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (7 samples, 0.01%)</title><rect x="51.9700%" y="469" width="0.0129%" height="15" fill="rgb(250,114,30)" fg:x="28135" fg:w="7"/><text x="52.2200%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.02%)</title><rect x="51.9885%" y="437" width="0.0185%" height="15" fill="rgb(229,5,4)" fg:x="28145" fg:w="10"/><text x="52.2385%" y="447.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (6 samples, 0.01%)</title><rect x="52.0125%" y="405" width="0.0111%" height="15" fill="rgb(225,176,49)" fg:x="28158" fg:w="6"/><text x="52.2625%" y="415.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (6 samples, 0.01%)</title><rect x="52.0236%" y="405" width="0.0111%" height="15" fill="rgb(224,221,49)" fg:x="28164" fg:w="6"/><text x="52.2736%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.01%)</title><rect x="52.0236%" y="389" width="0.0111%" height="15" fill="rgb(253,169,27)" fg:x="28164" fg:w="6"/><text x="52.2736%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="52.0236%" y="373" width="0.0111%" height="15" fill="rgb(211,206,16)" fg:x="28164" fg:w="6"/><text x="52.2736%" y="383.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.01%)</title><rect x="52.0236%" y="357" width="0.0111%" height="15" fill="rgb(244,87,35)" fg:x="28164" fg:w="6"/><text x="52.2736%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (13 samples, 0.02%)</title><rect x="52.0125%" y="421" width="0.0240%" height="15" fill="rgb(246,28,10)" fg:x="28158" fg:w="13"/><text x="52.2625%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::insert (22,912 samples, 42.32%)</title><rect x="9.7290%" y="549" width="42.3223%" height="15" fill="rgb(229,12,44)" fg:x="5267" fg:w="22912"/><text x="9.9790%" y="559.50">&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::insert</text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::with_capacity (37 samples, 0.07%)</title><rect x="51.9829%" y="533" width="0.0683%" height="15" fill="rgb(210,145,37)" fg:x="28142" fg:w="37"/><text x="52.2329%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::with_capacity_and_hasher (34 samples, 0.06%)</title><rect x="51.9885%" y="517" width="0.0628%" height="15" fill="rgb(227,112,52)" fg:x="28145" fg:w="34"/><text x="52.2385%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (34 samples, 0.06%)</title><rect x="51.9885%" y="501" width="0.0628%" height="15" fill="rgb(238,155,34)" fg:x="28145" fg:w="34"/><text x="52.2385%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (34 samples, 0.06%)</title><rect x="51.9885%" y="485" width="0.0628%" height="15" fill="rgb(239,226,36)" fg:x="28145" fg:w="34"/><text x="52.2385%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (34 samples, 0.06%)</title><rect x="51.9885%" y="469" width="0.0628%" height="15" fill="rgb(230,16,23)" fg:x="28145" fg:w="34"/><text x="52.2385%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (34 samples, 0.06%)</title><rect x="51.9885%" y="453" width="0.0628%" height="15" fill="rgb(236,171,36)" fg:x="28145" fg:w="34"/><text x="52.2385%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (24 samples, 0.04%)</title><rect x="52.0069%" y="437" width="0.0443%" height="15" fill="rgb(221,22,14)" fg:x="28155" fg:w="24"/><text x="52.2569%" y="447.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (8 samples, 0.01%)</title><rect x="52.0365%" y="421" width="0.0148%" height="15" fill="rgb(242,43,11)" fg:x="28171" fg:w="8"/><text x="52.2865%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.01%)</title><rect x="52.2268%" y="453" width="0.0129%" height="15" fill="rgb(232,69,23)" fg:x="28274" fg:w="7"/><text x="52.4768%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="52.2268%" y="437" width="0.0129%" height="15" fill="rgb(216,180,54)" fg:x="28274" fg:w="7"/><text x="52.4768%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (15 samples, 0.03%)</title><rect x="52.2175%" y="485" width="0.0277%" height="15" fill="rgb(216,5,24)" fg:x="28269" fg:w="15"/><text x="52.4675%" y="495.50"></text></g><g><title>yakvdb::disk::block::get_u32 (11 samples, 0.02%)</title><rect x="52.2249%" y="469" width="0.0203%" height="15" fill="rgb(225,89,9)" fg:x="28273" fg:w="11"/><text x="52.4749%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (32 samples, 0.06%)</title><rect x="52.1972%" y="501" width="0.0591%" height="15" fill="rgb(243,75,33)" fg:x="28258" fg:w="32"/><text x="52.4472%" y="511.50"></text></g><g><title>yakvdb::disk::block::get_u32 (6 samples, 0.01%)</title><rect x="52.2452%" y="485" width="0.0111%" height="15" fill="rgb(247,141,45)" fg:x="28284" fg:w="6"/><text x="52.4952%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (40 samples, 0.07%)</title><rect x="52.1972%" y="517" width="0.0739%" height="15" fill="rgb(232,177,36)" fg:x="28258" fg:w="40"/><text x="52.4472%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.01%)</title><rect x="52.2563%" y="501" width="0.0148%" height="15" fill="rgb(219,125,36)" fg:x="28290" fg:w="8"/><text x="52.5063%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (12 samples, 0.02%)</title><rect x="52.2729%" y="485" width="0.0222%" height="15" fill="rgb(227,94,9)" fg:x="28299" fg:w="12"/><text x="52.5229%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="52.2729%" y="469" width="0.0222%" height="15" fill="rgb(240,34,52)" fg:x="28299" fg:w="12"/><text x="52.5229%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (14 samples, 0.03%)</title><rect x="52.2711%" y="517" width="0.0259%" height="15" fill="rgb(216,45,12)" fg:x="28298" fg:w="14"/><text x="52.5211%" y="527.50"></text></g><g><title>yakvdb::disk::block::get_u32 (13 samples, 0.02%)</title><rect x="52.2729%" y="501" width="0.0240%" height="15" fill="rgb(246,21,19)" fg:x="28299" fg:w="13"/><text x="52.5229%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (47 samples, 0.09%)</title><rect x="52.2970%" y="517" width="0.0868%" height="15" fill="rgb(213,98,42)" fg:x="28312" fg:w="47"/><text x="52.5470%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::ge (47 samples, 0.09%)</title><rect x="52.2970%" y="501" width="0.0868%" height="15" fill="rgb(250,136,47)" fg:x="28312" fg:w="47"/><text x="52.5470%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (47 samples, 0.09%)</title><rect x="52.2970%" y="485" width="0.0868%" height="15" fill="rgb(251,124,27)" fg:x="28312" fg:w="47"/><text x="52.5470%" y="495.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (47 samples, 0.09%)</title><rect x="52.2970%" y="469" width="0.0868%" height="15" fill="rgb(229,180,14)" fg:x="28312" fg:w="47"/><text x="52.5470%" y="479.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (47 samples, 0.09%)</title><rect x="52.2970%" y="453" width="0.0868%" height="15" fill="rgb(245,216,25)" fg:x="28312" fg:w="47"/><text x="52.5470%" y="463.50"></text></g><g><title>__memcmp_sse4_1 (39 samples, 0.07%)</title><rect x="52.3117%" y="437" width="0.0720%" height="15" fill="rgb(251,43,5)" fg:x="28320" fg:w="39"/><text x="52.5617%" y="447.50"></text></g><g><title>&lt;u32 as core::ops::arith::Div&gt;::div (6 samples, 0.01%)</title><rect x="52.6368%" y="501" width="0.0111%" height="15" fill="rgb(250,128,24)" fg:x="28496" fg:w="6"/><text x="52.8868%" y="511.50"></text></g><g><title>&lt;u32 as core::ops::arith::Sub&gt;::sub (14 samples, 0.03%)</title><rect x="52.6479%" y="501" width="0.0259%" height="15" fill="rgb(217,117,27)" fg:x="28502" fg:w="14"/><text x="52.8979%" y="511.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (6 samples, 0.01%)</title><rect x="52.8400%" y="421" width="0.0111%" height="15" fill="rgb(245,147,4)" fg:x="28606" fg:w="6"/><text x="53.0900%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (6 samples, 0.01%)</title><rect x="52.8400%" y="405" width="0.0111%" height="15" fill="rgb(242,201,35)" fg:x="28606" fg:w="6"/><text x="53.0900%" y="415.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (6 samples, 0.01%)</title><rect x="52.8400%" y="389" width="0.0111%" height="15" fill="rgb(218,181,1)" fg:x="28606" fg:w="6"/><text x="53.0900%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (19 samples, 0.04%)</title><rect x="52.8511%" y="421" width="0.0351%" height="15" fill="rgb(222,6,29)" fg:x="28612" fg:w="19"/><text x="53.1011%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.04%)</title><rect x="52.8511%" y="405" width="0.0351%" height="15" fill="rgb(208,186,3)" fg:x="28612" fg:w="19"/><text x="53.1011%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (38 samples, 0.07%)</title><rect x="52.8326%" y="453" width="0.0702%" height="15" fill="rgb(216,36,26)" fg:x="28602" fg:w="38"/><text x="53.0826%" y="463.50"></text></g><g><title>yakvdb::disk::block::get_u32 (34 samples, 0.06%)</title><rect x="52.8400%" y="437" width="0.0628%" height="15" fill="rgb(248,201,23)" fg:x="28606" fg:w="34"/><text x="53.0900%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (9 samples, 0.02%)</title><rect x="52.8862%" y="421" width="0.0166%" height="15" fill="rgb(251,170,31)" fg:x="28631" fg:w="9"/><text x="53.1362%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.02%)</title><rect x="52.8862%" y="405" width="0.0166%" height="15" fill="rgb(207,110,25)" fg:x="28631" fg:w="9"/><text x="53.1362%" y="415.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (15 samples, 0.03%)</title><rect x="52.9231%" y="437" width="0.0277%" height="15" fill="rgb(250,54,15)" fg:x="28651" fg:w="15"/><text x="53.1731%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (15 samples, 0.03%)</title><rect x="52.9231%" y="421" width="0.0277%" height="15" fill="rgb(227,68,33)" fg:x="28651" fg:w="15"/><text x="53.1731%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (15 samples, 0.03%)</title><rect x="52.9231%" y="405" width="0.0277%" height="15" fill="rgb(238,34,41)" fg:x="28651" fg:w="15"/><text x="53.1731%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (168 samples, 0.31%)</title><rect x="52.6959%" y="469" width="0.3103%" height="15" fill="rgb(220,11,15)" fg:x="28528" fg:w="168"/><text x="52.9459%" y="479.50"></text></g><g><title>yakvdb::disk::block::get_u32 (56 samples, 0.10%)</title><rect x="52.9028%" y="453" width="0.1034%" height="15" fill="rgb(246,111,35)" fg:x="28640" fg:w="56"/><text x="53.1528%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (28 samples, 0.05%)</title><rect x="52.9545%" y="437" width="0.0517%" height="15" fill="rgb(209,88,53)" fg:x="28668" fg:w="28"/><text x="53.2045%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (28 samples, 0.05%)</title><rect x="52.9545%" y="421" width="0.0517%" height="15" fill="rgb(231,185,47)" fg:x="28668" fg:w="28"/><text x="53.2045%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (233 samples, 0.43%)</title><rect x="52.6738%" y="501" width="0.4304%" height="15" fill="rgb(233,154,1)" fg:x="28516" fg:w="233"/><text x="52.9238%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (233 samples, 0.43%)</title><rect x="52.6738%" y="485" width="0.4304%" height="15" fill="rgb(225,15,46)" fg:x="28516" fg:w="233"/><text x="52.9238%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (53 samples, 0.10%)</title><rect x="53.0063%" y="469" width="0.0979%" height="15" fill="rgb(211,135,41)" fg:x="28696" fg:w="53"/><text x="53.2563%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key::{{closure}} (34 samples, 0.06%)</title><rect x="53.0414%" y="453" width="0.0628%" height="15" fill="rgb(208,54,0)" fg:x="28715" fg:w="34"/><text x="53.2914%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (23 samples, 0.04%)</title><rect x="53.0617%" y="437" width="0.0425%" height="15" fill="rgb(244,136,14)" fg:x="28726" fg:w="23"/><text x="53.3117%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (23 samples, 0.04%)</title><rect x="53.0617%" y="421" width="0.0425%" height="15" fill="rgb(241,56,14)" fg:x="28726" fg:w="23"/><text x="53.3117%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.02%)</title><rect x="53.0820%" y="405" width="0.0222%" height="15" fill="rgb(205,80,24)" fg:x="28737" fg:w="12"/><text x="53.3320%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (12 samples, 0.02%)</title><rect x="53.0820%" y="389" width="0.0222%" height="15" fill="rgb(220,57,4)" fg:x="28737" fg:w="12"/><text x="53.3320%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (12 samples, 0.02%)</title><rect x="53.0820%" y="373" width="0.0222%" height="15" fill="rgb(226,193,50)" fg:x="28737" fg:w="12"/><text x="53.3320%" y="383.50"></text></g><g><title>__memcmp_sse4_1 (256 samples, 0.47%)</title><rect x="53.1559%" y="453" width="0.4729%" height="15" fill="rgb(231,168,22)" fg:x="28777" fg:w="256"/><text x="53.4059%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (321 samples, 0.59%)</title><rect x="53.1042%" y="501" width="0.5929%" height="15" fill="rgb(254,215,14)" fg:x="28749" fg:w="321"/><text x="53.3542%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (321 samples, 0.59%)</title><rect x="53.1042%" y="485" width="0.5929%" height="15" fill="rgb(211,115,16)" fg:x="28749" fg:w="321"/><text x="53.3542%" y="495.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (321 samples, 0.59%)</title><rect x="53.1042%" y="469" width="0.5929%" height="15" fill="rgb(236,210,16)" fg:x="28749" fg:w="321"/><text x="53.3542%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (37 samples, 0.07%)</title><rect x="53.6288%" y="453" width="0.0683%" height="15" fill="rgb(221,94,12)" fg:x="29033" fg:w="37"/><text x="53.8788%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (845 samples, 1.56%)</title><rect x="52.1695%" y="533" width="1.5609%" height="15" fill="rgb(235,218,49)" fg:x="28243" fg:w="845"/><text x="52.4195%" y="543.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (729 samples, 1.35%)</title><rect x="52.3838%" y="517" width="1.3466%" height="15" fill="rgb(217,114,14)" fg:x="28359" fg:w="729"/><text x="52.6338%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (18 samples, 0.03%)</title><rect x="53.6971%" y="501" width="0.0332%" height="15" fill="rgb(216,145,22)" fg:x="29070" fg:w="18"/><text x="53.9471%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::id (6 samples, 0.01%)</title><rect x="53.7304%" y="533" width="0.0111%" height="15" fill="rgb(217,112,39)" fg:x="29088" fg:w="6"/><text x="53.9804%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (12 samples, 0.02%)</title><rect x="53.7414%" y="517" width="0.0222%" height="15" fill="rgb(225,85,32)" fg:x="29094" fg:w="12"/><text x="53.9914%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (14 samples, 0.03%)</title><rect x="53.7414%" y="533" width="0.0259%" height="15" fill="rgb(245,209,47)" fg:x="29094" fg:w="14"/><text x="53.9914%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (8 samples, 0.01%)</title><rect x="53.7858%" y="517" width="0.0148%" height="15" fill="rgb(218,220,15)" fg:x="29118" fg:w="8"/><text x="54.0358%" y="527.50"></text></g><g><title>yakvdb::disk::block::get_u32 (8 samples, 0.01%)</title><rect x="53.7858%" y="501" width="0.0148%" height="15" fill="rgb(222,202,31)" fg:x="29118" fg:w="8"/><text x="54.0358%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (28 samples, 0.05%)</title><rect x="53.7673%" y="533" width="0.0517%" height="15" fill="rgb(243,203,4)" fg:x="29108" fg:w="28"/><text x="54.0173%" y="543.50"></text></g><g><title>yakvdb::disk::block::get_u32 (10 samples, 0.02%)</title><rect x="53.8005%" y="517" width="0.0185%" height="15" fill="rgb(237,92,17)" fg:x="29126" fg:w="10"/><text x="54.0505%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (18 samples, 0.03%)</title><rect x="53.8283%" y="501" width="0.0332%" height="15" fill="rgb(231,119,7)" fg:x="29141" fg:w="18"/><text x="54.0783%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.01%)</title><rect x="53.8781%" y="357" width="0.0129%" height="15" fill="rgb(237,82,41)" fg:x="29168" fg:w="7"/><text x="54.1281%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.02%)</title><rect x="53.8947%" y="341" width="0.0240%" height="15" fill="rgb(226,81,48)" fg:x="29177" fg:w="13"/><text x="54.1447%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (31 samples, 0.06%)</title><rect x="53.8707%" y="405" width="0.0573%" height="15" fill="rgb(234,70,51)" fg:x="29164" fg:w="31"/><text x="54.1207%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (31 samples, 0.06%)</title><rect x="53.8707%" y="389" width="0.0573%" height="15" fill="rgb(251,86,4)" fg:x="29164" fg:w="31"/><text x="54.1207%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (31 samples, 0.06%)</title><rect x="53.8707%" y="373" width="0.0573%" height="15" fill="rgb(244,144,28)" fg:x="29164" fg:w="31"/><text x="54.1207%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.04%)</title><rect x="53.8911%" y="357" width="0.0369%" height="15" fill="rgb(232,161,39)" fg:x="29175" fg:w="20"/><text x="54.1411%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (33 samples, 0.06%)</title><rect x="53.8689%" y="437" width="0.0610%" height="15" fill="rgb(247,34,51)" fg:x="29163" fg:w="33"/><text x="54.1189%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (33 samples, 0.06%)</title><rect x="53.8689%" y="421" width="0.0610%" height="15" fill="rgb(225,132,2)" fg:x="29163" fg:w="33"/><text x="54.1189%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (8 samples, 0.01%)</title><rect x="53.9465%" y="373" width="0.0148%" height="15" fill="rgb(209,159,44)" fg:x="29205" fg:w="8"/><text x="54.1965%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (8 samples, 0.01%)</title><rect x="53.9465%" y="357" width="0.0148%" height="15" fill="rgb(251,214,1)" fg:x="29205" fg:w="8"/><text x="54.1965%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (9 samples, 0.02%)</title><rect x="53.9465%" y="389" width="0.0166%" height="15" fill="rgb(247,84,47)" fg:x="29205" fg:w="9"/><text x="54.1965%" y="399.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (65 samples, 0.12%)</title><rect x="53.8615%" y="501" width="0.1201%" height="15" fill="rgb(240,111,43)" fg:x="29159" fg:w="65"/><text x="54.1115%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (65 samples, 0.12%)</title><rect x="53.8615%" y="485" width="0.1201%" height="15" fill="rgb(215,214,35)" fg:x="29159" fg:w="65"/><text x="54.1115%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (65 samples, 0.12%)</title><rect x="53.8615%" y="469" width="0.1201%" height="15" fill="rgb(248,207,23)" fg:x="29159" fg:w="65"/><text x="54.1115%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (65 samples, 0.12%)</title><rect x="53.8615%" y="453" width="0.1201%" height="15" fill="rgb(214,186,4)" fg:x="29159" fg:w="65"/><text x="54.1115%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (28 samples, 0.05%)</title><rect x="53.9298%" y="437" width="0.0517%" height="15" fill="rgb(220,133,22)" fg:x="29196" fg:w="28"/><text x="54.1798%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (28 samples, 0.05%)</title><rect x="53.9298%" y="421" width="0.0517%" height="15" fill="rgb(239,134,19)" fg:x="29196" fg:w="28"/><text x="54.1798%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (28 samples, 0.05%)</title><rect x="53.9298%" y="405" width="0.0517%" height="15" fill="rgb(250,140,9)" fg:x="29196" fg:w="28"/><text x="54.1798%" y="415.50"></text></g><g><title>__GI___libc_free (29 samples, 0.05%)</title><rect x="53.9890%" y="437" width="0.0536%" height="15" fill="rgb(225,59,14)" fg:x="29228" fg:w="29"/><text x="54.2390%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;yakvdb::disk::block::Block&gt;&gt; (59 samples, 0.11%)</title><rect x="53.9871%" y="485" width="0.1090%" height="15" fill="rgb(214,152,51)" fg:x="29227" fg:w="59"/><text x="54.2371%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;yakvdb::disk::block::Block&gt; (58 samples, 0.11%)</title><rect x="53.9890%" y="469" width="0.1071%" height="15" fill="rgb(251,227,43)" fg:x="29228" fg:w="58"/><text x="54.2390%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (58 samples, 0.11%)</title><rect x="53.9890%" y="453" width="0.1071%" height="15" fill="rgb(241,96,17)" fg:x="29228" fg:w="58"/><text x="54.2390%" y="463.50"></text></g><g><title>_int_free (28 samples, 0.05%)</title><rect x="54.0444%" y="437" width="0.0517%" height="15" fill="rgb(234,198,43)" fg:x="29258" fg:w="28"/><text x="54.2944%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="54.1183%" y="357" width="0.0111%" height="15" fill="rgb(220,108,29)" fg:x="29298" fg:w="6"/><text x="54.3683%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.03%)</title><rect x="54.1035%" y="421" width="0.0277%" height="15" fill="rgb(226,163,33)" fg:x="29290" fg:w="15"/><text x="54.3535%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.03%)</title><rect x="54.1035%" y="405" width="0.0277%" height="15" fill="rgb(205,194,45)" fg:x="29290" fg:w="15"/><text x="54.3535%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.03%)</title><rect x="54.1035%" y="389" width="0.0277%" height="15" fill="rgb(206,143,44)" fg:x="29290" fg:w="15"/><text x="54.3535%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.02%)</title><rect x="54.1146%" y="373" width="0.0166%" height="15" fill="rgb(236,136,36)" fg:x="29296" fg:w="9"/><text x="54.3646%" y="383.50"></text></g><g><title>hashbrown::map::make_insert_hash (16 samples, 0.03%)</title><rect x="54.1035%" y="453" width="0.0296%" height="15" fill="rgb(249,172,42)" fg:x="29290" fg:w="16"/><text x="54.3535%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.03%)</title><rect x="54.1035%" y="437" width="0.0296%" height="15" fill="rgb(216,139,23)" fg:x="29290" fg:w="16"/><text x="54.3535%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (11 samples, 0.02%)</title><rect x="54.1515%" y="437" width="0.0203%" height="15" fill="rgb(207,166,20)" fg:x="29316" fg:w="11"/><text x="54.4015%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (43 samples, 0.08%)</title><rect x="54.0961%" y="485" width="0.0794%" height="15" fill="rgb(210,209,22)" fg:x="29286" fg:w="43"/><text x="54.3461%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (43 samples, 0.08%)</title><rect x="54.0961%" y="469" width="0.0794%" height="15" fill="rgb(232,118,20)" fg:x="29286" fg:w="43"/><text x="54.3461%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (18 samples, 0.03%)</title><rect x="54.1423%" y="453" width="0.0332%" height="15" fill="rgb(238,113,42)" fg:x="29311" fg:w="18"/><text x="54.3923%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.03%)</title><rect x="54.1774%" y="405" width="0.0277%" height="15" fill="rgb(231,42,5)" fg:x="29330" fg:w="15"/><text x="54.4274%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.03%)</title><rect x="54.1774%" y="389" width="0.0277%" height="15" fill="rgb(243,166,24)" fg:x="29330" fg:w="15"/><text x="54.4274%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.03%)</title><rect x="54.1774%" y="373" width="0.0277%" height="15" fill="rgb(237,226,12)" fg:x="29330" fg:w="15"/><text x="54.4274%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.02%)</title><rect x="54.1884%" y="357" width="0.0166%" height="15" fill="rgb(229,133,24)" fg:x="29336" fg:w="9"/><text x="54.4384%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="54.1903%" y="341" width="0.0148%" height="15" fill="rgb(238,33,43)" fg:x="29337" fg:w="8"/><text x="54.4403%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.03%)</title><rect x="54.1774%" y="437" width="0.0296%" height="15" fill="rgb(227,59,38)" fg:x="29330" fg:w="16"/><text x="54.4274%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.03%)</title><rect x="54.1774%" y="421" width="0.0296%" height="15" fill="rgb(230,97,0)" fg:x="29330" fg:w="16"/><text x="54.4274%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (16 samples, 0.03%)</title><rect x="54.2162%" y="373" width="0.0296%" height="15" fill="rgb(250,173,50)" fg:x="29351" fg:w="16"/><text x="54.4662%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (15 samples, 0.03%)</title><rect x="54.2180%" y="357" width="0.0277%" height="15" fill="rgb(240,15,50)" fg:x="29352" fg:w="15"/><text x="54.4680%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (17 samples, 0.03%)</title><rect x="54.2162%" y="389" width="0.0314%" height="15" fill="rgb(221,93,22)" fg:x="29351" fg:w="17"/><text x="54.4662%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (27 samples, 0.05%)</title><rect x="54.2069%" y="421" width="0.0499%" height="15" fill="rgb(245,180,53)" fg:x="29346" fg:w="27"/><text x="54.4569%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (27 samples, 0.05%)</title><rect x="54.2069%" y="405" width="0.0499%" height="15" fill="rgb(231,88,51)" fg:x="29346" fg:w="27"/><text x="54.4569%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (56 samples, 0.10%)</title><rect x="54.1755%" y="485" width="0.1034%" height="15" fill="rgb(240,58,21)" fg:x="29329" fg:w="56"/><text x="54.4255%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (56 samples, 0.10%)</title><rect x="54.1755%" y="469" width="0.1034%" height="15" fill="rgb(237,21,10)" fg:x="29329" fg:w="56"/><text x="54.4255%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (55 samples, 0.10%)</title><rect x="54.1774%" y="453" width="0.1016%" height="15" fill="rgb(218,43,11)" fg:x="29330" fg:w="55"/><text x="54.4274%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (39 samples, 0.07%)</title><rect x="54.2069%" y="437" width="0.0720%" height="15" fill="rgb(218,221,29)" fg:x="29346" fg:w="39"/><text x="54.4569%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (12 samples, 0.02%)</title><rect x="54.2568%" y="421" width="0.0222%" height="15" fill="rgb(214,118,42)" fg:x="29373" fg:w="12"/><text x="54.5068%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (10 samples, 0.02%)</title><rect x="54.2605%" y="405" width="0.0185%" height="15" fill="rgb(251,200,26)" fg:x="29375" fg:w="10"/><text x="54.5105%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (9 samples, 0.02%)</title><rect x="54.2623%" y="389" width="0.0166%" height="15" fill="rgb(237,101,39)" fg:x="29376" fg:w="9"/><text x="54.5123%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (9 samples, 0.02%)</title><rect x="54.2827%" y="469" width="0.0166%" height="15" fill="rgb(251,117,11)" fg:x="29387" fg:w="9"/><text x="54.5327%" y="479.50"></text></g><g><title>core::intrinsics::copy (8 samples, 0.01%)</title><rect x="54.2845%" y="453" width="0.0148%" height="15" fill="rgb(216,223,23)" fg:x="29388" fg:w="8"/><text x="54.5345%" y="463.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (7 samples, 0.01%)</title><rect x="54.2863%" y="437" width="0.0129%" height="15" fill="rgb(251,54,12)" fg:x="29389" fg:w="7"/><text x="54.5363%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.01%)</title><rect x="54.3141%" y="325" width="0.0129%" height="15" fill="rgb(254,176,54)" fg:x="29404" fg:w="7"/><text x="54.5641%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.02%)</title><rect x="54.3048%" y="421" width="0.0240%" height="15" fill="rgb(210,32,8)" fg:x="29399" fg:w="13"/><text x="54.5548%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.02%)</title><rect x="54.3048%" y="405" width="0.0240%" height="15" fill="rgb(235,52,38)" fg:x="29399" fg:w="13"/><text x="54.5548%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="54.3048%" y="389" width="0.0240%" height="15" fill="rgb(231,4,44)" fg:x="29399" fg:w="13"/><text x="54.5548%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="54.3048%" y="373" width="0.0240%" height="15" fill="rgb(249,2,32)" fg:x="29399" fg:w="13"/><text x="54.5548%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="54.3048%" y="357" width="0.0240%" height="15" fill="rgb(224,65,26)" fg:x="29399" fg:w="13"/><text x="54.5548%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="54.3141%" y="341" width="0.0148%" height="15" fill="rgb(250,73,40)" fg:x="29404" fg:w="8"/><text x="54.5641%" y="351.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::put (201 samples, 0.37%)</title><rect x="53.9816%" y="501" width="0.3713%" height="15" fill="rgb(253,177,16)" fg:x="29224" fg:w="201"/><text x="54.2316%" y="511.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (40 samples, 0.07%)</title><rect x="54.2790%" y="485" width="0.0739%" height="15" fill="rgb(217,32,34)" fg:x="29385" fg:w="40"/><text x="54.5290%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (26 samples, 0.05%)</title><rect x="54.3048%" y="469" width="0.0480%" height="15" fill="rgb(212,7,10)" fg:x="29399" fg:w="26"/><text x="54.5548%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (26 samples, 0.05%)</title><rect x="54.3048%" y="453" width="0.0480%" height="15" fill="rgb(245,89,8)" fg:x="29399" fg:w="26"/><text x="54.5548%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.05%)</title><rect x="54.3048%" y="437" width="0.0480%" height="15" fill="rgb(237,16,53)" fg:x="29399" fg:w="26"/><text x="54.5548%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.02%)</title><rect x="54.3288%" y="421" width="0.0240%" height="15" fill="rgb(250,204,30)" fg:x="29412" fg:w="13"/><text x="54.5788%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.02%)</title><rect x="54.3288%" y="405" width="0.0240%" height="15" fill="rgb(208,77,27)" fg:x="29412" fg:w="13"/><text x="54.5788%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (13 samples, 0.02%)</title><rect x="54.3288%" y="389" width="0.0240%" height="15" fill="rgb(250,204,28)" fg:x="29412" fg:w="13"/><text x="54.5788%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 0.03%)</title><rect x="54.4526%" y="437" width="0.0259%" height="15" fill="rgb(244,63,21)" fg:x="29479" fg:w="14"/><text x="54.7026%" y="447.50"></text></g><g><title>__x64_sys_lseek (18 samples, 0.03%)</title><rect x="54.4914%" y="421" width="0.0332%" height="15" fill="rgb(236,85,44)" fg:x="29500" fg:w="18"/><text x="54.7414%" y="431.50"></text></g><g><title>ext4_llseek (10 samples, 0.02%)</title><rect x="55.1102%" y="389" width="0.0185%" height="15" fill="rgb(215,98,4)" fg:x="29835" fg:w="10"/><text x="55.3602%" y="399.50"></text></g><g><title>__fdget_pos (51 samples, 0.09%)</title><rect x="55.1416%" y="373" width="0.0942%" height="15" fill="rgb(235,38,11)" fg:x="29852" fg:w="51"/><text x="55.3916%" y="383.50"></text></g><g><title>__fget_light (49 samples, 0.09%)</title><rect x="55.1453%" y="357" width="0.0905%" height="15" fill="rgb(254,186,25)" fg:x="29854" fg:w="49"/><text x="55.3953%" y="367.50"></text></g><g><title>__x64_sys_lseek (97 samples, 0.18%)</title><rect x="55.1102%" y="405" width="0.1792%" height="15" fill="rgb(225,55,31)" fg:x="29835" fg:w="97"/><text x="55.3602%" y="415.50"></text></g><g><title>ksys_lseek (87 samples, 0.16%)</title><rect x="55.1287%" y="389" width="0.1607%" height="15" fill="rgb(211,15,21)" fg:x="29845" fg:w="87"/><text x="55.3787%" y="399.50"></text></g><g><title>ext4_llseek (26 samples, 0.05%)</title><rect x="55.2413%" y="373" width="0.0480%" height="15" fill="rgb(215,187,41)" fg:x="29906" fg:w="26"/><text x="55.4913%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (443 samples, 0.82%)</title><rect x="54.4785%" y="437" width="0.8183%" height="15" fill="rgb(248,69,32)" fg:x="29493" fg:w="443"/><text x="54.7285%" y="447.50"></text></g><g><title>do_syscall_64 (418 samples, 0.77%)</title><rect x="54.5246%" y="421" width="0.7721%" height="15" fill="rgb(252,102,52)" fg:x="29518" fg:w="418"/><text x="54.7746%" y="431.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (647 samples, 1.20%)</title><rect x="54.3787%" y="485" width="1.1951%" height="15" fill="rgb(253,140,32)" fg:x="29439" fg:w="647"/><text x="54.6287%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::seek (646 samples, 1.19%)</title><rect x="54.3806%" y="469" width="1.1933%" height="15" fill="rgb(216,56,42)" fg:x="29440" fg:w="646"/><text x="54.6306%" y="479.50"></text></g><g><title>__lseek64 (634 samples, 1.17%)</title><rect x="54.4027%" y="453" width="1.1711%" height="15" fill="rgb(216,184,14)" fg:x="29452" fg:w="634"/><text x="54.6527%" y="463.50"></text></g><g><title>syscall_return_via_sysret (150 samples, 0.28%)</title><rect x="55.2967%" y="437" width="0.2771%" height="15" fill="rgb(237,187,27)" fg:x="29936" fg:w="150"/><text x="55.5467%" y="447.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.02%)</title><rect x="55.6237%" y="341" width="0.0185%" height="15" fill="rgb(219,65,3)" fg:x="30113" fg:w="10"/><text x="55.8737%" y="351.50"></text></g><g><title>__memset_sse2_unaligned_erms (177 samples, 0.33%)</title><rect x="55.6422%" y="341" width="0.3269%" height="15" fill="rgb(245,83,25)" fg:x="30123" fg:w="177"/><text x="55.8922%" y="351.50"></text></g><g><title>do_anonymous_page (6 samples, 0.01%)</title><rect x="56.0227%" y="229" width="0.0111%" height="15" fill="rgb(214,205,45)" fg:x="30329" fg:w="6"/><text x="56.2727%" y="239.50"></text></g><g><title>handle_mm_fault (7 samples, 0.01%)</title><rect x="56.0227%" y="261" width="0.0129%" height="15" fill="rgb(241,20,18)" fg:x="30329" fg:w="7"/><text x="56.2727%" y="271.50"></text></g><g><title>__handle_mm_fault (7 samples, 0.01%)</title><rect x="56.0227%" y="245" width="0.0129%" height="15" fill="rgb(232,163,23)" fg:x="30329" fg:w="7"/><text x="56.2727%" y="255.50"></text></g><g><title>page_fault (8 samples, 0.01%)</title><rect x="56.0227%" y="325" width="0.0148%" height="15" fill="rgb(214,5,46)" fg:x="30329" fg:w="8"/><text x="56.2727%" y="335.50"></text></g><g><title>do_page_fault (8 samples, 0.01%)</title><rect x="56.0227%" y="309" width="0.0148%" height="15" fill="rgb(229,78,17)" fg:x="30329" fg:w="8"/><text x="56.2727%" y="319.50"></text></g><g><title>__do_page_fault (8 samples, 0.01%)</title><rect x="56.0227%" y="293" width="0.0148%" height="15" fill="rgb(248,89,10)" fg:x="30329" fg:w="8"/><text x="56.2727%" y="303.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.01%)</title><rect x="56.0227%" y="277" width="0.0148%" height="15" fill="rgb(248,54,15)" fg:x="30329" fg:w="8"/><text x="56.2727%" y="287.50"></text></g><g><title>alloc::vec::from_elem (246 samples, 0.45%)</title><rect x="55.5886%" y="469" width="0.4544%" height="15" fill="rgb(223,116,6)" fg:x="30094" fg:w="246"/><text x="55.8386%" y="479.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (246 samples, 0.45%)</title><rect x="55.5886%" y="453" width="0.4544%" height="15" fill="rgb(205,125,38)" fg:x="30094" fg:w="246"/><text x="55.8386%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (245 samples, 0.45%)</title><rect x="55.5904%" y="437" width="0.4526%" height="15" fill="rgb(251,78,38)" fg:x="30095" fg:w="245"/><text x="55.8404%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (245 samples, 0.45%)</title><rect x="55.5904%" y="421" width="0.4526%" height="15" fill="rgb(253,78,28)" fg:x="30095" fg:w="245"/><text x="55.8404%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (245 samples, 0.45%)</title><rect x="55.5904%" y="405" width="0.4526%" height="15" fill="rgb(209,120,3)" fg:x="30095" fg:w="245"/><text x="55.8404%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (245 samples, 0.45%)</title><rect x="55.5904%" y="389" width="0.4526%" height="15" fill="rgb(238,229,9)" fg:x="30095" fg:w="245"/><text x="55.8404%" y="399.50"></text></g><g><title>alloc::alloc::alloc_zeroed (244 samples, 0.45%)</title><rect x="55.5923%" y="373" width="0.4507%" height="15" fill="rgb(253,159,18)" fg:x="30096" fg:w="244"/><text x="55.8423%" y="383.50"></text></g><g><title>__calloc (241 samples, 0.45%)</title><rect x="55.5978%" y="357" width="0.4452%" height="15" fill="rgb(244,42,34)" fg:x="30099" fg:w="241"/><text x="55.8478%" y="367.50"></text></g><g><title>_int_malloc (40 samples, 0.07%)</title><rect x="55.9691%" y="341" width="0.0739%" height="15" fill="rgb(224,8,7)" fg:x="30300" fg:w="40"/><text x="56.2191%" y="351.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (225 samples, 0.42%)</title><rect x="56.0430%" y="469" width="0.4156%" height="15" fill="rgb(210,201,45)" fg:x="30340" fg:w="225"/><text x="56.2930%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (220 samples, 0.41%)</title><rect x="56.0522%" y="453" width="0.4064%" height="15" fill="rgb(252,185,21)" fg:x="30345" fg:w="220"/><text x="56.3022%" y="463.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (218 samples, 0.40%)</title><rect x="56.0559%" y="437" width="0.4027%" height="15" fill="rgb(223,131,1)" fg:x="30347" fg:w="218"/><text x="56.3059%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (60 samples, 0.11%)</title><rect x="56.4586%" y="453" width="0.1108%" height="15" fill="rgb(245,141,16)" fg:x="30565" fg:w="60"/><text x="56.7086%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (60 samples, 0.11%)</title><rect x="56.4586%" y="437" width="0.1108%" height="15" fill="rgb(229,55,45)" fg:x="30565" fg:w="60"/><text x="56.7086%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (60 samples, 0.11%)</title><rect x="56.4586%" y="421" width="0.1108%" height="15" fill="rgb(208,92,15)" fg:x="30565" fg:w="60"/><text x="56.7086%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (60 samples, 0.11%)</title><rect x="56.4586%" y="405" width="0.1108%" height="15" fill="rgb(234,185,47)" fg:x="30565" fg:w="60"/><text x="56.7086%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (60 samples, 0.11%)</title><rect x="56.4586%" y="389" width="0.1108%" height="15" fill="rgb(253,104,50)" fg:x="30565" fg:w="60"/><text x="56.7086%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (60 samples, 0.11%)</title><rect x="56.4586%" y="373" width="0.1108%" height="15" fill="rgb(205,70,7)" fg:x="30565" fg:w="60"/><text x="56.7086%" y="383.50"></text></g><g><title>alloc::alloc::alloc (60 samples, 0.11%)</title><rect x="56.4586%" y="357" width="0.1108%" height="15" fill="rgb(240,178,43)" fg:x="30565" fg:w="60"/><text x="56.7086%" y="367.50"></text></g><g><title>__GI___libc_malloc (60 samples, 0.11%)</title><rect x="56.4586%" y="341" width="0.1108%" height="15" fill="rgb(214,112,2)" fg:x="30565" fg:w="60"/><text x="56.7086%" y="351.50"></text></g><g><title>_int_malloc (52 samples, 0.10%)</title><rect x="56.4734%" y="325" width="0.0961%" height="15" fill="rgb(206,46,17)" fg:x="30573" fg:w="52"/><text x="56.7234%" y="335.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (66 samples, 0.12%)</title><rect x="56.4586%" y="469" width="0.1219%" height="15" fill="rgb(225,220,16)" fg:x="30565" fg:w="66"/><text x="56.7086%" y="479.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (6 samples, 0.01%)</title><rect x="56.5694%" y="453" width="0.0111%" height="15" fill="rgb(238,65,40)" fg:x="30625" fg:w="6"/><text x="56.8194%" y="463.50"></text></g><g><title>__GI___libc_free (9 samples, 0.02%)</title><rect x="56.5842%" y="389" width="0.0166%" height="15" fill="rgb(230,151,21)" fg:x="30633" fg:w="9"/><text x="56.8342%" y="399.50"></text></g><g><title>__GI___read (112 samples, 0.21%)</title><rect x="56.6008%" y="389" width="0.2069%" height="15" fill="rgb(218,58,49)" fg:x="30642" fg:w="112"/><text x="56.8508%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (112 samples, 0.21%)</title><rect x="56.6008%" y="373" width="0.2069%" height="15" fill="rgb(219,179,14)" fg:x="30642" fg:w="112"/><text x="56.8508%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::reserve (693 samples, 1.28%)</title><rect x="55.5738%" y="485" width="1.2801%" height="15" fill="rgb(223,72,1)" fg:x="30086" fg:w="693"/><text x="55.8238%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (148 samples, 0.27%)</title><rect x="56.5805%" y="469" width="0.2734%" height="15" fill="rgb(238,126,10)" fg:x="30631" fg:w="148"/><text x="56.8305%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (148 samples, 0.27%)</title><rect x="56.5805%" y="453" width="0.2734%" height="15" fill="rgb(224,206,38)" fg:x="30631" fg:w="148"/><text x="56.8305%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (148 samples, 0.27%)</title><rect x="56.5805%" y="437" width="0.2734%" height="15" fill="rgb(212,201,54)" fg:x="30631" fg:w="148"/><text x="56.8305%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (148 samples, 0.27%)</title><rect x="56.5805%" y="421" width="0.2734%" height="15" fill="rgb(218,154,48)" fg:x="30631" fg:w="148"/><text x="56.8305%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (148 samples, 0.27%)</title><rect x="56.5805%" y="405" width="0.2734%" height="15" fill="rgb(232,93,24)" fg:x="30631" fg:w="148"/><text x="56.8305%" y="415.50"></text></g><g><title>_int_free (24 samples, 0.04%)</title><rect x="56.8096%" y="389" width="0.0443%" height="15" fill="rgb(245,30,21)" fg:x="30755" fg:w="24"/><text x="57.0596%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::fs::File&gt;&gt; (10 samples, 0.02%)</title><rect x="56.8539%" y="485" width="0.0185%" height="15" fill="rgb(242,148,29)" fg:x="30779" fg:w="10"/><text x="57.1039%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (10 samples, 0.02%)</title><rect x="56.8539%" y="469" width="0.0185%" height="15" fill="rgb(244,153,54)" fg:x="30779" fg:w="10"/><text x="57.1039%" y="479.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="56.8539%" y="453" width="0.0185%" height="15" fill="rgb(252,87,22)" fg:x="30779" fg:w="10"/><text x="57.1039%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (10 samples, 0.02%)</title><rect x="56.8539%" y="437" width="0.0185%" height="15" fill="rgb(210,51,29)" fg:x="30779" fg:w="10"/><text x="57.1039%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (10 samples, 0.02%)</title><rect x="56.8539%" y="421" width="0.0185%" height="15" fill="rgb(242,136,47)" fg:x="30779" fg:w="10"/><text x="57.1039%" y="431.50"></text></g><g><title>core::mem::replace (10 samples, 0.02%)</title><rect x="56.8539%" y="405" width="0.0185%" height="15" fill="rgb(238,68,4)" fg:x="30779" fg:w="10"/><text x="57.1039%" y="415.50"></text></g><g><title>core::ptr::write (10 samples, 0.02%)</title><rect x="56.8539%" y="389" width="0.0185%" height="15" fill="rgb(242,161,30)" fg:x="30779" fg:w="10"/><text x="57.1039%" y="399.50"></text></g><g><title>log::max_level (7 samples, 0.01%)</title><rect x="56.8724%" y="485" width="0.0129%" height="15" fill="rgb(218,58,44)" fg:x="30789" fg:w="7"/><text x="57.1224%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (7 samples, 0.01%)</title><rect x="56.8724%" y="469" width="0.0129%" height="15" fill="rgb(252,125,32)" fg:x="30789" fg:w="7"/><text x="57.1224%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.01%)</title><rect x="56.8724%" y="453" width="0.0129%" height="15" fill="rgb(219,178,0)" fg:x="30789" fg:w="7"/><text x="57.1224%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 0.04%)</title><rect x="56.9352%" y="389" width="0.0369%" height="15" fill="rgb(213,152,7)" fg:x="30823" fg:w="20"/><text x="57.1852%" y="399.50"></text></g><g><title>__x64_sys_read (14 samples, 0.03%)</title><rect x="57.0017%" y="373" width="0.0259%" height="15" fill="rgb(249,109,34)" fg:x="30859" fg:w="14"/><text x="57.2517%" y="383.50"></text></g><g><title>__fdget_pos (30 samples, 0.06%)</title><rect x="57.5503%" y="325" width="0.0554%" height="15" fill="rgb(232,96,21)" fg:x="31156" fg:w="30"/><text x="57.8003%" y="335.50"></text></g><g><title>__fget_light (27 samples, 0.05%)</title><rect x="57.5558%" y="309" width="0.0499%" height="15" fill="rgb(228,27,39)" fg:x="31159" fg:w="27"/><text x="57.8058%" y="319.50"></text></g><g><title>__fsnotify_parent (11 samples, 0.02%)</title><rect x="57.6463%" y="309" width="0.0203%" height="15" fill="rgb(211,182,52)" fg:x="31208" fg:w="11"/><text x="57.8963%" y="319.50"></text></g><g><title>ext4_file_read_iter (20 samples, 0.04%)</title><rect x="57.6704%" y="293" width="0.0369%" height="15" fill="rgb(234,178,38)" fg:x="31221" fg:w="20"/><text x="57.9204%" y="303.50"></text></g><g><title>copy_user_generic_string (543 samples, 1.00%)</title><rect x="58.0102%" y="213" width="1.0030%" height="15" fill="rgb(221,111,3)" fg:x="31405" fg:w="543"/><text x="58.2602%" y="223.50"></text></g><g><title>copy_page_to_iter (579 samples, 1.07%)</title><rect x="57.9548%" y="229" width="1.0695%" height="15" fill="rgb(228,175,21)" fg:x="31375" fg:w="579"/><text x="58.2048%" y="239.50"></text></g><g><title>mark_page_accessed (7 samples, 0.01%)</title><rect x="59.0317%" y="229" width="0.0129%" height="15" fill="rgb(228,174,43)" fg:x="31958" fg:w="7"/><text x="59.2817%" y="239.50"></text></g><g><title>xas_load (119 samples, 0.22%)</title><rect x="59.3457%" y="197" width="0.2198%" height="15" fill="rgb(211,191,0)" fg:x="32128" fg:w="119"/><text x="59.5957%" y="207.50"></text></g><g><title>pagecache_get_page (293 samples, 0.54%)</title><rect x="59.0446%" y="229" width="0.5412%" height="15" fill="rgb(253,117,3)" fg:x="31965" fg:w="293"/><text x="59.2946%" y="239.50"></text></g><g><title>find_get_entry (276 samples, 0.51%)</title><rect x="59.0760%" y="213" width="0.5098%" height="15" fill="rgb(241,127,19)" fg:x="31982" fg:w="276"/><text x="59.3260%" y="223.50"></text></g><g><title>xas_start (11 samples, 0.02%)</title><rect x="59.5655%" y="197" width="0.0203%" height="15" fill="rgb(218,103,12)" fg:x="32247" fg:w="11"/><text x="59.8155%" y="207.50"></text></g><g><title>current_time (10 samples, 0.02%)</title><rect x="59.6043%" y="197" width="0.0185%" height="15" fill="rgb(236,214,43)" fg:x="32268" fg:w="10"/><text x="59.8543%" y="207.50"></text></g><g><title>atime_needs_update (18 samples, 0.03%)</title><rect x="59.5951%" y="213" width="0.0332%" height="15" fill="rgb(244,144,19)" fg:x="32263" fg:w="18"/><text x="59.8451%" y="223.50"></text></g><g><title>generic_file_buffered_read (995 samples, 1.84%)</title><rect x="57.7923%" y="245" width="1.8379%" height="15" fill="rgb(246,188,10)" fg:x="31287" fg:w="995"/><text x="58.0423%" y="255.50">g..</text></g><g><title>touch_atime (21 samples, 0.04%)</title><rect x="59.5914%" y="229" width="0.0388%" height="15" fill="rgb(212,193,33)" fg:x="32261" fg:w="21"/><text x="59.8414%" y="239.50"></text></g><g><title>ext4_file_read_iter (1,027 samples, 1.90%)</title><rect x="57.7461%" y="277" width="1.8970%" height="15" fill="rgb(241,51,29)" fg:x="31262" fg:w="1027"/><text x="57.9961%" y="287.50">e..</text></g><g><title>generic_file_read_iter (1,008 samples, 1.86%)</title><rect x="57.7812%" y="261" width="1.8619%" height="15" fill="rgb(211,58,19)" fg:x="31281" fg:w="1008"/><text x="58.0312%" y="271.50">g..</text></g><g><title>__vfs_read (1,072 samples, 1.98%)</title><rect x="57.6667%" y="309" width="1.9802%" height="15" fill="rgb(229,111,26)" fg:x="31219" fg:w="1072"/><text x="57.9167%" y="319.50">_..</text></g><g><title>new_sync_read (1,046 samples, 1.93%)</title><rect x="57.7147%" y="293" width="1.9321%" height="15" fill="rgb(213,115,40)" fg:x="31245" fg:w="1046"/><text x="57.9647%" y="303.50">n..</text></g><g><title>fsnotify (11 samples, 0.02%)</title><rect x="59.6468%" y="309" width="0.0203%" height="15" fill="rgb(209,56,44)" fg:x="32291" fg:w="11"/><text x="59.8968%" y="319.50"></text></g><g><title>apparmor_file_permission (14 samples, 0.03%)</title><rect x="59.6893%" y="293" width="0.0259%" height="15" fill="rgb(230,108,32)" fg:x="32314" fg:w="14"/><text x="59.9393%" y="303.50"></text></g><g><title>__fsnotify_parent (6 samples, 0.01%)</title><rect x="59.7521%" y="277" width="0.0111%" height="15" fill="rgb(216,165,31)" fg:x="32348" fg:w="6"/><text x="60.0021%" y="287.50"></text></g><g><title>apparmor_file_permission (78 samples, 0.14%)</title><rect x="59.7632%" y="277" width="0.1441%" height="15" fill="rgb(218,122,21)" fg:x="32354" fg:w="78"/><text x="60.0132%" y="287.50"></text></g><g><title>common_file_perm (77 samples, 0.14%)</title><rect x="59.7650%" y="261" width="0.1422%" height="15" fill="rgb(223,224,47)" fg:x="32355" fg:w="77"/><text x="60.0150%" y="271.50"></text></g><g><title>common_file_perm (14 samples, 0.03%)</title><rect x="59.9073%" y="277" width="0.0259%" height="15" fill="rgb(238,102,44)" fg:x="32432" fg:w="14"/><text x="60.1573%" y="287.50"></text></g><g><title>__x64_sys_read (1,302 samples, 2.41%)</title><rect x="57.5374%" y="357" width="2.4050%" height="15" fill="rgb(236,46,40)" fg:x="31149" fg:w="1302"/><text x="57.7874%" y="367.50">__..</text></g><g><title>ksys_read (1,299 samples, 2.40%)</title><rect x="57.5429%" y="341" width="2.3995%" height="15" fill="rgb(247,202,50)" fg:x="31152" fg:w="1299"/><text x="57.7929%" y="351.50">ks..</text></g><g><title>vfs_read (1,264 samples, 2.33%)</title><rect x="57.6076%" y="325" width="2.3348%" height="15" fill="rgb(209,99,20)" fg:x="31187" fg:w="1264"/><text x="57.8576%" y="335.50">v..</text></g><g><title>rw_verify_area (149 samples, 0.28%)</title><rect x="59.6671%" y="309" width="0.2752%" height="15" fill="rgb(252,27,34)" fg:x="32302" fg:w="149"/><text x="59.9171%" y="319.50"></text></g><g><title>security_file_permission (122 samples, 0.23%)</title><rect x="59.7170%" y="293" width="0.2254%" height="15" fill="rgb(215,206,23)" fg:x="32329" fg:w="122"/><text x="59.9670%" y="303.50"></text></g><g><title>do_syscall_64 (1,586 samples, 2.93%)</title><rect x="57.0275%" y="373" width="2.9296%" height="15" fill="rgb(212,135,36)" fg:x="30873" fg:w="1586"/><text x="57.2775%" y="383.50">do..</text></g><g><title>entry_SYSCALL_64_after_hwframe (1,618 samples, 2.99%)</title><rect x="56.9721%" y="389" width="2.9887%" height="15" fill="rgb(240,189,1)" fg:x="30843" fg:w="1618"/><text x="57.2221%" y="399.50">ent..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1,808 samples, 3.34%)</title><rect x="56.8872%" y="453" width="3.3397%" height="15" fill="rgb(242,56,20)" fg:x="30797" fg:w="1808"/><text x="57.1372%" y="463.50">&lt;st..</text></g><g><title>std::sys::unix::fs::File::read (1,808 samples, 3.34%)</title><rect x="56.8872%" y="437" width="3.3397%" height="15" fill="rgb(247,132,33)" fg:x="30797" fg:w="1808"/><text x="57.1372%" y="447.50">std..</text></g><g><title>std::sys::unix::fd::FileDesc::read (1,808 samples, 3.34%)</title><rect x="56.8872%" y="421" width="3.3397%" height="15" fill="rgb(208,149,11)" fg:x="30797" fg:w="1808"/><text x="57.1372%" y="431.50">std..</text></g><g><title>__GI___read (1,806 samples, 3.34%)</title><rect x="56.8909%" y="405" width="3.3360%" height="15" fill="rgb(211,33,11)" fg:x="30799" fg:w="1806"/><text x="57.1409%" y="415.50">__G..</text></g><g><title>syscall_return_via_sysret (144 samples, 0.27%)</title><rect x="59.9608%" y="389" width="0.2660%" height="15" fill="rgb(221,29,38)" fg:x="32461" fg:w="144"/><text x="60.2108%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (3,470 samples, 6.41%)</title><rect x="53.8190%" y="517" width="6.4097%" height="15" fill="rgb(206,182,49)" fg:x="29136" fg:w="3470"/><text x="54.0690%" y="527.50">&lt;yakvdb:..</text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (3,177 samples, 5.87%)</title><rect x="54.3602%" y="501" width="5.8684%" height="15" fill="rgb(216,140,1)" fg:x="29429" fg:w="3177"/><text x="54.6102%" y="511.50">yakvdb:..</text></g><g><title>std::io::Read::read_exact (1,810 samples, 3.34%)</title><rect x="56.8853%" y="485" width="3.3434%" height="15" fill="rgb(232,57,40)" fg:x="30796" fg:w="1810"/><text x="57.1353%" y="495.50">std..</text></g><g><title>std::io::default_read_exact (1,810 samples, 3.34%)</title><rect x="56.8853%" y="469" width="3.3434%" height="15" fill="rgb(224,186,18)" fg:x="30796" fg:w="1810"/><text x="57.1353%" y="479.50">std..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.01%)</title><rect x="60.2287%" y="341" width="0.0129%" height="15" fill="rgb(215,121,11)" fg:x="32606" fg:w="7"/><text x="60.4787%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19 samples, 0.04%)</title><rect x="60.2508%" y="325" width="0.0351%" height="15" fill="rgb(245,147,10)" fg:x="32618" fg:w="19"/><text x="60.5008%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (32 samples, 0.06%)</title><rect x="60.2287%" y="421" width="0.0591%" height="15" fill="rgb(238,153,13)" fg:x="32606" fg:w="32"/><text x="60.4787%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (32 samples, 0.06%)</title><rect x="60.2287%" y="405" width="0.0591%" height="15" fill="rgb(233,108,0)" fg:x="32606" fg:w="32"/><text x="60.4787%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (32 samples, 0.06%)</title><rect x="60.2287%" y="389" width="0.0591%" height="15" fill="rgb(212,157,17)" fg:x="32606" fg:w="32"/><text x="60.4787%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (32 samples, 0.06%)</title><rect x="60.2287%" y="373" width="0.0591%" height="15" fill="rgb(225,213,38)" fg:x="32606" fg:w="32"/><text x="60.4787%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (32 samples, 0.06%)</title><rect x="60.2287%" y="357" width="0.0591%" height="15" fill="rgb(248,16,11)" fg:x="32606" fg:w="32"/><text x="60.4787%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (25 samples, 0.05%)</title><rect x="60.2416%" y="341" width="0.0462%" height="15" fill="rgb(241,33,4)" fg:x="32613" fg:w="25"/><text x="60.4916%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (7 samples, 0.01%)</title><rect x="60.2989%" y="373" width="0.0129%" height="15" fill="rgb(222,26,43)" fg:x="32644" fg:w="7"/><text x="60.5489%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (57 samples, 0.11%)</title><rect x="60.2287%" y="469" width="0.1053%" height="15" fill="rgb(243,29,36)" fg:x="32606" fg:w="57"/><text x="60.4787%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (57 samples, 0.11%)</title><rect x="60.2287%" y="453" width="0.1053%" height="15" fill="rgb(241,9,27)" fg:x="32606" fg:w="57"/><text x="60.4787%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (57 samples, 0.11%)</title><rect x="60.2287%" y="437" width="0.1053%" height="15" fill="rgb(205,117,26)" fg:x="32606" fg:w="57"/><text x="60.4787%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (25 samples, 0.05%)</title><rect x="60.2878%" y="421" width="0.0462%" height="15" fill="rgb(209,80,39)" fg:x="32638" fg:w="25"/><text x="60.5378%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 0.05%)</title><rect x="60.2878%" y="405" width="0.0462%" height="15" fill="rgb(239,155,6)" fg:x="32638" fg:w="25"/><text x="60.5378%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (25 samples, 0.05%)</title><rect x="60.2878%" y="389" width="0.0462%" height="15" fill="rgb(212,104,12)" fg:x="32638" fg:w="25"/><text x="60.5378%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.01%)</title><rect x="60.3432%" y="341" width="0.0111%" height="15" fill="rgb(234,204,3)" fg:x="32668" fg:w="6"/><text x="60.5932%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (25 samples, 0.05%)</title><rect x="60.3580%" y="325" width="0.0462%" height="15" fill="rgb(251,218,7)" fg:x="32676" fg:w="25"/><text x="60.6080%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (39 samples, 0.07%)</title><rect x="60.3340%" y="421" width="0.0720%" height="15" fill="rgb(221,81,32)" fg:x="32663" fg:w="39"/><text x="60.5840%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (39 samples, 0.07%)</title><rect x="60.3340%" y="405" width="0.0720%" height="15" fill="rgb(214,152,26)" fg:x="32663" fg:w="39"/><text x="60.5840%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (39 samples, 0.07%)</title><rect x="60.3340%" y="389" width="0.0720%" height="15" fill="rgb(223,22,3)" fg:x="32663" fg:w="39"/><text x="60.5840%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (39 samples, 0.07%)</title><rect x="60.3340%" y="373" width="0.0720%" height="15" fill="rgb(207,174,7)" fg:x="32663" fg:w="39"/><text x="60.5840%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (39 samples, 0.07%)</title><rect x="60.3340%" y="357" width="0.0720%" height="15" fill="rgb(224,19,52)" fg:x="32663" fg:w="39"/><text x="60.5840%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (28 samples, 0.05%)</title><rect x="60.3543%" y="341" width="0.0517%" height="15" fill="rgb(228,24,14)" fg:x="32674" fg:w="28"/><text x="60.6043%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.01%)</title><rect x="60.4337%" y="373" width="0.0148%" height="15" fill="rgb(230,153,43)" fg:x="32717" fg:w="8"/><text x="60.6837%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (8 samples, 0.01%)</title><rect x="60.4337%" y="357" width="0.0148%" height="15" fill="rgb(231,106,12)" fg:x="32717" fg:w="8"/><text x="60.6837%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (6 samples, 0.01%)</title><rect x="60.4374%" y="341" width="0.0111%" height="15" fill="rgb(215,92,2)" fg:x="32719" fg:w="6"/><text x="60.6874%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (7 samples, 0.01%)</title><rect x="60.4485%" y="373" width="0.0129%" height="15" fill="rgb(249,143,25)" fg:x="32725" fg:w="7"/><text x="60.6985%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (36 samples, 0.07%)</title><rect x="60.4060%" y="421" width="0.0665%" height="15" fill="rgb(252,7,35)" fg:x="32702" fg:w="36"/><text x="60.6560%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (32 samples, 0.06%)</title><rect x="60.4134%" y="405" width="0.0591%" height="15" fill="rgb(216,69,40)" fg:x="32706" fg:w="32"/><text x="60.6634%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (32 samples, 0.06%)</title><rect x="60.4134%" y="389" width="0.0591%" height="15" fill="rgb(240,36,33)" fg:x="32706" fg:w="32"/><text x="60.6634%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (77 samples, 0.14%)</title><rect x="60.3340%" y="469" width="0.1422%" height="15" fill="rgb(231,128,14)" fg:x="32663" fg:w="77"/><text x="60.5840%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (77 samples, 0.14%)</title><rect x="60.3340%" y="453" width="0.1422%" height="15" fill="rgb(245,143,14)" fg:x="32663" fg:w="77"/><text x="60.5840%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (77 samples, 0.14%)</title><rect x="60.3340%" y="437" width="0.1422%" height="15" fill="rgb(222,130,28)" fg:x="32663" fg:w="77"/><text x="60.5840%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (12 samples, 0.02%)</title><rect x="60.5113%" y="453" width="0.0222%" height="15" fill="rgb(212,10,48)" fg:x="32759" fg:w="12"/><text x="60.7613%" y="463.50"></text></g><g><title>core::intrinsics::copy (10 samples, 0.02%)</title><rect x="60.5150%" y="437" width="0.0185%" height="15" fill="rgb(254,118,45)" fg:x="32761" fg:w="10"/><text x="60.7650%" y="447.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (8 samples, 0.01%)</title><rect x="60.5187%" y="421" width="0.0148%" height="15" fill="rgb(228,6,45)" fg:x="32763" fg:w="8"/><text x="60.7687%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.01%)</title><rect x="60.5335%" y="453" width="0.0111%" height="15" fill="rgb(241,18,35)" fg:x="32771" fg:w="6"/><text x="60.7835%" y="463.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="60.5335%" y="437" width="0.0111%" height="15" fill="rgb(227,214,53)" fg:x="32771" fg:w="6"/><text x="60.7835%" y="447.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="60.5335%" y="421" width="0.0111%" height="15" fill="rgb(224,107,51)" fg:x="32771" fg:w="6"/><text x="60.7835%" y="431.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (6 samples, 0.01%)</title><rect x="60.5519%" y="453" width="0.0111%" height="15" fill="rgb(248,60,28)" fg:x="32781" fg:w="6"/><text x="60.8019%" y="463.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (6 samples, 0.01%)</title><rect x="60.5519%" y="437" width="0.0111%" height="15" fill="rgb(249,101,23)" fg:x="32781" fg:w="6"/><text x="60.8019%" y="447.50"></text></g><g><title>core::cell::BorrowRefMut::new (6 samples, 0.01%)</title><rect x="60.5519%" y="421" width="0.0111%" height="15" fill="rgb(228,51,19)" fg:x="32781" fg:w="6"/><text x="60.8019%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.01%)</title><rect x="60.5519%" y="405" width="0.0111%" height="15" fill="rgb(213,20,6)" fg:x="32781" fg:w="6"/><text x="60.8019%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.01%)</title><rect x="60.5519%" y="389" width="0.0111%" height="15" fill="rgb(212,124,10)" fg:x="32781" fg:w="6"/><text x="60.8019%" y="399.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="60.5519%" y="373" width="0.0111%" height="15" fill="rgb(248,3,40)" fg:x="32781" fg:w="6"/><text x="60.8019%" y="383.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="60.5519%" y="357" width="0.0111%" height="15" fill="rgb(223,178,23)" fg:x="32781" fg:w="6"/><text x="60.8019%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (26 samples, 0.05%)</title><rect x="60.5926%" y="405" width="0.0480%" height="15" fill="rgb(240,132,45)" fg:x="32803" fg:w="26"/><text x="60.8426%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (21 samples, 0.04%)</title><rect x="60.6018%" y="389" width="0.0388%" height="15" fill="rgb(245,164,36)" fg:x="32808" fg:w="21"/><text x="60.8518%" y="399.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (21 samples, 0.04%)</title><rect x="60.6018%" y="373" width="0.0388%" height="15" fill="rgb(231,188,53)" fg:x="32808" fg:w="21"/><text x="60.8518%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (21 samples, 0.04%)</title><rect x="60.6018%" y="357" width="0.0388%" height="15" fill="rgb(237,198,39)" fg:x="32808" fg:w="21"/><text x="60.8518%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (21 samples, 0.04%)</title><rect x="60.6018%" y="341" width="0.0388%" height="15" fill="rgb(223,120,35)" fg:x="32808" fg:w="21"/><text x="60.8518%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (21 samples, 0.04%)</title><rect x="60.6018%" y="325" width="0.0388%" height="15" fill="rgb(253,107,49)" fg:x="32808" fg:w="21"/><text x="60.8518%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (69 samples, 0.13%)</title><rect x="60.5630%" y="453" width="0.1275%" height="15" fill="rgb(216,44,31)" fg:x="32787" fg:w="69"/><text x="60.8130%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (69 samples, 0.13%)</title><rect x="60.5630%" y="437" width="0.1275%" height="15" fill="rgb(253,87,21)" fg:x="32787" fg:w="69"/><text x="60.8130%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (69 samples, 0.13%)</title><rect x="60.5630%" y="421" width="0.1275%" height="15" fill="rgb(226,18,2)" fg:x="32787" fg:w="69"/><text x="60.8130%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.05%)</title><rect x="60.6406%" y="405" width="0.0499%" height="15" fill="rgb(216,8,46)" fg:x="32829" fg:w="27"/><text x="60.8906%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;alloc::vec::Vec&lt;u32&gt;&gt;&gt; (11 samples, 0.02%)</title><rect x="60.6905%" y="453" width="0.0203%" height="15" fill="rgb(226,140,39)" fg:x="32856" fg:w="11"/><text x="60.9405%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (11 samples, 0.02%)</title><rect x="60.6905%" y="437" width="0.0203%" height="15" fill="rgb(221,194,54)" fg:x="32856" fg:w="11"/><text x="60.9405%" y="447.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="60.6905%" y="421" width="0.0203%" height="15" fill="rgb(213,92,11)" fg:x="32856" fg:w="11"/><text x="60.9405%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (11 samples, 0.02%)</title><rect x="60.6905%" y="405" width="0.0203%" height="15" fill="rgb(229,162,46)" fg:x="32856" fg:w="11"/><text x="60.9405%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (11 samples, 0.02%)</title><rect x="60.6905%" y="389" width="0.0203%" height="15" fill="rgb(214,111,36)" fg:x="32856" fg:w="11"/><text x="60.9405%" y="399.50"></text></g><g><title>core::mem::replace (11 samples, 0.02%)</title><rect x="60.6905%" y="373" width="0.0203%" height="15" fill="rgb(207,6,21)" fg:x="32856" fg:w="11"/><text x="60.9405%" y="383.50"></text></g><g><title>core::ptr::write (11 samples, 0.02%)</title><rect x="60.6905%" y="357" width="0.0203%" height="15" fill="rgb(213,127,38)" fg:x="32856" fg:w="11"/><text x="60.9405%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.01%)</title><rect x="60.7126%" y="325" width="0.0111%" height="15" fill="rgb(238,118,32)" fg:x="32868" fg:w="6"/><text x="60.9626%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.01%)</title><rect x="60.7311%" y="309" width="0.0129%" height="15" fill="rgb(240,139,39)" fg:x="32878" fg:w="7"/><text x="60.9811%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="60.7126%" y="373" width="0.0332%" height="15" fill="rgb(235,10,37)" fg:x="32868" fg:w="18"/><text x="60.9626%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="60.7126%" y="357" width="0.0332%" height="15" fill="rgb(249,171,38)" fg:x="32868" fg:w="18"/><text x="60.9626%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="60.7126%" y="341" width="0.0332%" height="15" fill="rgb(242,144,32)" fg:x="32868" fg:w="18"/><text x="60.9626%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12 samples, 0.02%)</title><rect x="60.7237%" y="325" width="0.0222%" height="15" fill="rgb(217,117,21)" fg:x="32874" fg:w="12"/><text x="60.9737%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.04%)</title><rect x="60.7108%" y="405" width="0.0388%" height="15" fill="rgb(249,87,1)" fg:x="32867" fg:w="21"/><text x="60.9608%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.04%)</title><rect x="60.7108%" y="389" width="0.0388%" height="15" fill="rgb(248,196,48)" fg:x="32867" fg:w="21"/><text x="60.9608%" y="399.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.01%)</title><rect x="60.7644%" y="341" width="0.0111%" height="15" fill="rgb(251,206,33)" fg:x="32896" fg:w="6"/><text x="61.0144%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (6 samples, 0.01%)</title><rect x="60.7644%" y="325" width="0.0111%" height="15" fill="rgb(232,141,28)" fg:x="32896" fg:w="6"/><text x="61.0144%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.01%)</title><rect x="60.7644%" y="357" width="0.0148%" height="15" fill="rgb(209,167,14)" fg:x="32896" fg:w="8"/><text x="61.0144%" y="367.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (304 samples, 0.56%)</title><rect x="60.2287%" y="517" width="0.5615%" height="15" fill="rgb(225,11,50)" fg:x="32606" fg:w="304"/><text x="60.4787%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (304 samples, 0.56%)</title><rect x="60.2287%" y="501" width="0.5615%" height="15" fill="rgb(209,50,20)" fg:x="32606" fg:w="304"/><text x="60.4787%" y="511.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (304 samples, 0.56%)</title><rect x="60.2287%" y="485" width="0.5615%" height="15" fill="rgb(212,17,46)" fg:x="32606" fg:w="304"/><text x="60.4787%" y="495.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (170 samples, 0.31%)</title><rect x="60.4762%" y="469" width="0.3140%" height="15" fill="rgb(216,101,39)" fg:x="32740" fg:w="170"/><text x="60.7262%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (43 samples, 0.08%)</title><rect x="60.7108%" y="453" width="0.0794%" height="15" fill="rgb(212,228,48)" fg:x="32867" fg:w="43"/><text x="60.9608%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (43 samples, 0.08%)</title><rect x="60.7108%" y="437" width="0.0794%" height="15" fill="rgb(250,6,50)" fg:x="32867" fg:w="43"/><text x="60.9608%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (43 samples, 0.08%)</title><rect x="60.7108%" y="421" width="0.0794%" height="15" fill="rgb(250,160,48)" fg:x="32867" fg:w="43"/><text x="60.9608%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 0.04%)</title><rect x="60.7496%" y="405" width="0.0406%" height="15" fill="rgb(244,216,33)" fg:x="32888" fg:w="22"/><text x="60.9996%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.04%)</title><rect x="60.7496%" y="389" width="0.0406%" height="15" fill="rgb(207,157,5)" fg:x="32888" fg:w="22"/><text x="60.9996%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (22 samples, 0.04%)</title><rect x="60.7496%" y="373" width="0.0406%" height="15" fill="rgb(228,199,8)" fg:x="32888" fg:w="22"/><text x="60.9996%" y="383.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (9 samples, 0.02%)</title><rect x="60.7902%" y="517" width="0.0166%" height="15" fill="rgb(227,80,20)" fg:x="32910" fg:w="9"/><text x="61.0402%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (9 samples, 0.02%)</title><rect x="60.7902%" y="501" width="0.0166%" height="15" fill="rgb(222,9,33)" fg:x="32910" fg:w="9"/><text x="61.0402%" y="511.50"></text></g><g><title>core::cell::BorrowRef::new (9 samples, 0.02%)</title><rect x="60.7902%" y="485" width="0.0166%" height="15" fill="rgb(239,44,28)" fg:x="32910" fg:w="9"/><text x="61.0402%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (3,791 samples, 7.00%)</title><rect x="53.8190%" y="533" width="7.0026%" height="15" fill="rgb(249,187,43)" fg:x="29136" fg:w="3791"/><text x="54.0690%" y="543.50">&lt;yakvdb::..</text></g><g><title>core::result::Result&lt;T,E&gt;::ok (8 samples, 0.01%)</title><rect x="60.8068%" y="517" width="0.0148%" height="15" fill="rgb(216,141,28)" fg:x="32919" fg:w="8"/><text x="61.0568%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.03%)</title><rect x="60.8272%" y="421" width="0.0277%" height="15" fill="rgb(230,154,53)" fg:x="32930" fg:w="15"/><text x="61.0772%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.03%)</title><rect x="60.8272%" y="405" width="0.0277%" height="15" fill="rgb(227,82,4)" fg:x="32930" fg:w="15"/><text x="61.0772%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (14 samples, 0.03%)</title><rect x="60.8290%" y="389" width="0.0259%" height="15" fill="rgb(220,107,16)" fg:x="32931" fg:w="14"/><text x="61.0790%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (14 samples, 0.03%)</title><rect x="60.8290%" y="373" width="0.0259%" height="15" fill="rgb(207,187,2)" fg:x="32931" fg:w="14"/><text x="61.0790%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (14 samples, 0.03%)</title><rect x="60.8290%" y="357" width="0.0259%" height="15" fill="rgb(210,162,52)" fg:x="32931" fg:w="14"/><text x="61.0790%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.02%)</title><rect x="60.8364%" y="341" width="0.0185%" height="15" fill="rgb(217,216,49)" fg:x="32935" fg:w="10"/><text x="61.0864%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (7 samples, 0.01%)</title><rect x="60.8586%" y="373" width="0.0129%" height="15" fill="rgb(218,146,49)" fg:x="32947" fg:w="7"/><text x="61.1086%" y="383.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (33 samples, 0.06%)</title><rect x="60.8216%" y="485" width="0.0610%" height="15" fill="rgb(216,55,40)" fg:x="32927" fg:w="33"/><text x="61.0716%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (33 samples, 0.06%)</title><rect x="60.8216%" y="469" width="0.0610%" height="15" fill="rgb(208,196,21)" fg:x="32927" fg:w="33"/><text x="61.0716%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (33 samples, 0.06%)</title><rect x="60.8216%" y="453" width="0.0610%" height="15" fill="rgb(242,117,42)" fg:x="32927" fg:w="33"/><text x="61.0716%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (33 samples, 0.06%)</title><rect x="60.8216%" y="437" width="0.0610%" height="15" fill="rgb(210,11,23)" fg:x="32927" fg:w="33"/><text x="61.0716%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.03%)</title><rect x="60.8549%" y="421" width="0.0277%" height="15" fill="rgb(217,110,2)" fg:x="32945" fg:w="15"/><text x="61.1049%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.03%)</title><rect x="60.8549%" y="405" width="0.0277%" height="15" fill="rgb(229,77,54)" fg:x="32945" fg:w="15"/><text x="61.1049%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.03%)</title><rect x="60.8549%" y="389" width="0.0277%" height="15" fill="rgb(218,53,16)" fg:x="32945" fg:w="15"/><text x="61.1049%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (37 samples, 0.07%)</title><rect x="60.8216%" y="501" width="0.0683%" height="15" fill="rgb(215,38,13)" fg:x="32927" fg:w="37"/><text x="61.0716%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="60.8918%" y="405" width="0.0222%" height="15" fill="rgb(235,42,18)" fg:x="32965" fg:w="12"/><text x="61.1418%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="60.8918%" y="389" width="0.0222%" height="15" fill="rgb(219,66,54)" fg:x="32965" fg:w="12"/><text x="61.1418%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="60.8955%" y="373" width="0.0185%" height="15" fill="rgb(222,205,4)" fg:x="32967" fg:w="10"/><text x="61.1455%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="60.8955%" y="357" width="0.0185%" height="15" fill="rgb(227,213,46)" fg:x="32967" fg:w="10"/><text x="61.1455%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="60.8955%" y="341" width="0.0185%" height="15" fill="rgb(250,145,42)" fg:x="32967" fg:w="10"/><text x="61.1455%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="60.9010%" y="325" width="0.0129%" height="15" fill="rgb(219,15,2)" fg:x="32970" fg:w="7"/><text x="61.1510%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (23 samples, 0.04%)</title><rect x="60.8918%" y="453" width="0.0425%" height="15" fill="rgb(231,181,52)" fg:x="32965" fg:w="23"/><text x="61.1418%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (23 samples, 0.04%)</title><rect x="60.8918%" y="437" width="0.0425%" height="15" fill="rgb(235,1,42)" fg:x="32965" fg:w="23"/><text x="61.1418%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (23 samples, 0.04%)</title><rect x="60.8918%" y="421" width="0.0425%" height="15" fill="rgb(249,88,27)" fg:x="32965" fg:w="23"/><text x="61.1418%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.02%)</title><rect x="60.9140%" y="405" width="0.0203%" height="15" fill="rgb(235,145,16)" fg:x="32977" fg:w="11"/><text x="61.1640%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.02%)</title><rect x="60.9140%" y="389" width="0.0203%" height="15" fill="rgb(237,114,19)" fg:x="32977" fg:w="11"/><text x="61.1640%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (11 samples, 0.02%)</title><rect x="60.9140%" y="373" width="0.0203%" height="15" fill="rgb(238,51,50)" fg:x="32977" fg:w="11"/><text x="61.1640%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.02%)</title><rect x="60.9491%" y="309" width="0.0222%" height="15" fill="rgb(205,194,25)" fg:x="32996" fg:w="12"/><text x="61.1991%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="60.9398%" y="373" width="0.0332%" height="15" fill="rgb(215,203,17)" fg:x="32991" fg:w="18"/><text x="61.1898%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="60.9398%" y="357" width="0.0332%" height="15" fill="rgb(233,112,49)" fg:x="32991" fg:w="18"/><text x="61.1898%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="60.9398%" y="341" width="0.0332%" height="15" fill="rgb(241,130,26)" fg:x="32991" fg:w="18"/><text x="61.1898%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.02%)</title><rect x="60.9491%" y="325" width="0.0240%" height="15" fill="rgb(252,223,19)" fg:x="32996" fg:w="13"/><text x="61.1991%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.04%)</title><rect x="60.9398%" y="405" width="0.0351%" height="15" fill="rgb(211,95,25)" fg:x="32991" fg:w="19"/><text x="61.1898%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (19 samples, 0.04%)</title><rect x="60.9398%" y="389" width="0.0351%" height="15" fill="rgb(251,182,27)" fg:x="32991" fg:w="19"/><text x="61.1898%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (33 samples, 0.06%)</title><rect x="60.9343%" y="453" width="0.0610%" height="15" fill="rgb(238,24,4)" fg:x="32988" fg:w="33"/><text x="61.1843%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (33 samples, 0.06%)</title><rect x="60.9343%" y="437" width="0.0610%" height="15" fill="rgb(224,220,25)" fg:x="32988" fg:w="33"/><text x="61.1843%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (32 samples, 0.06%)</title><rect x="60.9361%" y="421" width="0.0591%" height="15" fill="rgb(239,133,26)" fg:x="32989" fg:w="32"/><text x="61.1861%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.02%)</title><rect x="60.9749%" y="405" width="0.0203%" height="15" fill="rgb(211,94,48)" fg:x="33010" fg:w="11"/><text x="61.2249%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.02%)</title><rect x="60.9768%" y="389" width="0.0185%" height="15" fill="rgb(239,87,6)" fg:x="33011" fg:w="10"/><text x="61.2268%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.02%)</title><rect x="60.9768%" y="373" width="0.0185%" height="15" fill="rgb(227,62,0)" fg:x="33011" fg:w="10"/><text x="61.2268%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (8 samples, 0.01%)</title><rect x="61.0156%" y="437" width="0.0148%" height="15" fill="rgb(211,226,4)" fg:x="33032" fg:w="8"/><text x="61.2656%" y="447.50"></text></g><g><title>core::intrinsics::copy (8 samples, 0.01%)</title><rect x="61.0156%" y="421" width="0.0148%" height="15" fill="rgb(253,38,52)" fg:x="33032" fg:w="8"/><text x="61.2656%" y="431.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (7 samples, 0.01%)</title><rect x="61.0174%" y="405" width="0.0129%" height="15" fill="rgb(229,126,40)" fg:x="33033" fg:w="7"/><text x="61.2674%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (14 samples, 0.03%)</title><rect x="61.0451%" y="389" width="0.0259%" height="15" fill="rgb(229,165,44)" fg:x="33048" fg:w="14"/><text x="61.2951%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (11 samples, 0.02%)</title><rect x="61.0507%" y="373" width="0.0203%" height="15" fill="rgb(247,95,47)" fg:x="33051" fg:w="11"/><text x="61.3007%" y="383.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (11 samples, 0.02%)</title><rect x="61.0507%" y="357" width="0.0203%" height="15" fill="rgb(216,140,30)" fg:x="33051" fg:w="11"/><text x="61.3007%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.02%)</title><rect x="61.0507%" y="341" width="0.0203%" height="15" fill="rgb(246,214,8)" fg:x="33051" fg:w="11"/><text x="61.3007%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.02%)</title><rect x="61.0507%" y="325" width="0.0203%" height="15" fill="rgb(227,224,15)" fg:x="33051" fg:w="11"/><text x="61.3007%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (11 samples, 0.02%)</title><rect x="61.0507%" y="309" width="0.0203%" height="15" fill="rgb(233,175,4)" fg:x="33051" fg:w="11"/><text x="61.3007%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (41 samples, 0.08%)</title><rect x="61.0322%" y="437" width="0.0757%" height="15" fill="rgb(221,66,45)" fg:x="33041" fg:w="41"/><text x="61.2822%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (41 samples, 0.08%)</title><rect x="61.0322%" y="421" width="0.0757%" height="15" fill="rgb(221,178,18)" fg:x="33041" fg:w="41"/><text x="61.2822%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (41 samples, 0.08%)</title><rect x="61.0322%" y="405" width="0.0757%" height="15" fill="rgb(213,81,29)" fg:x="33041" fg:w="41"/><text x="61.2822%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.04%)</title><rect x="61.0710%" y="389" width="0.0369%" height="15" fill="rgb(220,89,49)" fg:x="33062" fg:w="20"/><text x="61.3210%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.03%)</title><rect x="61.1116%" y="389" width="0.0259%" height="15" fill="rgb(227,60,33)" fg:x="33084" fg:w="14"/><text x="61.3616%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.03%)</title><rect x="61.1116%" y="373" width="0.0259%" height="15" fill="rgb(205,113,12)" fg:x="33084" fg:w="14"/><text x="61.3616%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="61.1153%" y="357" width="0.0222%" height="15" fill="rgb(211,32,1)" fg:x="33086" fg:w="12"/><text x="61.3653%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="61.1153%" y="341" width="0.0222%" height="15" fill="rgb(246,2,12)" fg:x="33086" fg:w="12"/><text x="61.3653%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="61.1153%" y="325" width="0.0222%" height="15" fill="rgb(243,37,27)" fg:x="33086" fg:w="12"/><text x="61.3653%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.02%)</title><rect x="61.1209%" y="309" width="0.0166%" height="15" fill="rgb(248,211,31)" fg:x="33089" fg:w="9"/><text x="61.3709%" y="319.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (143 samples, 0.26%)</title><rect x="60.8900%" y="501" width="0.2641%" height="15" fill="rgb(242,146,47)" fg:x="32964" fg:w="143"/><text x="61.1400%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (143 samples, 0.26%)</title><rect x="60.8900%" y="485" width="0.2641%" height="15" fill="rgb(206,70,20)" fg:x="32964" fg:w="143"/><text x="61.1400%" y="495.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (142 samples, 0.26%)</title><rect x="60.8918%" y="469" width="0.2623%" height="15" fill="rgb(215,10,51)" fg:x="32965" fg:w="142"/><text x="61.1418%" y="479.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (86 samples, 0.16%)</title><rect x="60.9953%" y="453" width="0.1589%" height="15" fill="rgb(243,178,53)" fg:x="33021" fg:w="86"/><text x="61.2453%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (23 samples, 0.04%)</title><rect x="61.1116%" y="437" width="0.0425%" height="15" fill="rgb(233,221,20)" fg:x="33084" fg:w="23"/><text x="61.3616%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (23 samples, 0.04%)</title><rect x="61.1116%" y="421" width="0.0425%" height="15" fill="rgb(218,95,35)" fg:x="33084" fg:w="23"/><text x="61.3616%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (23 samples, 0.04%)</title><rect x="61.1116%" y="405" width="0.0425%" height="15" fill="rgb(229,13,5)" fg:x="33084" fg:w="23"/><text x="61.3616%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.02%)</title><rect x="61.1375%" y="389" width="0.0166%" height="15" fill="rgb(252,164,30)" fg:x="33098" fg:w="9"/><text x="61.3875%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.02%)</title><rect x="61.1375%" y="373" width="0.0166%" height="15" fill="rgb(232,68,36)" fg:x="33098" fg:w="9"/><text x="61.3875%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.02%)</title><rect x="61.1375%" y="357" width="0.0166%" height="15" fill="rgb(219,59,54)" fg:x="33098" fg:w="9"/><text x="61.3875%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::root (182 samples, 0.34%)</title><rect x="60.8216%" y="533" width="0.3362%" height="15" fill="rgb(250,92,33)" fg:x="32927" fg:w="182"/><text x="61.0716%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (182 samples, 0.34%)</title><rect x="60.8216%" y="517" width="0.3362%" height="15" fill="rgb(229,162,54)" fg:x="32927" fg:w="182"/><text x="61.0716%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.01%)</title><rect x="61.1633%" y="533" width="0.0111%" height="15" fill="rgb(244,114,52)" fg:x="33112" fg:w="6"/><text x="61.4133%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.01%)</title><rect x="61.1633%" y="517" width="0.0111%" height="15" fill="rgb(212,211,43)" fg:x="33112" fg:w="6"/><text x="61.4133%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.01%)</title><rect x="61.1633%" y="501" width="0.0111%" height="15" fill="rgb(226,147,8)" fg:x="33112" fg:w="6"/><text x="61.4133%" y="511.50"></text></g><g><title>__memcmp_sse4_1 (6 samples, 0.01%)</title><rect x="61.1633%" y="485" width="0.0111%" height="15" fill="rgb(226,23,13)" fg:x="33112" fg:w="6"/><text x="61.4133%" y="495.50"></text></g><g><title>__GI___libc_free (7 samples, 0.01%)</title><rect x="61.1800%" y="389" width="0.0129%" height="15" fill="rgb(240,63,4)" fg:x="33121" fg:w="7"/><text x="61.4300%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.05%)</title><rect x="61.1800%" y="421" width="0.0480%" height="15" fill="rgb(221,1,32)" fg:x="33121" fg:w="26"/><text x="61.4300%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.05%)</title><rect x="61.1800%" y="405" width="0.0480%" height="15" fill="rgb(242,117,10)" fg:x="33121" fg:w="26"/><text x="61.4300%" y="415.50"></text></g><g><title>_int_free (18 samples, 0.03%)</title><rect x="61.1947%" y="389" width="0.0332%" height="15" fill="rgb(249,172,44)" fg:x="33129" fg:w="18"/><text x="61.4447%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (28 samples, 0.05%)</title><rect x="61.1800%" y="453" width="0.0517%" height="15" fill="rgb(244,46,45)" fg:x="33121" fg:w="28"/><text x="61.4300%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (28 samples, 0.05%)</title><rect x="61.1800%" y="437" width="0.0517%" height="15" fill="rgb(206,43,17)" fg:x="33121" fg:w="28"/><text x="61.4300%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;u32&gt;&gt; (29 samples, 0.05%)</title><rect x="61.1800%" y="533" width="0.0536%" height="15" fill="rgb(239,218,39)" fg:x="33121" fg:w="29"/><text x="61.4300%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;u32,std::collections::hash::map::RandomState&gt;&gt; (29 samples, 0.05%)</title><rect x="61.1800%" y="517" width="0.0536%" height="15" fill="rgb(208,169,54)" fg:x="33121" fg:w="29"/><text x="61.4300%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,(),std::collections::hash::map::RandomState&gt;&gt; (29 samples, 0.05%)</title><rect x="61.1800%" y="501" width="0.0536%" height="15" fill="rgb(247,25,42)" fg:x="33121" fg:w="29"/><text x="61.4300%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,())&gt;&gt; (29 samples, 0.05%)</title><rect x="61.1800%" y="485" width="0.0536%" height="15" fill="rgb(226,23,31)" fg:x="33121" fg:w="29"/><text x="61.4300%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.05%)</title><rect x="61.1800%" y="469" width="0.0536%" height="15" fill="rgb(247,16,28)" fg:x="33121" fg:w="29"/><text x="61.4300%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.03%)</title><rect x="61.2354%" y="437" width="0.0277%" height="15" fill="rgb(231,147,38)" fg:x="33151" fg:w="15"/><text x="61.4854%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.03%)</title><rect x="61.2354%" y="421" width="0.0277%" height="15" fill="rgb(253,81,48)" fg:x="33151" fg:w="15"/><text x="61.4854%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.03%)</title><rect x="61.2354%" y="405" width="0.0277%" height="15" fill="rgb(249,222,43)" fg:x="33151" fg:w="15"/><text x="61.4854%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.02%)</title><rect x="61.2465%" y="389" width="0.0166%" height="15" fill="rgb(221,3,27)" fg:x="33157" fg:w="9"/><text x="61.4965%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.03%)</title><rect x="61.2335%" y="469" width="0.0314%" height="15" fill="rgb(228,180,5)" fg:x="33150" fg:w="17"/><text x="61.4835%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.03%)</title><rect x="61.2335%" y="453" width="0.0314%" height="15" fill="rgb(227,131,42)" fg:x="33150" fg:w="17"/><text x="61.4835%" y="463.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (27 samples, 0.05%)</title><rect x="61.2335%" y="533" width="0.0499%" height="15" fill="rgb(212,3,39)" fg:x="33150" fg:w="27"/><text x="61.4835%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (27 samples, 0.05%)</title><rect x="61.2335%" y="517" width="0.0499%" height="15" fill="rgb(226,45,5)" fg:x="33150" fg:w="27"/><text x="61.4835%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (27 samples, 0.05%)</title><rect x="61.2335%" y="501" width="0.0499%" height="15" fill="rgb(215,167,45)" fg:x="33150" fg:w="27"/><text x="61.4835%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (27 samples, 0.05%)</title><rect x="61.2335%" y="485" width="0.0499%" height="15" fill="rgb(250,218,53)" fg:x="33150" fg:w="27"/><text x="61.4835%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.02%)</title><rect x="61.2649%" y="469" width="0.0185%" height="15" fill="rgb(207,140,0)" fg:x="33167" fg:w="10"/><text x="61.5149%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.02%)</title><rect x="61.2649%" y="453" width="0.0185%" height="15" fill="rgb(238,133,51)" fg:x="33167" fg:w="10"/><text x="61.5149%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.02%)</title><rect x="61.2649%" y="437" width="0.0185%" height="15" fill="rgb(218,203,53)" fg:x="33167" fg:w="10"/><text x="61.5149%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.03%)</title><rect x="61.3074%" y="389" width="0.0277%" height="15" fill="rgb(226,184,25)" fg:x="33190" fg:w="15"/><text x="61.5574%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.05%)</title><rect x="61.2963%" y="453" width="0.0462%" height="15" fill="rgb(231,121,21)" fg:x="33184" fg:w="25"/><text x="61.5463%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (25 samples, 0.05%)</title><rect x="61.2963%" y="437" width="0.0462%" height="15" fill="rgb(251,14,34)" fg:x="33184" fg:w="25"/><text x="61.5463%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (25 samples, 0.05%)</title><rect x="61.2963%" y="421" width="0.0462%" height="15" fill="rgb(249,193,11)" fg:x="33184" fg:w="25"/><text x="61.5463%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.04%)</title><rect x="61.3056%" y="405" width="0.0369%" height="15" fill="rgb(220,172,37)" fg:x="33189" fg:w="20"/><text x="61.5556%" y="415.50"></text></g><g><title>hashbrown::map::make_insert_hash (32 samples, 0.06%)</title><rect x="61.2853%" y="485" width="0.0591%" height="15" fill="rgb(231,229,43)" fg:x="33178" fg:w="32"/><text x="61.5353%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (31 samples, 0.06%)</title><rect x="61.2871%" y="469" width="0.0573%" height="15" fill="rgb(250,161,5)" fg:x="33179" fg:w="31"/><text x="61.5371%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.01%)</title><rect x="61.3628%" y="437" width="0.0111%" height="15" fill="rgb(218,225,18)" fg:x="33220" fg:w="6"/><text x="61.6128%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.01%)</title><rect x="61.3628%" y="421" width="0.0111%" height="15" fill="rgb(245,45,42)" fg:x="33220" fg:w="6"/><text x="61.6128%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (17 samples, 0.03%)</title><rect x="61.3444%" y="485" width="0.0314%" height="15" fill="rgb(211,115,1)" fg:x="33210" fg:w="17"/><text x="61.5944%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.03%)</title><rect x="61.3444%" y="469" width="0.0314%" height="15" fill="rgb(248,133,52)" fg:x="33210" fg:w="17"/><text x="61.5944%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 0.03%)</title><rect x="61.3444%" y="453" width="0.0314%" height="15" fill="rgb(238,100,21)" fg:x="33210" fg:w="17"/><text x="61.5944%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (26 samples, 0.05%)</title><rect x="61.3813%" y="469" width="0.0480%" height="15" fill="rgb(247,144,11)" fg:x="33230" fg:w="26"/><text x="61.6313%" y="479.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (97 samples, 0.18%)</title><rect x="61.2834%" y="533" width="0.1792%" height="15" fill="rgb(206,164,16)" fg:x="33177" fg:w="97"/><text x="61.5334%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (97 samples, 0.18%)</title><rect x="61.2834%" y="517" width="0.1792%" height="15" fill="rgb(222,34,3)" fg:x="33177" fg:w="97"/><text x="61.5334%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (97 samples, 0.18%)</title><rect x="61.2834%" y="501" width="0.1792%" height="15" fill="rgb(248,82,4)" fg:x="33177" fg:w="97"/><text x="61.5334%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (47 samples, 0.09%)</title><rect x="61.3758%" y="485" width="0.0868%" height="15" fill="rgb(228,81,46)" fg:x="33227" fg:w="47"/><text x="61.6258%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (18 samples, 0.03%)</title><rect x="61.4293%" y="469" width="0.0332%" height="15" fill="rgb(227,67,47)" fg:x="33256" fg:w="18"/><text x="61.6793%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (7 samples, 0.01%)</title><rect x="61.4644%" y="517" width="0.0129%" height="15" fill="rgb(215,93,53)" fg:x="33275" fg:w="7"/><text x="61.7144%" y="527.50"></text></g><g><title>std::collections::hash::map::RandomState::new (7 samples, 0.01%)</title><rect x="61.4644%" y="501" width="0.0129%" height="15" fill="rgb(248,194,39)" fg:x="33275" fg:w="7"/><text x="61.7144%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.01%)</title><rect x="61.4644%" y="485" width="0.0129%" height="15" fill="rgb(215,5,19)" fg:x="33275" fg:w="7"/><text x="61.7144%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.01%)</title><rect x="61.4644%" y="469" width="0.0129%" height="15" fill="rgb(226,215,51)" fg:x="33275" fg:w="7"/><text x="61.7144%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.02%)</title><rect x="61.4774%" y="437" width="0.0240%" height="15" fill="rgb(225,56,26)" fg:x="33282" fg:w="13"/><text x="61.7274%" y="447.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (6 samples, 0.01%)</title><rect x="61.5162%" y="405" width="0.0111%" height="15" fill="rgb(222,75,29)" fg:x="33303" fg:w="6"/><text x="61.7662%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (18 samples, 0.03%)</title><rect x="61.5162%" y="421" width="0.0332%" height="15" fill="rgb(236,139,6)" fg:x="33303" fg:w="18"/><text x="61.7662%" y="431.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (12 samples, 0.02%)</title><rect x="61.5272%" y="405" width="0.0222%" height="15" fill="rgb(223,137,36)" fg:x="33309" fg:w="12"/><text x="61.7772%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="61.5272%" y="389" width="0.0222%" height="15" fill="rgb(226,99,2)" fg:x="33309" fg:w="12"/><text x="61.7772%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="61.5272%" y="373" width="0.0222%" height="15" fill="rgb(206,133,23)" fg:x="33309" fg:w="12"/><text x="61.7772%" y="383.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="61.5272%" y="357" width="0.0222%" height="15" fill="rgb(243,173,15)" fg:x="33309" fg:w="12"/><text x="61.7772%" y="367.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.02%)</title><rect x="61.5272%" y="341" width="0.0222%" height="15" fill="rgb(228,69,28)" fg:x="33309" fg:w="12"/><text x="61.7772%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::lookup (5,150 samples, 9.51%)</title><rect x="52.0513%" y="549" width="9.5129%" height="15" fill="rgb(212,51,22)" fg:x="28179" fg:w="5150"/><text x="52.3013%" y="559.50">&lt;yakvdb::disk:..</text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::with_capacity (55 samples, 0.10%)</title><rect x="61.4626%" y="533" width="0.1016%" height="15" fill="rgb(227,113,0)" fg:x="33274" fg:w="55"/><text x="61.7126%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::with_capacity_and_hasher (47 samples, 0.09%)</title><rect x="61.4774%" y="517" width="0.0868%" height="15" fill="rgb(252,84,27)" fg:x="33282" fg:w="47"/><text x="61.7274%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (47 samples, 0.09%)</title><rect x="61.4774%" y="501" width="0.0868%" height="15" fill="rgb(223,145,39)" fg:x="33282" fg:w="47"/><text x="61.7274%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (47 samples, 0.09%)</title><rect x="61.4774%" y="485" width="0.0868%" height="15" fill="rgb(239,219,30)" fg:x="33282" fg:w="47"/><text x="61.7274%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (47 samples, 0.09%)</title><rect x="61.4774%" y="469" width="0.0868%" height="15" fill="rgb(224,196,39)" fg:x="33282" fg:w="47"/><text x="61.7274%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (47 samples, 0.09%)</title><rect x="61.4774%" y="453" width="0.0868%" height="15" fill="rgb(205,35,43)" fg:x="33282" fg:w="47"/><text x="61.7274%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (34 samples, 0.06%)</title><rect x="61.5014%" y="437" width="0.0628%" height="15" fill="rgb(228,201,21)" fg:x="33295" fg:w="34"/><text x="61.7514%" y="447.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (8 samples, 0.01%)</title><rect x="61.5494%" y="421" width="0.0148%" height="15" fill="rgb(237,118,16)" fg:x="33321" fg:w="8"/><text x="61.7994%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (18 samples, 0.03%)</title><rect x="61.6787%" y="533" width="0.0332%" height="15" fill="rgb(241,17,19)" fg:x="33391" fg:w="18"/><text x="61.9287%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (13 samples, 0.02%)</title><rect x="61.7286%" y="501" width="0.0240%" height="15" fill="rgb(214,10,25)" fg:x="33418" fg:w="13"/><text x="61.9786%" y="511.50"></text></g><g><title>yakvdb::disk::block::get_u32 (8 samples, 0.01%)</title><rect x="61.7378%" y="485" width="0.0148%" height="15" fill="rgb(238,37,29)" fg:x="33423" fg:w="8"/><text x="61.9878%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (16 samples, 0.03%)</title><rect x="61.7267%" y="517" width="0.0296%" height="15" fill="rgb(253,83,25)" fg:x="33417" fg:w="16"/><text x="61.9767%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (14 samples, 0.03%)</title><rect x="61.7655%" y="517" width="0.0259%" height="15" fill="rgb(234,192,12)" fg:x="33438" fg:w="14"/><text x="62.0155%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::ge (14 samples, 0.03%)</title><rect x="61.7655%" y="501" width="0.0259%" height="15" fill="rgb(241,216,45)" fg:x="33438" fg:w="14"/><text x="62.0155%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (14 samples, 0.03%)</title><rect x="61.7655%" y="485" width="0.0259%" height="15" fill="rgb(242,22,33)" fg:x="33438" fg:w="14"/><text x="62.0155%" y="495.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (14 samples, 0.03%)</title><rect x="61.7655%" y="469" width="0.0259%" height="15" fill="rgb(231,105,49)" fg:x="33438" fg:w="14"/><text x="62.0155%" y="479.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (14 samples, 0.03%)</title><rect x="61.7655%" y="453" width="0.0259%" height="15" fill="rgb(218,204,15)" fg:x="33438" fg:w="14"/><text x="62.0155%" y="463.50"></text></g><g><title>__memcmp_sse4_1 (13 samples, 0.02%)</title><rect x="61.7674%" y="437" width="0.0240%" height="15" fill="rgb(235,138,41)" fg:x="33439" fg:w="13"/><text x="62.0174%" y="447.50"></text></g><g><title>&lt;u32 as core::ops::arith::Sub&gt;::sub (6 samples, 0.01%)</title><rect x="61.9022%" y="501" width="0.0111%" height="15" fill="rgb(246,0,9)" fg:x="33512" fg:w="6"/><text x="62.1522%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (11 samples, 0.02%)</title><rect x="62.0130%" y="421" width="0.0203%" height="15" fill="rgb(210,74,4)" fg:x="33572" fg:w="11"/><text x="62.2630%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.02%)</title><rect x="62.0130%" y="405" width="0.0203%" height="15" fill="rgb(250,60,41)" fg:x="33572" fg:w="11"/><text x="62.2630%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (19 samples, 0.04%)</title><rect x="62.0020%" y="453" width="0.0351%" height="15" fill="rgb(220,115,12)" fg:x="33566" fg:w="19"/><text x="62.2520%" y="463.50"></text></g><g><title>yakvdb::disk::block::get_u32 (18 samples, 0.03%)</title><rect x="62.0038%" y="437" width="0.0332%" height="15" fill="rgb(237,100,13)" fg:x="33567" fg:w="18"/><text x="62.2538%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (86 samples, 0.16%)</title><rect x="61.9244%" y="469" width="0.1589%" height="15" fill="rgb(213,55,26)" fg:x="33524" fg:w="86"/><text x="62.1744%" y="479.50"></text></g><g><title>yakvdb::disk::block::get_u32 (25 samples, 0.05%)</title><rect x="62.0371%" y="453" width="0.0462%" height="15" fill="rgb(216,17,4)" fg:x="33585" fg:w="25"/><text x="62.2871%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (16 samples, 0.03%)</title><rect x="62.0537%" y="437" width="0.0296%" height="15" fill="rgb(220,153,47)" fg:x="33594" fg:w="16"/><text x="62.3037%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (16 samples, 0.03%)</title><rect x="62.0537%" y="421" width="0.0296%" height="15" fill="rgb(215,131,9)" fg:x="33594" fg:w="16"/><text x="62.3037%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.04%)</title><rect x="62.0832%" y="469" width="0.0406%" height="15" fill="rgb(233,46,42)" fg:x="33610" fg:w="22"/><text x="62.3332%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key::{{closure}} (15 samples, 0.03%)</title><rect x="62.0962%" y="453" width="0.0277%" height="15" fill="rgb(226,86,7)" fg:x="33617" fg:w="15"/><text x="62.3462%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.02%)</title><rect x="62.1036%" y="437" width="0.0203%" height="15" fill="rgb(239,226,21)" fg:x="33621" fg:w="11"/><text x="62.3536%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.02%)</title><rect x="62.1036%" y="421" width="0.0203%" height="15" fill="rgb(244,137,22)" fg:x="33621" fg:w="11"/><text x="62.3536%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (116 samples, 0.21%)</title><rect x="61.9133%" y="501" width="0.2143%" height="15" fill="rgb(211,139,35)" fg:x="33518" fg:w="116"/><text x="62.1633%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (116 samples, 0.21%)</title><rect x="61.9133%" y="485" width="0.2143%" height="15" fill="rgb(214,62,50)" fg:x="33518" fg:w="116"/><text x="62.1633%" y="495.50"></text></g><g><title>__memcmp_sse4_1 (231 samples, 0.43%)</title><rect x="62.1534%" y="453" width="0.4267%" height="15" fill="rgb(212,113,44)" fg:x="33648" fg:w="231"/><text x="62.4034%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (259 samples, 0.48%)</title><rect x="62.1276%" y="501" width="0.4784%" height="15" fill="rgb(226,150,43)" fg:x="33634" fg:w="259"/><text x="62.3776%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (259 samples, 0.48%)</title><rect x="62.1276%" y="485" width="0.4784%" height="15" fill="rgb(250,71,37)" fg:x="33634" fg:w="259"/><text x="62.3776%" y="495.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (259 samples, 0.48%)</title><rect x="62.1276%" y="469" width="0.4784%" height="15" fill="rgb(219,76,19)" fg:x="33634" fg:w="259"/><text x="62.3776%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (14 samples, 0.03%)</title><rect x="62.5801%" y="453" width="0.0259%" height="15" fill="rgb(250,39,11)" fg:x="33879" fg:w="14"/><text x="62.8301%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (488 samples, 0.90%)</title><rect x="61.7120%" y="533" width="0.9014%" height="15" fill="rgb(230,64,31)" fg:x="33409" fg:w="488"/><text x="61.9620%" y="543.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (445 samples, 0.82%)</title><rect x="61.7914%" y="517" width="0.8220%" height="15" fill="rgb(208,222,23)" fg:x="33452" fg:w="445"/><text x="62.0414%" y="527.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (6 samples, 0.01%)</title><rect x="63.4612%" y="325" width="0.0111%" height="15" fill="rgb(227,125,18)" fg:x="34356" fg:w="6"/><text x="63.7112%" y="335.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (6 samples, 0.01%)</title><rect x="63.4612%" y="309" width="0.0111%" height="15" fill="rgb(234,210,9)" fg:x="34356" fg:w="6"/><text x="63.7112%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (6 samples, 0.01%)</title><rect x="63.4612%" y="293" width="0.0111%" height="15" fill="rgb(217,127,24)" fg:x="34356" fg:w="6"/><text x="63.7112%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (49 samples, 0.09%)</title><rect x="63.4723%" y="325" width="0.0905%" height="15" fill="rgb(239,141,48)" fg:x="34362" fg:w="49"/><text x="63.7223%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.09%)</title><rect x="63.4723%" y="309" width="0.0905%" height="15" fill="rgb(227,109,8)" fg:x="34362" fg:w="49"/><text x="63.7223%" y="319.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (97 samples, 0.18%)</title><rect x="63.3873%" y="357" width="0.1792%" height="15" fill="rgb(235,184,23)" fg:x="34316" fg:w="97"/><text x="63.6373%" y="367.50"></text></g><g><title>yakvdb::disk::block::get_u32 (57 samples, 0.11%)</title><rect x="63.4612%" y="341" width="0.1053%" height="15" fill="rgb(227,226,48)" fg:x="34356" fg:w="57"/><text x="63.7112%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (46 samples, 0.08%)</title><rect x="63.6330%" y="341" width="0.0850%" height="15" fill="rgb(206,150,11)" fg:x="34449" fg:w="46"/><text x="63.8830%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (46 samples, 0.08%)</title><rect x="63.6330%" y="325" width="0.0850%" height="15" fill="rgb(254,2,33)" fg:x="34449" fg:w="46"/><text x="63.8830%" y="335.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (46 samples, 0.08%)</title><rect x="63.6330%" y="309" width="0.0850%" height="15" fill="rgb(243,160,20)" fg:x="34449" fg:w="46"/><text x="63.8830%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (8 samples, 0.01%)</title><rect x="63.7180%" y="341" width="0.0148%" height="15" fill="rgb(218,208,30)" fg:x="34495" fg:w="8"/><text x="63.9680%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="63.7180%" y="325" width="0.0148%" height="15" fill="rgb(224,120,49)" fg:x="34495" fg:w="8"/><text x="63.9680%" y="335.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (652 samples, 1.20%)</title><rect x="62.6725%" y="405" width="1.2044%" height="15" fill="rgb(246,12,2)" fg:x="33929" fg:w="652"/><text x="62.9225%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (464 samples, 0.86%)</title><rect x="63.0197%" y="389" width="0.8571%" height="15" fill="rgb(236,117,3)" fg:x="34117" fg:w="464"/><text x="63.2697%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (463 samples, 0.86%)</title><rect x="63.0216%" y="373" width="0.8552%" height="15" fill="rgb(216,128,52)" fg:x="34118" fg:w="463"/><text x="63.2716%" y="383.50"></text></g><g><title>yakvdb::disk::block::get_u32 (168 samples, 0.31%)</title><rect x="63.5665%" y="357" width="0.3103%" height="15" fill="rgb(246,145,19)" fg:x="34413" fg:w="168"/><text x="63.8165%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (78 samples, 0.14%)</title><rect x="63.7328%" y="341" width="0.1441%" height="15" fill="rgb(222,11,46)" fg:x="34503" fg:w="78"/><text x="63.9828%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (78 samples, 0.14%)</title><rect x="63.7328%" y="325" width="0.1441%" height="15" fill="rgb(245,82,36)" fg:x="34503" fg:w="78"/><text x="63.9828%" y="335.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (33 samples, 0.06%)</title><rect x="63.8768%" y="373" width="0.0610%" height="15" fill="rgb(250,73,51)" fg:x="34581" fg:w="33"/><text x="64.1268%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (33 samples, 0.06%)</title><rect x="63.8768%" y="357" width="0.0610%" height="15" fill="rgb(221,189,23)" fg:x="34581" fg:w="33"/><text x="64.1268%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (686 samples, 1.27%)</title><rect x="62.6725%" y="453" width="1.2672%" height="15" fill="rgb(210,33,7)" fg:x="33929" fg:w="686"/><text x="62.9225%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (686 samples, 1.27%)</title><rect x="62.6725%" y="437" width="1.2672%" height="15" fill="rgb(210,107,22)" fg:x="33929" fg:w="686"/><text x="62.9225%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (686 samples, 1.27%)</title><rect x="62.6725%" y="421" width="1.2672%" height="15" fill="rgb(222,116,37)" fg:x="33929" fg:w="686"/><text x="62.9225%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (34 samples, 0.06%)</title><rect x="63.8768%" y="405" width="0.0628%" height="15" fill="rgb(254,17,48)" fg:x="34581" fg:w="34"/><text x="64.1268%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (34 samples, 0.06%)</title><rect x="63.8768%" y="389" width="0.0628%" height="15" fill="rgb(224,36,32)" fg:x="34581" fg:w="34"/><text x="64.1268%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::full (730 samples, 1.35%)</title><rect x="62.6134%" y="533" width="1.3484%" height="15" fill="rgb(232,90,46)" fg:x="33897" fg:w="730"/><text x="62.8634%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (712 samples, 1.32%)</title><rect x="62.6466%" y="517" width="1.3152%" height="15" fill="rgb(241,66,40)" fg:x="33915" fg:w="712"/><text x="62.8966%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (698 samples, 1.29%)</title><rect x="62.6725%" y="501" width="1.2893%" height="15" fill="rgb(249,184,29)" fg:x="33929" fg:w="698"/><text x="62.9225%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (698 samples, 1.29%)</title><rect x="62.6725%" y="485" width="1.2893%" height="15" fill="rgb(231,181,1)" fg:x="33929" fg:w="698"/><text x="62.9225%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (698 samples, 1.29%)</title><rect x="62.6725%" y="469" width="1.2893%" height="15" fill="rgb(224,94,2)" fg:x="33929" fg:w="698"/><text x="62.9225%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="63.9396%" y="453" width="0.0222%" height="15" fill="rgb(229,170,15)" fg:x="34615" fg:w="12"/><text x="64.1896%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="63.9396%" y="437" width="0.0222%" height="15" fill="rgb(240,127,35)" fg:x="34615" fg:w="12"/><text x="64.1896%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (12 samples, 0.02%)</title><rect x="63.9396%" y="421" width="0.0222%" height="15" fill="rgb(248,196,34)" fg:x="34615" fg:w="12"/><text x="64.1896%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.02%)</title><rect x="63.9396%" y="405" width="0.0222%" height="15" fill="rgb(236,137,7)" fg:x="34615" fg:w="12"/><text x="64.1896%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (12 samples, 0.02%)</title><rect x="63.9396%" y="389" width="0.0222%" height="15" fill="rgb(235,127,16)" fg:x="34615" fg:w="12"/><text x="64.1896%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.02%)</title><rect x="63.9452%" y="373" width="0.0166%" height="15" fill="rgb(250,192,54)" fg:x="34618" fg:w="9"/><text x="64.1952%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (9 samples, 0.02%)</title><rect x="63.9452%" y="357" width="0.0166%" height="15" fill="rgb(218,98,20)" fg:x="34618" fg:w="9"/><text x="64.1952%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (9 samples, 0.02%)</title><rect x="63.9452%" y="341" width="0.0166%" height="15" fill="rgb(230,176,47)" fg:x="34618" fg:w="9"/><text x="64.1952%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (8 samples, 0.01%)</title><rect x="63.9692%" y="517" width="0.0148%" height="15" fill="rgb(244,2,33)" fg:x="34631" fg:w="8"/><text x="64.2192%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (13 samples, 0.02%)</title><rect x="63.9655%" y="533" width="0.0240%" height="15" fill="rgb(231,100,17)" fg:x="34629" fg:w="13"/><text x="64.2155%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::max (14 samples, 0.03%)</title><rect x="63.9914%" y="533" width="0.0259%" height="15" fill="rgb(245,23,12)" fg:x="34643" fg:w="14"/><text x="64.2414%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (12 samples, 0.02%)</title><rect x="63.9950%" y="517" width="0.0222%" height="15" fill="rgb(249,55,22)" fg:x="34645" fg:w="12"/><text x="64.2450%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (11 samples, 0.02%)</title><rect x="63.9969%" y="501" width="0.0203%" height="15" fill="rgb(207,134,9)" fg:x="34646" fg:w="11"/><text x="64.2469%" y="511.50"></text></g><g><title>yakvdb::disk::block::get_u32 (7 samples, 0.01%)</title><rect x="64.0043%" y="485" width="0.0129%" height="15" fill="rgb(218,134,0)" fg:x="34650" fg:w="7"/><text x="64.2543%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (13 samples, 0.02%)</title><rect x="64.0191%" y="501" width="0.0240%" height="15" fill="rgb(213,212,33)" fg:x="34658" fg:w="13"/><text x="64.2691%" y="511.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (13 samples, 0.02%)</title><rect x="64.0191%" y="485" width="0.0240%" height="15" fill="rgb(252,106,18)" fg:x="34658" fg:w="13"/><text x="64.2691%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (6 samples, 0.01%)</title><rect x="64.0320%" y="469" width="0.0111%" height="15" fill="rgb(208,126,42)" fg:x="34665" fg:w="6"/><text x="64.2820%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (6 samples, 0.01%)</title><rect x="64.0320%" y="453" width="0.0111%" height="15" fill="rgb(246,175,29)" fg:x="34665" fg:w="6"/><text x="64.2820%" y="463.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (6 samples, 0.01%)</title><rect x="64.0320%" y="437" width="0.0111%" height="15" fill="rgb(215,13,50)" fg:x="34665" fg:w="6"/><text x="64.2820%" y="447.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (8 samples, 0.01%)</title><rect x="64.0431%" y="373" width="0.0148%" height="15" fill="rgb(216,172,15)" fg:x="34671" fg:w="8"/><text x="64.2931%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.02%)</title><rect x="64.0431%" y="421" width="0.0166%" height="15" fill="rgb(212,103,13)" fg:x="34671" fg:w="9"/><text x="64.2931%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.02%)</title><rect x="64.0431%" y="405" width="0.0166%" height="15" fill="rgb(231,171,36)" fg:x="34671" fg:w="9"/><text x="64.2931%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.02%)</title><rect x="64.0431%" y="389" width="0.0166%" height="15" fill="rgb(250,123,20)" fg:x="34671" fg:w="9"/><text x="64.2931%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::fits (10 samples, 0.02%)</title><rect x="64.0431%" y="501" width="0.0185%" height="15" fill="rgb(212,53,50)" fg:x="34671" fg:w="10"/><text x="64.2931%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (10 samples, 0.02%)</title><rect x="64.0431%" y="485" width="0.0185%" height="15" fill="rgb(243,54,12)" fg:x="34671" fg:w="10"/><text x="64.2931%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (10 samples, 0.02%)</title><rect x="64.0431%" y="469" width="0.0185%" height="15" fill="rgb(234,101,34)" fg:x="34671" fg:w="10"/><text x="64.2931%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (10 samples, 0.02%)</title><rect x="64.0431%" y="453" width="0.0185%" height="15" fill="rgb(254,67,22)" fg:x="34671" fg:w="10"/><text x="64.2931%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (10 samples, 0.02%)</title><rect x="64.0431%" y="437" width="0.0185%" height="15" fill="rgb(250,35,47)" fg:x="34671" fg:w="10"/><text x="64.2931%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.05%)</title><rect x="64.0634%" y="405" width="0.0480%" height="15" fill="rgb(226,126,38)" fg:x="34682" fg:w="26"/><text x="64.3134%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (26 samples, 0.05%)</title><rect x="64.0634%" y="389" width="0.0480%" height="15" fill="rgb(216,138,53)" fg:x="34682" fg:w="26"/><text x="64.3134%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.05%)</title><rect x="64.0634%" y="373" width="0.0480%" height="15" fill="rgb(246,199,43)" fg:x="34682" fg:w="26"/><text x="64.3134%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (26 samples, 0.05%)</title><rect x="64.0634%" y="357" width="0.0480%" height="15" fill="rgb(232,125,11)" fg:x="34682" fg:w="26"/><text x="64.3134%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.02%)</title><rect x="64.0929%" y="341" width="0.0185%" height="15" fill="rgb(218,219,45)" fg:x="34698" fg:w="10"/><text x="64.3429%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (10 samples, 0.02%)</title><rect x="64.0929%" y="325" width="0.0185%" height="15" fill="rgb(216,102,54)" fg:x="34698" fg:w="10"/><text x="64.3429%" y="335.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (8 samples, 0.01%)</title><rect x="64.0966%" y="309" width="0.0148%" height="15" fill="rgb(250,228,7)" fg:x="34700" fg:w="8"/><text x="64.3466%" y="319.50"></text></g><g><title>__GI___libc_realloc (32 samples, 0.06%)</title><rect x="64.1170%" y="277" width="0.0591%" height="15" fill="rgb(226,125,25)" fg:x="34711" fg:w="32"/><text x="64.3670%" y="287.50"></text></g><g><title>_int_realloc (31 samples, 0.06%)</title><rect x="64.1188%" y="261" width="0.0573%" height="15" fill="rgb(224,165,27)" fg:x="34712" fg:w="31"/><text x="64.3688%" y="271.50"></text></g><g><title>_int_malloc (26 samples, 0.05%)</title><rect x="64.1280%" y="245" width="0.0480%" height="15" fill="rgb(233,86,3)" fg:x="34717" fg:w="26"/><text x="64.3780%" y="255.50"></text></g><g><title>malloc_consolidate (16 samples, 0.03%)</title><rect x="64.1465%" y="229" width="0.0296%" height="15" fill="rgb(228,116,20)" fg:x="34727" fg:w="16"/><text x="64.3965%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (34 samples, 0.06%)</title><rect x="64.1151%" y="341" width="0.0628%" height="15" fill="rgb(209,192,17)" fg:x="34710" fg:w="34"/><text x="64.3651%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (34 samples, 0.06%)</title><rect x="64.1151%" y="325" width="0.0628%" height="15" fill="rgb(224,88,34)" fg:x="34710" fg:w="34"/><text x="64.3651%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (34 samples, 0.06%)</title><rect x="64.1151%" y="309" width="0.0628%" height="15" fill="rgb(233,38,6)" fg:x="34710" fg:w="34"/><text x="64.3651%" y="319.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.06%)</title><rect x="64.1151%" y="293" width="0.0628%" height="15" fill="rgb(212,59,30)" fg:x="34710" fg:w="34"/><text x="64.3651%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (37 samples, 0.07%)</title><rect x="64.1114%" y="405" width="0.0683%" height="15" fill="rgb(213,80,3)" fg:x="34708" fg:w="37"/><text x="64.3614%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (37 samples, 0.07%)</title><rect x="64.1114%" y="389" width="0.0683%" height="15" fill="rgb(251,178,7)" fg:x="34708" fg:w="37"/><text x="64.3614%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.07%)</title><rect x="64.1114%" y="373" width="0.0683%" height="15" fill="rgb(213,154,26)" fg:x="34708" fg:w="37"/><text x="64.3614%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (37 samples, 0.07%)</title><rect x="64.1114%" y="357" width="0.0683%" height="15" fill="rgb(238,165,49)" fg:x="34708" fg:w="37"/><text x="64.3614%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (67 samples, 0.12%)</title><rect x="64.0615%" y="437" width="0.1238%" height="15" fill="rgb(248,91,46)" fg:x="34681" fg:w="67"/><text x="64.3115%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (67 samples, 0.12%)</title><rect x="64.0615%" y="421" width="0.1238%" height="15" fill="rgb(244,21,52)" fg:x="34681" fg:w="67"/><text x="64.3115%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (68 samples, 0.13%)</title><rect x="64.0615%" y="501" width="0.1256%" height="15" fill="rgb(247,122,20)" fg:x="34681" fg:w="68"/><text x="64.3115%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (68 samples, 0.13%)</title><rect x="64.0615%" y="485" width="0.1256%" height="15" fill="rgb(218,27,9)" fg:x="34681" fg:w="68"/><text x="64.3115%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (68 samples, 0.13%)</title><rect x="64.0615%" y="469" width="0.1256%" height="15" fill="rgb(246,7,6)" fg:x="34681" fg:w="68"/><text x="64.3115%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (68 samples, 0.13%)</title><rect x="64.0615%" y="453" width="0.1256%" height="15" fill="rgb(227,135,54)" fg:x="34681" fg:w="68"/><text x="64.3115%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (10 samples, 0.02%)</title><rect x="64.1872%" y="453" width="0.0185%" height="15" fill="rgb(247,14,11)" fg:x="34749" fg:w="10"/><text x="64.4372%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (10 samples, 0.02%)</title><rect x="64.1872%" y="437" width="0.0185%" height="15" fill="rgb(206,149,34)" fg:x="34749" fg:w="10"/><text x="64.4372%" y="447.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (10 samples, 0.02%)</title><rect x="64.1872%" y="421" width="0.0185%" height="15" fill="rgb(227,228,4)" fg:x="34749" fg:w="10"/><text x="64.4372%" y="431.50"></text></g><g><title>yakvdb::disk::block::put_slot (8 samples, 0.01%)</title><rect x="64.1908%" y="405" width="0.0148%" height="15" fill="rgb(238,218,28)" fg:x="34751" fg:w="8"/><text x="64.4408%" y="415.50"></text></g><g><title>yakvdb::disk::block::put_u32 (8 samples, 0.01%)</title><rect x="64.1908%" y="389" width="0.0148%" height="15" fill="rgb(252,86,40)" fg:x="34751" fg:w="8"/><text x="64.4408%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.02%)</title><rect x="64.1872%" y="501" width="0.0222%" height="15" fill="rgb(251,225,11)" fg:x="34749" fg:w="12"/><text x="64.4372%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.02%)</title><rect x="64.1872%" y="485" width="0.0222%" height="15" fill="rgb(206,46,49)" fg:x="34749" fg:w="12"/><text x="64.4372%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.02%)</title><rect x="64.1872%" y="469" width="0.0222%" height="15" fill="rgb(245,128,24)" fg:x="34749" fg:w="12"/><text x="64.4372%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::put_ref (105 samples, 0.19%)</title><rect x="64.0172%" y="533" width="0.1940%" height="15" fill="rgb(219,177,34)" fg:x="34657" fg:w="105"/><text x="64.2672%" y="543.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry (105 samples, 0.19%)</title><rect x="64.0172%" y="517" width="0.1940%" height="15" fill="rgb(218,60,48)" fg:x="34657" fg:w="105"/><text x="64.2672%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::cap (10 samples, 0.02%)</title><rect x="64.4070%" y="517" width="0.0185%" height="15" fill="rgb(221,11,5)" fg:x="34868" fg:w="10"/><text x="64.6570%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.01%)</title><rect x="64.4328%" y="517" width="0.0111%" height="15" fill="rgb(220,148,13)" fg:x="34882" fg:w="6"/><text x="64.6828%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (16 samples, 0.03%)</title><rect x="64.4439%" y="517" width="0.0296%" height="15" fill="rgb(210,16,3)" fg:x="34888" fg:w="16"/><text x="64.6939%" y="527.50"></text></g><g><title>core::intrinsics::copy (15 samples, 0.03%)</title><rect x="64.4458%" y="501" width="0.0277%" height="15" fill="rgb(236,80,2)" fg:x="34889" fg:w="15"/><text x="64.6958%" y="511.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (14 samples, 0.03%)</title><rect x="64.4476%" y="485" width="0.0259%" height="15" fill="rgb(239,129,19)" fg:x="34890" fg:w="14"/><text x="64.6976%" y="495.50"></text></g><g><title>alloc::vec::from_elem (40 samples, 0.07%)</title><rect x="64.4735%" y="517" width="0.0739%" height="15" fill="rgb(220,106,35)" fg:x="34904" fg:w="40"/><text x="64.7235%" y="527.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (40 samples, 0.07%)</title><rect x="64.4735%" y="501" width="0.0739%" height="15" fill="rgb(252,139,45)" fg:x="34904" fg:w="40"/><text x="64.7235%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (35 samples, 0.06%)</title><rect x="64.4827%" y="485" width="0.0647%" height="15" fill="rgb(229,8,36)" fg:x="34909" fg:w="35"/><text x="64.7327%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 0.06%)</title><rect x="64.4827%" y="469" width="0.0647%" height="15" fill="rgb(230,126,33)" fg:x="34909" fg:w="35"/><text x="64.7327%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (35 samples, 0.06%)</title><rect x="64.4827%" y="453" width="0.0647%" height="15" fill="rgb(239,140,21)" fg:x="34909" fg:w="35"/><text x="64.7327%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.06%)</title><rect x="64.4827%" y="437" width="0.0647%" height="15" fill="rgb(254,104,9)" fg:x="34909" fg:w="35"/><text x="64.7327%" y="447.50"></text></g><g><title>alloc::alloc::alloc_zeroed (31 samples, 0.06%)</title><rect x="64.4901%" y="421" width="0.0573%" height="15" fill="rgb(239,52,14)" fg:x="34913" fg:w="31"/><text x="64.7401%" y="431.50"></text></g><g><title>__calloc (31 samples, 0.06%)</title><rect x="64.4901%" y="405" width="0.0573%" height="15" fill="rgb(208,227,44)" fg:x="34913" fg:w="31"/><text x="64.7401%" y="415.50"></text></g><g><title>_int_malloc (18 samples, 0.03%)</title><rect x="64.5141%" y="389" width="0.0332%" height="15" fill="rgb(246,18,19)" fg:x="34926" fg:w="18"/><text x="64.7641%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.01%)</title><rect x="64.5658%" y="373" width="0.0111%" height="15" fill="rgb(235,228,25)" fg:x="34954" fg:w="6"/><text x="64.8158%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.01%)</title><rect x="64.5658%" y="357" width="0.0111%" height="15" fill="rgb(240,156,20)" fg:x="34954" fg:w="6"/><text x="64.8158%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (6 samples, 0.01%)</title><rect x="64.5658%" y="341" width="0.0111%" height="15" fill="rgb(224,8,20)" fg:x="34954" fg:w="6"/><text x="64.8158%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (17 samples, 0.03%)</title><rect x="65.4229%" y="309" width="0.0314%" height="15" fill="rgb(214,12,52)" fg:x="35418" fg:w="17"/><text x="65.6729%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (13 samples, 0.02%)</title><rect x="65.4949%" y="293" width="0.0240%" height="15" fill="rgb(211,220,47)" fg:x="35457" fg:w="13"/><text x="65.7449%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="65.4949%" y="277" width="0.0240%" height="15" fill="rgb(250,173,5)" fg:x="35457" fg:w="13"/><text x="65.7449%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (546 samples, 1.01%)</title><rect x="64.5658%" y="421" width="1.0086%" height="15" fill="rgb(250,125,52)" fg:x="34954" fg:w="546"/><text x="64.8158%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (546 samples, 1.01%)</title><rect x="64.5658%" y="405" width="1.0086%" height="15" fill="rgb(209,133,18)" fg:x="34954" fg:w="546"/><text x="64.8158%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (546 samples, 1.01%)</title><rect x="64.5658%" y="389" width="1.0086%" height="15" fill="rgb(216,173,22)" fg:x="34954" fg:w="546"/><text x="64.8158%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (540 samples, 1.00%)</title><rect x="64.5769%" y="373" width="0.9975%" height="15" fill="rgb(205,3,22)" fg:x="34960" fg:w="540"/><text x="64.8269%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (174 samples, 0.32%)</title><rect x="65.2530%" y="357" width="0.3214%" height="15" fill="rgb(248,22,20)" fg:x="35326" fg:w="174"/><text x="65.5030%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (174 samples, 0.32%)</title><rect x="65.2530%" y="341" width="0.3214%" height="15" fill="rgb(233,6,29)" fg:x="35326" fg:w="174"/><text x="65.5030%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (159 samples, 0.29%)</title><rect x="65.2807%" y="325" width="0.2937%" height="15" fill="rgb(240,22,54)" fg:x="35341" fg:w="159"/><text x="65.5307%" y="335.50"></text></g><g><title>yakvdb::disk::block::get_u32 (65 samples, 0.12%)</title><rect x="65.4543%" y="309" width="0.1201%" height="15" fill="rgb(231,133,32)" fg:x="35435" fg:w="65"/><text x="65.7043%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (30 samples, 0.06%)</title><rect x="65.5190%" y="293" width="0.0554%" height="15" fill="rgb(248,193,4)" fg:x="35470" fg:w="30"/><text x="65.7690%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (30 samples, 0.06%)</title><rect x="65.5190%" y="277" width="0.0554%" height="15" fill="rgb(211,178,46)" fg:x="35470" fg:w="30"/><text x="65.7690%" y="287.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.01%)</title><rect x="65.6686%" y="261" width="0.0148%" height="15" fill="rgb(224,5,42)" fg:x="35551" fg:w="8"/><text x="65.9186%" y="271.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (24 samples, 0.04%)</title><rect x="65.6834%" y="261" width="0.0443%" height="15" fill="rgb(239,176,25)" fg:x="35559" fg:w="24"/><text x="65.9334%" y="271.50"></text></g><g><title>_int_free (44 samples, 0.08%)</title><rect x="65.7277%" y="261" width="0.0813%" height="15" fill="rgb(245,187,50)" fg:x="35583" fg:w="44"/><text x="65.9777%" y="271.50"></text></g><g><title>malloc_consolidate (18 samples, 0.03%)</title><rect x="65.9881%" y="245" width="0.0332%" height="15" fill="rgb(248,24,15)" fg:x="35724" fg:w="18"/><text x="66.2381%" y="255.50"></text></g><g><title>_int_malloc (132 samples, 0.24%)</title><rect x="65.8090%" y="261" width="0.2438%" height="15" fill="rgb(205,166,13)" fg:x="35627" fg:w="132"/><text x="66.0590%" y="271.50"></text></g><g><title>unlink_chunk.isra.0 (17 samples, 0.03%)</title><rect x="66.0214%" y="245" width="0.0314%" height="15" fill="rgb(208,114,23)" fg:x="35742" fg:w="17"/><text x="66.2714%" y="255.50"></text></g><g><title>__GI___libc_realloc (245 samples, 0.45%)</title><rect x="65.6021%" y="293" width="0.4526%" height="15" fill="rgb(239,127,18)" fg:x="35515" fg:w="245"/><text x="65.8521%" y="303.50"></text></g><g><title>_int_realloc (223 samples, 0.41%)</title><rect x="65.6427%" y="277" width="0.4119%" height="15" fill="rgb(219,154,28)" fg:x="35537" fg:w="223"/><text x="65.8927%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (250 samples, 0.46%)</title><rect x="65.5984%" y="341" width="0.4618%" height="15" fill="rgb(225,157,23)" fg:x="35513" fg:w="250"/><text x="65.8484%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (250 samples, 0.46%)</title><rect x="65.5984%" y="325" width="0.4618%" height="15" fill="rgb(219,8,6)" fg:x="35513" fg:w="250"/><text x="65.8484%" y="335.50"></text></g><g><title>alloc::alloc::realloc (250 samples, 0.46%)</title><rect x="65.5984%" y="309" width="0.4618%" height="15" fill="rgb(212,47,6)" fg:x="35513" fg:w="250"/><text x="65.8484%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (264 samples, 0.49%)</title><rect x="65.5873%" y="357" width="0.4877%" height="15" fill="rgb(224,190,4)" fg:x="35507" fg:w="264"/><text x="65.8373%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.01%)</title><rect x="66.0602%" y="341" width="0.0148%" height="15" fill="rgb(239,183,29)" fg:x="35763" fg:w="8"/><text x="66.3102%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (274 samples, 0.51%)</title><rect x="65.5744%" y="421" width="0.5061%" height="15" fill="rgb(213,57,7)" fg:x="35500" fg:w="274"/><text x="65.8244%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (274 samples, 0.51%)</title><rect x="65.5744%" y="405" width="0.5061%" height="15" fill="rgb(216,148,1)" fg:x="35500" fg:w="274"/><text x="65.8244%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (274 samples, 0.51%)</title><rect x="65.5744%" y="389" width="0.5061%" height="15" fill="rgb(236,182,29)" fg:x="35500" fg:w="274"/><text x="65.8244%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (274 samples, 0.51%)</title><rect x="65.5744%" y="373" width="0.5061%" height="15" fill="rgb(244,120,48)" fg:x="35500" fg:w="274"/><text x="65.8244%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (929 samples, 1.72%)</title><rect x="64.5474%" y="437" width="1.7160%" height="15" fill="rgb(206,71,34)" fg:x="34944" fg:w="929"/><text x="64.7974%" y="447.50"></text></g><g><title>core::ptr::write (96 samples, 0.18%)</title><rect x="66.0860%" y="421" width="0.1773%" height="15" fill="rgb(242,32,6)" fg:x="35777" fg:w="96"/><text x="66.3360%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.04%)</title><rect x="66.2763%" y="389" width="0.0351%" height="15" fill="rgb(241,35,3)" fg:x="35880" fg:w="19"/><text x="66.5263%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (13 samples, 0.02%)</title><rect x="66.3816%" y="293" width="0.0240%" height="15" fill="rgb(222,62,19)" fg:x="35937" fg:w="13"/><text x="66.6316%" y="303.50"></text></g><g><title>__GI___libc_malloc (1,882 samples, 3.48%)</title><rect x="66.4961%" y="197" width="3.4764%" height="15" fill="rgb(223,110,41)" fg:x="35999" fg:w="1882"/><text x="66.7461%" y="207.50">__G..</text></g><g><title>_int_malloc (1,464 samples, 2.70%)</title><rect x="67.2682%" y="181" width="2.7043%" height="15" fill="rgb(208,224,4)" fg:x="36417" fg:w="1464"/><text x="67.5182%" y="191.50">_i..</text></g><g><title>unlink_chunk.isra.0 (104 samples, 0.19%)</title><rect x="69.7804%" y="165" width="0.1921%" height="15" fill="rgb(241,137,19)" fg:x="37777" fg:w="104"/><text x="70.0304%" y="175.50"></text></g><g><title>__rdl_alloc (33 samples, 0.06%)</title><rect x="69.9725%" y="197" width="0.0610%" height="15" fill="rgb(244,24,17)" fg:x="37881" fg:w="33"/><text x="70.2225%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (33 samples, 0.06%)</title><rect x="69.9725%" y="181" width="0.0610%" height="15" fill="rgb(245,178,49)" fg:x="37881" fg:w="33"/><text x="70.2225%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,985 samples, 3.67%)</title><rect x="66.4056%" y="293" width="3.6666%" height="15" fill="rgb(219,160,38)" fg:x="35950" fg:w="1985"/><text x="66.6556%" y="303.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,975 samples, 3.65%)</title><rect x="66.4241%" y="277" width="3.6482%" height="15" fill="rgb(228,137,14)" fg:x="35960" fg:w="1975"/><text x="66.6741%" y="287.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,975 samples, 3.65%)</title><rect x="66.4241%" y="261" width="3.6482%" height="15" fill="rgb(237,134,11)" fg:x="35960" fg:w="1975"/><text x="66.6741%" y="271.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,974 samples, 3.65%)</title><rect x="66.4259%" y="245" width="3.6463%" height="15" fill="rgb(211,126,44)" fg:x="35961" fg:w="1974"/><text x="66.6759%" y="255.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,974 samples, 3.65%)</title><rect x="66.4259%" y="229" width="3.6463%" height="15" fill="rgb(226,171,33)" fg:x="35961" fg:w="1974"/><text x="66.6759%" y="239.50">allo..</text></g><g><title>alloc::alloc::alloc (1,956 samples, 3.61%)</title><rect x="66.4592%" y="213" width="3.6131%" height="15" fill="rgb(253,99,13)" fg:x="35979" fg:w="1956"/><text x="66.7092%" y="223.50">allo..</text></g><g><title>__rust_alloc (21 samples, 0.04%)</title><rect x="70.0334%" y="197" width="0.0388%" height="15" fill="rgb(244,48,7)" fg:x="37914" fg:w="21"/><text x="70.2834%" y="207.50"></text></g><g><title>__memcpy_sse2_unaligned (33 samples, 0.06%)</title><rect x="70.0925%" y="261" width="0.0610%" height="15" fill="rgb(244,217,54)" fg:x="37946" fg:w="33"/><text x="70.3425%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,119 samples, 3.91%)</title><rect x="66.3816%" y="357" width="3.9141%" height="15" fill="rgb(224,15,18)" fg:x="35937" fg:w="2119"/><text x="66.6316%" y="367.50">allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,119 samples, 3.91%)</title><rect x="66.3816%" y="341" width="3.9141%" height="15" fill="rgb(244,99,12)" fg:x="35937" fg:w="2119"/><text x="66.6316%" y="351.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (2,119 samples, 3.91%)</title><rect x="66.3816%" y="325" width="3.9141%" height="15" fill="rgb(233,226,8)" fg:x="35937" fg:w="2119"/><text x="66.6316%" y="335.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,119 samples, 3.91%)</title><rect x="66.3816%" y="309" width="3.9141%" height="15" fill="rgb(229,211,3)" fg:x="35937" fg:w="2119"/><text x="66.6316%" y="319.50">&lt;T a..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (121 samples, 0.22%)</title><rect x="70.0722%" y="293" width="0.2235%" height="15" fill="rgb(216,140,21)" fg:x="37935" fg:w="121"/><text x="70.3222%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (121 samples, 0.22%)</title><rect x="70.0722%" y="277" width="0.2235%" height="15" fill="rgb(234,122,30)" fg:x="37935" fg:w="121"/><text x="70.3222%" y="287.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (77 samples, 0.14%)</title><rect x="70.1535%" y="261" width="0.1422%" height="15" fill="rgb(236,25,46)" fg:x="37979" fg:w="77"/><text x="70.4035%" y="271.50"></text></g><g><title>yakvdb::disk::block::get_key (53 samples, 0.10%)</title><rect x="70.2957%" y="357" width="0.0979%" height="15" fill="rgb(217,52,54)" fg:x="38056" fg:w="53"/><text x="70.5457%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (24 samples, 0.04%)</title><rect x="70.3493%" y="341" width="0.0443%" height="15" fill="rgb(222,29,26)" fg:x="38085" fg:w="24"/><text x="70.5993%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (24 samples, 0.04%)</title><rect x="70.3493%" y="325" width="0.0443%" height="15" fill="rgb(216,177,29)" fg:x="38085" fg:w="24"/><text x="70.5993%" y="335.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (2,263 samples, 4.18%)</title><rect x="66.3114%" y="373" width="4.1801%" height="15" fill="rgb(247,136,51)" fg:x="35899" fg:w="2263"/><text x="66.5614%" y="383.50">&lt;yakv..</text></g><g><title>yakvdb::disk::block::get_val (53 samples, 0.10%)</title><rect x="70.3936%" y="357" width="0.0979%" height="15" fill="rgb(231,47,47)" fg:x="38109" fg:w="53"/><text x="70.6436%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (24 samples, 0.04%)</title><rect x="70.4472%" y="341" width="0.0443%" height="15" fill="rgb(211,192,36)" fg:x="38138" fg:w="24"/><text x="70.6972%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (24 samples, 0.04%)</title><rect x="70.4472%" y="325" width="0.0443%" height="15" fill="rgb(229,156,32)" fg:x="38138" fg:w="24"/><text x="70.6972%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2,314 samples, 4.27%)</title><rect x="66.3114%" y="389" width="4.2743%" height="15" fill="rgb(248,213,20)" fg:x="35899" fg:w="2314"/><text x="66.5614%" y="399.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (51 samples, 0.09%)</title><rect x="70.4915%" y="373" width="0.0942%" height="15" fill="rgb(217,64,7)" fg:x="38162" fg:w="51"/><text x="70.7415%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (51 samples, 0.09%)</title><rect x="70.4915%" y="357" width="0.0942%" height="15" fill="rgb(232,142,8)" fg:x="38162" fg:w="51"/><text x="70.7415%" y="367.50"></text></g><g><title>core::ptr::write (51 samples, 0.09%)</title><rect x="70.4915%" y="341" width="0.0942%" height="15" fill="rgb(224,92,44)" fg:x="38162" fg:w="51"/><text x="70.7415%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,270 samples, 6.04%)</title><rect x="64.5474%" y="453" width="6.0402%" height="15" fill="rgb(214,169,17)" fg:x="34944" fg:w="3270"/><text x="64.7974%" y="463.50">&lt;alloc::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,341 samples, 4.32%)</title><rect x="66.2634%" y="437" width="4.3242%" height="15" fill="rgb(210,59,37)" fg:x="35873" fg:w="2341"/><text x="66.5134%" y="447.50">core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,340 samples, 4.32%)</title><rect x="66.2652%" y="421" width="4.3224%" height="15" fill="rgb(214,116,48)" fg:x="35874" fg:w="2340"/><text x="66.5152%" y="431.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,338 samples, 4.32%)</title><rect x="66.2689%" y="405" width="4.3187%" height="15" fill="rgb(244,191,6)" fg:x="35876" fg:w="2338"/><text x="66.5189%" y="415.50">core:..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.04%)</title><rect x="70.5876%" y="453" width="0.0351%" height="15" fill="rgb(241,50,52)" fg:x="38214" fg:w="19"/><text x="70.8376%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (19 samples, 0.04%)</title><rect x="70.5876%" y="437" width="0.0351%" height="15" fill="rgb(236,75,39)" fg:x="38214" fg:w="19"/><text x="70.8376%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 0.04%)</title><rect x="70.5876%" y="421" width="0.0351%" height="15" fill="rgb(236,99,0)" fg:x="38214" fg:w="19"/><text x="70.8376%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (17 samples, 0.03%)</title><rect x="70.5913%" y="405" width="0.0314%" height="15" fill="rgb(207,202,15)" fg:x="38216" fg:w="17"/><text x="70.8413%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.01%)</title><rect x="70.6116%" y="389" width="0.0111%" height="15" fill="rgb(233,207,14)" fg:x="38227" fg:w="6"/><text x="70.8616%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (6 samples, 0.01%)</title><rect x="70.6116%" y="373" width="0.0111%" height="15" fill="rgb(226,27,51)" fg:x="38227" fg:w="6"/><text x="70.8616%" y="383.50"></text></g><g><title>__GI___libc_malloc (68 samples, 0.13%)</title><rect x="70.6282%" y="341" width="0.1256%" height="15" fill="rgb(206,104,42)" fg:x="38236" fg:w="68"/><text x="70.8782%" y="351.50"></text></g><g><title>_int_malloc (50 samples, 0.09%)</title><rect x="70.6615%" y="325" width="0.0924%" height="15" fill="rgb(212,225,4)" fg:x="38254" fg:w="50"/><text x="70.9115%" y="335.50"></text></g><g><title>unlink_chunk.isra.0 (9 samples, 0.02%)</title><rect x="70.7372%" y="309" width="0.0166%" height="15" fill="rgb(233,96,42)" fg:x="38295" fg:w="9"/><text x="70.9872%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (70 samples, 0.13%)</title><rect x="70.6264%" y="389" width="0.1293%" height="15" fill="rgb(229,21,32)" fg:x="38235" fg:w="70"/><text x="70.8764%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (70 samples, 0.13%)</title><rect x="70.6264%" y="373" width="0.1293%" height="15" fill="rgb(226,216,24)" fg:x="38235" fg:w="70"/><text x="70.8764%" y="383.50"></text></g><g><title>alloc::alloc::alloc (69 samples, 0.13%)</title><rect x="70.6282%" y="357" width="0.1275%" height="15" fill="rgb(221,163,17)" fg:x="38236" fg:w="69"/><text x="70.8782%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,363 samples, 6.21%)</title><rect x="64.5474%" y="517" width="6.2120%" height="15" fill="rgb(216,216,42)" fg:x="34944" fg:w="3363"/><text x="64.7974%" y="527.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,363 samples, 6.21%)</title><rect x="64.5474%" y="501" width="6.2120%" height="15" fill="rgb(240,118,7)" fg:x="34944" fg:w="3363"/><text x="64.7974%" y="511.50">&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,363 samples, 6.21%)</title><rect x="64.5474%" y="485" width="6.2120%" height="15" fill="rgb(221,67,37)" fg:x="34944" fg:w="3363"/><text x="64.7974%" y="495.50">&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,363 samples, 6.21%)</title><rect x="64.5474%" y="469" width="6.2120%" height="15" fill="rgb(241,32,44)" fg:x="34944" fg:w="3363"/><text x="64.7974%" y="479.50">&lt;alloc::..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (73 samples, 0.13%)</title><rect x="70.6245%" y="453" width="0.1348%" height="15" fill="rgb(235,204,43)" fg:x="38234" fg:w="73"/><text x="70.8745%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (73 samples, 0.13%)</title><rect x="70.6245%" y="437" width="0.1348%" height="15" fill="rgb(213,116,10)" fg:x="38234" fg:w="73"/><text x="70.8745%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (72 samples, 0.13%)</title><rect x="70.6264%" y="421" width="0.1330%" height="15" fill="rgb(239,15,48)" fg:x="38235" fg:w="72"/><text x="70.8764%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (72 samples, 0.13%)</title><rect x="70.6264%" y="405" width="0.1330%" height="15" fill="rgb(207,123,36)" fg:x="38235" fg:w="72"/><text x="70.8764%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="70.7594%" y="469" width="0.0222%" height="15" fill="rgb(209,103,30)" fg:x="38307" fg:w="12"/><text x="71.0094%" y="479.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (31 samples, 0.06%)</title><rect x="70.8591%" y="389" width="0.0573%" height="15" fill="rgb(238,100,19)" fg:x="38361" fg:w="31"/><text x="71.1091%" y="399.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (31 samples, 0.06%)</title><rect x="70.8591%" y="373" width="0.0573%" height="15" fill="rgb(244,30,14)" fg:x="38361" fg:w="31"/><text x="71.1091%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (31 samples, 0.06%)</title><rect x="70.8591%" y="357" width="0.0573%" height="15" fill="rgb(249,174,6)" fg:x="38361" fg:w="31"/><text x="71.1091%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (40 samples, 0.07%)</title><rect x="70.9164%" y="389" width="0.0739%" height="15" fill="rgb(235,213,41)" fg:x="38392" fg:w="40"/><text x="71.1664%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (40 samples, 0.07%)</title><rect x="70.9164%" y="373" width="0.0739%" height="15" fill="rgb(213,118,6)" fg:x="38392" fg:w="40"/><text x="71.1664%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (142 samples, 0.26%)</title><rect x="70.7815%" y="469" width="0.2623%" height="15" fill="rgb(235,44,51)" fg:x="38319" fg:w="142"/><text x="71.0315%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (142 samples, 0.26%)</title><rect x="70.7815%" y="453" width="0.2623%" height="15" fill="rgb(217,9,53)" fg:x="38319" fg:w="142"/><text x="71.0315%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (142 samples, 0.26%)</title><rect x="70.7815%" y="437" width="0.2623%" height="15" fill="rgb(237,172,34)" fg:x="38319" fg:w="142"/><text x="71.0315%" y="447.50"></text></g><g><title>yakvdb::disk::block::put_slot (120 samples, 0.22%)</title><rect x="70.8222%" y="421" width="0.2217%" height="15" fill="rgb(206,206,11)" fg:x="38341" fg:w="120"/><text x="71.0722%" y="431.50"></text></g><g><title>yakvdb::disk::block::put_u32 (107 samples, 0.20%)</title><rect x="70.8462%" y="405" width="0.1976%" height="15" fill="rgb(214,149,29)" fg:x="38354" fg:w="107"/><text x="71.0962%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (29 samples, 0.05%)</title><rect x="70.9903%" y="389" width="0.0536%" height="15" fill="rgb(208,123,3)" fg:x="38432" fg:w="29"/><text x="71.2403%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (29 samples, 0.05%)</title><rect x="70.9903%" y="373" width="0.0536%" height="15" fill="rgb(229,126,4)" fg:x="38432" fg:w="29"/><text x="71.2403%" y="383.50"></text></g><g><title>__GI___libc_free (6 samples, 0.01%)</title><rect x="71.0438%" y="341" width="0.0111%" height="15" fill="rgb(222,92,36)" fg:x="38461" fg:w="6"/><text x="71.2938%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.05%)</title><rect x="71.0438%" y="373" width="0.0536%" height="15" fill="rgb(216,39,41)" fg:x="38461" fg:w="29"/><text x="71.2938%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.05%)</title><rect x="71.0438%" y="357" width="0.0536%" height="15" fill="rgb(253,127,28)" fg:x="38461" fg:w="29"/><text x="71.2938%" y="367.50"></text></g><g><title>_int_free (20 samples, 0.04%)</title><rect x="71.0605%" y="341" width="0.0369%" height="15" fill="rgb(249,152,51)" fg:x="38470" fg:w="20"/><text x="71.3105%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (185 samples, 0.34%)</title><rect x="70.7594%" y="517" width="0.3417%" height="15" fill="rgb(209,123,42)" fg:x="38307" fg:w="185"/><text x="71.0094%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (185 samples, 0.34%)</title><rect x="70.7594%" y="501" width="0.3417%" height="15" fill="rgb(241,118,22)" fg:x="38307" fg:w="185"/><text x="71.0094%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (185 samples, 0.34%)</title><rect x="70.7594%" y="485" width="0.3417%" height="15" fill="rgb(208,25,7)" fg:x="38307" fg:w="185"/><text x="71.0094%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;yakvdb::api::page::Slot&gt;&gt; (31 samples, 0.06%)</title><rect x="71.0438%" y="469" width="0.0573%" height="15" fill="rgb(243,144,39)" fg:x="38461" fg:w="31"/><text x="71.2938%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.06%)</title><rect x="71.0438%" y="453" width="0.0573%" height="15" fill="rgb(250,50,5)" fg:x="38461" fg:w="31"/><text x="71.2938%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;yakvdb::api::page::Slot,alloc::alloc::Global&gt;&gt; (31 samples, 0.06%)</title><rect x="71.0438%" y="437" width="0.0573%" height="15" fill="rgb(207,67,11)" fg:x="38461" fg:w="31"/><text x="71.2938%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.06%)</title><rect x="71.0438%" y="421" width="0.0573%" height="15" fill="rgb(245,204,40)" fg:x="38461" fg:w="31"/><text x="71.2938%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;yakvdb::api::page::Slot&gt;&gt; (31 samples, 0.06%)</title><rect x="71.0438%" y="405" width="0.0573%" height="15" fill="rgb(238,228,24)" fg:x="38461" fg:w="31"/><text x="71.2938%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.06%)</title><rect x="71.0438%" y="389" width="0.0573%" height="15" fill="rgb(217,116,22)" fg:x="38461" fg:w="31"/><text x="71.2938%" y="399.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (13 samples, 0.02%)</title><rect x="71.1011%" y="437" width="0.0240%" height="15" fill="rgb(234,98,12)" fg:x="38492" fg:w="13"/><text x="71.3511%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (28 samples, 0.05%)</title><rect x="71.1011%" y="517" width="0.0517%" height="15" fill="rgb(242,170,50)" fg:x="38492" fg:w="28"/><text x="71.3511%" y="527.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum (28 samples, 0.05%)</title><rect x="71.1011%" y="501" width="0.0517%" height="15" fill="rgb(235,7,5)" fg:x="38492" fg:w="28"/><text x="71.3511%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.05%)</title><rect x="71.1011%" y="485" width="0.0517%" height="15" fill="rgb(241,114,28)" fg:x="38492" fg:w="28"/><text x="71.3511%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (28 samples, 0.05%)</title><rect x="71.1011%" y="469" width="0.0517%" height="15" fill="rgb(246,112,42)" fg:x="38492" fg:w="28"/><text x="71.3511%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (28 samples, 0.05%)</title><rect x="71.1011%" y="453" width="0.0517%" height="15" fill="rgb(248,228,14)" fg:x="38492" fg:w="28"/><text x="71.3511%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (15 samples, 0.03%)</title><rect x="71.1251%" y="437" width="0.0277%" height="15" fill="rgb(208,133,18)" fg:x="38505" fg:w="15"/><text x="71.3751%" y="447.50"></text></g><g><title>__GI___libc_free (168 samples, 0.31%)</title><rect x="71.2969%" y="373" width="0.3103%" height="15" fill="rgb(207,35,49)" fg:x="38598" fg:w="168"/><text x="71.5469%" y="383.50"></text></g><g><title>__rdl_dealloc (31 samples, 0.06%)</title><rect x="71.6072%" y="373" width="0.0573%" height="15" fill="rgb(205,68,36)" fg:x="38766" fg:w="31"/><text x="71.8572%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (31 samples, 0.06%)</title><rect x="71.6072%" y="357" width="0.0573%" height="15" fill="rgb(245,62,40)" fg:x="38766" fg:w="31"/><text x="71.8572%" y="367.50"></text></g><g><title>__rust_dealloc (25 samples, 0.05%)</title><rect x="71.6645%" y="373" width="0.0462%" height="15" fill="rgb(228,27,24)" fg:x="38797" fg:w="25"/><text x="71.9145%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (802 samples, 1.48%)</title><rect x="71.2526%" y="405" width="1.4814%" height="15" fill="rgb(253,19,12)" fg:x="38574" fg:w="802"/><text x="71.5026%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (802 samples, 1.48%)</title><rect x="71.2526%" y="389" width="1.4814%" height="15" fill="rgb(232,28,20)" fg:x="38574" fg:w="802"/><text x="71.5026%" y="399.50"></text></g><g><title>_int_free (554 samples, 1.02%)</title><rect x="71.7107%" y="373" width="1.0233%" height="15" fill="rgb(218,35,51)" fg:x="38822" fg:w="554"/><text x="71.9607%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (885 samples, 1.63%)</title><rect x="71.1584%" y="501" width="1.6347%" height="15" fill="rgb(212,90,40)" fg:x="38523" fg:w="885"/><text x="71.4084%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (885 samples, 1.63%)</title><rect x="71.1584%" y="485" width="1.6347%" height="15" fill="rgb(220,172,12)" fg:x="38523" fg:w="885"/><text x="71.4084%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (883 samples, 1.63%)</title><rect x="71.1621%" y="469" width="1.6310%" height="15" fill="rgb(226,159,20)" fg:x="38525" fg:w="883"/><text x="71.4121%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (883 samples, 1.63%)</title><rect x="71.1621%" y="453" width="1.6310%" height="15" fill="rgb(234,205,16)" fg:x="38525" fg:w="883"/><text x="71.4121%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (883 samples, 1.63%)</title><rect x="71.1621%" y="437" width="1.6310%" height="15" fill="rgb(207,9,39)" fg:x="38525" fg:w="883"/><text x="71.4121%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (883 samples, 1.63%)</title><rect x="71.1621%" y="421" width="1.6310%" height="15" fill="rgb(249,143,15)" fg:x="38525" fg:w="883"/><text x="71.4121%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (32 samples, 0.06%)</title><rect x="72.7340%" y="405" width="0.0591%" height="15" fill="rgb(253,133,29)" fg:x="39376" fg:w="32"/><text x="72.9840%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.04%)</title><rect x="72.8005%" y="469" width="0.0369%" height="15" fill="rgb(221,187,0)" fg:x="39412" fg:w="20"/><text x="73.0505%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.04%)</title><rect x="72.8005%" y="453" width="0.0369%" height="15" fill="rgb(205,204,26)" fg:x="39412" fg:w="20"/><text x="73.0505%" y="463.50"></text></g><g><title>_int_free (17 samples, 0.03%)</title><rect x="72.8060%" y="437" width="0.0314%" height="15" fill="rgb(224,68,54)" fg:x="39415" fg:w="17"/><text x="73.0560%" y="447.50"></text></g><g><title>unlink_chunk.isra.0 (10 samples, 0.02%)</title><rect x="72.8190%" y="421" width="0.0185%" height="15" fill="rgb(209,67,4)" fg:x="39422" fg:w="10"/><text x="73.0690%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (912 samples, 1.68%)</title><rect x="71.1584%" y="517" width="1.6846%" height="15" fill="rgb(228,229,18)" fg:x="38523" fg:w="912"/><text x="71.4084%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (27 samples, 0.05%)</title><rect x="72.7931%" y="501" width="0.0499%" height="15" fill="rgb(231,89,13)" fg:x="39408" fg:w="27"/><text x="73.0431%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.05%)</title><rect x="72.7931%" y="485" width="0.0499%" height="15" fill="rgb(210,182,18)" fg:x="39408" fg:w="27"/><text x="73.0431%" y="495.50"></text></g><g><title>__GI___libc_free (8 samples, 0.01%)</title><rect x="72.8430%" y="437" width="0.0148%" height="15" fill="rgb(240,105,2)" fg:x="39435" fg:w="8"/><text x="73.0930%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.04%)</title><rect x="72.8430%" y="469" width="0.0351%" height="15" fill="rgb(207,170,50)" fg:x="39435" fg:w="19"/><text x="73.0930%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.04%)</title><rect x="72.8430%" y="453" width="0.0351%" height="15" fill="rgb(232,133,24)" fg:x="39435" fg:w="19"/><text x="73.0930%" y="463.50"></text></g><g><title>_int_free (11 samples, 0.02%)</title><rect x="72.8577%" y="437" width="0.0203%" height="15" fill="rgb(235,166,27)" fg:x="39443" fg:w="11"/><text x="73.1077%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20 samples, 0.04%)</title><rect x="72.8430%" y="517" width="0.0369%" height="15" fill="rgb(209,19,13)" fg:x="39435" fg:w="20"/><text x="73.0930%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.04%)</title><rect x="72.8430%" y="501" width="0.0369%" height="15" fill="rgb(226,79,39)" fg:x="39435" fg:w="20"/><text x="73.0930%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.04%)</title><rect x="72.8430%" y="485" width="0.0369%" height="15" fill="rgb(222,163,10)" fg:x="39435" fg:w="20"/><text x="73.0930%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (9 samples, 0.02%)</title><rect x="72.8799%" y="517" width="0.0166%" height="15" fill="rgb(214,44,19)" fg:x="39455" fg:w="9"/><text x="73.1299%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (9 samples, 0.02%)</title><rect x="72.8799%" y="501" width="0.0166%" height="15" fill="rgb(210,217,13)" fg:x="39455" fg:w="9"/><text x="73.1299%" y="511.50"></text></g><g><title>__memcpy_sse2_unaligned (42 samples, 0.08%)</title><rect x="72.9501%" y="469" width="0.0776%" height="15" fill="rgb(237,61,54)" fg:x="39493" fg:w="42"/><text x="73.2001%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (191 samples, 0.35%)</title><rect x="72.9353%" y="501" width="0.3528%" height="15" fill="rgb(226,184,24)" fg:x="39485" fg:w="191"/><text x="73.1853%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (191 samples, 0.35%)</title><rect x="72.9353%" y="485" width="0.3528%" height="15" fill="rgb(223,226,4)" fg:x="39485" fg:w="191"/><text x="73.1853%" y="495.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (141 samples, 0.26%)</title><rect x="73.0277%" y="469" width="0.2605%" height="15" fill="rgb(210,26,41)" fg:x="39535" fg:w="141"/><text x="73.2777%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove (4,935 samples, 9.12%)</title><rect x="64.2112%" y="533" width="9.1158%" height="15" fill="rgb(220,221,6)" fg:x="34762" fg:w="4935"/><text x="64.4612%" y="543.50">&lt;yakvdb::disk..</text></g><g><title>yakvdb::disk::block::put_slice (232 samples, 0.43%)</title><rect x="72.8984%" y="517" width="0.4285%" height="15" fill="rgb(225,89,49)" fg:x="39465" fg:w="232"/><text x="73.1484%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (21 samples, 0.04%)</title><rect x="73.2881%" y="501" width="0.0388%" height="15" fill="rgb(218,70,45)" fg:x="39676" fg:w="21"/><text x="73.5381%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (21 samples, 0.04%)</title><rect x="73.2881%" y="485" width="0.0388%" height="15" fill="rgb(238,166,21)" fg:x="39676" fg:w="21"/><text x="73.5381%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (7 samples, 0.01%)</title><rect x="73.3343%" y="517" width="0.0129%" height="15" fill="rgb(224,141,44)" fg:x="39701" fg:w="7"/><text x="73.5843%" y="527.50"></text></g><g><title>yakvdb::disk::block::get_u32 (7 samples, 0.01%)</title><rect x="73.3343%" y="501" width="0.0129%" height="15" fill="rgb(230,12,49)" fg:x="39701" fg:w="7"/><text x="73.5843%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (14 samples, 0.03%)</title><rect x="73.3269%" y="533" width="0.0259%" height="15" fill="rgb(212,174,12)" fg:x="39697" fg:w="14"/><text x="73.5769%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="73.3750%" y="517" width="0.0148%" height="15" fill="rgb(246,67,9)" fg:x="39723" fg:w="8"/><text x="73.6250%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.01%)</title><rect x="73.4045%" y="341" width="0.0111%" height="15" fill="rgb(239,35,23)" fg:x="39739" fg:w="6"/><text x="73.6545%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19 samples, 0.04%)</title><rect x="73.4211%" y="325" width="0.0351%" height="15" fill="rgb(211,167,0)" fg:x="39748" fg:w="19"/><text x="73.6711%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (32 samples, 0.06%)</title><rect x="73.4008%" y="421" width="0.0591%" height="15" fill="rgb(225,119,45)" fg:x="39737" fg:w="32"/><text x="73.6508%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (31 samples, 0.06%)</title><rect x="73.4027%" y="405" width="0.0573%" height="15" fill="rgb(210,162,6)" fg:x="39738" fg:w="31"/><text x="73.6527%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (31 samples, 0.06%)</title><rect x="73.4027%" y="389" width="0.0573%" height="15" fill="rgb(208,118,35)" fg:x="39738" fg:w="31"/><text x="73.6527%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (31 samples, 0.06%)</title><rect x="73.4027%" y="373" width="0.0573%" height="15" fill="rgb(239,4,53)" fg:x="39738" fg:w="31"/><text x="73.6527%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (31 samples, 0.06%)</title><rect x="73.4027%" y="357" width="0.0573%" height="15" fill="rgb(213,130,21)" fg:x="39738" fg:w="31"/><text x="73.6527%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.04%)</title><rect x="73.4156%" y="341" width="0.0443%" height="15" fill="rgb(235,148,0)" fg:x="39745" fg:w="24"/><text x="73.6656%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.02%)</title><rect x="73.4692%" y="357" width="0.0166%" height="15" fill="rgb(244,224,18)" fg:x="39774" fg:w="9"/><text x="73.7192%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (9 samples, 0.02%)</title><rect x="73.4692%" y="341" width="0.0166%" height="15" fill="rgb(211,214,4)" fg:x="39774" fg:w="9"/><text x="73.7192%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (11 samples, 0.02%)</title><rect x="73.4692%" y="373" width="0.0203%" height="15" fill="rgb(206,119,25)" fg:x="39774" fg:w="11"/><text x="73.7192%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (9 samples, 0.02%)</title><rect x="73.4987%" y="373" width="0.0166%" height="15" fill="rgb(243,93,47)" fg:x="39790" fg:w="9"/><text x="73.7487%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (9 samples, 0.02%)</title><rect x="73.4987%" y="357" width="0.0166%" height="15" fill="rgb(224,194,6)" fg:x="39790" fg:w="9"/><text x="73.7487%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="73.4987%" y="341" width="0.0166%" height="15" fill="rgb(243,229,6)" fg:x="39790" fg:w="9"/><text x="73.7487%" y="351.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (66 samples, 0.12%)</title><rect x="73.4008%" y="485" width="0.1219%" height="15" fill="rgb(207,23,50)" fg:x="39737" fg:w="66"/><text x="73.6508%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (66 samples, 0.12%)</title><rect x="73.4008%" y="469" width="0.1219%" height="15" fill="rgb(253,192,32)" fg:x="39737" fg:w="66"/><text x="73.6508%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (66 samples, 0.12%)</title><rect x="73.4008%" y="453" width="0.1219%" height="15" fill="rgb(213,21,6)" fg:x="39737" fg:w="66"/><text x="73.6508%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (66 samples, 0.12%)</title><rect x="73.4008%" y="437" width="0.1219%" height="15" fill="rgb(243,151,13)" fg:x="39737" fg:w="66"/><text x="73.6508%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (34 samples, 0.06%)</title><rect x="73.4599%" y="421" width="0.0628%" height="15" fill="rgb(233,165,41)" fg:x="39769" fg:w="34"/><text x="73.7099%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (34 samples, 0.06%)</title><rect x="73.4599%" y="405" width="0.0628%" height="15" fill="rgb(246,176,45)" fg:x="39769" fg:w="34"/><text x="73.7099%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (34 samples, 0.06%)</title><rect x="73.4599%" y="389" width="0.0628%" height="15" fill="rgb(217,170,52)" fg:x="39769" fg:w="34"/><text x="73.7099%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (73 samples, 0.13%)</title><rect x="73.3971%" y="501" width="0.1348%" height="15" fill="rgb(214,203,54)" fg:x="39735" fg:w="73"/><text x="73.6471%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.01%)</title><rect x="73.5449%" y="325" width="0.0111%" height="15" fill="rgb(248,215,49)" fg:x="39815" fg:w="6"/><text x="73.7949%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="73.5430%" y="373" width="0.0314%" height="15" fill="rgb(208,46,10)" fg:x="39814" fg:w="17"/><text x="73.7930%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="73.5430%" y="357" width="0.0314%" height="15" fill="rgb(254,5,31)" fg:x="39814" fg:w="17"/><text x="73.7930%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="73.5430%" y="341" width="0.0314%" height="15" fill="rgb(222,104,33)" fg:x="39814" fg:w="17"/><text x="73.7930%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.02%)</title><rect x="73.5560%" y="325" width="0.0185%" height="15" fill="rgb(248,49,16)" fg:x="39821" fg:w="10"/><text x="73.8060%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.03%)</title><rect x="73.5430%" y="405" width="0.0332%" height="15" fill="rgb(232,198,41)" fg:x="39814" fg:w="18"/><text x="73.7930%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.03%)</title><rect x="73.5430%" y="389" width="0.0332%" height="15" fill="rgb(214,125,3)" fg:x="39814" fg:w="18"/><text x="73.7930%" y="399.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14 samples, 0.03%)</title><rect x="73.5911%" y="341" width="0.0259%" height="15" fill="rgb(229,220,28)" fg:x="39840" fg:w="14"/><text x="73.8411%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (12 samples, 0.02%)</title><rect x="73.5948%" y="325" width="0.0222%" height="15" fill="rgb(222,64,37)" fg:x="39842" fg:w="12"/><text x="73.8448%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (15 samples, 0.03%)</title><rect x="73.5911%" y="357" width="0.0277%" height="15" fill="rgb(249,184,13)" fg:x="39840" fg:w="15"/><text x="73.8411%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (48 samples, 0.09%)</title><rect x="73.5430%" y="453" width="0.0887%" height="15" fill="rgb(252,176,6)" fg:x="39814" fg:w="48"/><text x="73.7930%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (48 samples, 0.09%)</title><rect x="73.5430%" y="437" width="0.0887%" height="15" fill="rgb(228,153,7)" fg:x="39814" fg:w="48"/><text x="73.7930%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (48 samples, 0.09%)</title><rect x="73.5430%" y="421" width="0.0887%" height="15" fill="rgb(242,193,5)" fg:x="39814" fg:w="48"/><text x="73.7930%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (30 samples, 0.06%)</title><rect x="73.5763%" y="405" width="0.0554%" height="15" fill="rgb(232,140,9)" fg:x="39832" fg:w="30"/><text x="73.8263%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (30 samples, 0.06%)</title><rect x="73.5763%" y="389" width="0.0554%" height="15" fill="rgb(213,222,16)" fg:x="39832" fg:w="30"/><text x="73.8263%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (30 samples, 0.06%)</title><rect x="73.5763%" y="373" width="0.0554%" height="15" fill="rgb(222,75,50)" fg:x="39832" fg:w="30"/><text x="73.8263%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="73.6373%" y="325" width="0.0148%" height="15" fill="rgb(205,180,2)" fg:x="39865" fg:w="8"/><text x="73.8873%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.03%)</title><rect x="73.6539%" y="309" width="0.0259%" height="15" fill="rgb(216,34,7)" fg:x="39874" fg:w="14"/><text x="73.9039%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (29 samples, 0.05%)</title><rect x="73.6336%" y="373" width="0.0536%" height="15" fill="rgb(253,16,32)" fg:x="39863" fg:w="29"/><text x="73.8836%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29 samples, 0.05%)</title><rect x="73.6336%" y="357" width="0.0536%" height="15" fill="rgb(208,97,28)" fg:x="39863" fg:w="29"/><text x="73.8836%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29 samples, 0.05%)</title><rect x="73.6336%" y="341" width="0.0536%" height="15" fill="rgb(225,92,11)" fg:x="39863" fg:w="29"/><text x="73.8836%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19 samples, 0.04%)</title><rect x="73.6520%" y="325" width="0.0351%" height="15" fill="rgb(243,38,12)" fg:x="39873" fg:w="19"/><text x="73.9020%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (30 samples, 0.06%)</title><rect x="73.6336%" y="405" width="0.0554%" height="15" fill="rgb(208,139,16)" fg:x="39863" fg:w="30"/><text x="73.8836%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (30 samples, 0.06%)</title><rect x="73.6336%" y="389" width="0.0554%" height="15" fill="rgb(227,24,9)" fg:x="39863" fg:w="30"/><text x="73.8836%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (7 samples, 0.01%)</title><rect x="73.7093%" y="357" width="0.0129%" height="15" fill="rgb(206,62,11)" fg:x="39904" fg:w="7"/><text x="73.9593%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (23 samples, 0.04%)</title><rect x="73.6890%" y="405" width="0.0425%" height="15" fill="rgb(228,134,27)" fg:x="39893" fg:w="23"/><text x="73.9390%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.04%)</title><rect x="73.6927%" y="389" width="0.0388%" height="15" fill="rgb(205,55,33)" fg:x="39895" fg:w="21"/><text x="73.9427%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (21 samples, 0.04%)</title><rect x="73.6927%" y="373" width="0.0388%" height="15" fill="rgb(243,75,43)" fg:x="39895" fg:w="21"/><text x="73.9427%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (58 samples, 0.11%)</title><rect x="73.6317%" y="453" width="0.1071%" height="15" fill="rgb(223,27,42)" fg:x="39862" fg:w="58"/><text x="73.8817%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (58 samples, 0.11%)</title><rect x="73.6317%" y="437" width="0.1071%" height="15" fill="rgb(232,189,33)" fg:x="39862" fg:w="58"/><text x="73.8817%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (57 samples, 0.11%)</title><rect x="73.6336%" y="421" width="0.1053%" height="15" fill="rgb(210,9,39)" fg:x="39863" fg:w="57"/><text x="73.8836%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (13 samples, 0.02%)</title><rect x="73.7573%" y="437" width="0.0240%" height="15" fill="rgb(242,85,26)" fg:x="39930" fg:w="13"/><text x="74.0073%" y="447.50"></text></g><g><title>core::intrinsics::copy (7 samples, 0.01%)</title><rect x="73.7684%" y="421" width="0.0129%" height="15" fill="rgb(248,44,4)" fg:x="39936" fg:w="7"/><text x="74.0184%" y="431.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (6 samples, 0.01%)</title><rect x="73.7702%" y="405" width="0.0111%" height="15" fill="rgb(250,96,46)" fg:x="39937" fg:w="6"/><text x="74.0202%" y="415.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (6 samples, 0.01%)</title><rect x="73.7832%" y="437" width="0.0111%" height="15" fill="rgb(229,116,26)" fg:x="39944" fg:w="6"/><text x="74.0332%" y="447.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (6 samples, 0.01%)</title><rect x="73.7832%" y="421" width="0.0111%" height="15" fill="rgb(246,94,34)" fg:x="39944" fg:w="6"/><text x="74.0332%" y="431.50"></text></g><g><title>core::cell::BorrowRef::new (6 samples, 0.01%)</title><rect x="73.7832%" y="405" width="0.0111%" height="15" fill="rgb(251,73,21)" fg:x="39944" fg:w="6"/><text x="74.0332%" y="415.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_add (6 samples, 0.01%)</title><rect x="73.7832%" y="389" width="0.0111%" height="15" fill="rgb(254,121,25)" fg:x="39944" fg:w="6"/><text x="74.0332%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (32 samples, 0.06%)</title><rect x="73.8183%" y="389" width="0.0591%" height="15" fill="rgb(215,161,49)" fg:x="39963" fg:w="32"/><text x="74.0683%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (23 samples, 0.04%)</title><rect x="73.8349%" y="373" width="0.0425%" height="15" fill="rgb(221,43,13)" fg:x="39972" fg:w="23"/><text x="74.0849%" y="383.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (23 samples, 0.04%)</title><rect x="73.8349%" y="357" width="0.0425%" height="15" fill="rgb(249,5,37)" fg:x="39972" fg:w="23"/><text x="74.0849%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (23 samples, 0.04%)</title><rect x="73.8349%" y="341" width="0.0425%" height="15" fill="rgb(226,25,44)" fg:x="39972" fg:w="23"/><text x="74.0849%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (23 samples, 0.04%)</title><rect x="73.8349%" y="325" width="0.0425%" height="15" fill="rgb(238,189,16)" fg:x="39972" fg:w="23"/><text x="74.0849%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (23 samples, 0.04%)</title><rect x="73.8349%" y="309" width="0.0425%" height="15" fill="rgb(251,186,8)" fg:x="39972" fg:w="23"/><text x="74.0849%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (62 samples, 0.11%)</title><rect x="73.7998%" y="437" width="0.1145%" height="15" fill="rgb(254,34,31)" fg:x="39953" fg:w="62"/><text x="74.0498%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (62 samples, 0.11%)</title><rect x="73.7998%" y="421" width="0.1145%" height="15" fill="rgb(225,215,27)" fg:x="39953" fg:w="62"/><text x="74.0498%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (62 samples, 0.11%)</title><rect x="73.7998%" y="405" width="0.1145%" height="15" fill="rgb(221,192,48)" fg:x="39953" fg:w="62"/><text x="74.0498%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.04%)</title><rect x="73.8774%" y="389" width="0.0369%" height="15" fill="rgb(219,137,20)" fg:x="39995" fg:w="20"/><text x="74.1274%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="73.9291%" y="357" width="0.0240%" height="15" fill="rgb(219,84,11)" fg:x="40023" fg:w="13"/><text x="74.1791%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="73.9291%" y="341" width="0.0240%" height="15" fill="rgb(224,10,23)" fg:x="40023" fg:w="13"/><text x="74.1791%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="73.9291%" y="325" width="0.0240%" height="15" fill="rgb(248,22,39)" fg:x="40023" fg:w="13"/><text x="74.1791%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.02%)</title><rect x="73.9346%" y="309" width="0.0185%" height="15" fill="rgb(212,154,20)" fg:x="40026" fg:w="10"/><text x="74.1846%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.03%)</title><rect x="73.9236%" y="389" width="0.0332%" height="15" fill="rgb(236,199,50)" fg:x="40020" fg:w="18"/><text x="74.1736%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.03%)</title><rect x="73.9236%" y="373" width="0.0332%" height="15" fill="rgb(211,9,17)" fg:x="40020" fg:w="18"/><text x="74.1736%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="73.9679%" y="341" width="0.0111%" height="15" fill="rgb(243,216,36)" fg:x="40044" fg:w="6"/><text x="74.2179%" y="351.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.01%)</title><rect x="73.9679%" y="325" width="0.0111%" height="15" fill="rgb(250,2,10)" fg:x="40044" fg:w="6"/><text x="74.2179%" y="335.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.01%)</title><rect x="73.9790%" y="325" width="0.0111%" height="15" fill="rgb(226,50,48)" fg:x="40050" fg:w="6"/><text x="74.2290%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.01%)</title><rect x="73.9790%" y="341" width="0.0148%" height="15" fill="rgb(243,81,16)" fg:x="40050" fg:w="8"/><text x="74.2290%" y="351.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (258 samples, 0.48%)</title><rect x="73.5320%" y="501" width="0.4766%" height="15" fill="rgb(250,14,2)" fg:x="39808" fg:w="258"/><text x="73.7820%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (258 samples, 0.48%)</title><rect x="73.5320%" y="485" width="0.4766%" height="15" fill="rgb(233,135,29)" fg:x="39808" fg:w="258"/><text x="73.7820%" y="495.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (253 samples, 0.47%)</title><rect x="73.5412%" y="469" width="0.4673%" height="15" fill="rgb(224,64,43)" fg:x="39813" fg:w="253"/><text x="73.7912%" y="479.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (146 samples, 0.27%)</title><rect x="73.7388%" y="453" width="0.2697%" height="15" fill="rgb(238,84,13)" fg:x="39920" fg:w="146"/><text x="73.9888%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (46 samples, 0.08%)</title><rect x="73.9236%" y="437" width="0.0850%" height="15" fill="rgb(253,48,26)" fg:x="40020" fg:w="46"/><text x="74.1736%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (46 samples, 0.08%)</title><rect x="73.9236%" y="421" width="0.0850%" height="15" fill="rgb(205,223,31)" fg:x="40020" fg:w="46"/><text x="74.1736%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (46 samples, 0.08%)</title><rect x="73.9236%" y="405" width="0.0850%" height="15" fill="rgb(221,41,32)" fg:x="40020" fg:w="46"/><text x="74.1736%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (28 samples, 0.05%)</title><rect x="73.9568%" y="389" width="0.0517%" height="15" fill="rgb(213,158,31)" fg:x="40038" fg:w="28"/><text x="74.2068%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (28 samples, 0.05%)</title><rect x="73.9568%" y="373" width="0.0517%" height="15" fill="rgb(245,126,43)" fg:x="40038" fg:w="28"/><text x="74.2068%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (28 samples, 0.05%)</title><rect x="73.9568%" y="357" width="0.0517%" height="15" fill="rgb(227,7,22)" fg:x="40038" fg:w="28"/><text x="74.2068%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (338 samples, 0.62%)</title><rect x="73.3916%" y="517" width="0.6243%" height="15" fill="rgb(252,90,44)" fg:x="39732" fg:w="338"/><text x="73.6416%" y="527.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.04%)</title><rect x="74.0344%" y="405" width="0.0425%" height="15" fill="rgb(253,91,0)" fg:x="40080" fg:w="23"/><text x="74.2844%" y="415.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.04%)</title><rect x="74.0344%" y="389" width="0.0425%" height="15" fill="rgb(252,175,49)" fg:x="40080" fg:w="23"/><text x="74.2844%" y="399.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.04%)</title><rect x="74.0344%" y="373" width="0.0425%" height="15" fill="rgb(246,150,1)" fg:x="40080" fg:w="23"/><text x="74.2844%" y="383.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.04%)</title><rect x="74.0344%" y="357" width="0.0425%" height="15" fill="rgb(241,192,25)" fg:x="40080" fg:w="23"/><text x="74.2844%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.04%)</title><rect x="74.0381%" y="341" width="0.0388%" height="15" fill="rgb(239,187,11)" fg:x="40082" fg:w="21"/><text x="74.2881%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.03%)</title><rect x="74.0473%" y="325" width="0.0296%" height="15" fill="rgb(218,202,51)" fg:x="40087" fg:w="16"/><text x="74.2973%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.05%)</title><rect x="74.0344%" y="421" width="0.0499%" height="15" fill="rgb(225,176,8)" fg:x="40080" fg:w="27"/><text x="74.2844%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (29 samples, 0.05%)</title><rect x="74.0325%" y="453" width="0.0536%" height="15" fill="rgb(219,122,41)" fg:x="40079" fg:w="29"/><text x="74.2825%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (29 samples, 0.05%)</title><rect x="74.0325%" y="437" width="0.0536%" height="15" fill="rgb(248,140,20)" fg:x="40079" fg:w="29"/><text x="74.2825%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="74.0861%" y="453" width="0.0111%" height="15" fill="rgb(245,41,37)" fg:x="40108" fg:w="6"/><text x="74.3361%" y="463.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="74.0861%" y="437" width="0.0111%" height="15" fill="rgb(235,82,39)" fg:x="40108" fg:w="6"/><text x="74.3361%" y="447.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="74.0861%" y="421" width="0.0111%" height="15" fill="rgb(230,108,42)" fg:x="40108" fg:w="6"/><text x="74.3361%" y="431.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="74.0861%" y="405" width="0.0111%" height="15" fill="rgb(215,150,50)" fg:x="40108" fg:w="6"/><text x="74.3361%" y="415.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="74.0861%" y="389" width="0.0111%" height="15" fill="rgb(233,212,5)" fg:x="40108" fg:w="6"/><text x="74.3361%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="74.0861%" y="373" width="0.0111%" height="15" fill="rgb(245,80,22)" fg:x="40108" fg:w="6"/><text x="74.3361%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (44 samples, 0.08%)</title><rect x="74.0215%" y="517" width="0.0813%" height="15" fill="rgb(238,129,16)" fg:x="40073" fg:w="44"/><text x="74.2715%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (44 samples, 0.08%)</title><rect x="74.0215%" y="501" width="0.0813%" height="15" fill="rgb(240,19,0)" fg:x="40073" fg:w="44"/><text x="74.2715%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (44 samples, 0.08%)</title><rect x="74.0215%" y="485" width="0.0813%" height="15" fill="rgb(232,42,35)" fg:x="40073" fg:w="44"/><text x="74.2715%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (42 samples, 0.08%)</title><rect x="74.0252%" y="469" width="0.0776%" height="15" fill="rgb(223,130,24)" fg:x="40075" fg:w="42"/><text x="74.2752%" y="479.50"></text></g><g><title>__GI___libc_free (15 samples, 0.03%)</title><rect x="74.1212%" y="389" width="0.0277%" height="15" fill="rgb(237,16,22)" fg:x="40127" fg:w="15"/><text x="74.3712%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.04%)</title><rect x="74.1212%" y="421" width="0.0443%" height="15" fill="rgb(248,192,20)" fg:x="40127" fg:w="24"/><text x="74.3712%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.04%)</title><rect x="74.1212%" y="405" width="0.0443%" height="15" fill="rgb(233,167,2)" fg:x="40127" fg:w="24"/><text x="74.3712%" y="415.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="74.1545%" y="389" width="0.0111%" height="15" fill="rgb(252,71,44)" fg:x="40145" fg:w="6"/><text x="74.4045%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u32&gt;&gt; (37 samples, 0.07%)</title><rect x="74.1027%" y="517" width="0.0683%" height="15" fill="rgb(238,37,47)" fg:x="40117" fg:w="37"/><text x="74.3527%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.07%)</title><rect x="74.1027%" y="501" width="0.0683%" height="15" fill="rgb(214,202,54)" fg:x="40117" fg:w="37"/><text x="74.3527%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u32,alloc::alloc::Global&gt;&gt; (37 samples, 0.07%)</title><rect x="74.1027%" y="485" width="0.0683%" height="15" fill="rgb(254,165,40)" fg:x="40117" fg:w="37"/><text x="74.3527%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.07%)</title><rect x="74.1027%" y="469" width="0.0683%" height="15" fill="rgb(246,173,38)" fg:x="40117" fg:w="37"/><text x="74.3527%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (27 samples, 0.05%)</title><rect x="74.1212%" y="453" width="0.0499%" height="15" fill="rgb(215,3,27)" fg:x="40127" fg:w="27"/><text x="74.3712%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.05%)</title><rect x="74.1212%" y="437" width="0.0499%" height="15" fill="rgb(239,169,51)" fg:x="40127" fg:w="27"/><text x="74.3712%" y="447.50"></text></g><g><title>log::max_level (19 samples, 0.04%)</title><rect x="74.1748%" y="517" width="0.0351%" height="15" fill="rgb(212,5,25)" fg:x="40156" fg:w="19"/><text x="74.4248%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (19 samples, 0.04%)</title><rect x="74.1748%" y="501" width="0.0351%" height="15" fill="rgb(243,45,17)" fg:x="40156" fg:w="19"/><text x="74.4248%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.04%)</title><rect x="74.1748%" y="485" width="0.0351%" height="15" fill="rgb(242,97,9)" fg:x="40156" fg:w="19"/><text x="74.4248%" y="495.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (10 samples, 0.02%)</title><rect x="74.2099%" y="517" width="0.0185%" height="15" fill="rgb(228,71,31)" fg:x="40175" fg:w="10"/><text x="74.4599%" y="527.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (10 samples, 0.02%)</title><rect x="74.2099%" y="501" width="0.0185%" height="15" fill="rgb(252,184,16)" fg:x="40175" fg:w="10"/><text x="74.4599%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (10 samples, 0.02%)</title><rect x="74.2099%" y="485" width="0.0185%" height="15" fill="rgb(236,169,46)" fg:x="40175" fg:w="10"/><text x="74.4599%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (10 samples, 0.02%)</title><rect x="74.2099%" y="469" width="0.0185%" height="15" fill="rgb(207,17,47)" fg:x="40175" fg:w="10"/><text x="74.4599%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(u32,())&gt;,hashbrown::raw::RawTable&lt;(u32,())&gt;::clear::{{closure}}&gt;&gt; (10 samples, 0.02%)</title><rect x="74.2099%" y="453" width="0.0185%" height="15" fill="rgb(206,201,28)" fg:x="40175" fg:w="10"/><text x="74.4599%" y="463.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="74.2099%" y="437" width="0.0185%" height="15" fill="rgb(224,184,23)" fg:x="40175" fg:w="10"/><text x="74.4599%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (10 samples, 0.02%)</title><rect x="74.2099%" y="421" width="0.0185%" height="15" fill="rgb(208,139,48)" fg:x="40175" fg:w="10"/><text x="74.4599%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (10 samples, 0.02%)</title><rect x="74.2099%" y="405" width="0.0185%" height="15" fill="rgb(208,130,10)" fg:x="40175" fg:w="10"/><text x="74.4599%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (10 samples, 0.02%)</title><rect x="74.2099%" y="389" width="0.0185%" height="15" fill="rgb(211,213,45)" fg:x="40175" fg:w="10"/><text x="74.4599%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (9 samples, 0.02%)</title><rect x="74.2117%" y="373" width="0.0166%" height="15" fill="rgb(235,100,30)" fg:x="40176" fg:w="9"/><text x="74.4617%" y="383.50"></text></g><g><title>core::intrinsics::write_bytes (9 samples, 0.02%)</title><rect x="74.2117%" y="357" width="0.0166%" height="15" fill="rgb(206,144,31)" fg:x="40176" fg:w="9"/><text x="74.4617%" y="367.50"></text></g><g><title>__memset_sse2_unaligned_erms (7 samples, 0.01%)</title><rect x="74.2154%" y="341" width="0.0129%" height="15" fill="rgb(224,200,26)" fg:x="40178" fg:w="7"/><text x="74.4654%" y="351.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (6 samples, 0.01%)</title><rect x="74.2283%" y="517" width="0.0111%" height="15" fill="rgb(247,104,53)" fg:x="40185" fg:w="6"/><text x="74.4783%" y="527.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (6 samples, 0.01%)</title><rect x="74.2283%" y="501" width="0.0111%" height="15" fill="rgb(220,14,17)" fg:x="40185" fg:w="6"/><text x="74.4783%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (6 samples, 0.01%)</title><rect x="74.2283%" y="485" width="0.0111%" height="15" fill="rgb(230,140,40)" fg:x="40185" fg:w="6"/><text x="74.4783%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (6 samples, 0.01%)</title><rect x="74.2283%" y="469" width="0.0111%" height="15" fill="rgb(229,2,41)" fg:x="40185" fg:w="6"/><text x="74.4783%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (6 samples, 0.01%)</title><rect x="74.2283%" y="453" width="0.0111%" height="15" fill="rgb(232,89,16)" fg:x="40185" fg:w="6"/><text x="74.4783%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="74.2283%" y="437" width="0.0111%" height="15" fill="rgb(247,59,52)" fg:x="40185" fg:w="6"/><text x="74.4783%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 0.05%)</title><rect x="74.3613%" y="453" width="0.0462%" height="15" fill="rgb(226,110,21)" fg:x="40257" fg:w="25"/><text x="74.6113%" y="463.50"></text></g><g><title>__x64_sys_lseek (45 samples, 0.08%)</title><rect x="74.4389%" y="437" width="0.0831%" height="15" fill="rgb(224,176,43)" fg:x="40299" fg:w="45"/><text x="74.6889%" y="447.50"></text></g><g><title>ext4_llseek (20 samples, 0.04%)</title><rect x="75.4105%" y="405" width="0.0369%" height="15" fill="rgb(221,73,6)" fg:x="40825" fg:w="20"/><text x="75.6605%" y="415.50"></text></g><g><title>__fdget_pos (87 samples, 0.16%)</title><rect x="75.4826%" y="389" width="0.1607%" height="15" fill="rgb(232,78,19)" fg:x="40864" fg:w="87"/><text x="75.7326%" y="399.50"></text></g><g><title>__fget_light (82 samples, 0.15%)</title><rect x="75.4918%" y="373" width="0.1515%" height="15" fill="rgb(233,112,48)" fg:x="40869" fg:w="82"/><text x="75.7418%" y="383.50"></text></g><g><title>__fget_light (6 samples, 0.01%)</title><rect x="75.6433%" y="389" width="0.0111%" height="15" fill="rgb(243,131,47)" fg:x="40951" fg:w="6"/><text x="75.8933%" y="399.50"></text></g><g><title>ext4_llseek (46 samples, 0.08%)</title><rect x="75.6544%" y="389" width="0.0850%" height="15" fill="rgb(226,51,1)" fg:x="40957" fg:w="46"/><text x="75.9044%" y="399.50"></text></g><g><title>generic_file_llseek_size (6 samples, 0.01%)</title><rect x="75.7282%" y="373" width="0.0111%" height="15" fill="rgb(247,58,7)" fg:x="40997" fg:w="6"/><text x="75.9782%" y="383.50"></text></g><g><title>__x64_sys_lseek (184 samples, 0.34%)</title><rect x="75.4031%" y="421" width="0.3399%" height="15" fill="rgb(209,7,32)" fg:x="40821" fg:w="184"/><text x="75.6531%" y="431.50"></text></g><g><title>ksys_lseek (160 samples, 0.30%)</title><rect x="75.4475%" y="405" width="0.2955%" height="15" fill="rgb(209,39,41)" fg:x="40845" fg:w="160"/><text x="75.6975%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (730 samples, 1.35%)</title><rect x="74.4075%" y="453" width="1.3484%" height="15" fill="rgb(226,182,46)" fg:x="40282" fg:w="730"/><text x="74.6575%" y="463.50"></text></g><g><title>do_syscall_64 (668 samples, 1.23%)</title><rect x="74.5220%" y="437" width="1.2339%" height="15" fill="rgb(230,219,10)" fg:x="40344" fg:w="668"/><text x="74.7720%" y="447.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (998 samples, 1.84%)</title><rect x="74.2948%" y="501" width="1.8435%" height="15" fill="rgb(227,175,30)" fg:x="40221" fg:w="998"/><text x="74.5448%" y="511.50">&lt;..</text></g><g><title>std::sys::unix::fs::File::seek (998 samples, 1.84%)</title><rect x="74.2948%" y="485" width="1.8435%" height="15" fill="rgb(217,2,50)" fg:x="40221" fg:w="998"/><text x="74.5448%" y="495.50">s..</text></g><g><title>__lseek64 (989 samples, 1.83%)</title><rect x="74.3115%" y="469" width="1.8268%" height="15" fill="rgb(229,160,0)" fg:x="40230" fg:w="989"/><text x="74.5615%" y="479.50">_..</text></g><g><title>syscall_return_via_sysret (207 samples, 0.38%)</title><rect x="75.7560%" y="453" width="0.3824%" height="15" fill="rgb(207,78,37)" fg:x="41012" fg:w="207"/><text x="76.0060%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (7 samples, 0.01%)</title><rect x="76.1420%" y="501" width="0.0129%" height="15" fill="rgb(225,57,0)" fg:x="41221" fg:w="7"/><text x="76.3920%" y="511.50"></text></g><g><title>core::mem::replace (7 samples, 0.01%)</title><rect x="76.1420%" y="485" width="0.0129%" height="15" fill="rgb(232,154,2)" fg:x="41221" fg:w="7"/><text x="76.3920%" y="495.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="76.1420%" y="469" width="0.0129%" height="15" fill="rgb(241,212,25)" fg:x="41221" fg:w="7"/><text x="76.3920%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (29 samples, 0.05%)</title><rect x="76.3175%" y="421" width="0.0536%" height="15" fill="rgb(226,69,20)" fg:x="41316" fg:w="29"/><text x="76.5675%" y="431.50"></text></g><g><title>__x64_sys_write (28 samples, 0.05%)</title><rect x="76.3932%" y="405" width="0.0517%" height="15" fill="rgb(247,184,54)" fg:x="41357" fg:w="28"/><text x="76.6432%" y="415.50"></text></g><g><title>__fdget_pos (80 samples, 0.15%)</title><rect x="77.4258%" y="357" width="0.1478%" height="15" fill="rgb(210,145,0)" fg:x="41916" fg:w="80"/><text x="77.6758%" y="367.50"></text></g><g><title>__fget_light (71 samples, 0.13%)</title><rect x="77.4424%" y="341" width="0.1311%" height="15" fill="rgb(253,82,12)" fg:x="41925" fg:w="71"/><text x="77.6924%" y="351.50"></text></g><g><title>__sb_end_write (11 samples, 0.02%)</title><rect x="77.5773%" y="357" width="0.0203%" height="15" fill="rgb(245,42,11)" fg:x="41998" fg:w="11"/><text x="77.8273%" y="367.50"></text></g><g><title>__fsnotify_parent (10 samples, 0.02%)</title><rect x="77.6862%" y="341" width="0.0185%" height="15" fill="rgb(219,147,32)" fg:x="42057" fg:w="10"/><text x="77.9362%" y="351.50"></text></g><g><title>__sb_start_write (13 samples, 0.02%)</title><rect x="77.7047%" y="341" width="0.0240%" height="15" fill="rgb(246,12,7)" fg:x="42067" fg:w="13"/><text x="77.9547%" y="351.50"></text></g><g><title>ext4_file_write_iter (16 samples, 0.03%)</title><rect x="77.7435%" y="325" width="0.0296%" height="15" fill="rgb(243,50,9)" fg:x="42088" fg:w="16"/><text x="77.9935%" y="335.50"></text></g><g><title>iov_iter_init (6 samples, 0.01%)</title><rect x="77.7731%" y="325" width="0.0111%" height="15" fill="rgb(219,149,6)" fg:x="42104" fg:w="6"/><text x="78.0231%" y="335.50"></text></g><g><title>__x86_indirect_thunk_r11 (8 samples, 0.01%)</title><rect x="77.9541%" y="277" width="0.0148%" height="15" fill="rgb(241,51,42)" fg:x="42202" fg:w="8"/><text x="78.2041%" y="287.50"></text></g><g><title>current_time (7 samples, 0.01%)</title><rect x="77.9873%" y="277" width="0.0129%" height="15" fill="rgb(226,128,27)" fg:x="42220" fg:w="7"/><text x="78.2373%" y="287.50"></text></g><g><title>ext4_da_write_begin (43 samples, 0.08%)</title><rect x="78.0003%" y="277" width="0.0794%" height="15" fill="rgb(244,144,4)" fg:x="42227" fg:w="43"/><text x="78.2503%" y="287.50"></text></g><g><title>ext4_da_write_end (54 samples, 0.10%)</title><rect x="78.0797%" y="277" width="0.0997%" height="15" fill="rgb(221,4,13)" fg:x="42270" fg:w="54"/><text x="78.3297%" y="287.50"></text></g><g><title>file_remove_privs (10 samples, 0.02%)</title><rect x="78.1794%" y="277" width="0.0185%" height="15" fill="rgb(208,170,28)" fg:x="42324" fg:w="10"/><text x="78.4294%" y="287.50"></text></g><g><title>ktime_get_coarse_real_ts64 (12 samples, 0.02%)</title><rect x="78.2626%" y="245" width="0.0222%" height="15" fill="rgb(226,131,13)" fg:x="42369" fg:w="12"/><text x="78.5126%" y="255.50"></text></g><g><title>current_time (32 samples, 0.06%)</title><rect x="78.2367%" y="261" width="0.0591%" height="15" fill="rgb(215,72,41)" fg:x="42355" fg:w="32"/><text x="78.4867%" y="271.50"></text></g><g><title>timestamp_truncate (6 samples, 0.01%)</title><rect x="78.2847%" y="245" width="0.0111%" height="15" fill="rgb(243,108,20)" fg:x="42381" fg:w="6"/><text x="78.5347%" y="255.50"></text></g><g><title>generic_update_time (6 samples, 0.01%)</title><rect x="78.2958%" y="261" width="0.0111%" height="15" fill="rgb(230,189,17)" fg:x="42387" fg:w="6"/><text x="78.5458%" y="271.50"></text></g><g><title>__mark_inode_dirty (6 samples, 0.01%)</title><rect x="78.2958%" y="245" width="0.0111%" height="15" fill="rgb(220,50,17)" fg:x="42387" fg:w="6"/><text x="78.5458%" y="255.50"></text></g><g><title>ext4_dirty_inode (6 samples, 0.01%)</title><rect x="78.2958%" y="229" width="0.0111%" height="15" fill="rgb(248,152,48)" fg:x="42387" fg:w="6"/><text x="78.5458%" y="239.50"></text></g><g><title>file_update_time (65 samples, 0.12%)</title><rect x="78.1979%" y="277" width="0.1201%" height="15" fill="rgb(244,91,11)" fg:x="42334" fg:w="65"/><text x="78.4479%" y="287.50"></text></g><g><title>_cond_resched (8 samples, 0.01%)</title><rect x="78.4824%" y="261" width="0.0148%" height="15" fill="rgb(220,157,5)" fg:x="42488" fg:w="8"/><text x="78.7324%" y="271.50"></text></g><g><title>balance_dirty_pages_ratelimited (42 samples, 0.08%)</title><rect x="78.4971%" y="261" width="0.0776%" height="15" fill="rgb(253,137,8)" fg:x="42496" fg:w="42"/><text x="78.7471%" y="271.50"></text></g><g><title>_cond_resched (6 samples, 0.01%)</title><rect x="78.8241%" y="213" width="0.0111%" height="15" fill="rgb(217,137,51)" fg:x="42673" fg:w="6"/><text x="79.0741%" y="223.50"></text></g><g><title>ext4_journal_check_start (23 samples, 0.04%)</title><rect x="78.7945%" y="229" width="0.0425%" height="15" fill="rgb(218,209,53)" fg:x="42657" fg:w="23"/><text x="79.0445%" y="239.50"></text></g><g><title>_raw_read_lock (46 samples, 0.08%)</title><rect x="78.9072%" y="213" width="0.0850%" height="15" fill="rgb(249,137,25)" fg:x="42718" fg:w="46"/><text x="79.1572%" y="223.50"></text></g><g><title>_cond_resched (6 samples, 0.01%)</title><rect x="79.2637%" y="197" width="0.0111%" height="15" fill="rgb(239,155,26)" fg:x="42911" fg:w="6"/><text x="79.5137%" y="207.50"></text></g><g><title>kmem_cache_alloc (155 samples, 0.29%)</title><rect x="78.9977%" y="213" width="0.2863%" height="15" fill="rgb(227,85,46)" fg:x="42767" fg:w="155"/><text x="79.2477%" y="223.50"></text></g><g><title>memcg_kmem_put_cache (13 samples, 0.02%)</title><rect x="79.2840%" y="213" width="0.0240%" height="15" fill="rgb(251,107,43)" fg:x="42922" fg:w="13"/><text x="79.5340%" y="223.50"></text></g><g><title>memset (57 samples, 0.11%)</title><rect x="79.3081%" y="213" width="0.1053%" height="15" fill="rgb(234,170,33)" fg:x="42935" fg:w="57"/><text x="79.5581%" y="223.50"></text></g><g><title>should_failslab (6 samples, 0.01%)</title><rect x="79.4133%" y="213" width="0.0111%" height="15" fill="rgb(206,29,35)" fg:x="42992" fg:w="6"/><text x="79.6633%" y="223.50"></text></g><g><title>add_transaction_credits (76 samples, 0.14%)</title><rect x="79.7661%" y="197" width="0.1404%" height="15" fill="rgb(227,138,25)" fg:x="43183" fg:w="76"/><text x="80.0161%" y="207.50"></text></g><g><title>jbd2__journal_start (580 samples, 1.07%)</title><rect x="78.8370%" y="229" width="1.0714%" height="15" fill="rgb(249,131,35)" fg:x="42680" fg:w="580"/><text x="79.0870%" y="239.50"></text></g><g><title>start_this_handle (262 samples, 0.48%)</title><rect x="79.4244%" y="213" width="0.4840%" height="15" fill="rgb(239,6,40)" fg:x="42998" fg:w="262"/><text x="79.6744%" y="223.50"></text></g><g><title>__ext4_journal_start_sb (629 samples, 1.16%)</title><rect x="78.7521%" y="245" width="1.1619%" height="15" fill="rgb(246,136,47)" fg:x="42634" fg:w="629"/><text x="79.0021%" y="255.50"></text></g><g><title>ext4_block_write_begin (181 samples, 0.33%)</title><rect x="79.9195%" y="245" width="0.3343%" height="15" fill="rgb(253,58,26)" fg:x="43266" fg:w="181"/><text x="80.1695%" y="255.50"></text></g><g><title>ext4_nonda_switch (40 samples, 0.07%)</title><rect x="80.2556%" y="245" width="0.0739%" height="15" fill="rgb(237,141,10)" fg:x="43448" fg:w="40"/><text x="80.5056%" y="255.50"></text></g><g><title>xas_load (172 samples, 0.32%)</title><rect x="80.7341%" y="197" width="0.3177%" height="15" fill="rgb(234,156,12)" fg:x="43707" fg:w="172"/><text x="80.9841%" y="207.50"></text></g><g><title>find_get_entry (344 samples, 0.64%)</title><rect x="80.4865%" y="213" width="0.6354%" height="15" fill="rgb(243,224,36)" fg:x="43573" fg:w="344"/><text x="80.7365%" y="223.50"></text></g><g><title>xas_start (38 samples, 0.07%)</title><rect x="81.0518%" y="197" width="0.0702%" height="15" fill="rgb(205,229,51)" fg:x="43879" fg:w="38"/><text x="81.3018%" y="207.50"></text></g><g><title>pagecache_get_page (416 samples, 0.77%)</title><rect x="80.3591%" y="229" width="0.7684%" height="15" fill="rgb(223,189,4)" fg:x="43504" fg:w="416"/><text x="80.6091%" y="239.50"></text></g><g><title>grab_cache_page_write_begin (456 samples, 0.84%)</title><rect x="80.3295%" y="245" width="0.8423%" height="15" fill="rgb(249,167,54)" fg:x="43488" fg:w="456"/><text x="80.5795%" y="255.50"></text></g><g><title>wait_for_stable_page (24 samples, 0.04%)</title><rect x="81.1275%" y="229" width="0.0443%" height="15" fill="rgb(218,34,28)" fg:x="43920" fg:w="24"/><text x="81.3775%" y="239.50"></text></g><g><title>pagecache_get_page (9 samples, 0.02%)</title><rect x="81.1792%" y="245" width="0.0166%" height="15" fill="rgb(232,109,42)" fg:x="43948" fg:w="9"/><text x="81.4292%" y="255.50"></text></g><g><title>ext4_da_write_begin (1,418 samples, 2.62%)</title><rect x="78.5914%" y="261" width="2.6193%" height="15" fill="rgb(248,214,46)" fg:x="42547" fg:w="1418"/><text x="78.8414%" y="271.50">ex..</text></g><g><title>wait_for_stable_page (6 samples, 0.01%)</title><rect x="81.1995%" y="245" width="0.0111%" height="15" fill="rgb(244,216,40)" fg:x="43959" fg:w="6"/><text x="81.4495%" y="255.50"></text></g><g><title>__wake_up (7 samples, 0.01%)</title><rect x="81.3011%" y="229" width="0.0129%" height="15" fill="rgb(231,226,31)" fg:x="44014" fg:w="7"/><text x="81.5511%" y="239.50"></text></g><g><title>__lock_text_start (11 samples, 0.02%)</title><rect x="81.6373%" y="197" width="0.0203%" height="15" fill="rgb(238,38,43)" fg:x="44196" fg:w="11"/><text x="81.8873%" y="207.50"></text></g><g><title>__lock_text_start (15 samples, 0.03%)</title><rect x="81.7223%" y="181" width="0.0277%" height="15" fill="rgb(208,88,43)" fg:x="44242" fg:w="15"/><text x="81.9723%" y="191.50"></text></g><g><title>__wake_up_common (12 samples, 0.02%)</title><rect x="81.7500%" y="181" width="0.0222%" height="15" fill="rgb(205,136,37)" fg:x="44257" fg:w="12"/><text x="82.0000%" y="191.50"></text></g><g><title>__wake_up_common_lock (126 samples, 0.23%)</title><rect x="81.6576%" y="197" width="0.2327%" height="15" fill="rgb(237,34,14)" fg:x="44207" fg:w="126"/><text x="81.9076%" y="207.50"></text></g><g><title>_raw_spin_lock_irqsave (64 samples, 0.12%)</title><rect x="81.7722%" y="181" width="0.1182%" height="15" fill="rgb(236,193,44)" fg:x="44269" fg:w="64"/><text x="82.0222%" y="191.50"></text></g><g><title>__wake_up (139 samples, 0.26%)</title><rect x="81.6373%" y="213" width="0.2568%" height="15" fill="rgb(231,48,10)" fg:x="44196" fg:w="139"/><text x="81.8873%" y="223.50"></text></g><g><title>jbd2_journal_stop (428 samples, 0.79%)</title><rect x="81.3141%" y="229" width="0.7906%" height="15" fill="rgb(213,141,34)" fg:x="44021" fg:w="428"/><text x="81.5641%" y="239.50"></text></g><g><title>kmem_cache_free (111 samples, 0.21%)</title><rect x="81.8996%" y="213" width="0.2050%" height="15" fill="rgb(249,130,34)" fg:x="44338" fg:w="111"/><text x="82.1496%" y="223.50"></text></g><g><title>__ext4_journal_stop (446 samples, 0.82%)</title><rect x="81.2845%" y="245" width="0.8238%" height="15" fill="rgb(219,42,41)" fg:x="44005" fg:w="446"/><text x="81.5345%" y="255.50"></text></g><g><title>block_write_end (7 samples, 0.01%)</title><rect x="82.1084%" y="245" width="0.0129%" height="15" fill="rgb(224,100,54)" fg:x="44451" fg:w="7"/><text x="82.3584%" y="255.50"></text></g><g><title>__block_commit_write.isra.0 (165 samples, 0.30%)</title><rect x="82.2820%" y="213" width="0.3048%" height="15" fill="rgb(229,200,27)" fg:x="44545" fg:w="165"/><text x="82.5320%" y="223.50"></text></g><g><title>mark_buffer_dirty (44 samples, 0.08%)</title><rect x="82.5055%" y="197" width="0.0813%" height="15" fill="rgb(217,118,10)" fg:x="44666" fg:w="44"/><text x="82.7555%" y="207.50"></text></g><g><title>generic_write_end (256 samples, 0.47%)</title><rect x="82.1213%" y="245" width="0.4729%" height="15" fill="rgb(206,22,3)" fg:x="44458" fg:w="256"/><text x="82.3713%" y="255.50"></text></g><g><title>block_write_end (180 samples, 0.33%)</title><rect x="82.2617%" y="229" width="0.3325%" height="15" fill="rgb(232,163,46)" fg:x="44534" fg:w="180"/><text x="82.5117%" y="239.50"></text></g><g><title>ext4_da_write_end (789 samples, 1.46%)</title><rect x="81.2106%" y="261" width="1.4574%" height="15" fill="rgb(206,95,13)" fg:x="43965" fg:w="789"/><text x="81.4606%" y="271.50"></text></g><g><title>unlock_page (37 samples, 0.07%)</title><rect x="82.5997%" y="245" width="0.0683%" height="15" fill="rgb(253,154,18)" fg:x="44717" fg:w="37"/><text x="82.8497%" y="255.50"></text></g><g><title>ext4_nonda_switch (7 samples, 0.01%)</title><rect x="82.6680%" y="261" width="0.0129%" height="15" fill="rgb(219,32,23)" fg:x="44754" fg:w="7"/><text x="82.9180%" y="271.50"></text></g><g><title>generic_write_end (7 samples, 0.01%)</title><rect x="82.6810%" y="261" width="0.0129%" height="15" fill="rgb(230,191,45)" fg:x="44761" fg:w="7"/><text x="82.9310%" y="271.50"></text></g><g><title>grab_cache_page_write_begin (8 samples, 0.01%)</title><rect x="82.6939%" y="261" width="0.0148%" height="15" fill="rgb(229,64,36)" fg:x="44768" fg:w="8"/><text x="82.9439%" y="271.50"></text></g><g><title>iov_iter_advance (44 samples, 0.08%)</title><rect x="82.7087%" y="261" width="0.0813%" height="15" fill="rgb(205,129,25)" fg:x="44776" fg:w="44"/><text x="82.9587%" y="271.50"></text></g><g><title>copy_user_generic_string (533 samples, 0.98%)</title><rect x="82.8712%" y="245" width="0.9845%" height="15" fill="rgb(254,112,7)" fg:x="44864" fg:w="533"/><text x="83.1212%" y="255.50"></text></g><g><title>iov_iter_copy_from_user_atomic (579 samples, 1.07%)</title><rect x="82.7900%" y="261" width="1.0695%" height="15" fill="rgb(226,53,48)" fg:x="44820" fg:w="579"/><text x="83.0400%" y="271.50"></text></g><g><title>iov_iter_fault_in_readable (80 samples, 0.15%)</title><rect x="83.8595%" y="261" width="0.1478%" height="15" fill="rgb(214,153,38)" fg:x="45399" fg:w="80"/><text x="84.1095%" y="271.50"></text></g><g><title>unlock_page (32 samples, 0.06%)</title><rect x="84.0109%" y="261" width="0.0591%" height="15" fill="rgb(243,101,7)" fg:x="45481" fg:w="32"/><text x="84.2609%" y="271.50"></text></g><g><title>generic_perform_write (3,116 samples, 5.76%)</title><rect x="78.3180%" y="277" width="5.7558%" height="15" fill="rgb(240,140,22)" fg:x="42399" fg:w="3116"/><text x="78.5680%" y="287.50">generic..</text></g><g><title>__generic_file_write_iter (3,363 samples, 6.21%)</title><rect x="77.8876%" y="293" width="6.2120%" height="15" fill="rgb(235,114,2)" fg:x="42166" fg:w="3363"/><text x="78.1376%" y="303.50">__generi..</text></g><g><title>iov_iter_fault_in_readable (7 samples, 0.01%)</title><rect x="84.0867%" y="277" width="0.0129%" height="15" fill="rgb(242,59,12)" fg:x="45522" fg:w="7"/><text x="84.3367%" y="287.50"></text></g><g><title>down_write_trylock (20 samples, 0.04%)</title><rect x="84.0996%" y="293" width="0.0369%" height="15" fill="rgb(252,134,9)" fg:x="45529" fg:w="20"/><text x="84.3496%" y="303.50"></text></g><g><title>generic_write_check_limits.isra.0 (15 samples, 0.03%)</title><rect x="84.1495%" y="277" width="0.0277%" height="15" fill="rgb(236,4,44)" fg:x="45556" fg:w="15"/><text x="84.3995%" y="287.50"></text></g><g><title>ext4_write_checks (31 samples, 0.06%)</title><rect x="84.1365%" y="293" width="0.0573%" height="15" fill="rgb(254,172,41)" fg:x="45549" fg:w="31"/><text x="84.3865%" y="303.50"></text></g><g><title>generic_write_checks (9 samples, 0.02%)</title><rect x="84.1772%" y="277" width="0.0166%" height="15" fill="rgb(244,63,20)" fg:x="45571" fg:w="9"/><text x="84.4272%" y="287.50"></text></g><g><title>generic_perform_write (12 samples, 0.02%)</title><rect x="84.2067%" y="293" width="0.0222%" height="15" fill="rgb(250,73,31)" fg:x="45587" fg:w="12"/><text x="84.4567%" y="303.50"></text></g><g><title>ext4_file_write_iter (3,456 samples, 6.38%)</title><rect x="77.8469%" y="309" width="6.3838%" height="15" fill="rgb(241,38,36)" fg:x="42144" fg:w="3456"/><text x="78.0969%" y="319.50">ext4_fil..</text></g><g><title>__vfs_write (3,547 samples, 6.55%)</title><rect x="77.7287%" y="341" width="6.5519%" height="15" fill="rgb(245,211,2)" fg:x="42080" fg:w="3547"/><text x="77.9787%" y="351.50">__vfs_wri..</text></g><g><title>new_sync_write (3,517 samples, 6.50%)</title><rect x="77.7841%" y="325" width="6.4965%" height="15" fill="rgb(206,120,28)" fg:x="42110" fg:w="3517"/><text x="78.0341%" y="335.50">new_sync_..</text></g><g><title>up_write (26 samples, 0.05%)</title><rect x="84.2326%" y="309" width="0.0480%" height="15" fill="rgb(211,59,34)" fg:x="45601" fg:w="26"/><text x="84.4826%" y="319.50"></text></g><g><title>fsnotify (36 samples, 0.07%)</title><rect x="84.2806%" y="341" width="0.0665%" height="15" fill="rgb(233,168,5)" fg:x="45627" fg:w="36"/><text x="84.5306%" y="351.50"></text></g><g><title>apparmor_file_permission (17 samples, 0.03%)</title><rect x="84.3785%" y="325" width="0.0314%" height="15" fill="rgb(234,33,13)" fg:x="45680" fg:w="17"/><text x="84.6285%" y="335.50"></text></g><g><title>apparmor_file_permission (104 samples, 0.19%)</title><rect x="84.4302%" y="309" width="0.1921%" height="15" fill="rgb(231,150,26)" fg:x="45708" fg:w="104"/><text x="84.6802%" y="319.50"></text></g><g><title>common_file_perm (102 samples, 0.19%)</title><rect x="84.4339%" y="293" width="0.1884%" height="15" fill="rgb(217,191,4)" fg:x="45710" fg:w="102"/><text x="84.6839%" y="303.50"></text></g><g><title>aa_file_perm (6 samples, 0.01%)</title><rect x="84.6113%" y="277" width="0.0111%" height="15" fill="rgb(246,198,38)" fg:x="45806" fg:w="6"/><text x="84.8613%" y="287.50"></text></g><g><title>rw_verify_area (173 samples, 0.32%)</title><rect x="84.3471%" y="341" width="0.3196%" height="15" fill="rgb(245,64,37)" fg:x="45663" fg:w="173"/><text x="84.5971%" y="351.50"></text></g><g><title>security_file_permission (139 samples, 0.26%)</title><rect x="84.4099%" y="325" width="0.2568%" height="15" fill="rgb(250,30,36)" fg:x="45697" fg:w="139"/><text x="84.6599%" y="335.50"></text></g><g><title>common_file_perm (24 samples, 0.04%)</title><rect x="84.6223%" y="309" width="0.0443%" height="15" fill="rgb(217,86,53)" fg:x="45812" fg:w="24"/><text x="84.8723%" y="319.50"></text></g><g><title>__x64_sys_write (3,942 samples, 7.28%)</title><rect x="77.3870%" y="389" width="7.2815%" height="15" fill="rgb(228,157,16)" fg:x="41895" fg:w="3942"/><text x="77.6370%" y="399.50">__x64_sys_..</text></g><g><title>ksys_write (3,937 samples, 7.27%)</title><rect x="77.3962%" y="373" width="7.2723%" height="15" fill="rgb(217,59,31)" fg:x="41900" fg:w="3937"/><text x="77.6462%" y="383.50">ksys_write</text></g><g><title>vfs_write (3,820 samples, 7.06%)</title><rect x="77.6124%" y="357" width="7.0562%" height="15" fill="rgb(237,138,41)" fg:x="42017" fg:w="3820"/><text x="77.8624%" y="367.50">vfs_write</text></g><g><title>entry_SYSCALL_64_after_hwframe (4,502 samples, 8.32%)</title><rect x="76.3711%" y="421" width="8.3159%" height="15" fill="rgb(227,91,49)" fg:x="41345" fg:w="4502"/><text x="76.6211%" y="431.50">entry_SYSCAL..</text></g><g><title>do_syscall_64 (4,460 samples, 8.24%)</title><rect x="76.4486%" y="405" width="8.2384%" height="15" fill="rgb(247,21,44)" fg:x="41387" fg:w="4460"/><text x="76.6986%" y="415.50">do_syscall_..</text></g><g><title>std::io::Write::write_all (4,834 samples, 8.93%)</title><rect x="76.1642%" y="501" width="8.9292%" height="15" fill="rgb(219,210,51)" fg:x="41233" fg:w="4834"/><text x="76.4142%" y="511.50">std::io::Writ..</text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (4,798 samples, 8.86%)</title><rect x="76.2307%" y="485" width="8.8627%" height="15" fill="rgb(209,140,6)" fg:x="41269" fg:w="4798"/><text x="76.4807%" y="495.50">std::os::unix..</text></g><g><title>std::sys::unix::net::Socket::write (4,798 samples, 8.86%)</title><rect x="76.2307%" y="469" width="8.8627%" height="15" fill="rgb(221,188,24)" fg:x="41269" fg:w="4798"/><text x="76.4807%" y="479.50">std::sys::uni..</text></g><g><title>std::sys::unix::fd::FileDesc::write (4,798 samples, 8.86%)</title><rect x="76.2307%" y="453" width="8.8627%" height="15" fill="rgb(232,154,20)" fg:x="41269" fg:w="4798"/><text x="76.4807%" y="463.50">std::sys::uni..</text></g><g><title>__GI___libc_write (4,794 samples, 8.86%)</title><rect x="76.2381%" y="437" width="8.8553%" height="15" fill="rgb(244,137,50)" fg:x="41273" fg:w="4794"/><text x="76.4881%" y="447.50">__GI___libc_w..</text></g><g><title>syscall_return_via_sysret (220 samples, 0.41%)</title><rect x="84.6870%" y="421" width="0.4064%" height="15" fill="rgb(225,185,43)" fg:x="45847" fg:w="220"/><text x="84.9370%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::flush (6,359 samples, 11.75%)</title><rect x="73.3528%" y="533" width="11.7461%" height="15" fill="rgb(213,205,38)" fg:x="39711" fg:w="6359"/><text x="73.6028%" y="543.50">&lt;yakvdb::disk::fi..</text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::save (5,879 samples, 10.86%)</title><rect x="74.2394%" y="517" width="10.8595%" height="15" fill="rgb(236,73,12)" fg:x="40191" fg:w="5879"/><text x="74.4894%" y="527.50">yakvdb::disk::fi..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.02%)</title><rect x="85.1303%" y="277" width="0.0166%" height="15" fill="rgb(235,219,13)" fg:x="46087" fg:w="9"/><text x="85.3803%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.02%)</title><rect x="85.1303%" y="261" width="0.0166%" height="15" fill="rgb(218,59,36)" fg:x="46087" fg:w="9"/><text x="85.3803%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.02%)</title><rect x="85.1303%" y="245" width="0.0166%" height="15" fill="rgb(205,110,39)" fg:x="46087" fg:w="9"/><text x="85.3803%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.02%)</title><rect x="85.1303%" y="229" width="0.0166%" height="15" fill="rgb(218,206,42)" fg:x="46087" fg:w="9"/><text x="85.3803%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.02%)</title><rect x="85.1303%" y="213" width="0.0166%" height="15" fill="rgb(248,125,24)" fg:x="46087" fg:w="9"/><text x="85.3803%" y="223.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.02%)</title><rect x="85.1303%" y="197" width="0.0166%" height="15" fill="rgb(242,28,27)" fg:x="46087" fg:w="9"/><text x="85.3803%" y="207.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.02%)</title><rect x="85.1303%" y="181" width="0.0166%" height="15" fill="rgb(216,228,15)" fg:x="46087" fg:w="9"/><text x="85.3803%" y="191.50"></text></g><g><title>_int_malloc (7 samples, 0.01%)</title><rect x="85.1340%" y="165" width="0.0129%" height="15" fill="rgb(235,116,46)" fg:x="46089" fg:w="7"/><text x="85.3840%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.03%)</title><rect x="85.1211%" y="405" width="0.0296%" height="15" fill="rgb(224,18,32)" fg:x="46082" fg:w="16"/><text x="85.3711%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.03%)</title><rect x="85.1248%" y="389" width="0.0259%" height="15" fill="rgb(252,5,12)" fg:x="46084" fg:w="14"/><text x="85.3748%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.02%)</title><rect x="85.1303%" y="373" width="0.0203%" height="15" fill="rgb(251,36,5)" fg:x="46087" fg:w="11"/><text x="85.3803%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::copy::{{closure}} (11 samples, 0.02%)</title><rect x="85.1303%" y="357" width="0.0203%" height="15" fill="rgb(217,53,14)" fg:x="46087" fg:w="11"/><text x="85.3803%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11 samples, 0.02%)</title><rect x="85.1303%" y="341" width="0.0203%" height="15" fill="rgb(215,86,45)" fg:x="46087" fg:w="11"/><text x="85.3803%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.02%)</title><rect x="85.1303%" y="325" width="0.0203%" height="15" fill="rgb(242,169,11)" fg:x="46087" fg:w="11"/><text x="85.3803%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.02%)</title><rect x="85.1303%" y="309" width="0.0203%" height="15" fill="rgb(211,213,45)" fg:x="46087" fg:w="11"/><text x="85.3803%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.02%)</title><rect x="85.1303%" y="293" width="0.0203%" height="15" fill="rgb(205,88,11)" fg:x="46087" fg:w="11"/><text x="85.3803%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="85.1506%" y="405" width="0.0111%" height="15" fill="rgb(252,69,26)" fg:x="46098" fg:w="6"/><text x="85.4006%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="85.1506%" y="389" width="0.0111%" height="15" fill="rgb(246,123,37)" fg:x="46098" fg:w="6"/><text x="85.4006%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="85.1506%" y="373" width="0.0111%" height="15" fill="rgb(212,205,5)" fg:x="46098" fg:w="6"/><text x="85.4006%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.01%)</title><rect x="85.1506%" y="357" width="0.0111%" height="15" fill="rgb(253,148,0)" fg:x="46098" fg:w="6"/><text x="85.4006%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="85.1506%" y="341" width="0.0111%" height="15" fill="rgb(239,22,4)" fg:x="46098" fg:w="6"/><text x="85.4006%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.01%)</title><rect x="85.1506%" y="325" width="0.0111%" height="15" fill="rgb(226,26,53)" fg:x="46098" fg:w="6"/><text x="85.4006%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.01%)</title><rect x="85.1506%" y="309" width="0.0111%" height="15" fill="rgb(225,229,45)" fg:x="46098" fg:w="6"/><text x="85.4006%" y="319.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.01%)</title><rect x="85.1506%" y="293" width="0.0111%" height="15" fill="rgb(220,60,37)" fg:x="46098" fg:w="6"/><text x="85.4006%" y="303.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.01%)</title><rect x="85.1506%" y="277" width="0.0111%" height="15" fill="rgb(217,180,35)" fg:x="46098" fg:w="6"/><text x="85.4006%" y="287.50"></text></g><g><title>_int_realloc (6 samples, 0.01%)</title><rect x="85.1506%" y="261" width="0.0111%" height="15" fill="rgb(229,7,53)" fg:x="46098" fg:w="6"/><text x="85.4006%" y="271.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::copy (24 samples, 0.04%)</title><rect x="85.1192%" y="517" width="0.0443%" height="15" fill="rgb(254,137,3)" fg:x="46081" fg:w="24"/><text x="85.3692%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.04%)</title><rect x="85.1192%" y="501" width="0.0443%" height="15" fill="rgb(215,140,41)" fg:x="46081" fg:w="24"/><text x="85.3692%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.04%)</title><rect x="85.1192%" y="485" width="0.0443%" height="15" fill="rgb(250,80,15)" fg:x="46081" fg:w="24"/><text x="85.3692%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.04%)</title><rect x="85.1192%" y="469" width="0.0443%" height="15" fill="rgb(252,191,6)" fg:x="46081" fg:w="24"/><text x="85.3692%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (24 samples, 0.04%)</title><rect x="85.1192%" y="453" width="0.0443%" height="15" fill="rgb(246,217,18)" fg:x="46081" fg:w="24"/><text x="85.3692%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 0.04%)</title><rect x="85.1192%" y="437" width="0.0443%" height="15" fill="rgb(223,93,7)" fg:x="46081" fg:w="24"/><text x="85.3692%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (24 samples, 0.04%)</title><rect x="85.1192%" y="421" width="0.0443%" height="15" fill="rgb(225,55,52)" fg:x="46081" fg:w="24"/><text x="85.3692%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::put_ref (6 samples, 0.01%)</title><rect x="85.1636%" y="517" width="0.0111%" height="15" fill="rgb(240,31,24)" fg:x="46105" fg:w="6"/><text x="85.4136%" y="527.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry (6 samples, 0.01%)</title><rect x="85.1636%" y="501" width="0.0111%" height="15" fill="rgb(205,56,52)" fg:x="46105" fg:w="6"/><text x="85.4136%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (14 samples, 0.03%)</title><rect x="85.2190%" y="421" width="0.0259%" height="15" fill="rgb(246,146,12)" fg:x="46135" fg:w="14"/><text x="85.4690%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (27 samples, 0.05%)</title><rect x="85.2171%" y="453" width="0.0499%" height="15" fill="rgb(239,84,36)" fg:x="46134" fg:w="27"/><text x="85.4671%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (27 samples, 0.05%)</title><rect x="85.2171%" y="437" width="0.0499%" height="15" fill="rgb(207,41,40)" fg:x="46134" fg:w="27"/><text x="85.4671%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.02%)</title><rect x="85.2448%" y="421" width="0.0222%" height="15" fill="rgb(241,179,25)" fg:x="46149" fg:w="12"/><text x="85.4948%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key::{{closure}} (9 samples, 0.02%)</title><rect x="85.2504%" y="405" width="0.0166%" height="15" fill="rgb(210,0,34)" fg:x="46152" fg:w="9"/><text x="85.5004%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.01%)</title><rect x="85.2541%" y="389" width="0.0129%" height="15" fill="rgb(225,217,29)" fg:x="46154" fg:w="7"/><text x="85.5041%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.01%)</title><rect x="85.2541%" y="373" width="0.0129%" height="15" fill="rgb(216,191,38)" fg:x="46154" fg:w="7"/><text x="85.5041%" y="383.50"></text></g><g><title>__memcmp_sse4_1 (14 samples, 0.03%)</title><rect x="85.2725%" y="405" width="0.0259%" height="15" fill="rgb(232,140,52)" fg:x="46164" fg:w="14"/><text x="85.5225%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (67 samples, 0.12%)</title><rect x="85.1783%" y="485" width="0.1238%" height="15" fill="rgb(223,158,51)" fg:x="46113" fg:w="67"/><text x="85.4283%" y="495.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (60 samples, 0.11%)</title><rect x="85.1913%" y="469" width="0.1108%" height="15" fill="rgb(235,29,51)" fg:x="46120" fg:w="60"/><text x="85.4413%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (19 samples, 0.04%)</title><rect x="85.2670%" y="453" width="0.0351%" height="15" fill="rgb(215,181,18)" fg:x="46161" fg:w="19"/><text x="85.5170%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (19 samples, 0.04%)</title><rect x="85.2670%" y="437" width="0.0351%" height="15" fill="rgb(227,125,34)" fg:x="46161" fg:w="19"/><text x="85.5170%" y="447.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (19 samples, 0.04%)</title><rect x="85.2670%" y="421" width="0.0351%" height="15" fill="rgb(230,197,49)" fg:x="46161" fg:w="19"/><text x="85.5170%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (8 samples, 0.01%)</title><rect x="85.3538%" y="309" width="0.0148%" height="15" fill="rgb(239,141,16)" fg:x="46208" fg:w="8"/><text x="85.6038%" y="319.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (42 samples, 0.08%)</title><rect x="85.3040%" y="357" width="0.0776%" height="15" fill="rgb(225,105,43)" fg:x="46181" fg:w="42"/><text x="85.5540%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (29 samples, 0.05%)</title><rect x="85.3280%" y="341" width="0.0536%" height="15" fill="rgb(214,131,14)" fg:x="46194" fg:w="29"/><text x="85.5780%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (29 samples, 0.05%)</title><rect x="85.3280%" y="325" width="0.0536%" height="15" fill="rgb(229,177,11)" fg:x="46194" fg:w="29"/><text x="85.5780%" y="335.50"></text></g><g><title>yakvdb::disk::block::get_u32 (7 samples, 0.01%)</title><rect x="85.3686%" y="309" width="0.0129%" height="15" fill="rgb(231,180,14)" fg:x="46216" fg:w="7"/><text x="85.6186%" y="319.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::fits (47 samples, 0.09%)</title><rect x="85.3021%" y="485" width="0.0868%" height="15" fill="rgb(232,88,2)" fg:x="46180" fg:w="47"/><text x="85.5521%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (47 samples, 0.09%)</title><rect x="85.3021%" y="469" width="0.0868%" height="15" fill="rgb(205,220,8)" fg:x="46180" fg:w="47"/><text x="85.5521%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (46 samples, 0.08%)</title><rect x="85.3040%" y="453" width="0.0850%" height="15" fill="rgb(225,23,53)" fg:x="46181" fg:w="46"/><text x="85.5540%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (46 samples, 0.08%)</title><rect x="85.3040%" y="437" width="0.0850%" height="15" fill="rgb(213,62,29)" fg:x="46181" fg:w="46"/><text x="85.5540%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (46 samples, 0.08%)</title><rect x="85.3040%" y="421" width="0.0850%" height="15" fill="rgb(227,75,7)" fg:x="46181" fg:w="46"/><text x="85.5540%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (46 samples, 0.08%)</title><rect x="85.3040%" y="405" width="0.0850%" height="15" fill="rgb(207,105,14)" fg:x="46181" fg:w="46"/><text x="85.5540%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (46 samples, 0.08%)</title><rect x="85.3040%" y="389" width="0.0850%" height="15" fill="rgb(245,62,29)" fg:x="46181" fg:w="46"/><text x="85.5540%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (46 samples, 0.08%)</title><rect x="85.3040%" y="373" width="0.0850%" height="15" fill="rgb(236,202,4)" fg:x="46181" fg:w="46"/><text x="85.5540%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (10 samples, 0.02%)</title><rect x="85.3926%" y="485" width="0.0185%" height="15" fill="rgb(250,67,1)" fg:x="46229" fg:w="10"/><text x="85.6426%" y="495.50"></text></g><g><title>core::intrinsics::copy (7 samples, 0.01%)</title><rect x="85.3982%" y="469" width="0.0129%" height="15" fill="rgb(253,115,44)" fg:x="46232" fg:w="7"/><text x="85.6482%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.18%)</title><rect x="85.4166%" y="389" width="0.1792%" height="15" fill="rgb(251,139,18)" fg:x="46242" fg:w="97"/><text x="85.6666%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (97 samples, 0.18%)</title><rect x="85.4166%" y="373" width="0.1792%" height="15" fill="rgb(218,22,32)" fg:x="46242" fg:w="97"/><text x="85.6666%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (97 samples, 0.18%)</title><rect x="85.4166%" y="357" width="0.1792%" height="15" fill="rgb(243,53,5)" fg:x="46242" fg:w="97"/><text x="85.6666%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (92 samples, 0.17%)</title><rect x="85.4259%" y="341" width="0.1699%" height="15" fill="rgb(227,56,16)" fg:x="46247" fg:w="92"/><text x="85.6759%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (38 samples, 0.07%)</title><rect x="85.5256%" y="325" width="0.0702%" height="15" fill="rgb(245,53,0)" fg:x="46301" fg:w="38"/><text x="85.7756%" y="335.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (38 samples, 0.07%)</title><rect x="85.5256%" y="309" width="0.0702%" height="15" fill="rgb(216,170,35)" fg:x="46301" fg:w="38"/><text x="85.7756%" y="319.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (35 samples, 0.06%)</title><rect x="85.5312%" y="293" width="0.0647%" height="15" fill="rgb(211,200,8)" fg:x="46304" fg:w="35"/><text x="85.7812%" y="303.50"></text></g><g><title>yakvdb::disk::block::get_u32 (11 samples, 0.02%)</title><rect x="85.5755%" y="277" width="0.0203%" height="15" fill="rgb(228,204,44)" fg:x="46328" fg:w="11"/><text x="85.8255%" y="287.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (8 samples, 0.01%)</title><rect x="85.6124%" y="229" width="0.0148%" height="15" fill="rgb(214,121,17)" fg:x="46348" fg:w="8"/><text x="85.8624%" y="239.50"></text></g><g><title>_int_free (12 samples, 0.02%)</title><rect x="85.6272%" y="229" width="0.0222%" height="15" fill="rgb(233,64,38)" fg:x="46356" fg:w="12"/><text x="85.8772%" y="239.50"></text></g><g><title>__GI___libc_realloc (66 samples, 0.12%)</title><rect x="85.5977%" y="261" width="0.1219%" height="15" fill="rgb(253,54,19)" fg:x="46340" fg:w="66"/><text x="85.8477%" y="271.50"></text></g><g><title>_int_realloc (61 samples, 0.11%)</title><rect x="85.6069%" y="245" width="0.1127%" height="15" fill="rgb(253,94,18)" fg:x="46345" fg:w="61"/><text x="85.8569%" y="255.50"></text></g><g><title>_int_malloc (38 samples, 0.07%)</title><rect x="85.6494%" y="229" width="0.0702%" height="15" fill="rgb(227,57,52)" fg:x="46368" fg:w="38"/><text x="85.8994%" y="239.50"></text></g><g><title>malloc_consolidate (14 samples, 0.03%)</title><rect x="85.6937%" y="213" width="0.0259%" height="15" fill="rgb(230,228,50)" fg:x="46392" fg:w="14"/><text x="85.9437%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (67 samples, 0.12%)</title><rect x="85.5977%" y="309" width="0.1238%" height="15" fill="rgb(217,205,27)" fg:x="46340" fg:w="67"/><text x="85.8477%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (67 samples, 0.12%)</title><rect x="85.5977%" y="293" width="0.1238%" height="15" fill="rgb(252,71,50)" fg:x="46340" fg:w="67"/><text x="85.8477%" y="303.50"></text></g><g><title>alloc::alloc::realloc (67 samples, 0.12%)</title><rect x="85.5977%" y="277" width="0.1238%" height="15" fill="rgb(209,86,4)" fg:x="46340" fg:w="67"/><text x="85.8477%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (71 samples, 0.13%)</title><rect x="85.5958%" y="389" width="0.1311%" height="15" fill="rgb(229,94,0)" fg:x="46339" fg:w="71"/><text x="85.8458%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (71 samples, 0.13%)</title><rect x="85.5958%" y="373" width="0.1311%" height="15" fill="rgb(252,223,21)" fg:x="46339" fg:w="71"/><text x="85.8458%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (71 samples, 0.13%)</title><rect x="85.5958%" y="357" width="0.1311%" height="15" fill="rgb(230,210,4)" fg:x="46339" fg:w="71"/><text x="85.8458%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (71 samples, 0.13%)</title><rect x="85.5958%" y="341" width="0.1311%" height="15" fill="rgb(240,149,38)" fg:x="46339" fg:w="71"/><text x="85.8458%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (70 samples, 0.13%)</title><rect x="85.5977%" y="325" width="0.1293%" height="15" fill="rgb(254,105,20)" fg:x="46340" fg:w="70"/><text x="85.8477%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (192 samples, 0.35%)</title><rect x="85.4111%" y="421" width="0.3547%" height="15" fill="rgb(253,87,46)" fg:x="46239" fg:w="192"/><text x="85.6611%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (192 samples, 0.35%)</title><rect x="85.4111%" y="405" width="0.3547%" height="15" fill="rgb(253,116,33)" fg:x="46239" fg:w="192"/><text x="85.6611%" y="415.50"></text></g><g><title>core::ptr::write (21 samples, 0.04%)</title><rect x="85.7270%" y="389" width="0.0388%" height="15" fill="rgb(229,198,5)" fg:x="46410" fg:w="21"/><text x="85.9770%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (196 samples, 0.36%)</title><rect x="85.4111%" y="485" width="0.3620%" height="15" fill="rgb(242,38,37)" fg:x="46239" fg:w="196"/><text x="85.6611%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (196 samples, 0.36%)</title><rect x="85.4111%" y="469" width="0.3620%" height="15" fill="rgb(242,69,53)" fg:x="46239" fg:w="196"/><text x="85.6611%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (196 samples, 0.36%)</title><rect x="85.4111%" y="453" width="0.3620%" height="15" fill="rgb(249,80,16)" fg:x="46239" fg:w="196"/><text x="85.6611%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (196 samples, 0.36%)</title><rect x="85.4111%" y="437" width="0.3620%" height="15" fill="rgb(206,128,11)" fg:x="46239" fg:w="196"/><text x="85.6611%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (11 samples, 0.02%)</title><rect x="85.8101%" y="357" width="0.0203%" height="15" fill="rgb(212,35,20)" fg:x="46455" fg:w="11"/><text x="86.0601%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (11 samples, 0.02%)</title><rect x="85.8101%" y="341" width="0.0203%" height="15" fill="rgb(236,79,13)" fg:x="46455" fg:w="11"/><text x="86.0601%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (11 samples, 0.02%)</title><rect x="85.8101%" y="325" width="0.0203%" height="15" fill="rgb(233,123,3)" fg:x="46455" fg:w="11"/><text x="86.0601%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (16 samples, 0.03%)</title><rect x="85.8304%" y="357" width="0.0296%" height="15" fill="rgb(214,93,52)" fg:x="46466" fg:w="16"/><text x="86.0804%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.03%)</title><rect x="85.8304%" y="341" width="0.0296%" height="15" fill="rgb(251,37,40)" fg:x="46466" fg:w="16"/><text x="86.0804%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (48 samples, 0.09%)</title><rect x="85.7842%" y="437" width="0.0887%" height="15" fill="rgb(227,80,54)" fg:x="46441" fg:w="48"/><text x="86.0342%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (48 samples, 0.09%)</title><rect x="85.7842%" y="421" width="0.0887%" height="15" fill="rgb(254,48,11)" fg:x="46441" fg:w="48"/><text x="86.0342%" y="431.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (48 samples, 0.09%)</title><rect x="85.7842%" y="405" width="0.0887%" height="15" fill="rgb(235,193,26)" fg:x="46441" fg:w="48"/><text x="86.0342%" y="415.50"></text></g><g><title>yakvdb::disk::block::put_slot (39 samples, 0.07%)</title><rect x="85.8008%" y="389" width="0.0720%" height="15" fill="rgb(229,99,21)" fg:x="46450" fg:w="39"/><text x="86.0508%" y="399.50"></text></g><g><title>yakvdb::disk::block::put_u32 (34 samples, 0.06%)</title><rect x="85.8101%" y="373" width="0.0628%" height="15" fill="rgb(211,140,41)" fg:x="46455" fg:w="34"/><text x="86.0601%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.01%)</title><rect x="85.8599%" y="357" width="0.0129%" height="15" fill="rgb(240,227,30)" fg:x="46482" fg:w="7"/><text x="86.1099%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 0.01%)</title><rect x="85.8599%" y="341" width="0.0129%" height="15" fill="rgb(215,224,45)" fg:x="46482" fg:w="7"/><text x="86.1099%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (67 samples, 0.12%)</title><rect x="85.7731%" y="485" width="0.1238%" height="15" fill="rgb(206,123,31)" fg:x="46435" fg:w="67"/><text x="86.0231%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (67 samples, 0.12%)</title><rect x="85.7731%" y="469" width="0.1238%" height="15" fill="rgb(210,138,16)" fg:x="46435" fg:w="67"/><text x="86.0231%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (66 samples, 0.12%)</title><rect x="85.7750%" y="453" width="0.1219%" height="15" fill="rgb(228,57,28)" fg:x="46436" fg:w="66"/><text x="86.0250%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;yakvdb::api::page::Slot&gt;&gt; (13 samples, 0.02%)</title><rect x="85.8729%" y="437" width="0.0240%" height="15" fill="rgb(242,170,10)" fg:x="46489" fg:w="13"/><text x="86.1229%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="85.8729%" y="421" width="0.0240%" height="15" fill="rgb(228,214,39)" fg:x="46489" fg:w="13"/><text x="86.1229%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;yakvdb::api::page::Slot,alloc::alloc::Global&gt;&gt; (13 samples, 0.02%)</title><rect x="85.8729%" y="405" width="0.0240%" height="15" fill="rgb(218,179,33)" fg:x="46489" fg:w="13"/><text x="86.1229%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="85.8729%" y="389" width="0.0240%" height="15" fill="rgb(235,193,39)" fg:x="46489" fg:w="13"/><text x="86.1229%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;yakvdb::api::page::Slot&gt;&gt; (13 samples, 0.02%)</title><rect x="85.8729%" y="373" width="0.0240%" height="15" fill="rgb(219,221,36)" fg:x="46489" fg:w="13"/><text x="86.1229%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="85.8729%" y="357" width="0.0240%" height="15" fill="rgb(248,218,19)" fg:x="46489" fg:w="13"/><text x="86.1229%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.02%)</title><rect x="85.8729%" y="341" width="0.0240%" height="15" fill="rgb(205,50,9)" fg:x="46489" fg:w="13"/><text x="86.1229%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.02%)</title><rect x="85.8747%" y="325" width="0.0222%" height="15" fill="rgb(238,81,28)" fg:x="46490" fg:w="12"/><text x="86.1247%" y="335.50"></text></g><g><title>_int_free (10 samples, 0.02%)</title><rect x="85.8784%" y="309" width="0.0185%" height="15" fill="rgb(235,110,19)" fg:x="46492" fg:w="10"/><text x="86.1284%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (15 samples, 0.03%)</title><rect x="85.8969%" y="485" width="0.0277%" height="15" fill="rgb(214,7,14)" fg:x="46502" fg:w="15"/><text x="86.1469%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (15 samples, 0.03%)</title><rect x="85.8969%" y="469" width="0.0277%" height="15" fill="rgb(211,77,3)" fg:x="46502" fg:w="15"/><text x="86.1469%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (15 samples, 0.03%)</title><rect x="85.8969%" y="453" width="0.0277%" height="15" fill="rgb(229,5,9)" fg:x="46502" fg:w="15"/><text x="86.1469%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.03%)</title><rect x="85.8969%" y="437" width="0.0277%" height="15" fill="rgb(225,90,11)" fg:x="46502" fg:w="15"/><text x="86.1469%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (15 samples, 0.03%)</title><rect x="85.8969%" y="421" width="0.0277%" height="15" fill="rgb(242,56,8)" fg:x="46502" fg:w="15"/><text x="86.1469%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.01%)</title><rect x="85.9098%" y="405" width="0.0148%" height="15" fill="rgb(249,212,39)" fg:x="46509" fg:w="8"/><text x="86.1598%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::{{closure}} (8 samples, 0.01%)</title><rect x="85.9098%" y="389" width="0.0148%" height="15" fill="rgb(236,90,9)" fg:x="46509" fg:w="8"/><text x="86.1598%" y="399.50"></text></g><g><title>core::cmp::min_by (8 samples, 0.01%)</title><rect x="85.9098%" y="373" width="0.0148%" height="15" fill="rgb(206,88,35)" fg:x="46509" fg:w="8"/><text x="86.1598%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::put_val (408 samples, 0.75%)</title><rect x="85.1746%" y="517" width="0.7536%" height="15" fill="rgb(205,126,30)" fg:x="46111" fg:w="408"/><text x="85.4246%" y="527.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry (408 samples, 0.75%)</title><rect x="85.1746%" y="501" width="0.7536%" height="15" fill="rgb(230,176,12)" fg:x="46111" fg:w="408"/><text x="85.4246%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::merge (460 samples, 0.85%)</title><rect x="85.0989%" y="533" width="0.8497%" height="15" fill="rgb(243,19,9)" fg:x="46070" fg:w="460"/><text x="85.3489%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.01%)</title><rect x="85.9375%" y="517" width="0.0111%" height="15" fill="rgb(245,171,17)" fg:x="46524" fg:w="6"/><text x="86.1875%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.01%)</title><rect x="85.9375%" y="501" width="0.0111%" height="15" fill="rgb(227,52,21)" fg:x="46524" fg:w="6"/><text x="86.1875%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="85.9375%" y="485" width="0.0111%" height="15" fill="rgb(238,69,14)" fg:x="46524" fg:w="6"/><text x="86.1875%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.02%)</title><rect x="85.9634%" y="357" width="0.0222%" height="15" fill="rgb(241,156,39)" fg:x="46538" fg:w="12"/><text x="86.2134%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (21 samples, 0.04%)</title><rect x="85.9911%" y="341" width="0.0388%" height="15" fill="rgb(212,227,28)" fg:x="46553" fg:w="21"/><text x="86.2411%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (44 samples, 0.08%)</title><rect x="85.9578%" y="405" width="0.0813%" height="15" fill="rgb(209,118,27)" fg:x="46535" fg:w="44"/><text x="86.2078%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (44 samples, 0.08%)</title><rect x="85.9578%" y="389" width="0.0813%" height="15" fill="rgb(226,102,5)" fg:x="46535" fg:w="44"/><text x="86.2078%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (44 samples, 0.08%)</title><rect x="85.9578%" y="373" width="0.0813%" height="15" fill="rgb(223,34,3)" fg:x="46535" fg:w="44"/><text x="86.2078%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29 samples, 0.05%)</title><rect x="85.9856%" y="357" width="0.0536%" height="15" fill="rgb(221,81,38)" fg:x="46550" fg:w="29"/><text x="86.2356%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (46 samples, 0.08%)</title><rect x="85.9578%" y="437" width="0.0850%" height="15" fill="rgb(236,219,28)" fg:x="46535" fg:w="46"/><text x="86.2078%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (46 samples, 0.08%)</title><rect x="85.9578%" y="421" width="0.0850%" height="15" fill="rgb(213,200,14)" fg:x="46535" fg:w="46"/><text x="86.2078%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.02%)</title><rect x="86.0613%" y="373" width="0.0222%" height="15" fill="rgb(240,33,19)" fg:x="46591" fg:w="12"/><text x="86.3113%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (11 samples, 0.02%)</title><rect x="86.0631%" y="357" width="0.0203%" height="15" fill="rgb(233,113,27)" fg:x="46592" fg:w="11"/><text x="86.3131%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (14 samples, 0.03%)</title><rect x="86.0613%" y="389" width="0.0259%" height="15" fill="rgb(220,221,18)" fg:x="46591" fg:w="14"/><text x="86.3113%" y="399.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (84 samples, 0.16%)</title><rect x="85.9542%" y="501" width="0.1552%" height="15" fill="rgb(238,92,8)" fg:x="46533" fg:w="84"/><text x="86.2042%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (84 samples, 0.16%)</title><rect x="85.9542%" y="485" width="0.1552%" height="15" fill="rgb(222,164,16)" fg:x="46533" fg:w="84"/><text x="86.2042%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (84 samples, 0.16%)</title><rect x="85.9542%" y="469" width="0.1552%" height="15" fill="rgb(241,119,3)" fg:x="46533" fg:w="84"/><text x="86.2042%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (84 samples, 0.16%)</title><rect x="85.9542%" y="453" width="0.1552%" height="15" fill="rgb(241,44,8)" fg:x="46533" fg:w="84"/><text x="86.2042%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (36 samples, 0.07%)</title><rect x="86.0428%" y="437" width="0.0665%" height="15" fill="rgb(230,36,40)" fg:x="46581" fg:w="36"/><text x="86.2928%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (36 samples, 0.07%)</title><rect x="86.0428%" y="421" width="0.0665%" height="15" fill="rgb(243,16,36)" fg:x="46581" fg:w="36"/><text x="86.2928%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (36 samples, 0.07%)</title><rect x="86.0428%" y="405" width="0.0665%" height="15" fill="rgb(231,4,26)" fg:x="46581" fg:w="36"/><text x="86.2928%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (86 samples, 0.16%)</title><rect x="85.9523%" y="517" width="0.1589%" height="15" fill="rgb(240,9,31)" fg:x="46532" fg:w="86"/><text x="86.2023%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.02%)</title><rect x="86.1352%" y="325" width="0.0166%" height="15" fill="rgb(207,173,15)" fg:x="46631" fg:w="9"/><text x="86.3852%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.04%)</title><rect x="86.1186%" y="421" width="0.0369%" height="15" fill="rgb(224,192,53)" fg:x="46622" fg:w="20"/><text x="86.3686%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20 samples, 0.04%)</title><rect x="86.1186%" y="405" width="0.0369%" height="15" fill="rgb(223,67,28)" fg:x="46622" fg:w="20"/><text x="86.3686%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="86.1222%" y="389" width="0.0332%" height="15" fill="rgb(211,20,47)" fg:x="46624" fg:w="18"/><text x="86.3722%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="86.1222%" y="373" width="0.0332%" height="15" fill="rgb(240,228,2)" fg:x="46624" fg:w="18"/><text x="86.3722%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="86.1222%" y="357" width="0.0332%" height="15" fill="rgb(248,151,12)" fg:x="46624" fg:w="18"/><text x="86.3722%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.02%)</title><rect x="86.1315%" y="341" width="0.0240%" height="15" fill="rgb(244,8,39)" fg:x="46629" fg:w="13"/><text x="86.3815%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.02%)</title><rect x="86.1740%" y="357" width="0.0166%" height="15" fill="rgb(222,26,8)" fg:x="46652" fg:w="9"/><text x="86.4240%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (8 samples, 0.01%)</title><rect x="86.1758%" y="341" width="0.0148%" height="15" fill="rgb(213,106,44)" fg:x="46653" fg:w="8"/><text x="86.4258%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (10 samples, 0.02%)</title><rect x="86.1740%" y="373" width="0.0185%" height="15" fill="rgb(214,129,20)" fg:x="46652" fg:w="10"/><text x="86.4240%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (48 samples, 0.09%)</title><rect x="86.1186%" y="469" width="0.0887%" height="15" fill="rgb(212,32,13)" fg:x="46622" fg:w="48"/><text x="86.3686%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (48 samples, 0.09%)</title><rect x="86.1186%" y="453" width="0.0887%" height="15" fill="rgb(208,168,33)" fg:x="46622" fg:w="48"/><text x="86.3686%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (48 samples, 0.09%)</title><rect x="86.1186%" y="437" width="0.0887%" height="15" fill="rgb(231,207,8)" fg:x="46622" fg:w="48"/><text x="86.3686%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (28 samples, 0.05%)</title><rect x="86.1555%" y="421" width="0.0517%" height="15" fill="rgb(235,219,23)" fg:x="46642" fg:w="28"/><text x="86.4055%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (28 samples, 0.05%)</title><rect x="86.1555%" y="405" width="0.0517%" height="15" fill="rgb(226,216,26)" fg:x="46642" fg:w="28"/><text x="86.4055%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (28 samples, 0.05%)</title><rect x="86.1555%" y="389" width="0.0517%" height="15" fill="rgb(239,137,16)" fg:x="46642" fg:w="28"/><text x="86.4055%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.02%)</title><rect x="86.2183%" y="341" width="0.0166%" height="15" fill="rgb(207,12,36)" fg:x="46676" fg:w="9"/><text x="86.4683%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (22 samples, 0.04%)</title><rect x="86.2405%" y="325" width="0.0406%" height="15" fill="rgb(210,214,24)" fg:x="46688" fg:w="22"/><text x="86.4905%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (42 samples, 0.08%)</title><rect x="86.2109%" y="389" width="0.0776%" height="15" fill="rgb(206,56,30)" fg:x="46672" fg:w="42"/><text x="86.4609%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (42 samples, 0.08%)</title><rect x="86.2109%" y="373" width="0.0776%" height="15" fill="rgb(228,143,26)" fg:x="46672" fg:w="42"/><text x="86.4609%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (42 samples, 0.08%)</title><rect x="86.2109%" y="357" width="0.0776%" height="15" fill="rgb(216,218,46)" fg:x="46672" fg:w="42"/><text x="86.4609%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29 samples, 0.05%)</title><rect x="86.2349%" y="341" width="0.0536%" height="15" fill="rgb(206,6,19)" fg:x="46685" fg:w="29"/><text x="86.4849%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (43 samples, 0.08%)</title><rect x="86.2109%" y="421" width="0.0794%" height="15" fill="rgb(239,177,51)" fg:x="46672" fg:w="43"/><text x="86.4609%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (43 samples, 0.08%)</title><rect x="86.2109%" y="405" width="0.0794%" height="15" fill="rgb(216,55,25)" fg:x="46672" fg:w="43"/><text x="86.4609%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="86.3033%" y="373" width="0.0166%" height="15" fill="rgb(231,163,29)" fg:x="46722" fg:w="9"/><text x="86.5533%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.01%)</title><rect x="86.3051%" y="357" width="0.0148%" height="15" fill="rgb(232,149,50)" fg:x="46723" fg:w="8"/><text x="86.5551%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (31 samples, 0.06%)</title><rect x="86.2903%" y="421" width="0.0573%" height="15" fill="rgb(223,142,48)" fg:x="46715" fg:w="31"/><text x="86.5403%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (30 samples, 0.06%)</title><rect x="86.2922%" y="405" width="0.0554%" height="15" fill="rgb(245,83,23)" fg:x="46716" fg:w="30"/><text x="86.5422%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (30 samples, 0.06%)</title><rect x="86.2922%" y="389" width="0.0554%" height="15" fill="rgb(224,63,2)" fg:x="46716" fg:w="30"/><text x="86.5422%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (80 samples, 0.15%)</title><rect x="86.2072%" y="469" width="0.1478%" height="15" fill="rgb(218,65,53)" fg:x="46670" fg:w="80"/><text x="86.4572%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (80 samples, 0.15%)</title><rect x="86.2072%" y="453" width="0.1478%" height="15" fill="rgb(221,84,29)" fg:x="46670" fg:w="80"/><text x="86.4572%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (78 samples, 0.14%)</title><rect x="86.2109%" y="437" width="0.1441%" height="15" fill="rgb(234,0,32)" fg:x="46672" fg:w="78"/><text x="86.4609%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (18 samples, 0.03%)</title><rect x="86.3790%" y="453" width="0.0332%" height="15" fill="rgb(206,20,16)" fg:x="46763" fg:w="18"/><text x="86.6290%" y="463.50"></text></g><g><title>core::intrinsics::copy (14 samples, 0.03%)</title><rect x="86.3864%" y="437" width="0.0259%" height="15" fill="rgb(244,172,18)" fg:x="46767" fg:w="14"/><text x="86.6364%" y="447.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (12 samples, 0.02%)</title><rect x="86.3901%" y="421" width="0.0222%" height="15" fill="rgb(254,133,1)" fg:x="46769" fg:w="12"/><text x="86.6401%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (41 samples, 0.08%)</title><rect x="86.4381%" y="405" width="0.0757%" height="15" fill="rgb(222,206,41)" fg:x="46795" fg:w="41"/><text x="86.6881%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (23 samples, 0.04%)</title><rect x="86.4714%" y="389" width="0.0425%" height="15" fill="rgb(212,3,42)" fg:x="46813" fg:w="23"/><text x="86.7214%" y="399.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (23 samples, 0.04%)</title><rect x="86.4714%" y="373" width="0.0425%" height="15" fill="rgb(241,11,4)" fg:x="46813" fg:w="23"/><text x="86.7214%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (23 samples, 0.04%)</title><rect x="86.4714%" y="357" width="0.0425%" height="15" fill="rgb(205,19,26)" fg:x="46813" fg:w="23"/><text x="86.7214%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (23 samples, 0.04%)</title><rect x="86.4714%" y="341" width="0.0425%" height="15" fill="rgb(210,179,32)" fg:x="46813" fg:w="23"/><text x="86.7214%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (23 samples, 0.04%)</title><rect x="86.4714%" y="325" width="0.0425%" height="15" fill="rgb(227,116,49)" fg:x="46813" fg:w="23"/><text x="86.7214%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (82 samples, 0.15%)</title><rect x="86.4233%" y="453" width="0.1515%" height="15" fill="rgb(211,146,6)" fg:x="46787" fg:w="82"/><text x="86.6733%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (82 samples, 0.15%)</title><rect x="86.4233%" y="437" width="0.1515%" height="15" fill="rgb(219,44,39)" fg:x="46787" fg:w="82"/><text x="86.6733%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (82 samples, 0.15%)</title><rect x="86.4233%" y="421" width="0.1515%" height="15" fill="rgb(234,128,11)" fg:x="46787" fg:w="82"/><text x="86.6733%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.06%)</title><rect x="86.5138%" y="405" width="0.0610%" height="15" fill="rgb(220,183,53)" fg:x="46836" fg:w="33"/><text x="86.7638%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;alloc::vec::Vec&lt;u32&gt;&gt;&gt; (14 samples, 0.03%)</title><rect x="86.5748%" y="453" width="0.0259%" height="15" fill="rgb(213,219,32)" fg:x="46869" fg:w="14"/><text x="86.8248%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (14 samples, 0.03%)</title><rect x="86.5748%" y="437" width="0.0259%" height="15" fill="rgb(232,156,16)" fg:x="46869" fg:w="14"/><text x="86.8248%" y="447.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="86.5748%" y="421" width="0.0259%" height="15" fill="rgb(246,135,34)" fg:x="46869" fg:w="14"/><text x="86.8248%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (14 samples, 0.03%)</title><rect x="86.5748%" y="405" width="0.0259%" height="15" fill="rgb(241,99,0)" fg:x="46869" fg:w="14"/><text x="86.8248%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (14 samples, 0.03%)</title><rect x="86.5748%" y="389" width="0.0259%" height="15" fill="rgb(222,103,45)" fg:x="46869" fg:w="14"/><text x="86.8248%" y="399.50"></text></g><g><title>core::mem::replace (14 samples, 0.03%)</title><rect x="86.5748%" y="373" width="0.0259%" height="15" fill="rgb(212,57,4)" fg:x="46869" fg:w="14"/><text x="86.8248%" y="383.50"></text></g><g><title>core::ptr::write (14 samples, 0.03%)</title><rect x="86.5748%" y="357" width="0.0259%" height="15" fill="rgb(215,68,47)" fg:x="46869" fg:w="14"/><text x="86.8248%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.03%)</title><rect x="86.6136%" y="309" width="0.0259%" height="15" fill="rgb(230,84,2)" fg:x="46890" fg:w="14"/><text x="86.8636%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.04%)</title><rect x="86.6044%" y="373" width="0.0388%" height="15" fill="rgb(220,102,14)" fg:x="46885" fg:w="21"/><text x="86.8544%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21 samples, 0.04%)</title><rect x="86.6044%" y="357" width="0.0388%" height="15" fill="rgb(240,10,32)" fg:x="46885" fg:w="21"/><text x="86.8544%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21 samples, 0.04%)</title><rect x="86.6044%" y="341" width="0.0388%" height="15" fill="rgb(215,47,27)" fg:x="46885" fg:w="21"/><text x="86.8544%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.03%)</title><rect x="86.6136%" y="325" width="0.0296%" height="15" fill="rgb(233,188,43)" fg:x="46890" fg:w="16"/><text x="86.8636%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 0.05%)</title><rect x="86.6007%" y="405" width="0.0462%" height="15" fill="rgb(253,190,1)" fg:x="46883" fg:w="25"/><text x="86.8507%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (25 samples, 0.05%)</title><rect x="86.6007%" y="389" width="0.0462%" height="15" fill="rgb(206,114,52)" fg:x="46883" fg:w="25"/><text x="86.8507%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="86.6561%" y="357" width="0.0129%" height="15" fill="rgb(233,120,37)" fg:x="46913" fg:w="7"/><text x="86.9061%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.01%)</title><rect x="86.6561%" y="341" width="0.0129%" height="15" fill="rgb(214,52,39)" fg:x="46913" fg:w="7"/><text x="86.9061%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14 samples, 0.03%)</title><rect x="86.6690%" y="341" width="0.0259%" height="15" fill="rgb(223,80,29)" fg:x="46920" fg:w="14"/><text x="86.9190%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (12 samples, 0.02%)</title><rect x="86.6727%" y="325" width="0.0222%" height="15" fill="rgb(230,101,40)" fg:x="46922" fg:w="12"/><text x="86.9227%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (18 samples, 0.03%)</title><rect x="86.6690%" y="357" width="0.0332%" height="15" fill="rgb(219,211,8)" fg:x="46920" fg:w="18"/><text x="86.9190%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (415 samples, 0.77%)</title><rect x="85.9486%" y="533" width="0.7666%" height="15" fill="rgb(252,126,28)" fg:x="46530" fg:w="415"/><text x="86.1986%" y="543.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (327 samples, 0.60%)</title><rect x="86.1112%" y="517" width="0.6040%" height="15" fill="rgb(215,56,38)" fg:x="46618" fg:w="327"/><text x="86.3612%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (327 samples, 0.60%)</title><rect x="86.1112%" y="501" width="0.6040%" height="15" fill="rgb(249,55,44)" fg:x="46618" fg:w="327"/><text x="86.3612%" y="511.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (325 samples, 0.60%)</title><rect x="86.1149%" y="485" width="0.6003%" height="15" fill="rgb(220,221,32)" fg:x="46620" fg:w="325"/><text x="86.3649%" y="495.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (195 samples, 0.36%)</title><rect x="86.3550%" y="469" width="0.3602%" height="15" fill="rgb(212,216,41)" fg:x="46750" fg:w="195"/><text x="86.6050%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (62 samples, 0.11%)</title><rect x="86.6007%" y="453" width="0.1145%" height="15" fill="rgb(228,213,43)" fg:x="46883" fg:w="62"/><text x="86.8507%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (62 samples, 0.11%)</title><rect x="86.6007%" y="437" width="0.1145%" height="15" fill="rgb(211,31,26)" fg:x="46883" fg:w="62"/><text x="86.8507%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (62 samples, 0.11%)</title><rect x="86.6007%" y="421" width="0.1145%" height="15" fill="rgb(229,202,19)" fg:x="46883" fg:w="62"/><text x="86.8507%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (37 samples, 0.07%)</title><rect x="86.6468%" y="405" width="0.0683%" height="15" fill="rgb(229,105,46)" fg:x="46908" fg:w="37"/><text x="86.8968%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (37 samples, 0.07%)</title><rect x="86.6468%" y="389" width="0.0683%" height="15" fill="rgb(235,108,1)" fg:x="46908" fg:w="37"/><text x="86.8968%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (37 samples, 0.07%)</title><rect x="86.6468%" y="373" width="0.0683%" height="15" fill="rgb(245,111,35)" fg:x="46908" fg:w="37"/><text x="86.8968%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.03%)</title><rect x="86.7410%" y="501" width="0.0314%" height="15" fill="rgb(219,185,31)" fg:x="46959" fg:w="17"/><text x="86.9910%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.02%)</title><rect x="86.8002%" y="341" width="0.0240%" height="15" fill="rgb(214,4,43)" fg:x="46991" fg:w="13"/><text x="87.0502%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (29 samples, 0.05%)</title><rect x="86.7761%" y="405" width="0.0536%" height="15" fill="rgb(235,227,40)" fg:x="46978" fg:w="29"/><text x="87.0261%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29 samples, 0.05%)</title><rect x="86.7761%" y="389" width="0.0536%" height="15" fill="rgb(230,88,30)" fg:x="46978" fg:w="29"/><text x="87.0261%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29 samples, 0.05%)</title><rect x="86.7761%" y="373" width="0.0536%" height="15" fill="rgb(216,217,1)" fg:x="46978" fg:w="29"/><text x="87.0261%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.03%)</title><rect x="86.7983%" y="357" width="0.0314%" height="15" fill="rgb(248,139,50)" fg:x="46990" fg:w="17"/><text x="87.0483%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (30 samples, 0.06%)</title><rect x="86.7761%" y="437" width="0.0554%" height="15" fill="rgb(233,1,21)" fg:x="46978" fg:w="30"/><text x="87.0261%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (30 samples, 0.06%)</title><rect x="86.7761%" y="421" width="0.0554%" height="15" fill="rgb(215,183,12)" fg:x="46978" fg:w="30"/><text x="87.0261%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (11 samples, 0.02%)</title><rect x="86.8482%" y="373" width="0.0203%" height="15" fill="rgb(229,104,42)" fg:x="47017" fg:w="11"/><text x="87.0982%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (11 samples, 0.02%)</title><rect x="86.8482%" y="357" width="0.0203%" height="15" fill="rgb(243,34,48)" fg:x="47017" fg:w="11"/><text x="87.0982%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.02%)</title><rect x="86.8482%" y="389" width="0.0222%" height="15" fill="rgb(239,11,44)" fg:x="47017" fg:w="12"/><text x="87.0982%" y="399.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (66 samples, 0.12%)</title><rect x="86.7724%" y="501" width="0.1219%" height="15" fill="rgb(231,98,35)" fg:x="46976" fg:w="66"/><text x="87.0224%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (66 samples, 0.12%)</title><rect x="86.7724%" y="485" width="0.1219%" height="15" fill="rgb(233,28,25)" fg:x="46976" fg:w="66"/><text x="87.0224%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (66 samples, 0.12%)</title><rect x="86.7724%" y="469" width="0.1219%" height="15" fill="rgb(234,123,11)" fg:x="46976" fg:w="66"/><text x="87.0224%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (66 samples, 0.12%)</title><rect x="86.7724%" y="453" width="0.1219%" height="15" fill="rgb(220,69,3)" fg:x="46976" fg:w="66"/><text x="87.0224%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (34 samples, 0.06%)</title><rect x="86.8316%" y="437" width="0.0628%" height="15" fill="rgb(214,64,36)" fg:x="47008" fg:w="34"/><text x="87.0816%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (34 samples, 0.06%)</title><rect x="86.8316%" y="421" width="0.0628%" height="15" fill="rgb(211,138,32)" fg:x="47008" fg:w="34"/><text x="87.0816%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (34 samples, 0.06%)</title><rect x="86.8316%" y="405" width="0.0628%" height="15" fill="rgb(213,118,47)" fg:x="47008" fg:w="34"/><text x="87.0816%" y="415.50"></text></g><g><title>__GI___libc_free (14 samples, 0.03%)</title><rect x="86.9073%" y="437" width="0.0259%" height="15" fill="rgb(243,124,49)" fg:x="47049" fg:w="14"/><text x="87.1573%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;yakvdb::disk::block::Block&gt;&gt; (60 samples, 0.11%)</title><rect x="86.8999%" y="485" width="0.1108%" height="15" fill="rgb(221,30,28)" fg:x="47045" fg:w="60"/><text x="87.1499%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;yakvdb::disk::block::Block&gt; (59 samples, 0.11%)</title><rect x="86.9017%" y="469" width="0.1090%" height="15" fill="rgb(246,37,13)" fg:x="47046" fg:w="59"/><text x="87.1517%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (59 samples, 0.11%)</title><rect x="86.9017%" y="453" width="0.1090%" height="15" fill="rgb(249,66,14)" fg:x="47046" fg:w="59"/><text x="87.1517%" y="463.50"></text></g><g><title>_int_free (35 samples, 0.06%)</title><rect x="86.9461%" y="437" width="0.0647%" height="15" fill="rgb(213,166,5)" fg:x="47070" fg:w="35"/><text x="87.1961%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="87.0347%" y="357" width="0.0148%" height="15" fill="rgb(221,66,24)" fg:x="47118" fg:w="8"/><text x="87.2847%" y="367.50"></text></g><g><title>hashbrown::map::make_insert_hash (17 samples, 0.03%)</title><rect x="87.0218%" y="453" width="0.0314%" height="15" fill="rgb(210,132,17)" fg:x="47111" fg:w="17"/><text x="87.2718%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.03%)</title><rect x="87.0218%" y="437" width="0.0314%" height="15" fill="rgb(243,202,5)" fg:x="47111" fg:w="17"/><text x="87.2718%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="87.0218%" y="421" width="0.0314%" height="15" fill="rgb(233,70,48)" fg:x="47111" fg:w="17"/><text x="87.2718%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="87.0218%" y="405" width="0.0314%" height="15" fill="rgb(238,41,26)" fg:x="47111" fg:w="17"/><text x="87.2718%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="87.0218%" y="389" width="0.0314%" height="15" fill="rgb(241,19,31)" fg:x="47111" fg:w="17"/><text x="87.2718%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.02%)</title><rect x="87.0292%" y="373" width="0.0240%" height="15" fill="rgb(214,76,10)" fg:x="47115" fg:w="13"/><text x="87.2792%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (8 samples, 0.01%)</title><rect x="87.0532%" y="453" width="0.0148%" height="15" fill="rgb(254,202,22)" fg:x="47128" fg:w="8"/><text x="87.3032%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.01%)</title><rect x="87.0532%" y="437" width="0.0148%" height="15" fill="rgb(214,72,24)" fg:x="47128" fg:w="8"/><text x="87.3032%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.01%)</title><rect x="87.0532%" y="421" width="0.0148%" height="15" fill="rgb(221,92,46)" fg:x="47128" fg:w="8"/><text x="87.3032%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (10 samples, 0.02%)</title><rect x="87.0698%" y="437" width="0.0185%" height="15" fill="rgb(246,13,50)" fg:x="47137" fg:w="10"/><text x="87.3198%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (50 samples, 0.09%)</title><rect x="87.0107%" y="485" width="0.0924%" height="15" fill="rgb(240,165,38)" fg:x="47105" fg:w="50"/><text x="87.2607%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (49 samples, 0.09%)</title><rect x="87.0126%" y="469" width="0.0905%" height="15" fill="rgb(241,24,51)" fg:x="47106" fg:w="49"/><text x="87.2626%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (19 samples, 0.04%)</title><rect x="87.0680%" y="453" width="0.0351%" height="15" fill="rgb(227,51,44)" fg:x="47136" fg:w="19"/><text x="87.3180%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (8 samples, 0.01%)</title><rect x="87.0883%" y="437" width="0.0148%" height="15" fill="rgb(231,121,3)" fg:x="47147" fg:w="8"/><text x="87.3383%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="87.1271%" y="341" width="0.0148%" height="15" fill="rgb(245,3,41)" fg:x="47168" fg:w="8"/><text x="87.3771%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.03%)</title><rect x="87.1123%" y="437" width="0.0332%" height="15" fill="rgb(214,13,26)" fg:x="47160" fg:w="18"/><text x="87.3623%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.03%)</title><rect x="87.1123%" y="421" width="0.0332%" height="15" fill="rgb(252,75,11)" fg:x="47160" fg:w="18"/><text x="87.3623%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="87.1123%" y="405" width="0.0332%" height="15" fill="rgb(218,226,17)" fg:x="47160" fg:w="18"/><text x="87.3623%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="87.1123%" y="389" width="0.0332%" height="15" fill="rgb(248,89,38)" fg:x="47160" fg:w="18"/><text x="87.3623%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="87.1123%" y="373" width="0.0332%" height="15" fill="rgb(237,73,46)" fg:x="47160" fg:w="18"/><text x="87.3623%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.02%)</title><rect x="87.1253%" y="357" width="0.0203%" height="15" fill="rgb(242,78,33)" fg:x="47167" fg:w="11"/><text x="87.3753%" y="367.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14 samples, 0.03%)</title><rect x="87.1511%" y="373" width="0.0259%" height="15" fill="rgb(235,60,3)" fg:x="47181" fg:w="14"/><text x="87.4011%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (12 samples, 0.02%)</title><rect x="87.1548%" y="357" width="0.0222%" height="15" fill="rgb(216,172,19)" fg:x="47183" fg:w="12"/><text x="87.4048%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (15 samples, 0.03%)</title><rect x="87.1511%" y="389" width="0.0277%" height="15" fill="rgb(227,6,42)" fg:x="47181" fg:w="15"/><text x="87.4011%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (23 samples, 0.04%)</title><rect x="87.1456%" y="421" width="0.0425%" height="15" fill="rgb(223,207,42)" fg:x="47178" fg:w="23"/><text x="87.3956%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (23 samples, 0.04%)</title><rect x="87.1456%" y="405" width="0.0425%" height="15" fill="rgb(246,138,30)" fg:x="47178" fg:w="23"/><text x="87.3956%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (53 samples, 0.10%)</title><rect x="87.1031%" y="485" width="0.0979%" height="15" fill="rgb(251,199,47)" fg:x="47155" fg:w="53"/><text x="87.3531%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (52 samples, 0.10%)</title><rect x="87.1049%" y="469" width="0.0961%" height="15" fill="rgb(228,218,44)" fg:x="47156" fg:w="52"/><text x="87.3549%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (48 samples, 0.09%)</title><rect x="87.1123%" y="453" width="0.0887%" height="15" fill="rgb(220,68,6)" fg:x="47160" fg:w="48"/><text x="87.3623%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (30 samples, 0.06%)</title><rect x="87.1456%" y="437" width="0.0554%" height="15" fill="rgb(240,60,26)" fg:x="47178" fg:w="30"/><text x="87.3956%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (7 samples, 0.01%)</title><rect x="87.1881%" y="421" width="0.0129%" height="15" fill="rgb(211,200,19)" fg:x="47201" fg:w="7"/><text x="87.4381%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (6 samples, 0.01%)</title><rect x="87.1899%" y="405" width="0.0111%" height="15" fill="rgb(242,145,30)" fg:x="47202" fg:w="6"/><text x="87.4399%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (6 samples, 0.01%)</title><rect x="87.1899%" y="389" width="0.0111%" height="15" fill="rgb(225,64,13)" fg:x="47202" fg:w="6"/><text x="87.4399%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (15 samples, 0.03%)</title><rect x="87.2028%" y="469" width="0.0277%" height="15" fill="rgb(218,103,35)" fg:x="47209" fg:w="15"/><text x="87.4528%" y="479.50"></text></g><g><title>core::intrinsics::copy (10 samples, 0.02%)</title><rect x="87.2121%" y="453" width="0.0185%" height="15" fill="rgb(216,93,46)" fg:x="47214" fg:w="10"/><text x="87.4621%" y="463.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (10 samples, 0.02%)</title><rect x="87.2121%" y="437" width="0.0185%" height="15" fill="rgb(225,159,27)" fg:x="47214" fg:w="10"/><text x="87.4621%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="87.2324%" y="389" width="0.0185%" height="15" fill="rgb(225,204,11)" fg:x="47225" fg:w="10"/><text x="87.4824%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="87.2324%" y="373" width="0.0185%" height="15" fill="rgb(205,56,4)" fg:x="47225" fg:w="10"/><text x="87.4824%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="87.2324%" y="357" width="0.0185%" height="15" fill="rgb(206,6,35)" fg:x="47225" fg:w="10"/><text x="87.4824%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="87.2379%" y="341" width="0.0129%" height="15" fill="rgb(247,73,52)" fg:x="47228" fg:w="7"/><text x="87.4879%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.01%)</title><rect x="87.2379%" y="325" width="0.0129%" height="15" fill="rgb(246,97,4)" fg:x="47228" fg:w="7"/><text x="87.4879%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="87.2305%" y="421" width="0.0222%" height="15" fill="rgb(212,37,15)" fg:x="47224" fg:w="12"/><text x="87.4805%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="87.2305%" y="405" width="0.0222%" height="15" fill="rgb(208,130,40)" fg:x="47224" fg:w="12"/><text x="87.4805%" y="415.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::put (205 samples, 0.38%)</title><rect x="86.8944%" y="501" width="0.3787%" height="15" fill="rgb(236,55,29)" fg:x="47042" fg:w="205"/><text x="87.1444%" y="511.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (39 samples, 0.07%)</title><rect x="87.2010%" y="485" width="0.0720%" height="15" fill="rgb(209,156,45)" fg:x="47208" fg:w="39"/><text x="87.4510%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (23 samples, 0.04%)</title><rect x="87.2305%" y="469" width="0.0425%" height="15" fill="rgb(249,107,4)" fg:x="47224" fg:w="23"/><text x="87.4805%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (23 samples, 0.04%)</title><rect x="87.2305%" y="453" width="0.0425%" height="15" fill="rgb(227,7,13)" fg:x="47224" fg:w="23"/><text x="87.4805%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (23 samples, 0.04%)</title><rect x="87.2305%" y="437" width="0.0425%" height="15" fill="rgb(250,129,14)" fg:x="47224" fg:w="23"/><text x="87.4805%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.02%)</title><rect x="87.2527%" y="421" width="0.0203%" height="15" fill="rgb(229,92,13)" fg:x="47236" fg:w="11"/><text x="87.5027%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.02%)</title><rect x="87.2527%" y="405" width="0.0203%" height="15" fill="rgb(245,98,39)" fg:x="47236" fg:w="11"/><text x="87.5027%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (11 samples, 0.02%)</title><rect x="87.2527%" y="389" width="0.0203%" height="15" fill="rgb(234,135,48)" fg:x="47236" fg:w="11"/><text x="87.5027%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 0.04%)</title><rect x="87.3414%" y="437" width="0.0369%" height="15" fill="rgb(230,98,28)" fg:x="47284" fg:w="20"/><text x="87.5914%" y="447.50"></text></g><g><title>__x64_sys_lseek (21 samples, 0.04%)</title><rect x="87.4079%" y="421" width="0.0388%" height="15" fill="rgb(223,121,0)" fg:x="47320" fg:w="21"/><text x="87.6579%" y="431.50"></text></g><g><title>ext4_llseek (23 samples, 0.04%)</title><rect x="88.0064%" y="389" width="0.0425%" height="15" fill="rgb(234,173,33)" fg:x="47644" fg:w="23"/><text x="88.2564%" y="399.50"></text></g><g><title>__fdget_pos (57 samples, 0.11%)</title><rect x="88.0636%" y="373" width="0.1053%" height="15" fill="rgb(245,47,8)" fg:x="47675" fg:w="57"/><text x="88.3136%" y="383.50"></text></g><g><title>__fget_light (54 samples, 0.10%)</title><rect x="88.0692%" y="357" width="0.0997%" height="15" fill="rgb(205,17,20)" fg:x="47678" fg:w="54"/><text x="88.3192%" y="367.50"></text></g><g><title>ext4_llseek (37 samples, 0.07%)</title><rect x="88.1726%" y="373" width="0.0683%" height="15" fill="rgb(232,151,16)" fg:x="47734" fg:w="37"/><text x="88.4226%" y="383.50"></text></g><g><title>__x64_sys_lseek (131 samples, 0.24%)</title><rect x="88.0008%" y="405" width="0.2420%" height="15" fill="rgb(208,30,32)" fg:x="47641" fg:w="131"/><text x="88.2508%" y="415.50"></text></g><g><title>ksys_lseek (105 samples, 0.19%)</title><rect x="88.0488%" y="389" width="0.1940%" height="15" fill="rgb(254,26,3)" fg:x="47667" fg:w="105"/><text x="88.2988%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (474 samples, 0.88%)</title><rect x="87.3783%" y="437" width="0.8756%" height="15" fill="rgb(240,177,30)" fg:x="47304" fg:w="474"/><text x="87.6283%" y="447.50"></text></g><g><title>do_syscall_64 (437 samples, 0.81%)</title><rect x="87.4467%" y="421" width="0.8072%" height="15" fill="rgb(248,76,44)" fg:x="47341" fg:w="437"/><text x="87.6967%" y="431.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (676 samples, 1.25%)</title><rect x="87.2970%" y="485" width="1.2487%" height="15" fill="rgb(241,186,54)" fg:x="47260" fg:w="676"/><text x="87.5470%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::seek (676 samples, 1.25%)</title><rect x="87.2970%" y="469" width="1.2487%" height="15" fill="rgb(249,171,29)" fg:x="47260" fg:w="676"/><text x="87.5470%" y="479.50"></text></g><g><title>__lseek64 (672 samples, 1.24%)</title><rect x="87.3044%" y="453" width="1.2413%" height="15" fill="rgb(237,151,44)" fg:x="47264" fg:w="672"/><text x="87.5544%" y="463.50"></text></g><g><title>syscall_return_via_sysret (158 samples, 0.29%)</title><rect x="88.2539%" y="437" width="0.2919%" height="15" fill="rgb(228,174,30)" fg:x="47778" fg:w="158"/><text x="88.5039%" y="447.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="88.6436%" y="341" width="0.0166%" height="15" fill="rgb(252,14,37)" fg:x="47989" fg:w="9"/><text x="88.8936%" y="351.50"></text></g><g><title>__memset_sse2_unaligned_erms (206 samples, 0.38%)</title><rect x="88.6621%" y="341" width="0.3805%" height="15" fill="rgb(207,111,40)" fg:x="47999" fg:w="206"/><text x="88.9121%" y="351.50"></text></g><g><title>__calloc (285 samples, 0.53%)</title><rect x="88.5716%" y="357" width="0.5264%" height="15" fill="rgb(248,171,54)" fg:x="47950" fg:w="285"/><text x="88.8216%" y="367.50"></text></g><g><title>_int_malloc (30 samples, 0.06%)</title><rect x="89.0426%" y="341" width="0.0554%" height="15" fill="rgb(211,127,2)" fg:x="48205" fg:w="30"/><text x="89.2926%" y="351.50"></text></g><g><title>alloc::vec::from_elem (293 samples, 0.54%)</title><rect x="88.5624%" y="469" width="0.5412%" height="15" fill="rgb(236,87,47)" fg:x="47945" fg:w="293"/><text x="88.8124%" y="479.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (293 samples, 0.54%)</title><rect x="88.5624%" y="453" width="0.5412%" height="15" fill="rgb(223,190,45)" fg:x="47945" fg:w="293"/><text x="88.8124%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (289 samples, 0.53%)</title><rect x="88.5697%" y="437" width="0.5338%" height="15" fill="rgb(215,5,16)" fg:x="47949" fg:w="289"/><text x="88.8197%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (289 samples, 0.53%)</title><rect x="88.5697%" y="421" width="0.5338%" height="15" fill="rgb(252,82,33)" fg:x="47949" fg:w="289"/><text x="88.8197%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (289 samples, 0.53%)</title><rect x="88.5697%" y="405" width="0.5338%" height="15" fill="rgb(247,213,44)" fg:x="47949" fg:w="289"/><text x="88.8197%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (289 samples, 0.53%)</title><rect x="88.5697%" y="389" width="0.5338%" height="15" fill="rgb(205,196,44)" fg:x="47949" fg:w="289"/><text x="88.8197%" y="399.50"></text></g><g><title>alloc::alloc::alloc_zeroed (289 samples, 0.53%)</title><rect x="88.5697%" y="373" width="0.5338%" height="15" fill="rgb(237,96,54)" fg:x="47949" fg:w="289"/><text x="88.8197%" y="383.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (223 samples, 0.41%)</title><rect x="89.1036%" y="469" width="0.4119%" height="15" fill="rgb(230,113,34)" fg:x="48238" fg:w="223"/><text x="89.3536%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (220 samples, 0.41%)</title><rect x="89.1091%" y="453" width="0.4064%" height="15" fill="rgb(221,224,12)" fg:x="48241" fg:w="220"/><text x="89.3591%" y="463.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (219 samples, 0.40%)</title><rect x="89.1110%" y="437" width="0.4045%" height="15" fill="rgb(219,112,44)" fg:x="48242" fg:w="219"/><text x="89.3610%" y="447.50"></text></g><g><title>malloc_consolidate (676 samples, 1.25%)</title><rect x="89.8683%" y="309" width="1.2487%" height="15" fill="rgb(210,31,13)" fg:x="48652" fg:w="676"/><text x="90.1183%" y="319.50"></text></g><g><title>unlink_chunk.isra.0 (126 samples, 0.23%)</title><rect x="90.8842%" y="293" width="0.2327%" height="15" fill="rgb(230,25,16)" fg:x="49202" fg:w="126"/><text x="91.1342%" y="303.50"></text></g><g><title>__GI___libc_malloc (876 samples, 1.62%)</title><rect x="89.5173%" y="341" width="1.6181%" height="15" fill="rgb(246,108,53)" fg:x="48462" fg:w="876"/><text x="89.7673%" y="351.50"></text></g><g><title>_int_malloc (864 samples, 1.60%)</title><rect x="89.5395%" y="325" width="1.5960%" height="15" fill="rgb(241,172,50)" fg:x="48474" fg:w="864"/><text x="89.7895%" y="335.50"></text></g><g><title>unlink_chunk.isra.0 (10 samples, 0.02%)</title><rect x="91.1170%" y="309" width="0.0185%" height="15" fill="rgb(235,141,10)" fg:x="49328" fg:w="10"/><text x="91.3670%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (881 samples, 1.63%)</title><rect x="89.5155%" y="453" width="1.6274%" height="15" fill="rgb(220,174,43)" fg:x="48461" fg:w="881"/><text x="89.7655%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (881 samples, 1.63%)</title><rect x="89.5155%" y="437" width="1.6274%" height="15" fill="rgb(215,181,40)" fg:x="48461" fg:w="881"/><text x="89.7655%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (881 samples, 1.63%)</title><rect x="89.5155%" y="421" width="1.6274%" height="15" fill="rgb(230,97,2)" fg:x="48461" fg:w="881"/><text x="89.7655%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (881 samples, 1.63%)</title><rect x="89.5155%" y="405" width="1.6274%" height="15" fill="rgb(211,25,27)" fg:x="48461" fg:w="881"/><text x="89.7655%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (881 samples, 1.63%)</title><rect x="89.5155%" y="389" width="1.6274%" height="15" fill="rgb(230,87,26)" fg:x="48461" fg:w="881"/><text x="89.7655%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (881 samples, 1.63%)</title><rect x="89.5155%" y="373" width="1.6274%" height="15" fill="rgb(227,160,17)" fg:x="48461" fg:w="881"/><text x="89.7655%" y="383.50"></text></g><g><title>alloc::alloc::alloc (881 samples, 1.63%)</title><rect x="89.5155%" y="357" width="1.6274%" height="15" fill="rgb(244,85,34)" fg:x="48461" fg:w="881"/><text x="89.7655%" y="367.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (883 samples, 1.63%)</title><rect x="89.5155%" y="469" width="1.6310%" height="15" fill="rgb(207,70,0)" fg:x="48461" fg:w="883"/><text x="89.7655%" y="479.50"></text></g><g><title>__GI___libc_free (8 samples, 0.01%)</title><rect x="91.1465%" y="389" width="0.0148%" height="15" fill="rgb(223,129,7)" fg:x="49344" fg:w="8"/><text x="91.3965%" y="399.50"></text></g><g><title>__GI___read (52 samples, 0.10%)</title><rect x="91.1613%" y="389" width="0.0961%" height="15" fill="rgb(246,105,7)" fg:x="49352" fg:w="52"/><text x="91.4113%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (52 samples, 0.10%)</title><rect x="91.1613%" y="373" width="0.0961%" height="15" fill="rgb(215,154,42)" fg:x="49352" fg:w="52"/><text x="91.4113%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::reserve (1,523 samples, 2.81%)</title><rect x="88.5476%" y="485" width="2.8132%" height="15" fill="rgb(220,215,30)" fg:x="47937" fg:w="1523"/><text x="88.7976%" y="495.50">&lt;y..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (116 samples, 0.21%)</title><rect x="91.1465%" y="469" width="0.2143%" height="15" fill="rgb(228,81,51)" fg:x="49344" fg:w="116"/><text x="91.3965%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (116 samples, 0.21%)</title><rect x="91.1465%" y="453" width="0.2143%" height="15" fill="rgb(247,71,54)" fg:x="49344" fg:w="116"/><text x="91.3965%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.21%)</title><rect x="91.1465%" y="437" width="0.2143%" height="15" fill="rgb(234,176,34)" fg:x="49344" fg:w="116"/><text x="91.3965%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (116 samples, 0.21%)</title><rect x="91.1465%" y="421" width="0.2143%" height="15" fill="rgb(241,103,54)" fg:x="49344" fg:w="116"/><text x="91.3965%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (116 samples, 0.21%)</title><rect x="91.1465%" y="405" width="0.2143%" height="15" fill="rgb(228,22,34)" fg:x="49344" fg:w="116"/><text x="91.3965%" y="415.50"></text></g><g><title>_int_free (55 samples, 0.10%)</title><rect x="91.2592%" y="389" width="0.1016%" height="15" fill="rgb(241,179,48)" fg:x="49405" fg:w="55"/><text x="91.5092%" y="399.50"></text></g><g><title>__GI___libc_write (63 samples, 0.12%)</title><rect x="91.3608%" y="485" width="0.1164%" height="15" fill="rgb(235,167,37)" fg:x="49460" fg:w="63"/><text x="91.6108%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (63 samples, 0.12%)</title><rect x="91.3608%" y="469" width="0.1164%" height="15" fill="rgb(213,109,30)" fg:x="49460" fg:w="63"/><text x="91.6108%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 0.03%)</title><rect x="91.5418%" y="389" width="0.0259%" height="15" fill="rgb(222,172,16)" fg:x="49558" fg:w="14"/><text x="91.7918%" y="399.50"></text></g><g><title>__x64_sys_read (27 samples, 0.05%)</title><rect x="91.5825%" y="373" width="0.0499%" height="15" fill="rgb(233,192,5)" fg:x="49580" fg:w="27"/><text x="91.8325%" y="383.50"></text></g><g><title>__fdget_pos (37 samples, 0.07%)</title><rect x="92.2160%" y="325" width="0.0683%" height="15" fill="rgb(247,189,41)" fg:x="49923" fg:w="37"/><text x="92.4660%" y="335.50"></text></g><g><title>__fget_light (35 samples, 0.06%)</title><rect x="92.2197%" y="309" width="0.0647%" height="15" fill="rgb(218,134,47)" fg:x="49925" fg:w="35"/><text x="92.4697%" y="319.50"></text></g><g><title>__fsnotify_parent (7 samples, 0.01%)</title><rect x="92.3361%" y="309" width="0.0129%" height="15" fill="rgb(216,29,3)" fg:x="49988" fg:w="7"/><text x="92.5861%" y="319.50"></text></g><g><title>ext4_file_read_iter (17 samples, 0.03%)</title><rect x="92.3546%" y="293" width="0.0314%" height="15" fill="rgb(246,140,12)" fg:x="49998" fg:w="17"/><text x="92.6046%" y="303.50"></text></g><g><title>iov_iter_init (8 samples, 0.01%)</title><rect x="92.3860%" y="293" width="0.0148%" height="15" fill="rgb(230,136,11)" fg:x="50015" fg:w="8"/><text x="92.6360%" y="303.50"></text></g><g><title>copy_user_generic_string (600 samples, 1.11%)</title><rect x="92.7296%" y="213" width="1.1083%" height="15" fill="rgb(247,22,47)" fg:x="50201" fg:w="600"/><text x="92.9796%" y="223.50"></text></g><g><title>copy_page_to_iter (626 samples, 1.16%)</title><rect x="92.6852%" y="229" width="1.1563%" height="15" fill="rgb(218,84,22)" fg:x="50177" fg:w="626"/><text x="92.9352%" y="239.50"></text></g><g><title>mark_page_accessed (7 samples, 0.01%)</title><rect x="93.8489%" y="229" width="0.0129%" height="15" fill="rgb(216,87,39)" fg:x="50807" fg:w="7"/><text x="94.0989%" y="239.50"></text></g><g><title>PageHuge (7 samples, 0.01%)</title><rect x="93.8840%" y="213" width="0.0129%" height="15" fill="rgb(221,178,8)" fg:x="50826" fg:w="7"/><text x="94.1340%" y="223.50"></text></g><g><title>xas_load (146 samples, 0.27%)</title><rect x="94.1316%" y="197" width="0.2697%" height="15" fill="rgb(230,42,11)" fg:x="50960" fg:w="146"/><text x="94.3816%" y="207.50"></text></g><g><title>find_get_entry (295 samples, 0.54%)</title><rect x="93.8970%" y="213" width="0.5449%" height="15" fill="rgb(237,229,4)" fg:x="50833" fg:w="295"/><text x="94.1470%" y="223.50"></text></g><g><title>xas_start (22 samples, 0.04%)</title><rect x="94.4012%" y="197" width="0.0406%" height="15" fill="rgb(222,31,33)" fg:x="51106" fg:w="22"/><text x="94.6512%" y="207.50"></text></g><g><title>pagecache_get_page (319 samples, 0.59%)</title><rect x="93.8619%" y="229" width="0.5892%" height="15" fill="rgb(210,17,39)" fg:x="50814" fg:w="319"/><text x="94.1119%" y="239.50"></text></g><g><title>ktime_get_coarse_real_ts64 (12 samples, 0.02%)</title><rect x="94.4881%" y="181" width="0.0222%" height="15" fill="rgb(244,93,20)" fg:x="51153" fg:w="12"/><text x="94.7381%" y="191.50"></text></g><g><title>current_time (21 samples, 0.04%)</title><rect x="94.4807%" y="197" width="0.0388%" height="15" fill="rgb(210,40,47)" fg:x="51149" fg:w="21"/><text x="94.7307%" y="207.50"></text></g><g><title>atime_needs_update (35 samples, 0.06%)</title><rect x="94.4640%" y="213" width="0.0647%" height="15" fill="rgb(239,211,47)" fg:x="51140" fg:w="35"/><text x="94.7140%" y="223.50"></text></g><g><title>generic_file_buffered_read (1,107 samples, 2.04%)</title><rect x="92.4987%" y="245" width="2.0448%" height="15" fill="rgb(251,223,49)" fg:x="50076" fg:w="1107"/><text x="92.7487%" y="255.50">g..</text></g><g><title>touch_atime (47 samples, 0.09%)</title><rect x="94.4567%" y="229" width="0.0868%" height="15" fill="rgb(221,149,5)" fg:x="51136" fg:w="47"/><text x="94.7067%" y="239.50"></text></g><g><title>generic_update_time (6 samples, 0.01%)</title><rect x="94.5324%" y="213" width="0.0111%" height="15" fill="rgb(219,224,51)" fg:x="51177" fg:w="6"/><text x="94.7824%" y="223.50"></text></g><g><title>__mark_inode_dirty (6 samples, 0.01%)</title><rect x="94.5324%" y="197" width="0.0111%" height="15" fill="rgb(223,7,8)" fg:x="51177" fg:w="6"/><text x="94.7824%" y="207.50"></text></g><g><title>ext4_dirty_inode (6 samples, 0.01%)</title><rect x="94.5324%" y="181" width="0.0111%" height="15" fill="rgb(241,217,22)" fg:x="51177" fg:w="6"/><text x="94.7824%" y="191.50"></text></g><g><title>pagecache_get_page (7 samples, 0.01%)</title><rect x="94.5472%" y="245" width="0.0129%" height="15" fill="rgb(248,209,0)" fg:x="51185" fg:w="7"/><text x="94.7972%" y="255.50"></text></g><g><title>__vfs_read (1,199 samples, 2.21%)</title><rect x="92.3490%" y="309" width="2.2148%" height="15" fill="rgb(217,205,4)" fg:x="49995" fg:w="1199"/><text x="92.5990%" y="319.50">_..</text></g><g><title>new_sync_read (1,171 samples, 2.16%)</title><rect x="92.4008%" y="293" width="2.1630%" height="15" fill="rgb(228,124,39)" fg:x="50023" fg:w="1171"/><text x="92.6508%" y="303.50">n..</text></g><g><title>ext4_file_read_iter (1,139 samples, 2.10%)</title><rect x="92.4599%" y="277" width="2.1039%" height="15" fill="rgb(250,116,42)" fg:x="50055" fg:w="1139"/><text x="92.7099%" y="287.50">e..</text></g><g><title>generic_file_read_iter (1,128 samples, 2.08%)</title><rect x="92.4802%" y="261" width="2.0836%" height="15" fill="rgb(223,202,9)" fg:x="50066" fg:w="1128"/><text x="92.7302%" y="271.50">g..</text></g><g><title>fsnotify (10 samples, 0.02%)</title><rect x="94.5638%" y="309" width="0.0185%" height="15" fill="rgb(242,222,40)" fg:x="51194" fg:w="10"/><text x="94.8138%" y="319.50"></text></g><g><title>apparmor_file_permission (27 samples, 0.05%)</title><rect x="94.6007%" y="293" width="0.0499%" height="15" fill="rgb(229,99,46)" fg:x="51214" fg:w="27"/><text x="94.8507%" y="303.50"></text></g><g><title>apparmor_file_permission (69 samples, 0.13%)</title><rect x="94.6912%" y="277" width="0.1275%" height="15" fill="rgb(225,56,46)" fg:x="51263" fg:w="69"/><text x="94.9412%" y="287.50"></text></g><g><title>common_file_perm (68 samples, 0.13%)</title><rect x="94.6931%" y="261" width="0.1256%" height="15" fill="rgb(227,94,5)" fg:x="51264" fg:w="68"/><text x="94.9431%" y="271.50"></text></g><g><title>common_file_perm (18 samples, 0.03%)</title><rect x="94.8187%" y="277" width="0.0332%" height="15" fill="rgb(205,112,38)" fg:x="51332" fg:w="18"/><text x="95.0687%" y="287.50"></text></g><g><title>rw_verify_area (150 samples, 0.28%)</title><rect x="94.5860%" y="309" width="0.2771%" height="15" fill="rgb(231,133,46)" fg:x="51206" fg:w="150"/><text x="94.8360%" y="319.50"></text></g><g><title>security_file_permission (114 samples, 0.21%)</title><rect x="94.6525%" y="293" width="0.2106%" height="15" fill="rgb(217,16,9)" fg:x="51242" fg:w="114"/><text x="94.9025%" y="303.50"></text></g><g><title>fsnotify (6 samples, 0.01%)</title><rect x="94.8519%" y="277" width="0.0111%" height="15" fill="rgb(249,173,9)" fg:x="51350" fg:w="6"/><text x="95.1019%" y="287.50"></text></g><g><title>ksys_read (1,452 samples, 2.68%)</title><rect x="92.1828%" y="341" width="2.6821%" height="15" fill="rgb(205,163,53)" fg:x="49905" fg:w="1452"/><text x="92.4328%" y="351.50">ks..</text></g><g><title>vfs_read (1,393 samples, 2.57%)</title><rect x="92.2918%" y="325" width="2.5731%" height="15" fill="rgb(217,54,41)" fg:x="49964" fg:w="1393"/><text x="92.5418%" y="335.50">vf..</text></g><g><title>__x64_sys_read (1,455 samples, 2.69%)</title><rect x="92.1791%" y="357" width="2.6876%" height="15" fill="rgb(228,216,12)" fg:x="49903" fg:w="1455"/><text x="92.4291%" y="367.50">__..</text></g><g><title>do_syscall_64 (1,758 samples, 3.25%)</title><rect x="91.6323%" y="373" width="3.2473%" height="15" fill="rgb(244,228,15)" fg:x="49607" fg:w="1758"/><text x="91.8823%" y="383.50">do_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (1,795 samples, 3.32%)</title><rect x="91.5677%" y="389" width="3.3157%" height="15" fill="rgb(221,176,53)" fg:x="49572" fg:w="1795"/><text x="91.8177%" y="399.50">ent..</text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (4,533 samples, 8.37%)</title><rect x="86.7244%" y="517" width="8.3732%" height="15" fill="rgb(205,94,34)" fg:x="46950" fg:w="4533"/><text x="86.9744%" y="527.50">&lt;yakvdb::dis..</text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (4,233 samples, 7.82%)</title><rect x="87.2786%" y="501" width="7.8191%" height="15" fill="rgb(213,110,48)" fg:x="47250" fg:w="4233"/><text x="87.5286%" y="511.50">yakvdb::dis..</text></g><g><title>std::io::Read::read_exact (1,953 samples, 3.61%)</title><rect x="91.4901%" y="485" width="3.6075%" height="15" fill="rgb(236,142,28)" fg:x="49530" fg:w="1953"/><text x="91.7401%" y="495.50">std:..</text></g><g><title>std::io::default_read_exact (1,953 samples, 3.61%)</title><rect x="91.4901%" y="469" width="3.6075%" height="15" fill="rgb(225,135,29)" fg:x="49530" fg:w="1953"/><text x="91.7401%" y="479.50">std:..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1,952 samples, 3.61%)</title><rect x="91.4920%" y="453" width="3.6057%" height="15" fill="rgb(252,45,31)" fg:x="49531" fg:w="1952"/><text x="91.7420%" y="463.50">&lt;std..</text></g><g><title>std::sys::unix::fs::File::read (1,952 samples, 3.61%)</title><rect x="91.4920%" y="437" width="3.6057%" height="15" fill="rgb(211,187,50)" fg:x="49531" fg:w="1952"/><text x="91.7420%" y="447.50">std:..</text></g><g><title>std::sys::unix::fd::FileDesc::read (1,952 samples, 3.61%)</title><rect x="91.4920%" y="421" width="3.6057%" height="15" fill="rgb(229,109,7)" fg:x="49531" fg:w="1952"/><text x="91.7420%" y="431.50">std:..</text></g><g><title>__GI___read (1,950 samples, 3.60%)</title><rect x="91.4956%" y="405" width="3.6020%" height="15" fill="rgb(251,131,51)" fg:x="49533" fg:w="1950"/><text x="91.7456%" y="415.50">__GI..</text></g><g><title>syscall_return_via_sysret (116 samples, 0.21%)</title><rect x="94.8834%" y="389" width="0.2143%" height="15" fill="rgb(251,180,35)" fg:x="51367" fg:w="116"/><text x="95.1334%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.02%)</title><rect x="95.1161%" y="373" width="0.0166%" height="15" fill="rgb(211,46,32)" fg:x="51493" fg:w="9"/><text x="95.3661%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="95.1179%" y="357" width="0.0148%" height="15" fill="rgb(248,123,17)" fg:x="51494" fg:w="8"/><text x="95.3679%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.02%)</title><rect x="95.1364%" y="357" width="0.0185%" height="15" fill="rgb(227,141,18)" fg:x="51504" fg:w="10"/><text x="95.3864%" y="367.50"></text></g><g><title>hashbrown::map::make_insert_hash (35 samples, 0.06%)</title><rect x="95.1050%" y="453" width="0.0647%" height="15" fill="rgb(216,102,9)" fg:x="51487" fg:w="35"/><text x="95.3550%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (35 samples, 0.06%)</title><rect x="95.1050%" y="437" width="0.0647%" height="15" fill="rgb(253,47,13)" fg:x="51487" fg:w="35"/><text x="95.3550%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (34 samples, 0.06%)</title><rect x="95.1069%" y="421" width="0.0628%" height="15" fill="rgb(226,93,23)" fg:x="51488" fg:w="34"/><text x="95.3569%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (34 samples, 0.06%)</title><rect x="95.1069%" y="405" width="0.0628%" height="15" fill="rgb(247,104,17)" fg:x="51488" fg:w="34"/><text x="95.3569%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (34 samples, 0.06%)</title><rect x="95.1069%" y="389" width="0.0628%" height="15" fill="rgb(233,203,26)" fg:x="51488" fg:w="34"/><text x="95.3569%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.04%)</title><rect x="95.1327%" y="373" width="0.0369%" height="15" fill="rgb(244,98,49)" fg:x="51502" fg:w="20"/><text x="95.3827%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.01%)</title><rect x="95.1549%" y="357" width="0.0148%" height="15" fill="rgb(235,134,22)" fg:x="51514" fg:w="8"/><text x="95.4049%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (10 samples, 0.02%)</title><rect x="95.1807%" y="405" width="0.0185%" height="15" fill="rgb(221,70,32)" fg:x="51528" fg:w="10"/><text x="95.4307%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (10 samples, 0.02%)</title><rect x="95.1807%" y="389" width="0.0185%" height="15" fill="rgb(238,15,50)" fg:x="51528" fg:w="10"/><text x="95.4307%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (8 samples, 0.01%)</title><rect x="95.1844%" y="373" width="0.0148%" height="15" fill="rgb(215,221,48)" fg:x="51530" fg:w="8"/><text x="95.4344%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (6 samples, 0.01%)</title><rect x="95.2085%" y="405" width="0.0111%" height="15" fill="rgb(236,73,3)" fg:x="51543" fg:w="6"/><text x="95.4585%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.01%)</title><rect x="95.2085%" y="389" width="0.0111%" height="15" fill="rgb(250,107,11)" fg:x="51543" fg:w="6"/><text x="95.4585%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="95.2085%" y="373" width="0.0111%" height="15" fill="rgb(242,39,14)" fg:x="51543" fg:w="6"/><text x="95.4585%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (34 samples, 0.06%)</title><rect x="95.1697%" y="453" width="0.0628%" height="15" fill="rgb(248,164,37)" fg:x="51522" fg:w="34"/><text x="95.4197%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (34 samples, 0.06%)</title><rect x="95.1697%" y="437" width="0.0628%" height="15" fill="rgb(217,60,12)" fg:x="51522" fg:w="34"/><text x="95.4197%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (34 samples, 0.06%)</title><rect x="95.1697%" y="421" width="0.0628%" height="15" fill="rgb(240,125,29)" fg:x="51522" fg:w="34"/><text x="95.4197%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.01%)</title><rect x="95.2195%" y="405" width="0.0129%" height="15" fill="rgb(208,207,28)" fg:x="51549" fg:w="7"/><text x="95.4695%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.01%)</title><rect x="95.2195%" y="389" width="0.0129%" height="15" fill="rgb(209,159,27)" fg:x="51549" fg:w="7"/><text x="95.4695%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (11 samples, 0.02%)</title><rect x="95.2454%" y="437" width="0.0203%" height="15" fill="rgb(251,176,53)" fg:x="51563" fg:w="11"/><text x="95.4954%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (92 samples, 0.17%)</title><rect x="95.0976%" y="517" width="0.1699%" height="15" fill="rgb(211,85,7)" fg:x="51483" fg:w="92"/><text x="95.3476%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (88 samples, 0.16%)</title><rect x="95.1050%" y="501" width="0.1626%" height="15" fill="rgb(216,64,54)" fg:x="51487" fg:w="88"/><text x="95.3550%" y="511.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (88 samples, 0.16%)</title><rect x="95.1050%" y="485" width="0.1626%" height="15" fill="rgb(217,54,24)" fg:x="51487" fg:w="88"/><text x="95.3550%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (88 samples, 0.16%)</title><rect x="95.1050%" y="469" width="0.1626%" height="15" fill="rgb(208,206,53)" fg:x="51487" fg:w="88"/><text x="95.3550%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (19 samples, 0.04%)</title><rect x="95.2325%" y="453" width="0.0351%" height="15" fill="rgb(251,74,39)" fg:x="51556" fg:w="19"/><text x="95.4825%" y="463.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (9 samples, 0.02%)</title><rect x="95.2676%" y="517" width="0.0166%" height="15" fill="rgb(226,47,5)" fg:x="51575" fg:w="9"/><text x="95.5176%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (9 samples, 0.02%)</title><rect x="95.2676%" y="501" width="0.0166%" height="15" fill="rgb(234,111,33)" fg:x="51575" fg:w="9"/><text x="95.5176%" y="511.50"></text></g><g><title>core::cell::BorrowRefMut::new (8 samples, 0.01%)</title><rect x="95.2694%" y="485" width="0.0148%" height="15" fill="rgb(251,14,10)" fg:x="51576" fg:w="8"/><text x="95.5194%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.02%)</title><rect x="95.3064%" y="325" width="0.0222%" height="15" fill="rgb(232,43,0)" fg:x="51596" fg:w="12"/><text x="95.5564%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 0.05%)</title><rect x="95.2879%" y="421" width="0.0462%" height="15" fill="rgb(222,68,43)" fg:x="51586" fg:w="25"/><text x="95.5379%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (25 samples, 0.05%)</title><rect x="95.2879%" y="405" width="0.0462%" height="15" fill="rgb(217,24,23)" fg:x="51586" fg:w="25"/><text x="95.5379%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (23 samples, 0.04%)</title><rect x="95.2916%" y="389" width="0.0425%" height="15" fill="rgb(229,209,14)" fg:x="51588" fg:w="23"/><text x="95.5416%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (23 samples, 0.04%)</title><rect x="95.2916%" y="373" width="0.0425%" height="15" fill="rgb(250,149,48)" fg:x="51588" fg:w="23"/><text x="95.5416%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (23 samples, 0.04%)</title><rect x="95.2916%" y="357" width="0.0425%" height="15" fill="rgb(210,120,37)" fg:x="51588" fg:w="23"/><text x="95.5416%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.03%)</title><rect x="95.3045%" y="341" width="0.0296%" height="15" fill="rgb(210,21,8)" fg:x="51595" fg:w="16"/><text x="95.5545%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.02%)</title><rect x="95.3507%" y="357" width="0.0166%" height="15" fill="rgb(243,145,7)" fg:x="51620" fg:w="9"/><text x="95.6007%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (7 samples, 0.01%)</title><rect x="95.3544%" y="341" width="0.0129%" height="15" fill="rgb(238,178,32)" fg:x="51622" fg:w="7"/><text x="95.6044%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (10 samples, 0.02%)</title><rect x="95.3507%" y="373" width="0.0185%" height="15" fill="rgb(222,4,10)" fg:x="51620" fg:w="10"/><text x="95.6007%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (57 samples, 0.11%)</title><rect x="95.2860%" y="469" width="0.1053%" height="15" fill="rgb(239,7,37)" fg:x="51585" fg:w="57"/><text x="95.5360%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (57 samples, 0.11%)</title><rect x="95.2860%" y="453" width="0.1053%" height="15" fill="rgb(215,31,37)" fg:x="51585" fg:w="57"/><text x="95.5360%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (57 samples, 0.11%)</title><rect x="95.2860%" y="437" width="0.1053%" height="15" fill="rgb(224,83,33)" fg:x="51585" fg:w="57"/><text x="95.5360%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (31 samples, 0.06%)</title><rect x="95.3341%" y="421" width="0.0573%" height="15" fill="rgb(239,55,3)" fg:x="51611" fg:w="31"/><text x="95.5841%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (31 samples, 0.06%)</title><rect x="95.3341%" y="405" width="0.0573%" height="15" fill="rgb(247,92,11)" fg:x="51611" fg:w="31"/><text x="95.5841%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (31 samples, 0.06%)</title><rect x="95.3341%" y="389" width="0.0573%" height="15" fill="rgb(239,200,7)" fg:x="51611" fg:w="31"/><text x="95.5841%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.01%)</title><rect x="95.3802%" y="373" width="0.0111%" height="15" fill="rgb(227,115,8)" fg:x="51636" fg:w="6"/><text x="95.6302%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.01%)</title><rect x="95.3802%" y="357" width="0.0111%" height="15" fill="rgb(215,189,27)" fg:x="51636" fg:w="6"/><text x="95.6302%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.01%)</title><rect x="95.4024%" y="453" width="0.0111%" height="15" fill="rgb(251,216,39)" fg:x="51648" fg:w="6"/><text x="95.6524%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (9 samples, 0.02%)</title><rect x="95.4135%" y="453" width="0.0166%" height="15" fill="rgb(207,29,47)" fg:x="51654" fg:w="9"/><text x="95.6635%" y="463.50"></text></g><g><title>core::intrinsics::copy (7 samples, 0.01%)</title><rect x="95.4172%" y="437" width="0.0129%" height="15" fill="rgb(210,71,34)" fg:x="51656" fg:w="7"/><text x="95.6672%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (7 samples, 0.01%)</title><rect x="95.4301%" y="453" width="0.0129%" height="15" fill="rgb(253,217,51)" fg:x="51663" fg:w="7"/><text x="95.6801%" y="463.50"></text></g><g><title>core::mem::replace (7 samples, 0.01%)</title><rect x="95.4301%" y="437" width="0.0129%" height="15" fill="rgb(222,117,46)" fg:x="51663" fg:w="7"/><text x="95.6801%" y="447.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="95.4301%" y="421" width="0.0129%" height="15" fill="rgb(226,132,6)" fg:x="51663" fg:w="7"/><text x="95.6801%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (37 samples, 0.07%)</title><rect x="95.4708%" y="405" width="0.0683%" height="15" fill="rgb(254,145,51)" fg:x="51685" fg:w="37"/><text x="95.7208%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (24 samples, 0.04%)</title><rect x="95.4948%" y="389" width="0.0443%" height="15" fill="rgb(231,199,27)" fg:x="51698" fg:w="24"/><text x="95.7448%" y="399.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (24 samples, 0.04%)</title><rect x="95.4948%" y="373" width="0.0443%" height="15" fill="rgb(245,158,14)" fg:x="51698" fg:w="24"/><text x="95.7448%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (24 samples, 0.04%)</title><rect x="95.4948%" y="357" width="0.0443%" height="15" fill="rgb(240,113,14)" fg:x="51698" fg:w="24"/><text x="95.7448%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (24 samples, 0.04%)</title><rect x="95.4948%" y="341" width="0.0443%" height="15" fill="rgb(210,20,13)" fg:x="51698" fg:w="24"/><text x="95.7448%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (24 samples, 0.04%)</title><rect x="95.4948%" y="325" width="0.0443%" height="15" fill="rgb(241,144,13)" fg:x="51698" fg:w="24"/><text x="95.7448%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (75 samples, 0.14%)</title><rect x="95.4486%" y="453" width="0.1385%" height="15" fill="rgb(235,43,34)" fg:x="51673" fg:w="75"/><text x="95.6986%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (75 samples, 0.14%)</title><rect x="95.4486%" y="437" width="0.1385%" height="15" fill="rgb(208,36,20)" fg:x="51673" fg:w="75"/><text x="95.6986%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (75 samples, 0.14%)</title><rect x="95.4486%" y="421" width="0.1385%" height="15" fill="rgb(239,204,10)" fg:x="51673" fg:w="75"/><text x="95.6986%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.05%)</title><rect x="95.5391%" y="405" width="0.0480%" height="15" fill="rgb(217,84,43)" fg:x="51722" fg:w="26"/><text x="95.7891%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;alloc::vec::Vec&lt;u32&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="95.5871%" y="453" width="0.0129%" height="15" fill="rgb(241,170,50)" fg:x="51748" fg:w="7"/><text x="95.8371%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (7 samples, 0.01%)</title><rect x="95.5871%" y="437" width="0.0129%" height="15" fill="rgb(226,205,29)" fg:x="51748" fg:w="7"/><text x="95.8371%" y="447.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="95.5871%" y="421" width="0.0129%" height="15" fill="rgb(233,113,1)" fg:x="51748" fg:w="7"/><text x="95.8371%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (7 samples, 0.01%)</title><rect x="95.5871%" y="405" width="0.0129%" height="15" fill="rgb(253,98,13)" fg:x="51748" fg:w="7"/><text x="95.8371%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (7 samples, 0.01%)</title><rect x="95.5871%" y="389" width="0.0129%" height="15" fill="rgb(211,115,12)" fg:x="51748" fg:w="7"/><text x="95.8371%" y="399.50"></text></g><g><title>core::mem::replace (7 samples, 0.01%)</title><rect x="95.5871%" y="373" width="0.0129%" height="15" fill="rgb(208,12,16)" fg:x="51748" fg:w="7"/><text x="95.8371%" y="383.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="95.5871%" y="357" width="0.0129%" height="15" fill="rgb(237,193,54)" fg:x="51748" fg:w="7"/><text x="95.8371%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.03%)</title><rect x="95.6074%" y="325" width="0.0296%" height="15" fill="rgb(243,22,42)" fg:x="51759" fg:w="16"/><text x="95.8574%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.01%)</title><rect x="95.6259%" y="309" width="0.0111%" height="15" fill="rgb(233,151,36)" fg:x="51769" fg:w="6"/><text x="95.8759%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.02%)</title><rect x="95.6425%" y="309" width="0.0166%" height="15" fill="rgb(237,57,45)" fg:x="51778" fg:w="9"/><text x="95.8925%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (34 samples, 0.06%)</title><rect x="95.6001%" y="405" width="0.0628%" height="15" fill="rgb(221,88,17)" fg:x="51755" fg:w="34"/><text x="95.8501%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (34 samples, 0.06%)</title><rect x="95.6001%" y="389" width="0.0628%" height="15" fill="rgb(230,79,15)" fg:x="51755" fg:w="34"/><text x="95.8501%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (30 samples, 0.06%)</title><rect x="95.6074%" y="373" width="0.0554%" height="15" fill="rgb(213,57,13)" fg:x="51759" fg:w="30"/><text x="95.8574%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (30 samples, 0.06%)</title><rect x="95.6074%" y="357" width="0.0554%" height="15" fill="rgb(222,116,39)" fg:x="51759" fg:w="30"/><text x="95.8574%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (30 samples, 0.06%)</title><rect x="95.6074%" y="341" width="0.0554%" height="15" fill="rgb(245,107,2)" fg:x="51759" fg:w="30"/><text x="95.8574%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.03%)</title><rect x="95.6370%" y="325" width="0.0259%" height="15" fill="rgb(238,1,10)" fg:x="51775" fg:w="14"/><text x="95.8870%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="95.6702%" y="357" width="0.0111%" height="15" fill="rgb(249,4,48)" fg:x="51793" fg:w="6"/><text x="95.9202%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.01%)</title><rect x="95.6702%" y="341" width="0.0111%" height="15" fill="rgb(223,151,18)" fg:x="51793" fg:w="6"/><text x="95.9202%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.01%)</title><rect x="95.6813%" y="341" width="0.0111%" height="15" fill="rgb(227,65,43)" fg:x="51799" fg:w="6"/><text x="95.9313%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.01%)</title><rect x="95.6813%" y="357" width="0.0148%" height="15" fill="rgb(218,40,45)" fg:x="51799" fg:w="8"/><text x="95.9313%" y="367.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get_mut (230 samples, 0.42%)</title><rect x="95.2842%" y="485" width="0.4248%" height="15" fill="rgb(252,121,31)" fg:x="51584" fg:w="230"/><text x="95.5342%" y="495.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (172 samples, 0.32%)</title><rect x="95.3913%" y="469" width="0.3177%" height="15" fill="rgb(219,158,43)" fg:x="51642" fg:w="172"/><text x="95.6413%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (59 samples, 0.11%)</title><rect x="95.6001%" y="453" width="0.1090%" height="15" fill="rgb(231,162,42)" fg:x="51755" fg:w="59"/><text x="95.8501%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (59 samples, 0.11%)</title><rect x="95.6001%" y="437" width="0.1090%" height="15" fill="rgb(217,179,25)" fg:x="51755" fg:w="59"/><text x="95.8501%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (59 samples, 0.11%)</title><rect x="95.6001%" y="421" width="0.1090%" height="15" fill="rgb(206,212,31)" fg:x="51755" fg:w="59"/><text x="95.8501%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (25 samples, 0.05%)</title><rect x="95.6629%" y="405" width="0.0462%" height="15" fill="rgb(235,144,12)" fg:x="51789" fg:w="25"/><text x="95.9129%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 0.05%)</title><rect x="95.6629%" y="389" width="0.0462%" height="15" fill="rgb(213,51,10)" fg:x="51789" fg:w="25"/><text x="95.9129%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (25 samples, 0.05%)</title><rect x="95.6629%" y="373" width="0.0462%" height="15" fill="rgb(231,145,14)" fg:x="51789" fg:w="25"/><text x="95.9129%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.01%)</title><rect x="95.7201%" y="357" width="0.0129%" height="15" fill="rgb(235,15,28)" fg:x="51820" fg:w="7"/><text x="95.9701%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.02%)</title><rect x="95.7183%" y="373" width="0.0185%" height="15" fill="rgb(237,206,10)" fg:x="51819" fg:w="10"/><text x="95.9683%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.03%)</title><rect x="95.7441%" y="357" width="0.0332%" height="15" fill="rgb(236,227,27)" fg:x="51833" fg:w="18"/><text x="95.9941%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (37 samples, 0.07%)</title><rect x="95.7127%" y="421" width="0.0683%" height="15" fill="rgb(246,83,35)" fg:x="51816" fg:w="37"/><text x="95.9627%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (37 samples, 0.07%)</title><rect x="95.7127%" y="405" width="0.0683%" height="15" fill="rgb(220,136,24)" fg:x="51816" fg:w="37"/><text x="95.9627%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (37 samples, 0.07%)</title><rect x="95.7127%" y="389" width="0.0683%" height="15" fill="rgb(217,3,25)" fg:x="51816" fg:w="37"/><text x="95.9627%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.04%)</title><rect x="95.7367%" y="373" width="0.0443%" height="15" fill="rgb(239,24,14)" fg:x="51829" fg:w="24"/><text x="95.9867%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (41 samples, 0.08%)</title><rect x="95.7127%" y="453" width="0.0757%" height="15" fill="rgb(244,16,53)" fg:x="51816" fg:w="41"/><text x="95.9627%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (41 samples, 0.08%)</title><rect x="95.7127%" y="437" width="0.0757%" height="15" fill="rgb(208,175,44)" fg:x="51816" fg:w="41"/><text x="95.9627%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (13 samples, 0.02%)</title><rect x="95.8014%" y="389" width="0.0240%" height="15" fill="rgb(252,18,48)" fg:x="51864" fg:w="13"/><text x="96.0514%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (13 samples, 0.02%)</title><rect x="95.8014%" y="373" width="0.0240%" height="15" fill="rgb(234,199,32)" fg:x="51864" fg:w="13"/><text x="96.0514%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (14 samples, 0.03%)</title><rect x="95.8014%" y="405" width="0.0259%" height="15" fill="rgb(225,77,54)" fg:x="51864" fg:w="14"/><text x="96.0514%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (8 samples, 0.01%)</title><rect x="95.8273%" y="405" width="0.0148%" height="15" fill="rgb(225,42,25)" fg:x="51878" fg:w="8"/><text x="96.0773%" y="415.50"></text></g><g><title>core::cell::RefMut&lt;T&gt;::map (305 samples, 0.56%)</title><rect x="95.2842%" y="517" width="0.5634%" height="15" fill="rgb(242,227,46)" fg:x="51584" fg:w="305"/><text x="95.5342%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut::{{closure}} (305 samples, 0.56%)</title><rect x="95.2842%" y="501" width="0.5634%" height="15" fill="rgb(246,197,35)" fg:x="51584" fg:w="305"/><text x="95.5342%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (74 samples, 0.14%)</title><rect x="95.7109%" y="485" width="0.1367%" height="15" fill="rgb(215,159,26)" fg:x="51815" fg:w="74"/><text x="95.9609%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (74 samples, 0.14%)</title><rect x="95.7109%" y="469" width="0.1367%" height="15" fill="rgb(212,194,50)" fg:x="51815" fg:w="74"/><text x="95.9609%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (32 samples, 0.06%)</title><rect x="95.7885%" y="453" width="0.0591%" height="15" fill="rgb(246,132,1)" fg:x="51857" fg:w="32"/><text x="96.0385%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (32 samples, 0.06%)</title><rect x="95.7885%" y="437" width="0.0591%" height="15" fill="rgb(217,71,7)" fg:x="51857" fg:w="32"/><text x="96.0385%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (31 samples, 0.06%)</title><rect x="95.7903%" y="421" width="0.0573%" height="15" fill="rgb(252,59,32)" fg:x="51858" fg:w="31"/><text x="96.0403%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut (4,956 samples, 9.15%)</title><rect x="86.7152%" y="533" width="9.1546%" height="15" fill="rgb(253,204,25)" fg:x="46945" fg:w="4956"/><text x="86.9652%" y="543.50">&lt;yakvdb::disk..</text></g><g><title>core::result::Result&lt;T,E&gt;::ok (12 samples, 0.02%)</title><rect x="95.8476%" y="517" width="0.0222%" height="15" fill="rgb(232,21,16)" fg:x="51889" fg:w="12"/><text x="96.0976%" y="527.50"></text></g><g><title>hashbrown::map::make_insert_hash (7 samples, 0.01%)</title><rect x="95.8753%" y="453" width="0.0129%" height="15" fill="rgb(248,90,29)" fg:x="51904" fg:w="7"/><text x="96.1253%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="95.8753%" y="437" width="0.0129%" height="15" fill="rgb(249,223,7)" fg:x="51904" fg:w="7"/><text x="96.1253%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (20 samples, 0.04%)</title><rect x="95.8697%" y="517" width="0.0369%" height="15" fill="rgb(231,119,42)" fg:x="51901" fg:w="20"/><text x="96.1197%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (18 samples, 0.03%)</title><rect x="95.8734%" y="501" width="0.0332%" height="15" fill="rgb(215,41,35)" fg:x="51903" fg:w="18"/><text x="96.1234%" y="511.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (18 samples, 0.03%)</title><rect x="95.8734%" y="485" width="0.0332%" height="15" fill="rgb(220,44,45)" fg:x="51903" fg:w="18"/><text x="96.1234%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.03%)</title><rect x="95.8734%" y="469" width="0.0332%" height="15" fill="rgb(253,197,36)" fg:x="51903" fg:w="18"/><text x="96.1234%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.01%)</title><rect x="95.8938%" y="453" width="0.0129%" height="15" fill="rgb(245,225,54)" fg:x="51914" fg:w="7"/><text x="96.1438%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.01%)</title><rect x="95.9085%" y="421" width="0.0129%" height="15" fill="rgb(239,94,37)" fg:x="51922" fg:w="7"/><text x="96.1585%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="95.9085%" y="405" width="0.0129%" height="15" fill="rgb(242,217,10)" fg:x="51922" fg:w="7"/><text x="96.1585%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.01%)</title><rect x="95.9085%" y="389" width="0.0129%" height="15" fill="rgb(250,193,7)" fg:x="51922" fg:w="7"/><text x="96.1585%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.01%)</title><rect x="95.9085%" y="373" width="0.0129%" height="15" fill="rgb(230,104,19)" fg:x="51922" fg:w="7"/><text x="96.1585%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.01%)</title><rect x="95.9085%" y="357" width="0.0129%" height="15" fill="rgb(230,181,4)" fg:x="51922" fg:w="7"/><text x="96.1585%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.01%)</title><rect x="95.9104%" y="341" width="0.0111%" height="15" fill="rgb(216,219,49)" fg:x="51923" fg:w="6"/><text x="96.1604%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (11 samples, 0.02%)</title><rect x="95.9085%" y="501" width="0.0203%" height="15" fill="rgb(254,144,0)" fg:x="51922" fg:w="11"/><text x="96.1585%" y="511.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (11 samples, 0.02%)</title><rect x="95.9085%" y="485" width="0.0203%" height="15" fill="rgb(205,209,38)" fg:x="51922" fg:w="11"/><text x="96.1585%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (11 samples, 0.02%)</title><rect x="95.9085%" y="469" width="0.0203%" height="15" fill="rgb(240,21,42)" fg:x="51922" fg:w="11"/><text x="96.1585%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (11 samples, 0.02%)</title><rect x="95.9085%" y="453" width="0.0203%" height="15" fill="rgb(241,132,3)" fg:x="51922" fg:w="11"/><text x="96.1585%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.02%)</title><rect x="95.9085%" y="437" width="0.0203%" height="15" fill="rgb(225,14,2)" fg:x="51922" fg:w="11"/><text x="96.1585%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="95.9307%" y="341" width="0.0111%" height="15" fill="rgb(210,141,35)" fg:x="51934" fg:w="6"/><text x="96.1807%" y="351.50"></text></g><g><title>hashbrown::map::make_insert_hash (7 samples, 0.01%)</title><rect x="95.9307%" y="437" width="0.0129%" height="15" fill="rgb(251,14,44)" fg:x="51934" fg:w="7"/><text x="96.1807%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="95.9307%" y="421" width="0.0129%" height="15" fill="rgb(247,48,18)" fg:x="51934" fg:w="7"/><text x="96.1807%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.01%)</title><rect x="95.9307%" y="405" width="0.0129%" height="15" fill="rgb(225,0,40)" fg:x="51934" fg:w="7"/><text x="96.1807%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.01%)</title><rect x="95.9307%" y="389" width="0.0129%" height="15" fill="rgb(221,31,33)" fg:x="51934" fg:w="7"/><text x="96.1807%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.01%)</title><rect x="95.9307%" y="373" width="0.0129%" height="15" fill="rgb(237,42,40)" fg:x="51934" fg:w="7"/><text x="96.1807%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="95.9307%" y="357" width="0.0129%" height="15" fill="rgb(233,51,29)" fg:x="51934" fg:w="7"/><text x="96.1807%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (12 samples, 0.02%)</title><rect x="95.9288%" y="501" width="0.0222%" height="15" fill="rgb(226,58,20)" fg:x="51933" fg:w="12"/><text x="96.1788%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (11 samples, 0.02%)</title><rect x="95.9307%" y="485" width="0.0203%" height="15" fill="rgb(208,98,7)" fg:x="51934" fg:w="11"/><text x="96.1807%" y="495.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (11 samples, 0.02%)</title><rect x="95.9307%" y="469" width="0.0203%" height="15" fill="rgb(228,143,44)" fg:x="51934" fg:w="11"/><text x="96.1807%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.02%)</title><rect x="95.9307%" y="453" width="0.0203%" height="15" fill="rgb(246,55,38)" fg:x="51934" fg:w="11"/><text x="96.1807%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.02%)</title><rect x="95.9510%" y="405" width="0.0166%" height="15" fill="rgb(247,87,16)" fg:x="51945" fg:w="9"/><text x="96.2010%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="95.9510%" y="389" width="0.0166%" height="15" fill="rgb(234,129,42)" fg:x="51945" fg:w="9"/><text x="96.2010%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="95.9510%" y="373" width="0.0166%" height="15" fill="rgb(220,82,16)" fg:x="51945" fg:w="9"/><text x="96.2010%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="95.9510%" y="357" width="0.0166%" height="15" fill="rgb(211,88,4)" fg:x="51945" fg:w="9"/><text x="96.2010%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="95.9510%" y="341" width="0.0166%" height="15" fill="rgb(248,151,21)" fg:x="51945" fg:w="9"/><text x="96.2010%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="95.9547%" y="325" width="0.0129%" height="15" fill="rgb(238,163,6)" fg:x="51947" fg:w="7"/><text x="96.2047%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (16 samples, 0.03%)</title><rect x="95.9510%" y="453" width="0.0296%" height="15" fill="rgb(209,183,11)" fg:x="51945" fg:w="16"/><text x="96.2010%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (16 samples, 0.03%)</title><rect x="95.9510%" y="437" width="0.0296%" height="15" fill="rgb(219,37,20)" fg:x="51945" fg:w="16"/><text x="96.2010%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.03%)</title><rect x="95.9510%" y="421" width="0.0296%" height="15" fill="rgb(210,158,4)" fg:x="51945" fg:w="16"/><text x="96.2010%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.01%)</title><rect x="95.9676%" y="405" width="0.0129%" height="15" fill="rgb(221,167,53)" fg:x="51954" fg:w="7"/><text x="96.2176%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.01%)</title><rect x="95.9676%" y="389" width="0.0129%" height="15" fill="rgb(237,151,45)" fg:x="51954" fg:w="7"/><text x="96.2176%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (7 samples, 0.01%)</title><rect x="95.9676%" y="373" width="0.0129%" height="15" fill="rgb(231,39,3)" fg:x="51954" fg:w="7"/><text x="96.2176%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (15 samples, 0.03%)</title><rect x="95.9935%" y="437" width="0.0277%" height="15" fill="rgb(212,167,28)" fg:x="51968" fg:w="15"/><text x="96.2435%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.03%)</title><rect x="95.9935%" y="421" width="0.0277%" height="15" fill="rgb(232,178,8)" fg:x="51968" fg:w="15"/><text x="96.2435%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.03%)</title><rect x="95.9935%" y="405" width="0.0277%" height="15" fill="rgb(225,151,20)" fg:x="51968" fg:w="15"/><text x="96.2435%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="96.0083%" y="389" width="0.0129%" height="15" fill="rgb(238,3,37)" fg:x="51976" fg:w="7"/><text x="96.2583%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.01%)</title><rect x="96.0212%" y="389" width="0.0111%" height="15" fill="rgb(251,147,42)" fg:x="51983" fg:w="6"/><text x="96.2712%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="96.0212%" y="373" width="0.0111%" height="15" fill="rgb(208,173,10)" fg:x="51983" fg:w="6"/><text x="96.2712%" y="383.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get_mut (52 samples, 0.10%)</title><rect x="95.9510%" y="469" width="0.0961%" height="15" fill="rgb(246,225,4)" fg:x="51945" fg:w="52"/><text x="96.2010%" y="479.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (35 samples, 0.06%)</title><rect x="95.9824%" y="453" width="0.0647%" height="15" fill="rgb(248,102,6)" fg:x="51962" fg:w="35"/><text x="96.2324%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (14 samples, 0.03%)</title><rect x="96.0212%" y="437" width="0.0259%" height="15" fill="rgb(232,6,21)" fg:x="51983" fg:w="14"/><text x="96.2712%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (14 samples, 0.03%)</title><rect x="96.0212%" y="421" width="0.0259%" height="15" fill="rgb(221,179,22)" fg:x="51983" fg:w="14"/><text x="96.2712%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.03%)</title><rect x="96.0212%" y="405" width="0.0259%" height="15" fill="rgb(252,50,20)" fg:x="51983" fg:w="14"/><text x="96.2712%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.01%)</title><rect x="96.0323%" y="389" width="0.0148%" height="15" fill="rgb(222,56,38)" fg:x="51989" fg:w="8"/><text x="96.2823%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.01%)</title><rect x="96.0323%" y="373" width="0.0148%" height="15" fill="rgb(206,193,29)" fg:x="51989" fg:w="8"/><text x="96.2823%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.01%)</title><rect x="96.0323%" y="357" width="0.0148%" height="15" fill="rgb(239,192,45)" fg:x="51989" fg:w="8"/><text x="96.2823%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.02%)</title><rect x="96.0508%" y="341" width="0.0166%" height="15" fill="rgb(254,18,36)" fg:x="51999" fg:w="9"/><text x="96.3008%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="96.0489%" y="405" width="0.0222%" height="15" fill="rgb(221,127,11)" fg:x="51998" fg:w="12"/><text x="96.2989%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="96.0489%" y="389" width="0.0222%" height="15" fill="rgb(234,146,35)" fg:x="51998" fg:w="12"/><text x="96.2989%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="96.0489%" y="373" width="0.0222%" height="15" fill="rgb(254,201,37)" fg:x="51998" fg:w="12"/><text x="96.2989%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12 samples, 0.02%)</title><rect x="96.0489%" y="357" width="0.0222%" height="15" fill="rgb(211,202,23)" fg:x="51998" fg:w="12"/><text x="96.2989%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.02%)</title><rect x="96.0489%" y="437" width="0.0240%" height="15" fill="rgb(237,91,2)" fg:x="51998" fg:w="13"/><text x="96.2989%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.02%)</title><rect x="96.0489%" y="421" width="0.0240%" height="15" fill="rgb(226,228,36)" fg:x="51998" fg:w="13"/><text x="96.2989%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::root_mut (117 samples, 0.22%)</title><rect x="95.8697%" y="533" width="0.2161%" height="15" fill="rgb(213,63,50)" fg:x="51901" fg:w="117"/><text x="96.1197%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut (97 samples, 0.18%)</title><rect x="95.9067%" y="517" width="0.1792%" height="15" fill="rgb(235,194,19)" fg:x="51921" fg:w="97"/><text x="96.1567%" y="527.50"></text></g><g><title>core::cell::RefMut&lt;T&gt;::map (73 samples, 0.13%)</title><rect x="95.9510%" y="501" width="0.1348%" height="15" fill="rgb(207,204,18)" fg:x="51945" fg:w="73"/><text x="96.2010%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut::{{closure}} (73 samples, 0.13%)</title><rect x="95.9510%" y="485" width="0.1348%" height="15" fill="rgb(248,8,7)" fg:x="51945" fg:w="73"/><text x="96.2010%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (21 samples, 0.04%)</title><rect x="96.0471%" y="469" width="0.0388%" height="15" fill="rgb(223,145,47)" fg:x="51997" fg:w="21"/><text x="96.2971%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (20 samples, 0.04%)</title><rect x="96.0489%" y="453" width="0.0369%" height="15" fill="rgb(228,84,11)" fg:x="51998" fg:w="20"/><text x="96.2989%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (7 samples, 0.01%)</title><rect x="96.0729%" y="437" width="0.0129%" height="15" fill="rgb(218,76,45)" fg:x="52011" fg:w="7"/><text x="96.3229%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.01%)</title><rect x="96.0729%" y="421" width="0.0129%" height="15" fill="rgb(223,80,15)" fg:x="52011" fg:w="7"/><text x="96.3229%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (7 samples, 0.01%)</title><rect x="96.0729%" y="405" width="0.0129%" height="15" fill="rgb(219,218,33)" fg:x="52011" fg:w="7"/><text x="96.3229%" y="415.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.02%)</title><rect x="96.0969%" y="373" width="0.0203%" height="15" fill="rgb(208,51,11)" fg:x="52024" fg:w="11"/><text x="96.3469%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.03%)</title><rect x="96.0932%" y="469" width="0.0277%" height="15" fill="rgb(229,165,39)" fg:x="52022" fg:w="15"/><text x="96.3432%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.03%)</title><rect x="96.0932%" y="453" width="0.0277%" height="15" fill="rgb(241,100,24)" fg:x="52022" fg:w="15"/><text x="96.3432%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.03%)</title><rect x="96.0932%" y="437" width="0.0277%" height="15" fill="rgb(228,14,23)" fg:x="52022" fg:w="15"/><text x="96.3432%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.03%)</title><rect x="96.0932%" y="421" width="0.0277%" height="15" fill="rgb(247,116,52)" fg:x="52022" fg:w="15"/><text x="96.3432%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.03%)</title><rect x="96.0932%" y="405" width="0.0277%" height="15" fill="rgb(216,149,33)" fg:x="52022" fg:w="15"/><text x="96.3432%" y="415.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.03%)</title><rect x="96.0951%" y="389" width="0.0259%" height="15" fill="rgb(238,142,29)" fg:x="52023" fg:w="14"/><text x="96.3451%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (30 samples, 0.06%)</title><rect x="96.0932%" y="533" width="0.0554%" height="15" fill="rgb(224,83,40)" fg:x="52022" fg:w="30"/><text x="96.3432%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30 samples, 0.06%)</title><rect x="96.0932%" y="517" width="0.0554%" height="15" fill="rgb(234,165,11)" fg:x="52022" fg:w="30"/><text x="96.3432%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (30 samples, 0.06%)</title><rect x="96.0932%" y="501" width="0.0554%" height="15" fill="rgb(215,96,23)" fg:x="52022" fg:w="30"/><text x="96.3432%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30 samples, 0.06%)</title><rect x="96.0932%" y="485" width="0.0554%" height="15" fill="rgb(233,179,26)" fg:x="52022" fg:w="30"/><text x="96.3432%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (15 samples, 0.03%)</title><rect x="96.1210%" y="469" width="0.0277%" height="15" fill="rgb(225,129,33)" fg:x="52037" fg:w="15"/><text x="96.3710%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.03%)</title><rect x="96.1210%" y="453" width="0.0277%" height="15" fill="rgb(237,49,13)" fg:x="52037" fg:w="15"/><text x="96.3710%" y="463.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (13 samples, 0.02%)</title><rect x="96.1246%" y="437" width="0.0240%" height="15" fill="rgb(211,3,31)" fg:x="52039" fg:w="13"/><text x="96.3746%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::lt (12 samples, 0.02%)</title><rect x="96.1560%" y="533" width="0.0222%" height="15" fill="rgb(216,152,19)" fg:x="52056" fg:w="12"/><text x="96.4060%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::PartialOrd&gt;::partial_cmp (12 samples, 0.02%)</title><rect x="96.1560%" y="517" width="0.0222%" height="15" fill="rgb(251,121,35)" fg:x="52056" fg:w="12"/><text x="96.4060%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (11 samples, 0.02%)</title><rect x="96.1579%" y="501" width="0.0203%" height="15" fill="rgb(210,217,47)" fg:x="52057" fg:w="11"/><text x="96.4079%" y="511.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (11 samples, 0.02%)</title><rect x="96.1579%" y="485" width="0.0203%" height="15" fill="rgb(244,116,22)" fg:x="52057" fg:w="11"/><text x="96.4079%" y="495.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (11 samples, 0.02%)</title><rect x="96.1579%" y="469" width="0.0203%" height="15" fill="rgb(228,17,21)" fg:x="52057" fg:w="11"/><text x="96.4079%" y="479.50"></text></g><g><title>__memcmp_sse4_1 (9 samples, 0.02%)</title><rect x="96.1616%" y="453" width="0.0166%" height="15" fill="rgb(240,149,34)" fg:x="52059" fg:w="9"/><text x="96.4116%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="96.1985%" y="261" width="0.0129%" height="15" fill="rgb(208,125,47)" fg:x="52079" fg:w="7"/><text x="96.4485%" y="271.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="96.1985%" y="245" width="0.0129%" height="15" fill="rgb(249,186,39)" fg:x="52079" fg:w="7"/><text x="96.4485%" y="255.50"></text></g><g><title>__x64_sys_read (7 samples, 0.01%)</title><rect x="96.1985%" y="229" width="0.0129%" height="15" fill="rgb(240,220,33)" fg:x="52079" fg:w="7"/><text x="96.4485%" y="239.50"></text></g><g><title>ksys_read (7 samples, 0.01%)</title><rect x="96.1985%" y="213" width="0.0129%" height="15" fill="rgb(243,110,23)" fg:x="52079" fg:w="7"/><text x="96.4485%" y="223.50"></text></g><g><title>vfs_read (7 samples, 0.01%)</title><rect x="96.1985%" y="197" width="0.0129%" height="15" fill="rgb(219,163,46)" fg:x="52079" fg:w="7"/><text x="96.4485%" y="207.50"></text></g><g><title>__vfs_read (7 samples, 0.01%)</title><rect x="96.1985%" y="181" width="0.0129%" height="15" fill="rgb(216,126,30)" fg:x="52079" fg:w="7"/><text x="96.4485%" y="191.50"></text></g><g><title>new_sync_read (7 samples, 0.01%)</title><rect x="96.1985%" y="165" width="0.0129%" height="15" fill="rgb(208,139,11)" fg:x="52079" fg:w="7"/><text x="96.4485%" y="175.50"></text></g><g><title>ext4_file_read_iter (7 samples, 0.01%)</title><rect x="96.1985%" y="149" width="0.0129%" height="15" fill="rgb(213,118,36)" fg:x="52079" fg:w="7"/><text x="96.4485%" y="159.50"></text></g><g><title>generic_file_read_iter (6 samples, 0.01%)</title><rect x="96.2004%" y="133" width="0.0111%" height="15" fill="rgb(226,43,17)" fg:x="52080" fg:w="6"/><text x="96.4504%" y="143.50"></text></g><g><title>generic_file_buffered_read (6 samples, 0.01%)</title><rect x="96.2004%" y="117" width="0.0111%" height="15" fill="rgb(254,217,4)" fg:x="52080" fg:w="6"/><text x="96.4504%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.03%)</title><rect x="96.1801%" y="485" width="0.0332%" height="15" fill="rgb(210,134,47)" fg:x="52069" fg:w="18"/><text x="96.4301%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.03%)</title><rect x="96.1801%" y="469" width="0.0332%" height="15" fill="rgb(237,24,49)" fg:x="52069" fg:w="18"/><text x="96.4301%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.03%)</title><rect x="96.1801%" y="453" width="0.0332%" height="15" fill="rgb(251,39,46)" fg:x="52069" fg:w="18"/><text x="96.4301%" y="463.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (18 samples, 0.03%)</title><rect x="96.1801%" y="437" width="0.0332%" height="15" fill="rgb(251,220,3)" fg:x="52069" fg:w="18"/><text x="96.4301%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::remove::{{closure}} (18 samples, 0.03%)</title><rect x="96.1801%" y="421" width="0.0332%" height="15" fill="rgb(228,105,12)" fg:x="52069" fg:w="18"/><text x="96.4301%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (17 samples, 0.03%)</title><rect x="96.1819%" y="405" width="0.0314%" height="15" fill="rgb(215,196,1)" fg:x="52070" fg:w="17"/><text x="96.4319%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (17 samples, 0.03%)</title><rect x="96.1819%" y="389" width="0.0314%" height="15" fill="rgb(214,33,39)" fg:x="52070" fg:w="17"/><text x="96.4319%" y="399.50"></text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (15 samples, 0.03%)</title><rect x="96.1856%" y="373" width="0.0277%" height="15" fill="rgb(220,19,52)" fg:x="52072" fg:w="15"/><text x="96.4356%" y="383.50"></text></g><g><title>std::io::Read::read_exact (9 samples, 0.02%)</title><rect x="96.1967%" y="357" width="0.0166%" height="15" fill="rgb(221,78,38)" fg:x="52078" fg:w="9"/><text x="96.4467%" y="367.50"></text></g><g><title>std::io::default_read_exact (9 samples, 0.02%)</title><rect x="96.1967%" y="341" width="0.0166%" height="15" fill="rgb(253,30,16)" fg:x="52078" fg:w="9"/><text x="96.4467%" y="351.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (9 samples, 0.02%)</title><rect x="96.1967%" y="325" width="0.0166%" height="15" fill="rgb(242,65,0)" fg:x="52078" fg:w="9"/><text x="96.4467%" y="335.50"></text></g><g><title>std::sys::unix::fs::File::read (9 samples, 0.02%)</title><rect x="96.1967%" y="309" width="0.0166%" height="15" fill="rgb(235,201,12)" fg:x="52078" fg:w="9"/><text x="96.4467%" y="319.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (9 samples, 0.02%)</title><rect x="96.1967%" y="293" width="0.0166%" height="15" fill="rgb(233,161,9)" fg:x="52078" fg:w="9"/><text x="96.4467%" y="303.50"></text></g><g><title>__GI___read (9 samples, 0.02%)</title><rect x="96.1967%" y="277" width="0.0166%" height="15" fill="rgb(241,207,41)" fg:x="52078" fg:w="9"/><text x="96.4467%" y="287.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (9 samples, 0.02%)</title><rect x="96.2613%" y="197" width="0.0166%" height="15" fill="rgb(212,69,46)" fg:x="52113" fg:w="9"/><text x="96.5113%" y="207.50"></text></g><g><title>yakvdb::disk::block::get_u32 (6 samples, 0.01%)</title><rect x="96.2669%" y="181" width="0.0111%" height="15" fill="rgb(239,69,45)" fg:x="52116" fg:w="6"/><text x="96.5169%" y="191.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (44 samples, 0.08%)</title><rect x="96.2207%" y="245" width="0.0813%" height="15" fill="rgb(242,117,48)" fg:x="52091" fg:w="44"/><text x="96.4707%" y="255.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (36 samples, 0.07%)</title><rect x="96.2355%" y="229" width="0.0665%" height="15" fill="rgb(228,41,36)" fg:x="52099" fg:w="36"/><text x="96.4855%" y="239.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (36 samples, 0.07%)</title><rect x="96.2355%" y="213" width="0.0665%" height="15" fill="rgb(212,3,32)" fg:x="52099" fg:w="36"/><text x="96.4855%" y="223.50"></text></g><g><title>yakvdb::disk::block::get_u32 (13 samples, 0.02%)</title><rect x="96.2780%" y="197" width="0.0240%" height="15" fill="rgb(233,41,49)" fg:x="52122" fg:w="13"/><text x="96.5280%" y="207.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.02%)</title><rect x="96.2817%" y="181" width="0.0203%" height="15" fill="rgb(252,170,49)" fg:x="52124" fg:w="11"/><text x="96.5317%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.02%)</title><rect x="96.2817%" y="165" width="0.0203%" height="15" fill="rgb(229,53,26)" fg:x="52124" fg:w="11"/><text x="96.5317%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49 samples, 0.09%)</title><rect x="96.2207%" y="293" width="0.0905%" height="15" fill="rgb(217,157,12)" fg:x="52091" fg:w="49"/><text x="96.4707%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49 samples, 0.09%)</title><rect x="96.2207%" y="277" width="0.0905%" height="15" fill="rgb(227,17,9)" fg:x="52091" fg:w="49"/><text x="96.4707%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (49 samples, 0.09%)</title><rect x="96.2207%" y="261" width="0.0905%" height="15" fill="rgb(218,84,12)" fg:x="52091" fg:w="49"/><text x="96.4707%" y="271.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::full (55 samples, 0.10%)</title><rect x="96.2133%" y="373" width="0.1016%" height="15" fill="rgb(212,79,24)" fg:x="52087" fg:w="55"/><text x="96.4633%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (52 samples, 0.10%)</title><rect x="96.2189%" y="357" width="0.0961%" height="15" fill="rgb(217,222,37)" fg:x="52090" fg:w="52"/><text x="96.4689%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (51 samples, 0.09%)</title><rect x="96.2207%" y="341" width="0.0942%" height="15" fill="rgb(246,208,8)" fg:x="52091" fg:w="51"/><text x="96.4707%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (51 samples, 0.09%)</title><rect x="96.2207%" y="325" width="0.0942%" height="15" fill="rgb(244,133,10)" fg:x="52091" fg:w="51"/><text x="96.4707%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (51 samples, 0.09%)</title><rect x="96.2207%" y="309" width="0.0942%" height="15" fill="rgb(209,219,41)" fg:x="52091" fg:w="51"/><text x="96.4707%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;yakvdb::disk::block::Block&gt;&gt; (6 samples, 0.01%)</title><rect x="96.3352%" y="325" width="0.0111%" height="15" fill="rgb(253,175,45)" fg:x="52153" fg:w="6"/><text x="96.5852%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;yakvdb::disk::block::Block&gt; (6 samples, 0.01%)</title><rect x="96.3352%" y="309" width="0.0111%" height="15" fill="rgb(235,100,37)" fg:x="52153" fg:w="6"/><text x="96.5852%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (6 samples, 0.01%)</title><rect x="96.3352%" y="293" width="0.0111%" height="15" fill="rgb(225,87,19)" fg:x="52153" fg:w="6"/><text x="96.5852%" y="303.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.01%)</title><rect x="96.3463%" y="325" width="0.0111%" height="15" fill="rgb(217,152,17)" fg:x="52159" fg:w="6"/><text x="96.5963%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="96.3463%" y="309" width="0.0111%" height="15" fill="rgb(235,72,13)" fg:x="52159" fg:w="6"/><text x="96.5963%" y="319.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::put (21 samples, 0.04%)</title><rect x="96.3352%" y="341" width="0.0388%" height="15" fill="rgb(233,140,18)" fg:x="52153" fg:w="21"/><text x="96.5852%" y="351.50"></text></g><g><title>__fdget_pos (6 samples, 0.01%)</title><rect x="96.4701%" y="213" width="0.0111%" height="15" fill="rgb(207,212,28)" fg:x="52226" fg:w="6"/><text x="96.7201%" y="223.50"></text></g><g><title>__x64_sys_lseek (14 samples, 0.03%)</title><rect x="96.4645%" y="245" width="0.0259%" height="15" fill="rgb(220,130,25)" fg:x="52223" fg:w="14"/><text x="96.7145%" y="255.50"></text></g><g><title>ksys_lseek (13 samples, 0.02%)</title><rect x="96.4664%" y="229" width="0.0240%" height="15" fill="rgb(205,55,34)" fg:x="52224" fg:w="13"/><text x="96.7164%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (57 samples, 0.11%)</title><rect x="96.3869%" y="277" width="0.1053%" height="15" fill="rgb(237,54,35)" fg:x="52181" fg:w="57"/><text x="96.6369%" y="287.50"></text></g><g><title>do_syscall_64 (54 samples, 0.10%)</title><rect x="96.3925%" y="261" width="0.0997%" height="15" fill="rgb(208,67,23)" fg:x="52184" fg:w="54"/><text x="96.6425%" y="271.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (77 samples, 0.14%)</title><rect x="96.3777%" y="325" width="0.1422%" height="15" fill="rgb(206,207,50)" fg:x="52176" fg:w="77"/><text x="96.6277%" y="335.50"></text></g><g><title>std::sys::unix::fs::File::seek (77 samples, 0.14%)</title><rect x="96.3777%" y="309" width="0.1422%" height="15" fill="rgb(213,211,42)" fg:x="52176" fg:w="77"/><text x="96.6277%" y="319.50"></text></g><g><title>__lseek64 (75 samples, 0.14%)</title><rect x="96.3814%" y="293" width="0.1385%" height="15" fill="rgb(252,197,50)" fg:x="52178" fg:w="75"/><text x="96.6314%" y="303.50"></text></g><g><title>syscall_return_via_sysret (15 samples, 0.03%)</title><rect x="96.4922%" y="277" width="0.0277%" height="15" fill="rgb(251,211,41)" fg:x="52238" fg:w="15"/><text x="96.7422%" y="287.50"></text></g><g><title>__memset_sse2_unaligned_erms (24 samples, 0.04%)</title><rect x="96.5255%" y="181" width="0.0443%" height="15" fill="rgb(229,211,5)" fg:x="52256" fg:w="24"/><text x="96.7755%" y="191.50"></text></g><g><title>alloc::vec::from_elem (27 samples, 0.05%)</title><rect x="96.5218%" y="309" width="0.0499%" height="15" fill="rgb(239,36,31)" fg:x="52254" fg:w="27"/><text x="96.7718%" y="319.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (27 samples, 0.05%)</title><rect x="96.5218%" y="293" width="0.0499%" height="15" fill="rgb(248,67,31)" fg:x="52254" fg:w="27"/><text x="96.7718%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (27 samples, 0.05%)</title><rect x="96.5218%" y="277" width="0.0499%" height="15" fill="rgb(249,55,44)" fg:x="52254" fg:w="27"/><text x="96.7718%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.05%)</title><rect x="96.5218%" y="261" width="0.0499%" height="15" fill="rgb(216,82,12)" fg:x="52254" fg:w="27"/><text x="96.7718%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (27 samples, 0.05%)</title><rect x="96.5218%" y="245" width="0.0499%" height="15" fill="rgb(242,174,1)" fg:x="52254" fg:w="27"/><text x="96.7718%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.05%)</title><rect x="96.5218%" y="229" width="0.0499%" height="15" fill="rgb(208,120,29)" fg:x="52254" fg:w="27"/><text x="96.7718%" y="239.50"></text></g><g><title>alloc::alloc::alloc_zeroed (27 samples, 0.05%)</title><rect x="96.5218%" y="213" width="0.0499%" height="15" fill="rgb(221,105,43)" fg:x="52254" fg:w="27"/><text x="96.7718%" y="223.50"></text></g><g><title>__calloc (27 samples, 0.05%)</title><rect x="96.5218%" y="197" width="0.0499%" height="15" fill="rgb(234,124,22)" fg:x="52254" fg:w="27"/><text x="96.7718%" y="207.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (20 samples, 0.04%)</title><rect x="96.5717%" y="309" width="0.0369%" height="15" fill="rgb(212,23,30)" fg:x="52281" fg:w="20"/><text x="96.8217%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.04%)</title><rect x="96.5735%" y="293" width="0.0351%" height="15" fill="rgb(219,122,53)" fg:x="52282" fg:w="19"/><text x="96.8235%" y="303.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (19 samples, 0.04%)</title><rect x="96.5735%" y="277" width="0.0351%" height="15" fill="rgb(248,84,24)" fg:x="52282" fg:w="19"/><text x="96.8235%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (48 samples, 0.09%)</title><rect x="96.6086%" y="293" width="0.0887%" height="15" fill="rgb(245,115,18)" fg:x="52301" fg:w="48"/><text x="96.8586%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (48 samples, 0.09%)</title><rect x="96.6086%" y="277" width="0.0887%" height="15" fill="rgb(227,176,51)" fg:x="52301" fg:w="48"/><text x="96.8586%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (48 samples, 0.09%)</title><rect x="96.6086%" y="261" width="0.0887%" height="15" fill="rgb(229,63,42)" fg:x="52301" fg:w="48"/><text x="96.8586%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (48 samples, 0.09%)</title><rect x="96.6086%" y="245" width="0.0887%" height="15" fill="rgb(247,202,24)" fg:x="52301" fg:w="48"/><text x="96.8586%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48 samples, 0.09%)</title><rect x="96.6086%" y="229" width="0.0887%" height="15" fill="rgb(244,173,20)" fg:x="52301" fg:w="48"/><text x="96.8586%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.09%)</title><rect x="96.6086%" y="213" width="0.0887%" height="15" fill="rgb(242,81,47)" fg:x="52301" fg:w="48"/><text x="96.8586%" y="223.50"></text></g><g><title>alloc::alloc::alloc (48 samples, 0.09%)</title><rect x="96.6086%" y="197" width="0.0887%" height="15" fill="rgb(231,185,54)" fg:x="52301" fg:w="48"/><text x="96.8586%" y="207.50"></text></g><g><title>__GI___libc_malloc (48 samples, 0.09%)</title><rect x="96.6086%" y="181" width="0.0887%" height="15" fill="rgb(243,55,32)" fg:x="52301" fg:w="48"/><text x="96.8586%" y="191.50"></text></g><g><title>_int_malloc (47 samples, 0.09%)</title><rect x="96.6105%" y="165" width="0.0868%" height="15" fill="rgb(208,167,19)" fg:x="52302" fg:w="47"/><text x="96.8605%" y="175.50"></text></g><g><title>malloc_consolidate (31 samples, 0.06%)</title><rect x="96.6400%" y="149" width="0.0573%" height="15" fill="rgb(231,72,35)" fg:x="52318" fg:w="31"/><text x="96.8900%" y="159.50"></text></g><g><title>unlink_chunk.isra.0 (6 samples, 0.01%)</title><rect x="96.6862%" y="133" width="0.0111%" height="15" fill="rgb(250,173,51)" fg:x="52343" fg:w="6"/><text x="96.9362%" y="143.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (49 samples, 0.09%)</title><rect x="96.6086%" y="309" width="0.0905%" height="15" fill="rgb(209,5,22)" fg:x="52301" fg:w="49"/><text x="96.8586%" y="319.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::reserve (105 samples, 0.19%)</title><rect x="96.5199%" y="325" width="0.1940%" height="15" fill="rgb(250,174,19)" fg:x="52253" fg:w="105"/><text x="96.7699%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="96.6991%" y="309" width="0.0148%" height="15" fill="rgb(217,3,49)" fg:x="52350" fg:w="8"/><text x="96.9491%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="96.6991%" y="293" width="0.0148%" height="15" fill="rgb(218,225,5)" fg:x="52350" fg:w="8"/><text x="96.9491%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="96.6991%" y="277" width="0.0148%" height="15" fill="rgb(236,89,11)" fg:x="52350" fg:w="8"/><text x="96.9491%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="96.6991%" y="261" width="0.0148%" height="15" fill="rgb(206,33,28)" fg:x="52350" fg:w="8"/><text x="96.9491%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="96.6991%" y="245" width="0.0148%" height="15" fill="rgb(241,56,42)" fg:x="52350" fg:w="8"/><text x="96.9491%" y="255.50"></text></g><g><title>copy_page_to_iter (68 samples, 0.13%)</title><rect x="96.8377%" y="69" width="0.1256%" height="15" fill="rgb(222,44,11)" fg:x="52425" fg:w="68"/><text x="97.0877%" y="79.50"></text></g><g><title>copy_user_generic_string (66 samples, 0.12%)</title><rect x="96.8413%" y="53" width="0.1219%" height="15" fill="rgb(234,111,20)" fg:x="52427" fg:w="66"/><text x="97.0913%" y="63.50"></text></g><g><title>xas_load (15 samples, 0.03%)</title><rect x="96.9965%" y="37" width="0.0277%" height="15" fill="rgb(237,77,6)" fg:x="52511" fg:w="15"/><text x="97.2465%" y="47.50"></text></g><g><title>find_get_entry (28 samples, 0.05%)</title><rect x="96.9743%" y="53" width="0.0517%" height="15" fill="rgb(235,111,23)" fg:x="52499" fg:w="28"/><text x="97.2243%" y="63.50"></text></g><g><title>pagecache_get_page (31 samples, 0.06%)</title><rect x="96.9706%" y="69" width="0.0573%" height="15" fill="rgb(251,135,29)" fg:x="52497" fg:w="31"/><text x="97.2206%" y="79.50"></text></g><g><title>__vfs_read (128 samples, 0.24%)</title><rect x="96.8007%" y="149" width="0.2364%" height="15" fill="rgb(217,57,1)" fg:x="52405" fg:w="128"/><text x="97.0507%" y="159.50"></text></g><g><title>new_sync_read (125 samples, 0.23%)</title><rect x="96.8063%" y="133" width="0.2309%" height="15" fill="rgb(249,119,31)" fg:x="52408" fg:w="125"/><text x="97.0563%" y="143.50"></text></g><g><title>ext4_file_read_iter (122 samples, 0.23%)</title><rect x="96.8118%" y="117" width="0.2254%" height="15" fill="rgb(233,164,33)" fg:x="52411" fg:w="122"/><text x="97.0618%" y="127.50"></text></g><g><title>generic_file_read_iter (120 samples, 0.22%)</title><rect x="96.8155%" y="101" width="0.2217%" height="15" fill="rgb(250,217,43)" fg:x="52413" fg:w="120"/><text x="97.0655%" y="111.50"></text></g><g><title>generic_file_buffered_read (120 samples, 0.22%)</title><rect x="96.8155%" y="85" width="0.2217%" height="15" fill="rgb(232,154,50)" fg:x="52413" fg:w="120"/><text x="97.0655%" y="95.50"></text></g><g><title>apparmor_file_permission (9 samples, 0.02%)</title><rect x="97.0575%" y="117" width="0.0166%" height="15" fill="rgb(227,190,8)" fg:x="52544" fg:w="9"/><text x="97.3075%" y="127.50"></text></g><g><title>common_file_perm (8 samples, 0.01%)</title><rect x="97.0593%" y="101" width="0.0148%" height="15" fill="rgb(209,217,32)" fg:x="52545" fg:w="8"/><text x="97.3093%" y="111.50"></text></g><g><title>ksys_read (159 samples, 0.29%)</title><rect x="96.7859%" y="181" width="0.2937%" height="15" fill="rgb(243,203,50)" fg:x="52397" fg:w="159"/><text x="97.0359%" y="191.50"></text></g><g><title>vfs_read (155 samples, 0.29%)</title><rect x="96.7933%" y="165" width="0.2863%" height="15" fill="rgb(232,152,27)" fg:x="52401" fg:w="155"/><text x="97.0433%" y="175.50"></text></g><g><title>rw_verify_area (20 samples, 0.04%)</title><rect x="97.0427%" y="149" width="0.0369%" height="15" fill="rgb(240,34,29)" fg:x="52536" fg:w="20"/><text x="97.2927%" y="159.50"></text></g><g><title>security_file_permission (16 samples, 0.03%)</title><rect x="97.0501%" y="133" width="0.0296%" height="15" fill="rgb(215,185,52)" fg:x="52540" fg:w="16"/><text x="97.3001%" y="143.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (197 samples, 0.36%)</title><rect x="96.7176%" y="229" width="0.3639%" height="15" fill="rgb(240,89,49)" fg:x="52360" fg:w="197"/><text x="96.9676%" y="239.50"></text></g><g><title>do_syscall_64 (193 samples, 0.36%)</title><rect x="96.7250%" y="213" width="0.3565%" height="15" fill="rgb(225,12,52)" fg:x="52364" fg:w="193"/><text x="96.9750%" y="223.50"></text></g><g><title>__x64_sys_read (160 samples, 0.30%)</title><rect x="96.7859%" y="197" width="0.2955%" height="15" fill="rgb(239,128,45)" fg:x="52397" fg:w="160"/><text x="97.0359%" y="207.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (423 samples, 0.78%)</title><rect x="96.3186%" y="357" width="0.7814%" height="15" fill="rgb(211,78,47)" fg:x="52144" fg:w="423"/><text x="96.5686%" y="367.50"></text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (392 samples, 0.72%)</title><rect x="96.3759%" y="341" width="0.7241%" height="15" fill="rgb(232,31,21)" fg:x="52175" fg:w="392"/><text x="96.6259%" y="351.50"></text></g><g><title>std::io::Read::read_exact (208 samples, 0.38%)</title><rect x="96.7157%" y="325" width="0.3842%" height="15" fill="rgb(222,168,14)" fg:x="52359" fg:w="208"/><text x="96.9657%" y="335.50"></text></g><g><title>std::io::default_read_exact (208 samples, 0.38%)</title><rect x="96.7157%" y="309" width="0.3842%" height="15" fill="rgb(209,128,24)" fg:x="52359" fg:w="208"/><text x="96.9657%" y="319.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (208 samples, 0.38%)</title><rect x="96.7157%" y="293" width="0.3842%" height="15" fill="rgb(249,35,13)" fg:x="52359" fg:w="208"/><text x="96.9657%" y="303.50"></text></g><g><title>std::sys::unix::fs::File::read (208 samples, 0.38%)</title><rect x="96.7157%" y="277" width="0.3842%" height="15" fill="rgb(218,7,2)" fg:x="52359" fg:w="208"/><text x="96.9657%" y="287.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (208 samples, 0.38%)</title><rect x="96.7157%" y="261" width="0.3842%" height="15" fill="rgb(238,107,27)" fg:x="52359" fg:w="208"/><text x="96.9657%" y="271.50"></text></g><g><title>__GI___read (208 samples, 0.38%)</title><rect x="96.7157%" y="245" width="0.3842%" height="15" fill="rgb(217,88,38)" fg:x="52359" fg:w="208"/><text x="96.9657%" y="255.50"></text></g><g><title>syscall_return_via_sysret (10 samples, 0.02%)</title><rect x="97.0815%" y="229" width="0.0185%" height="15" fill="rgb(230,207,0)" fg:x="52557" fg:w="10"/><text x="97.3315%" y="239.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (6 samples, 0.01%)</title><rect x="97.1000%" y="309" width="0.0111%" height="15" fill="rgb(249,64,54)" fg:x="52567" fg:w="6"/><text x="97.3500%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (6 samples, 0.01%)</title><rect x="97.1000%" y="293" width="0.0111%" height="15" fill="rgb(231,7,11)" fg:x="52567" fg:w="6"/><text x="97.3500%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.01%)</title><rect x="97.1000%" y="277" width="0.0111%" height="15" fill="rgb(205,149,21)" fg:x="52567" fg:w="6"/><text x="97.3500%" y="287.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 0.01%)</title><rect x="97.1110%" y="309" width="0.0129%" height="15" fill="rgb(215,126,34)" fg:x="52573" fg:w="7"/><text x="97.3610%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 0.01%)</title><rect x="97.1110%" y="293" width="0.0129%" height="15" fill="rgb(241,132,45)" fg:x="52573" fg:w="7"/><text x="97.3610%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.01%)</title><rect x="97.1110%" y="277" width="0.0129%" height="15" fill="rgb(252,69,32)" fg:x="52573" fg:w="7"/><text x="97.3610%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (6 samples, 0.01%)</title><rect x="97.1258%" y="293" width="0.0111%" height="15" fill="rgb(232,204,19)" fg:x="52581" fg:w="6"/><text x="97.3758%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.01%)</title><rect x="97.1258%" y="277" width="0.0111%" height="15" fill="rgb(249,15,47)" fg:x="52581" fg:w="6"/><text x="97.3758%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.01%)</title><rect x="97.1258%" y="261" width="0.0111%" height="15" fill="rgb(209,227,23)" fg:x="52581" fg:w="6"/><text x="97.3758%" y="271.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (22 samples, 0.04%)</title><rect x="97.1000%" y="357" width="0.0406%" height="15" fill="rgb(248,92,24)" fg:x="52567" fg:w="22"/><text x="97.3500%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (22 samples, 0.04%)</title><rect x="97.1000%" y="341" width="0.0406%" height="15" fill="rgb(247,59,2)" fg:x="52567" fg:w="22"/><text x="97.3500%" y="351.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (22 samples, 0.04%)</title><rect x="97.1000%" y="325" width="0.0406%" height="15" fill="rgb(221,30,5)" fg:x="52567" fg:w="22"/><text x="97.3500%" y="335.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (9 samples, 0.02%)</title><rect x="97.1240%" y="309" width="0.0166%" height="15" fill="rgb(208,108,53)" fg:x="52580" fg:w="9"/><text x="97.3740%" y="319.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (449 samples, 0.83%)</title><rect x="96.3168%" y="373" width="0.8294%" height="15" fill="rgb(211,183,26)" fg:x="52143" fg:w="449"/><text x="96.5668%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (506 samples, 0.93%)</title><rect x="96.2133%" y="485" width="0.9347%" height="15" fill="rgb(232,132,4)" fg:x="52087" fg:w="506"/><text x="96.4633%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (506 samples, 0.93%)</title><rect x="96.2133%" y="469" width="0.9347%" height="15" fill="rgb(253,128,37)" fg:x="52087" fg:w="506"/><text x="96.4633%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (506 samples, 0.93%)</title><rect x="96.2133%" y="453" width="0.9347%" height="15" fill="rgb(221,58,24)" fg:x="52087" fg:w="506"/><text x="96.4633%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (506 samples, 0.93%)</title><rect x="96.2133%" y="437" width="0.9347%" height="15" fill="rgb(230,54,45)" fg:x="52087" fg:w="506"/><text x="96.4633%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (506 samples, 0.93%)</title><rect x="96.2133%" y="421" width="0.9347%" height="15" fill="rgb(254,21,18)" fg:x="52087" fg:w="506"/><text x="96.4633%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (506 samples, 0.93%)</title><rect x="96.2133%" y="405" width="0.9347%" height="15" fill="rgb(221,108,0)" fg:x="52087" fg:w="506"/><text x="96.4633%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::remove::{{closure}} (506 samples, 0.93%)</title><rect x="96.2133%" y="389" width="0.9347%" height="15" fill="rgb(206,95,1)" fg:x="52087" fg:w="506"/><text x="96.4633%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by_key (526 samples, 0.97%)</title><rect x="96.1782%" y="533" width="0.9716%" height="15" fill="rgb(237,52,5)" fg:x="52068" fg:w="526"/><text x="96.4282%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (526 samples, 0.97%)</title><rect x="96.1782%" y="517" width="0.9716%" height="15" fill="rgb(218,150,34)" fg:x="52068" fg:w="526"/><text x="96.4282%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (526 samples, 0.97%)</title><rect x="96.1782%" y="501" width="0.9716%" height="15" fill="rgb(235,194,28)" fg:x="52068" fg:w="526"/><text x="96.4282%" y="511.50"></text></g><g><title>__GI___libc_free (10 samples, 0.02%)</title><rect x="97.1701%" y="453" width="0.0185%" height="15" fill="rgb(245,92,18)" fg:x="52605" fg:w="10"/><text x="97.4201%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.03%)</title><rect x="97.1701%" y="485" width="0.0259%" height="15" fill="rgb(253,203,53)" fg:x="52605" fg:w="14"/><text x="97.4201%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.03%)</title><rect x="97.1701%" y="469" width="0.0259%" height="15" fill="rgb(249,185,47)" fg:x="52605" fg:w="14"/><text x="97.4201%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u32,u32)&gt;&gt; (19 samples, 0.04%)</title><rect x="97.1628%" y="533" width="0.0351%" height="15" fill="rgb(252,194,52)" fg:x="52601" fg:w="19"/><text x="97.4128%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u32,u32)&gt;&gt; (19 samples, 0.04%)</title><rect x="97.1628%" y="517" width="0.0351%" height="15" fill="rgb(210,53,36)" fg:x="52601" fg:w="19"/><text x="97.4128%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.04%)</title><rect x="97.1628%" y="501" width="0.0351%" height="15" fill="rgb(237,37,25)" fg:x="52601" fg:w="19"/><text x="97.4128%" y="511.50"></text></g><g><title>__GI___libc_free (6 samples, 0.01%)</title><rect x="97.1978%" y="453" width="0.0111%" height="15" fill="rgb(242,116,27)" fg:x="52620" fg:w="6"/><text x="97.4478%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.06%)</title><rect x="97.1978%" y="485" width="0.0610%" height="15" fill="rgb(213,185,26)" fg:x="52620" fg:w="33"/><text x="97.4478%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.06%)</title><rect x="97.1978%" y="469" width="0.0610%" height="15" fill="rgb(225,204,8)" fg:x="52620" fg:w="33"/><text x="97.4478%" y="479.50"></text></g><g><title>_int_free (23 samples, 0.04%)</title><rect x="97.2163%" y="453" width="0.0425%" height="15" fill="rgb(254,111,37)" fg:x="52630" fg:w="23"/><text x="97.4663%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (34 samples, 0.06%)</title><rect x="97.1978%" y="533" width="0.0628%" height="15" fill="rgb(242,35,9)" fg:x="52620" fg:w="34"/><text x="97.4478%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (34 samples, 0.06%)</title><rect x="97.1978%" y="517" width="0.0628%" height="15" fill="rgb(232,138,49)" fg:x="52620" fg:w="34"/><text x="97.4478%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.06%)</title><rect x="97.1978%" y="501" width="0.0628%" height="15" fill="rgb(247,56,4)" fg:x="52620" fg:w="34"/><text x="97.4478%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (11 samples, 0.02%)</title><rect x="97.2607%" y="453" width="0.0203%" height="15" fill="rgb(226,179,17)" fg:x="52654" fg:w="11"/><text x="97.5107%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (11 samples, 0.02%)</title><rect x="97.2607%" y="437" width="0.0203%" height="15" fill="rgb(216,163,45)" fg:x="52654" fg:w="11"/><text x="97.5107%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.02%)</title><rect x="97.2607%" y="421" width="0.0203%" height="15" fill="rgb(211,157,3)" fg:x="52654" fg:w="11"/><text x="97.5107%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.02%)</title><rect x="97.2643%" y="405" width="0.0166%" height="15" fill="rgb(234,44,20)" fg:x="52656" fg:w="9"/><text x="97.5143%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;u32&gt;&gt; (13 samples, 0.02%)</title><rect x="97.2607%" y="533" width="0.0240%" height="15" fill="rgb(254,138,23)" fg:x="52654" fg:w="13"/><text x="97.5107%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;u32,std::collections::hash::map::RandomState&gt;&gt; (13 samples, 0.02%)</title><rect x="97.2607%" y="517" width="0.0240%" height="15" fill="rgb(206,119,39)" fg:x="52654" fg:w="13"/><text x="97.5107%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,(),std::collections::hash::map::RandomState&gt;&gt; (13 samples, 0.02%)</title><rect x="97.2607%" y="501" width="0.0240%" height="15" fill="rgb(231,105,52)" fg:x="52654" fg:w="13"/><text x="97.5107%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,())&gt;&gt; (13 samples, 0.02%)</title><rect x="97.2607%" y="485" width="0.0240%" height="15" fill="rgb(250,20,5)" fg:x="52654" fg:w="13"/><text x="97.5107%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="97.2607%" y="469" width="0.0240%" height="15" fill="rgb(215,198,30)" fg:x="52654" fg:w="13"/><text x="97.5107%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="97.2847%" y="469" width="0.0222%" height="15" fill="rgb(246,142,8)" fg:x="52667" fg:w="12"/><text x="97.5347%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="97.2847%" y="453" width="0.0222%" height="15" fill="rgb(243,26,38)" fg:x="52667" fg:w="12"/><text x="97.5347%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="97.2847%" y="437" width="0.0222%" height="15" fill="rgb(205,133,28)" fg:x="52667" fg:w="12"/><text x="97.5347%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="97.2847%" y="421" width="0.0222%" height="15" fill="rgb(212,34,0)" fg:x="52667" fg:w="12"/><text x="97.5347%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="97.2847%" y="405" width="0.0222%" height="15" fill="rgb(251,226,22)" fg:x="52667" fg:w="12"/><text x="97.5347%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="97.2939%" y="389" width="0.0129%" height="15" fill="rgb(252,119,9)" fg:x="52672" fg:w="7"/><text x="97.5439%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.01%)</title><rect x="97.3068%" y="469" width="0.0111%" height="15" fill="rgb(213,150,50)" fg:x="52679" fg:w="6"/><text x="97.5568%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="97.3068%" y="453" width="0.0111%" height="15" fill="rgb(212,24,39)" fg:x="52679" fg:w="6"/><text x="97.5568%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.01%)</title><rect x="97.3068%" y="437" width="0.0111%" height="15" fill="rgb(213,46,39)" fg:x="52679" fg:w="6"/><text x="97.5568%" y="447.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (20 samples, 0.04%)</title><rect x="97.2847%" y="533" width="0.0369%" height="15" fill="rgb(239,106,12)" fg:x="52667" fg:w="20"/><text x="97.5347%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (20 samples, 0.04%)</title><rect x="97.2847%" y="517" width="0.0369%" height="15" fill="rgb(249,229,21)" fg:x="52667" fg:w="20"/><text x="97.5347%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (20 samples, 0.04%)</title><rect x="97.2847%" y="501" width="0.0369%" height="15" fill="rgb(212,158,3)" fg:x="52667" fg:w="20"/><text x="97.5347%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.04%)</title><rect x="97.2847%" y="485" width="0.0369%" height="15" fill="rgb(253,26,48)" fg:x="52667" fg:w="20"/><text x="97.5347%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="97.3364%" y="389" width="0.0148%" height="15" fill="rgb(238,178,20)" fg:x="52695" fg:w="8"/><text x="97.5864%" y="399.50"></text></g><g><title>hashbrown::map::make_insert_hash (20 samples, 0.04%)</title><rect x="97.3216%" y="485" width="0.0369%" height="15" fill="rgb(208,86,15)" fg:x="52687" fg:w="20"/><text x="97.5716%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20 samples, 0.04%)</title><rect x="97.3216%" y="469" width="0.0369%" height="15" fill="rgb(239,42,53)" fg:x="52687" fg:w="20"/><text x="97.5716%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="97.3253%" y="453" width="0.0332%" height="15" fill="rgb(245,226,8)" fg:x="52689" fg:w="18"/><text x="97.5753%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="97.3253%" y="437" width="0.0332%" height="15" fill="rgb(216,176,32)" fg:x="52689" fg:w="18"/><text x="97.5753%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="97.3253%" y="421" width="0.0332%" height="15" fill="rgb(231,186,21)" fg:x="52689" fg:w="18"/><text x="97.5753%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.02%)</title><rect x="97.3345%" y="405" width="0.0240%" height="15" fill="rgb(205,95,49)" fg:x="52694" fg:w="13"/><text x="97.5845%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (9 samples, 0.02%)</title><rect x="97.3586%" y="485" width="0.0166%" height="15" fill="rgb(217,145,8)" fg:x="52707" fg:w="9"/><text x="97.6086%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.02%)</title><rect x="97.3586%" y="469" width="0.0166%" height="15" fill="rgb(239,144,48)" fg:x="52707" fg:w="9"/><text x="97.6086%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.02%)</title><rect x="97.3586%" y="453" width="0.0166%" height="15" fill="rgb(214,189,23)" fg:x="52707" fg:w="9"/><text x="97.6086%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (10 samples, 0.02%)</title><rect x="97.3770%" y="469" width="0.0185%" height="15" fill="rgb(229,157,17)" fg:x="52717" fg:w="10"/><text x="97.6270%" y="479.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (47 samples, 0.09%)</title><rect x="97.3216%" y="533" width="0.0868%" height="15" fill="rgb(230,5,48)" fg:x="52687" fg:w="47"/><text x="97.5716%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (47 samples, 0.09%)</title><rect x="97.3216%" y="517" width="0.0868%" height="15" fill="rgb(224,156,48)" fg:x="52687" fg:w="47"/><text x="97.5716%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (47 samples, 0.09%)</title><rect x="97.3216%" y="501" width="0.0868%" height="15" fill="rgb(223,14,29)" fg:x="52687" fg:w="47"/><text x="97.5716%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (18 samples, 0.03%)</title><rect x="97.3752%" y="485" width="0.0332%" height="15" fill="rgb(229,96,36)" fg:x="52716" fg:w="18"/><text x="97.6252%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (7 samples, 0.01%)</title><rect x="97.3955%" y="469" width="0.0129%" height="15" fill="rgb(231,102,53)" fg:x="52727" fg:w="7"/><text x="97.6455%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.01%)</title><rect x="97.4140%" y="437" width="0.0111%" height="15" fill="rgb(210,77,38)" fg:x="52737" fg:w="6"/><text x="97.6640%" y="447.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.03%)</title><rect x="97.4324%" y="341" width="0.0296%" height="15" fill="rgb(235,131,6)" fg:x="52747" fg:w="16"/><text x="97.6824%" y="351.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (17 samples, 0.03%)</title><rect x="97.4324%" y="405" width="0.0314%" height="15" fill="rgb(252,55,38)" fg:x="52747" fg:w="17"/><text x="97.6824%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.03%)</title><rect x="97.4324%" y="389" width="0.0314%" height="15" fill="rgb(246,38,14)" fg:x="52747" fg:w="17"/><text x="97.6824%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.03%)</title><rect x="97.4324%" y="373" width="0.0314%" height="15" fill="rgb(242,27,5)" fg:x="52747" fg:w="17"/><text x="97.6824%" y="383.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.03%)</title><rect x="97.4324%" y="357" width="0.0314%" height="15" fill="rgb(228,65,35)" fg:x="52747" fg:w="17"/><text x="97.6824%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (19 samples, 0.04%)</title><rect x="97.4306%" y="421" width="0.0351%" height="15" fill="rgb(245,93,11)" fg:x="52746" fg:w="19"/><text x="97.6806%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::remove (19,439 samples, 35.91%)</title><rect x="61.5642%" y="549" width="35.9071%" height="15" fill="rgb(213,1,31)" fg:x="33329" fg:w="19439"/><text x="61.8142%" y="559.50">&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;..</text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::with_capacity (34 samples, 0.06%)</title><rect x="97.4084%" y="533" width="0.0628%" height="15" fill="rgb(237,205,14)" fg:x="52734" fg:w="34"/><text x="97.6584%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::with_capacity_and_hasher (31 samples, 0.06%)</title><rect x="97.4140%" y="517" width="0.0573%" height="15" fill="rgb(232,118,45)" fg:x="52737" fg:w="31"/><text x="97.6640%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (31 samples, 0.06%)</title><rect x="97.4140%" y="501" width="0.0573%" height="15" fill="rgb(218,5,6)" fg:x="52737" fg:w="31"/><text x="97.6640%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (31 samples, 0.06%)</title><rect x="97.4140%" y="485" width="0.0573%" height="15" fill="rgb(251,87,51)" fg:x="52737" fg:w="31"/><text x="97.6640%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (31 samples, 0.06%)</title><rect x="97.4140%" y="469" width="0.0573%" height="15" fill="rgb(207,225,20)" fg:x="52737" fg:w="31"/><text x="97.6640%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (31 samples, 0.06%)</title><rect x="97.4140%" y="453" width="0.0573%" height="15" fill="rgb(222,78,54)" fg:x="52737" fg:w="31"/><text x="97.6640%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (25 samples, 0.05%)</title><rect x="97.4251%" y="437" width="0.0462%" height="15" fill="rgb(232,85,16)" fg:x="52743" fg:w="25"/><text x="97.6751%" y="447.50"></text></g><g><title>_int_free (229 samples, 0.42%)</title><rect x="97.4712%" y="549" width="0.4230%" height="15" fill="rgb(244,25,33)" fg:x="52768" fg:w="229"/><text x="97.7212%" y="559.50"></text></g><g><title>malloc_consolidate (229 samples, 0.42%)</title><rect x="97.4712%" y="533" width="0.4230%" height="15" fill="rgb(233,24,36)" fg:x="52768" fg:w="229"/><text x="97.7212%" y="543.50"></text></g><g><title>unlink_chunk.isra.0 (82 samples, 0.15%)</title><rect x="97.7428%" y="517" width="0.1515%" height="15" fill="rgb(253,49,54)" fg:x="52915" fg:w="82"/><text x="97.9928%" y="527.50"></text></g><g><title>__GI___libc_malloc (73 samples, 0.13%)</title><rect x="97.8961%" y="389" width="0.1348%" height="15" fill="rgb(245,12,22)" fg:x="52998" fg:w="73"/><text x="98.1461%" y="399.50"></text></g><g><title>_int_malloc (63 samples, 0.12%)</title><rect x="97.9146%" y="373" width="0.1164%" height="15" fill="rgb(253,141,28)" fg:x="53008" fg:w="63"/><text x="98.1646%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (78 samples, 0.14%)</title><rect x="97.8942%" y="485" width="0.1441%" height="15" fill="rgb(225,207,27)" fg:x="52997" fg:w="78"/><text x="98.1442%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (78 samples, 0.14%)</title><rect x="97.8942%" y="469" width="0.1441%" height="15" fill="rgb(220,84,2)" fg:x="52997" fg:w="78"/><text x="98.1442%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (78 samples, 0.14%)</title><rect x="97.8942%" y="453" width="0.1441%" height="15" fill="rgb(224,37,37)" fg:x="52997" fg:w="78"/><text x="98.1442%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (78 samples, 0.14%)</title><rect x="97.8942%" y="437" width="0.1441%" height="15" fill="rgb(220,143,18)" fg:x="52997" fg:w="78"/><text x="98.1442%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (78 samples, 0.14%)</title><rect x="97.8942%" y="421" width="0.1441%" height="15" fill="rgb(210,88,33)" fg:x="52997" fg:w="78"/><text x="98.1442%" y="431.50"></text></g><g><title>alloc::alloc::alloc (77 samples, 0.14%)</title><rect x="97.8961%" y="405" width="0.1422%" height="15" fill="rgb(219,87,51)" fg:x="52998" fg:w="77"/><text x="98.1461%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (86 samples, 0.16%)</title><rect x="97.8942%" y="549" width="0.1589%" height="15" fill="rgb(211,7,35)" fg:x="52997" fg:w="86"/><text x="98.1442%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (86 samples, 0.16%)</title><rect x="97.8942%" y="533" width="0.1589%" height="15" fill="rgb(232,77,2)" fg:x="52997" fg:w="86"/><text x="98.1442%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (86 samples, 0.16%)</title><rect x="97.8942%" y="517" width="0.1589%" height="15" fill="rgb(249,94,25)" fg:x="52997" fg:w="86"/><text x="98.1442%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (86 samples, 0.16%)</title><rect x="97.8942%" y="501" width="0.1589%" height="15" fill="rgb(215,112,2)" fg:x="52997" fg:w="86"/><text x="98.1442%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8 samples, 0.01%)</title><rect x="98.0383%" y="485" width="0.0148%" height="15" fill="rgb(226,115,48)" fg:x="53075" fg:w="8"/><text x="98.2883%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="98.0383%" y="469" width="0.0148%" height="15" fill="rgb(249,196,10)" fg:x="53075" fg:w="8"/><text x="98.2883%" y="479.50"></text></g><g><title>page_fault (8 samples, 0.01%)</title><rect x="98.0660%" y="517" width="0.0148%" height="15" fill="rgb(237,109,14)" fg:x="53090" fg:w="8"/><text x="98.3160%" y="527.50"></text></g><g><title>do_page_fault (8 samples, 0.01%)</title><rect x="98.0660%" y="501" width="0.0148%" height="15" fill="rgb(217,103,53)" fg:x="53090" fg:w="8"/><text x="98.3160%" y="511.50"></text></g><g><title>__do_page_fault (8 samples, 0.01%)</title><rect x="98.0660%" y="485" width="0.0148%" height="15" fill="rgb(244,137,9)" fg:x="53090" fg:w="8"/><text x="98.3160%" y="495.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.01%)</title><rect x="98.0660%" y="469" width="0.0148%" height="15" fill="rgb(227,201,3)" fg:x="53090" fg:w="8"/><text x="98.3160%" y="479.50"></text></g><g><title>handle_mm_fault (7 samples, 0.01%)</title><rect x="98.0679%" y="453" width="0.0129%" height="15" fill="rgb(243,94,6)" fg:x="53091" fg:w="7"/><text x="98.3179%" y="463.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.01%)</title><rect x="98.0697%" y="437" width="0.0111%" height="15" fill="rgb(235,118,5)" fg:x="53092" fg:w="6"/><text x="98.3197%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.03%)</title><rect x="98.0531%" y="549" width="0.0314%" height="15" fill="rgb(247,10,30)" fg:x="53083" fg:w="17"/><text x="98.3031%" y="559.50"></text></g><g><title>core::ptr::write (16 samples, 0.03%)</title><rect x="98.0549%" y="533" width="0.0296%" height="15" fill="rgb(205,26,28)" fg:x="53084" fg:w="16"/><text x="98.3049%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::le (7 samples, 0.01%)</title><rect x="98.0845%" y="549" width="0.0129%" height="15" fill="rgb(206,99,35)" fg:x="53100" fg:w="7"/><text x="98.3345%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::PartialOrd&gt;::partial_cmp (7 samples, 0.01%)</title><rect x="98.0845%" y="533" width="0.0129%" height="15" fill="rgb(238,130,40)" fg:x="53100" fg:w="7"/><text x="98.3345%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (7 samples, 0.01%)</title><rect x="98.0845%" y="517" width="0.0129%" height="15" fill="rgb(224,126,31)" fg:x="53100" fg:w="7"/><text x="98.3345%" y="527.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (7 samples, 0.01%)</title><rect x="98.0845%" y="501" width="0.0129%" height="15" fill="rgb(254,105,17)" fg:x="53100" fg:w="7"/><text x="98.3345%" y="511.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (7 samples, 0.01%)</title><rect x="98.0845%" y="485" width="0.0129%" height="15" fill="rgb(216,87,36)" fg:x="53100" fg:w="7"/><text x="98.3345%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (9 samples, 0.02%)</title><rect x="98.0974%" y="549" width="0.0166%" height="15" fill="rgb(240,21,12)" fg:x="53107" fg:w="9"/><text x="98.3474%" y="559.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::ne (9 samples, 0.02%)</title><rect x="98.0974%" y="533" width="0.0166%" height="15" fill="rgb(245,192,34)" fg:x="53107" fg:w="9"/><text x="98.3474%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::ne (9 samples, 0.02%)</title><rect x="98.0974%" y="517" width="0.0166%" height="15" fill="rgb(226,100,49)" fg:x="53107" fg:w="9"/><text x="98.3474%" y="527.50"></text></g><g><title>core::slice::cmp::SlicePartialEq::not_equal (9 samples, 0.02%)</title><rect x="98.0974%" y="501" width="0.0166%" height="15" fill="rgb(245,188,27)" fg:x="53107" fg:w="9"/><text x="98.3474%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9 samples, 0.02%)</title><rect x="98.0974%" y="485" width="0.0166%" height="15" fill="rgb(212,170,8)" fg:x="53107" fg:w="9"/><text x="98.3474%" y="495.50"></text></g><g><title>__memcmp_sse4_1 (9 samples, 0.02%)</title><rect x="98.0974%" y="469" width="0.0166%" height="15" fill="rgb(217,113,29)" fg:x="53107" fg:w="9"/><text x="98.3474%" y="479.50"></text></g><g><title>__GI___libc_free (77 samples, 0.14%)</title><rect x="98.1251%" y="405" width="0.1422%" height="15" fill="rgb(237,30,3)" fg:x="53122" fg:w="77"/><text x="98.3751%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (102 samples, 0.19%)</title><rect x="98.1140%" y="533" width="0.1884%" height="15" fill="rgb(227,19,28)" fg:x="53116" fg:w="102"/><text x="98.3640%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (102 samples, 0.19%)</title><rect x="98.1140%" y="517" width="0.1884%" height="15" fill="rgb(239,172,45)" fg:x="53116" fg:w="102"/><text x="98.3640%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (102 samples, 0.19%)</title><rect x="98.1140%" y="501" width="0.1884%" height="15" fill="rgb(254,55,39)" fg:x="53116" fg:w="102"/><text x="98.3640%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (102 samples, 0.19%)</title><rect x="98.1140%" y="485" width="0.1884%" height="15" fill="rgb(249,208,12)" fg:x="53116" fg:w="102"/><text x="98.3640%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (102 samples, 0.19%)</title><rect x="98.1140%" y="469" width="0.1884%" height="15" fill="rgb(240,52,13)" fg:x="53116" fg:w="102"/><text x="98.3640%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (102 samples, 0.19%)</title><rect x="98.1140%" y="453" width="0.1884%" height="15" fill="rgb(252,149,13)" fg:x="53116" fg:w="102"/><text x="98.3640%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (96 samples, 0.18%)</title><rect x="98.1251%" y="437" width="0.1773%" height="15" fill="rgb(232,81,48)" fg:x="53122" fg:w="96"/><text x="98.3751%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (96 samples, 0.18%)</title><rect x="98.1251%" y="421" width="0.1773%" height="15" fill="rgb(222,144,2)" fg:x="53122" fg:w="96"/><text x="98.3751%" y="431.50"></text></g><g><title>_int_free (14 samples, 0.03%)</title><rect x="98.2766%" y="405" width="0.0259%" height="15" fill="rgb(216,81,32)" fg:x="53204" fg:w="14"/><text x="98.5266%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (105 samples, 0.19%)</title><rect x="98.1140%" y="549" width="0.1940%" height="15" fill="rgb(244,78,51)" fg:x="53116" fg:w="105"/><text x="98.3640%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="98.3080%" y="533" width="0.0240%" height="15" fill="rgb(217,66,21)" fg:x="53221" fg:w="13"/><text x="98.5580%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (13 samples, 0.02%)</title><rect x="98.3080%" y="517" width="0.0240%" height="15" fill="rgb(247,101,42)" fg:x="53221" fg:w="13"/><text x="98.5580%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.02%)</title><rect x="98.3080%" y="501" width="0.0240%" height="15" fill="rgb(227,81,39)" fg:x="53221" fg:w="13"/><text x="98.5580%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.02%)</title><rect x="98.3080%" y="485" width="0.0240%" height="15" fill="rgb(220,223,44)" fg:x="53221" fg:w="13"/><text x="98.5580%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="98.3080%" y="469" width="0.0240%" height="15" fill="rgb(205,218,2)" fg:x="53221" fg:w="13"/><text x="98.5580%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.02%)</title><rect x="98.3154%" y="453" width="0.0166%" height="15" fill="rgb(212,207,28)" fg:x="53225" fg:w="9"/><text x="98.5654%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.02%)</title><rect x="98.3154%" y="437" width="0.0166%" height="15" fill="rgb(224,12,41)" fg:x="53225" fg:w="9"/><text x="98.5654%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (14 samples, 0.03%)</title><rect x="98.3080%" y="549" width="0.0259%" height="15" fill="rgb(216,118,12)" fg:x="53221" fg:w="14"/><text x="98.5580%" y="559.50"></text></g><g><title>__GI___libc_free (6 samples, 0.01%)</title><rect x="98.3339%" y="469" width="0.0111%" height="15" fill="rgb(252,97,46)" fg:x="53235" fg:w="6"/><text x="98.5839%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20 samples, 0.04%)</title><rect x="98.3339%" y="549" width="0.0369%" height="15" fill="rgb(244,206,19)" fg:x="53235" fg:w="20"/><text x="98.5839%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.04%)</title><rect x="98.3339%" y="533" width="0.0369%" height="15" fill="rgb(231,84,31)" fg:x="53235" fg:w="20"/><text x="98.5839%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.04%)</title><rect x="98.3339%" y="517" width="0.0369%" height="15" fill="rgb(244,133,0)" fg:x="53235" fg:w="20"/><text x="98.5839%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.04%)</title><rect x="98.3339%" y="501" width="0.0369%" height="15" fill="rgb(223,15,50)" fg:x="53235" fg:w="20"/><text x="98.5839%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.04%)</title><rect x="98.3339%" y="485" width="0.0369%" height="15" fill="rgb(250,118,49)" fg:x="53235" fg:w="20"/><text x="98.5839%" y="495.50"></text></g><g><title>_int_free (14 samples, 0.03%)</title><rect x="98.3449%" y="469" width="0.0259%" height="15" fill="rgb(248,25,38)" fg:x="53241" fg:w="14"/><text x="98.5949%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (37 samples, 0.07%)</title><rect x="98.3745%" y="549" width="0.0683%" height="15" fill="rgb(215,70,14)" fg:x="53257" fg:w="37"/><text x="98.6245%" y="559.50"></text></g><g><title>log::max_level (6 samples, 0.01%)</title><rect x="98.4428%" y="549" width="0.0111%" height="15" fill="rgb(215,28,15)" fg:x="53294" fg:w="6"/><text x="98.6928%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.01%)</title><rect x="98.4428%" y="533" width="0.0111%" height="15" fill="rgb(243,6,28)" fg:x="53294" fg:w="6"/><text x="98.6928%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="98.4428%" y="517" width="0.0111%" height="15" fill="rgb(222,130,1)" fg:x="53294" fg:w="6"/><text x="98.6928%" y="527.50"></text></g><g><title>page_fault (6 samples, 0.01%)</title><rect x="98.4613%" y="341" width="0.0111%" height="15" fill="rgb(236,166,44)" fg:x="53304" fg:w="6"/><text x="98.7113%" y="351.50"></text></g><g><title>do_page_fault (6 samples, 0.01%)</title><rect x="98.4613%" y="325" width="0.0111%" height="15" fill="rgb(221,108,14)" fg:x="53304" fg:w="6"/><text x="98.7113%" y="335.50"></text></g><g><title>__do_page_fault (6 samples, 0.01%)</title><rect x="98.4613%" y="309" width="0.0111%" height="15" fill="rgb(252,3,45)" fg:x="53304" fg:w="6"/><text x="98.7113%" y="319.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.01%)</title><rect x="98.4613%" y="293" width="0.0111%" height="15" fill="rgb(237,68,30)" fg:x="53304" fg:w="6"/><text x="98.7113%" y="303.50"></text></g><g><title>handle_mm_fault (6 samples, 0.01%)</title><rect x="98.4613%" y="277" width="0.0111%" height="15" fill="rgb(211,79,22)" fg:x="53304" fg:w="6"/><text x="98.7113%" y="287.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.01%)</title><rect x="98.4613%" y="261" width="0.0111%" height="15" fill="rgb(252,185,21)" fg:x="53304" fg:w="6"/><text x="98.7113%" y="271.50"></text></g><g><title>do_anonymous_page (6 samples, 0.01%)</title><rect x="98.4613%" y="245" width="0.0111%" height="15" fill="rgb(225,189,26)" fg:x="53304" fg:w="6"/><text x="98.7113%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (13 samples, 0.02%)</title><rect x="98.4539%" y="389" width="0.0240%" height="15" fill="rgb(241,30,40)" fg:x="53300" fg:w="13"/><text x="98.7039%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (13 samples, 0.02%)</title><rect x="98.4539%" y="373" width="0.0240%" height="15" fill="rgb(235,215,44)" fg:x="53300" fg:w="13"/><text x="98.7039%" y="383.50"></text></g><g><title>core::ptr::write (13 samples, 0.02%)</title><rect x="98.4539%" y="357" width="0.0240%" height="15" fill="rgb(205,8,29)" fg:x="53300" fg:w="13"/><text x="98.7039%" y="367.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx (6 samples, 0.01%)</title><rect x="98.4835%" y="277" width="0.0111%" height="15" fill="rgb(241,137,42)" fg:x="53316" fg:w="6"/><text x="98.7335%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (6 samples, 0.01%)</title><rect x="98.4835%" y="261" width="0.0111%" height="15" fill="rgb(237,155,2)" fg:x="53316" fg:w="6"/><text x="98.7335%" y="271.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (6 samples, 0.01%)</title><rect x="98.4835%" y="245" width="0.0111%" height="15" fill="rgb(245,29,42)" fg:x="53316" fg:w="6"/><text x="98.7335%" y="255.50"></text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u64 (8 samples, 0.01%)</title><rect x="98.4816%" y="373" width="0.0148%" height="15" fill="rgb(234,101,35)" fg:x="53315" fg:w="8"/><text x="98.7316%" y="383.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u64 (8 samples, 0.01%)</title><rect x="98.4816%" y="357" width="0.0148%" height="15" fill="rgb(228,64,37)" fg:x="53315" fg:w="8"/><text x="98.7316%" y="367.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (8 samples, 0.01%)</title><rect x="98.4816%" y="341" width="0.0148%" height="15" fill="rgb(217,214,36)" fg:x="53315" fg:w="8"/><text x="98.7316%" y="351.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (7 samples, 0.01%)</title><rect x="98.4835%" y="325" width="0.0129%" height="15" fill="rgb(243,70,3)" fg:x="53316" fg:w="7"/><text x="98.7335%" y="335.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (7 samples, 0.01%)</title><rect x="98.4835%" y="309" width="0.0129%" height="15" fill="rgb(253,158,52)" fg:x="53316" fg:w="7"/><text x="98.7335%" y="319.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (7 samples, 0.01%)</title><rect x="98.4835%" y="293" width="0.0129%" height="15" fill="rgb(234,111,54)" fg:x="53316" fg:w="7"/><text x="98.7335%" y="303.50"></text></g><g><title>do_anonymous_page (12 samples, 0.02%)</title><rect x="98.5684%" y="85" width="0.0222%" height="15" fill="rgb(217,70,32)" fg:x="53362" fg:w="12"/><text x="98.8184%" y="95.50"></text></g><g><title>page_fault (16 samples, 0.03%)</title><rect x="98.5629%" y="181" width="0.0296%" height="15" fill="rgb(234,18,33)" fg:x="53359" fg:w="16"/><text x="98.8129%" y="191.50"></text></g><g><title>do_page_fault (16 samples, 0.03%)</title><rect x="98.5629%" y="165" width="0.0296%" height="15" fill="rgb(234,12,49)" fg:x="53359" fg:w="16"/><text x="98.8129%" y="175.50"></text></g><g><title>__do_page_fault (16 samples, 0.03%)</title><rect x="98.5629%" y="149" width="0.0296%" height="15" fill="rgb(236,10,21)" fg:x="53359" fg:w="16"/><text x="98.8129%" y="159.50"></text></g><g><title>do_user_addr_fault (16 samples, 0.03%)</title><rect x="98.5629%" y="133" width="0.0296%" height="15" fill="rgb(248,182,45)" fg:x="53359" fg:w="16"/><text x="98.8129%" y="143.50"></text></g><g><title>handle_mm_fault (15 samples, 0.03%)</title><rect x="98.5648%" y="117" width="0.0277%" height="15" fill="rgb(217,95,36)" fg:x="53360" fg:w="15"/><text x="98.8148%" y="127.50"></text></g><g><title>__handle_mm_fault (14 samples, 0.03%)</title><rect x="98.5666%" y="101" width="0.0259%" height="15" fill="rgb(212,110,31)" fg:x="53361" fg:w="14"/><text x="98.8166%" y="111.50"></text></g><g><title>__GI___libc_malloc (57 samples, 0.11%)</title><rect x="98.5001%" y="213" width="0.1053%" height="15" fill="rgb(206,32,53)" fg:x="53325" fg:w="57"/><text x="98.7501%" y="223.50"></text></g><g><title>_int_malloc (48 samples, 0.09%)</title><rect x="98.5167%" y="197" width="0.0887%" height="15" fill="rgb(246,141,37)" fg:x="53334" fg:w="48"/><text x="98.7667%" y="207.50"></text></g><g><title>yakvdb::util::data (83 samples, 0.15%)</title><rect x="98.4539%" y="549" width="0.1533%" height="15" fill="rgb(219,16,7)" fg:x="53300" fg:w="83"/><text x="98.7039%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (83 samples, 0.15%)</title><rect x="98.4539%" y="533" width="0.1533%" height="15" fill="rgb(230,205,45)" fg:x="53300" fg:w="83"/><text x="98.7039%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (83 samples, 0.15%)</title><rect x="98.4539%" y="517" width="0.1533%" height="15" fill="rgb(231,43,49)" fg:x="53300" fg:w="83"/><text x="98.7039%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (83 samples, 0.15%)</title><rect x="98.4539%" y="501" width="0.1533%" height="15" fill="rgb(212,106,34)" fg:x="53300" fg:w="83"/><text x="98.7039%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (83 samples, 0.15%)</title><rect x="98.4539%" y="485" width="0.1533%" height="15" fill="rgb(206,83,17)" fg:x="53300" fg:w="83"/><text x="98.7039%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (83 samples, 0.15%)</title><rect x="98.4539%" y="469" width="0.1533%" height="15" fill="rgb(244,154,49)" fg:x="53300" fg:w="83"/><text x="98.7039%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (83 samples, 0.15%)</title><rect x="98.4539%" y="453" width="0.1533%" height="15" fill="rgb(244,149,49)" fg:x="53300" fg:w="83"/><text x="98.7039%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (83 samples, 0.15%)</title><rect x="98.4539%" y="437" width="0.1533%" height="15" fill="rgb(227,134,18)" fg:x="53300" fg:w="83"/><text x="98.7039%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (83 samples, 0.15%)</title><rect x="98.4539%" y="421" width="0.1533%" height="15" fill="rgb(237,116,36)" fg:x="53300" fg:w="83"/><text x="98.7039%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (83 samples, 0.15%)</title><rect x="98.4539%" y="405" width="0.1533%" height="15" fill="rgb(205,129,40)" fg:x="53300" fg:w="83"/><text x="98.7039%" y="415.50"></text></g><g><title>yakvdb::util::data::{{closure}} (70 samples, 0.13%)</title><rect x="98.4779%" y="389" width="0.1293%" height="15" fill="rgb(236,178,4)" fg:x="53313" fg:w="70"/><text x="98.7279%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (60 samples, 0.11%)</title><rect x="98.4964%" y="373" width="0.1108%" height="15" fill="rgb(251,76,53)" fg:x="53323" fg:w="60"/><text x="98.7464%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (60 samples, 0.11%)</title><rect x="98.4964%" y="357" width="0.1108%" height="15" fill="rgb(242,92,40)" fg:x="53323" fg:w="60"/><text x="98.7464%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (60 samples, 0.11%)</title><rect x="98.4964%" y="341" width="0.1108%" height="15" fill="rgb(209,45,30)" fg:x="53323" fg:w="60"/><text x="98.7464%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (60 samples, 0.11%)</title><rect x="98.4964%" y="325" width="0.1108%" height="15" fill="rgb(218,157,36)" fg:x="53323" fg:w="60"/><text x="98.7464%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (60 samples, 0.11%)</title><rect x="98.4964%" y="309" width="0.1108%" height="15" fill="rgb(222,186,16)" fg:x="53323" fg:w="60"/><text x="98.7464%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (60 samples, 0.11%)</title><rect x="98.4964%" y="293" width="0.1108%" height="15" fill="rgb(254,72,35)" fg:x="53323" fg:w="60"/><text x="98.7464%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (60 samples, 0.11%)</title><rect x="98.4964%" y="277" width="0.1108%" height="15" fill="rgb(224,25,35)" fg:x="53323" fg:w="60"/><text x="98.7464%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (60 samples, 0.11%)</title><rect x="98.4964%" y="261" width="0.1108%" height="15" fill="rgb(206,135,52)" fg:x="53323" fg:w="60"/><text x="98.7464%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (60 samples, 0.11%)</title><rect x="98.4964%" y="245" width="0.1108%" height="15" fill="rgb(229,174,47)" fg:x="53323" fg:w="60"/><text x="98.7464%" y="255.50"></text></g><g><title>alloc::alloc::alloc (60 samples, 0.11%)</title><rect x="98.4964%" y="229" width="0.1108%" height="15" fill="rgb(242,184,21)" fg:x="53323" fg:w="60"/><text x="98.7464%" y="239.50"></text></g><g><title>core::intrinsics::copy (38 samples, 0.07%)</title><rect x="98.6072%" y="485" width="0.0702%" height="15" fill="rgb(213,22,45)" fg:x="53383" fg:w="38"/><text x="98.8572%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (41 samples, 0.08%)</title><rect x="98.6072%" y="517" width="0.0757%" height="15" fill="rgb(237,81,54)" fg:x="53383" fg:w="41"/><text x="98.8572%" y="527.50"></text></g><g><title>core::ptr::swap (41 samples, 0.08%)</title><rect x="98.6072%" y="501" width="0.0757%" height="15" fill="rgb(248,177,18)" fg:x="53383" fg:w="41"/><text x="98.8572%" y="511.50"></text></g><g><title>__libc_start_main (49,517 samples, 91.47%)</title><rect x="7.2372%" y="789" width="91.4661%" height="15" fill="rgb(254,31,16)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="799.50">__libc_start_main</text></g><g><title>main (49,517 samples, 91.47%)</title><rect x="7.2372%" y="773" width="91.4661%" height="15" fill="rgb(235,20,31)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="783.50">main</text></g><g><title>std::rt::lang_start_internal (49,517 samples, 91.47%)</title><rect x="7.2372%" y="757" width="91.4661%" height="15" fill="rgb(240,56,43)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="767.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (49,517 samples, 91.47%)</title><rect x="7.2372%" y="741" width="91.4661%" height="15" fill="rgb(237,197,51)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="751.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (49,517 samples, 91.47%)</title><rect x="7.2372%" y="725" width="91.4661%" height="15" fill="rgb(241,162,44)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="735.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (49,517 samples, 91.47%)</title><rect x="7.2372%" y="709" width="91.4661%" height="15" fill="rgb(224,23,20)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="719.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (49,517 samples, 91.47%)</title><rect x="7.2372%" y="693" width="91.4661%" height="15" fill="rgb(250,109,34)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="703.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (49,517 samples, 91.47%)</title><rect x="7.2372%" y="677" width="91.4661%" height="15" fill="rgb(214,175,50)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="687.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (49,517 samples, 91.47%)</title><rect x="7.2372%" y="661" width="91.4661%" height="15" fill="rgb(213,182,5)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="671.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (49,517 samples, 91.47%)</title><rect x="7.2372%" y="645" width="91.4661%" height="15" fill="rgb(209,199,19)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="655.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (49,517 samples, 91.47%)</title><rect x="7.2372%" y="629" width="91.4661%" height="15" fill="rgb(236,224,42)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="639.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (49,517 samples, 91.47%)</title><rect x="7.2372%" y="613" width="91.4661%" height="15" fill="rgb(246,226,29)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="623.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (49,517 samples, 91.47%)</title><rect x="7.2372%" y="597" width="91.4661%" height="15" fill="rgb(227,223,11)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="607.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (49,517 samples, 91.47%)</title><rect x="7.2372%" y="581" width="91.4661%" height="15" fill="rgb(219,7,51)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="591.50">core::ops::function::FnOnce::call_once</text></g><g><title>yakvdb::main (49,517 samples, 91.47%)</title><rect x="7.2372%" y="565" width="91.4661%" height="15" fill="rgb(245,167,10)" fg:x="3918" fg:w="49517"/><text x="7.4872%" y="575.50">yakvdb::main</text></g><g><title>yakvdb::util::shuffle (52 samples, 0.10%)</title><rect x="98.6072%" y="549" width="0.0961%" height="15" fill="rgb(237,224,16)" fg:x="53383" fg:w="52"/><text x="98.8572%" y="559.50"></text></g><g><title>&lt;[T] as rand::seq::SliceRandom&gt;::shuffle (52 samples, 0.10%)</title><rect x="98.6072%" y="533" width="0.0961%" height="15" fill="rgb(226,132,13)" fg:x="53383" fg:w="52"/><text x="98.8572%" y="543.50"></text></g><g><title>rand::seq::gen_index (11 samples, 0.02%)</title><rect x="98.6830%" y="517" width="0.0203%" height="15" fill="rgb(214,140,3)" fg:x="53424" fg:w="11"/><text x="98.9330%" y="527.50"></text></g><g><title>rand::rng::Rng::gen_range (11 samples, 0.02%)</title><rect x="98.6830%" y="501" width="0.0203%" height="15" fill="rgb(221,177,4)" fg:x="53424" fg:w="11"/><text x="98.9330%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (10 samples, 0.02%)</title><rect x="98.6848%" y="485" width="0.0185%" height="15" fill="rgb(238,139,3)" fg:x="53425" fg:w="10"/><text x="98.9348%" y="495.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (10 samples, 0.02%)</title><rect x="98.6848%" y="469" width="0.0185%" height="15" fill="rgb(216,17,39)" fg:x="53425" fg:w="10"/><text x="98.9348%" y="479.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (10 samples, 0.02%)</title><rect x="98.6848%" y="453" width="0.0185%" height="15" fill="rgb(238,120,9)" fg:x="53425" fg:w="10"/><text x="98.9348%" y="463.50"></text></g><g><title>rand::rng::Rng::gen (8 samples, 0.01%)</title><rect x="98.6885%" y="437" width="0.0148%" height="15" fill="rgb(244,92,53)" fg:x="53427" fg:w="8"/><text x="98.9385%" y="447.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (8 samples, 0.01%)</title><rect x="98.6885%" y="421" width="0.0148%" height="15" fill="rgb(224,148,33)" fg:x="53427" fg:w="8"/><text x="98.9385%" y="431.50"></text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u32 (8 samples, 0.01%)</title><rect x="98.6885%" y="405" width="0.0148%" height="15" fill="rgb(243,6,36)" fg:x="53427" fg:w="8"/><text x="98.9385%" y="415.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u32 (8 samples, 0.01%)</title><rect x="98.6885%" y="389" width="0.0148%" height="15" fill="rgb(230,102,11)" fg:x="53427" fg:w="8"/><text x="98.9385%" y="399.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (8 samples, 0.01%)</title><rect x="98.6885%" y="373" width="0.0148%" height="15" fill="rgb(234,148,36)" fg:x="53427" fg:w="8"/><text x="98.9385%" y="383.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (6 samples, 0.01%)</title><rect x="98.6922%" y="357" width="0.0111%" height="15" fill="rgb(251,153,25)" fg:x="53429" fg:w="6"/><text x="98.9422%" y="367.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (6 samples, 0.01%)</title><rect x="98.6922%" y="341" width="0.0111%" height="15" fill="rgb(215,129,8)" fg:x="53429" fg:w="6"/><text x="98.9422%" y="351.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (6 samples, 0.01%)</title><rect x="98.6922%" y="325" width="0.0111%" height="15" fill="rgb(224,128,35)" fg:x="53429" fg:w="6"/><text x="98.9422%" y="335.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx (6 samples, 0.01%)</title><rect x="98.6922%" y="309" width="0.0111%" height="15" fill="rgb(237,56,52)" fg:x="53429" fg:w="6"/><text x="98.9422%" y="319.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (6 samples, 0.01%)</title><rect x="98.6922%" y="293" width="0.0111%" height="15" fill="rgb(234,213,19)" fg:x="53429" fg:w="6"/><text x="98.9422%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (6 samples, 0.01%)</title><rect x="98.6922%" y="277" width="0.0111%" height="15" fill="rgb(252,82,23)" fg:x="53429" fg:w="6"/><text x="98.9422%" y="287.50"></text></g><g><title>rand_chacha::guts::round (6 samples, 0.01%)</title><rect x="98.6922%" y="261" width="0.0111%" height="15" fill="rgb(254,201,21)" fg:x="53429" fg:w="6"/><text x="98.9422%" y="271.50"></text></g><g><title>_start (49,518 samples, 91.47%)</title><rect x="7.2372%" y="805" width="91.4679%" height="15" fill="rgb(250,186,11)" fg:x="3918" fg:w="49518"/><text x="7.4872%" y="815.50">_start</text></g><g><title>entry_SYSCALL_64 (560 samples, 1.03%)</title><rect x="98.7051%" y="805" width="1.0344%" height="15" fill="rgb(211,174,5)" fg:x="53436" fg:w="560"/><text x="98.9551%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (68 samples, 0.13%)</title><rect x="99.7395%" y="805" width="0.1256%" height="15" fill="rgb(214,121,10)" fg:x="53996" fg:w="68"/><text x="99.9895%" y="815.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="99.8522%" y="789" width="0.0129%" height="15" fill="rgb(241,66,2)" fg:x="54057" fg:w="7"/><text x="100.1022%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (19 samples, 0.04%)</title><rect x="99.8652%" y="805" width="0.0351%" height="15" fill="rgb(220,167,19)" fg:x="54064" fg:w="19"/><text x="100.1152%" y="815.50"></text></g><g><title>page_fault (11 samples, 0.02%)</title><rect x="99.9021%" y="805" width="0.0203%" height="15" fill="rgb(231,54,50)" fg:x="54084" fg:w="11"/><text x="100.1521%" y="815.50"></text></g><g><title>syscall_return_via_sysret (12 samples, 0.02%)</title><rect x="99.9224%" y="805" width="0.0222%" height="15" fill="rgb(239,217,53)" fg:x="54095" fg:w="12"/><text x="100.1724%" y="815.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (7 samples, 0.01%)</title><rect x="99.9483%" y="805" width="0.0129%" height="15" fill="rgb(248,8,0)" fg:x="54109" fg:w="7"/><text x="100.1983%" y="815.50"></text></g><g><title>all (54,137 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(229,118,37)" fg:x="0" fg:w="54137"/><text x="0.2500%" y="847.50"></text></g><g><title>yakvdb (54,131 samples, 99.99%)</title><rect x="0.0111%" y="821" width="99.9889%" height="15" fill="rgb(253,223,43)" fg:x="6" fg:w="54131"/><text x="0.2611%" y="831.50">yakvdb</text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (21 samples, 0.04%)</title><rect x="99.9612%" y="805" width="0.0388%" height="15" fill="rgb(211,77,36)" fg:x="54116" fg:w="21"/><text x="100.2112%" y="815.50"></text></g></svg></svg>