<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="949.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="65159"><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (13 samples, 0.02%)</title><rect x="0.0077%" y="885" width="0.0200%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="13"/><text x="0.2577%" y="895.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::id (8 samples, 0.01%)</title><rect x="0.0276%" y="885" width="0.0123%" height="15" fill="rgb(217,0,24)" fg:x="18" fg:w="8"/><text x="0.2776%" y="895.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (12 samples, 0.02%)</title><rect x="0.0430%" y="885" width="0.0184%" height="15" fill="rgb(221,193,54)" fg:x="28" fg:w="12"/><text x="0.2930%" y="895.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (12 samples, 0.02%)</title><rect x="0.0614%" y="885" width="0.0184%" height="15" fill="rgb(248,212,6)" fg:x="40" fg:w="12"/><text x="0.3114%" y="895.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (9 samples, 0.01%)</title><rect x="0.1136%" y="853" width="0.0138%" height="15" fill="rgb(208,68,35)" fg:x="74" fg:w="9"/><text x="0.3636%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (66 samples, 0.10%)</title><rect x="0.1274%" y="805" width="0.1013%" height="15" fill="rgb(232,128,0)" fg:x="83" fg:w="66"/><text x="0.3774%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (66 samples, 0.10%)</title><rect x="0.1274%" y="789" width="0.1013%" height="15" fill="rgb(207,160,47)" fg:x="83" fg:w="66"/><text x="0.3774%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (66 samples, 0.10%)</title><rect x="0.1274%" y="773" width="0.1013%" height="15" fill="rgb(228,23,34)" fg:x="83" fg:w="66"/><text x="0.3774%" y="783.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (66 samples, 0.10%)</title><rect x="0.1274%" y="757" width="0.1013%" height="15" fill="rgb(218,30,26)" fg:x="83" fg:w="66"/><text x="0.3774%" y="767.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (66 samples, 0.10%)</title><rect x="0.1274%" y="741" width="0.1013%" height="15" fill="rgb(220,122,19)" fg:x="83" fg:w="66"/><text x="0.3774%" y="751.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (85 samples, 0.13%)</title><rect x="0.1028%" y="869" width="0.1305%" height="15" fill="rgb(250,228,42)" fg:x="67" fg:w="85"/><text x="0.3528%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (69 samples, 0.11%)</title><rect x="0.1274%" y="853" width="0.1059%" height="15" fill="rgb(240,193,28)" fg:x="83" fg:w="69"/><text x="0.3774%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (69 samples, 0.11%)</title><rect x="0.1274%" y="837" width="0.1059%" height="15" fill="rgb(216,20,37)" fg:x="83" fg:w="69"/><text x="0.3774%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (69 samples, 0.11%)</title><rect x="0.1274%" y="821" width="0.1059%" height="15" fill="rgb(206,188,39)" fg:x="83" fg:w="69"/><text x="0.3774%" y="831.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::id (7 samples, 0.01%)</title><rect x="0.2348%" y="869" width="0.0107%" height="15" fill="rgb(217,207,13)" fg:x="153" fg:w="7"/><text x="0.4848%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (9 samples, 0.01%)</title><rect x="0.2578%" y="853" width="0.0138%" height="15" fill="rgb(231,73,38)" fg:x="168" fg:w="9"/><text x="0.5078%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="0.2578%" y="837" width="0.0138%" height="15" fill="rgb(225,20,46)" fg:x="168" fg:w="9"/><text x="0.5078%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (9 samples, 0.01%)</title><rect x="0.2578%" y="821" width="0.0138%" height="15" fill="rgb(210,31,41)" fg:x="168" fg:w="9"/><text x="0.5078%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (9 samples, 0.01%)</title><rect x="0.2578%" y="805" width="0.0138%" height="15" fill="rgb(221,200,47)" fg:x="168" fg:w="9"/><text x="0.5078%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="0.2578%" y="789" width="0.0138%" height="15" fill="rgb(226,26,5)" fg:x="168" fg:w="9"/><text x="0.5078%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="0.2578%" y="773" width="0.0138%" height="15" fill="rgb(249,33,26)" fg:x="168" fg:w="9"/><text x="0.5078%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="0.2578%" y="757" width="0.0138%" height="15" fill="rgb(235,183,28)" fg:x="168" fg:w="9"/><text x="0.5078%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="0.2578%" y="741" width="0.0138%" height="15" fill="rgb(221,5,38)" fg:x="168" fg:w="9"/><text x="0.5078%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="0.2578%" y="725" width="0.0138%" height="15" fill="rgb(247,18,42)" fg:x="168" fg:w="9"/><text x="0.5078%" y="735.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove (39 samples, 0.06%)</title><rect x="0.2517%" y="869" width="0.0599%" height="15" fill="rgb(241,131,45)" fg:x="164" fg:w="39"/><text x="0.5017%" y="879.50"></text></g><g><title>yakvdb::disk::block::put_slice (25 samples, 0.04%)</title><rect x="0.2732%" y="853" width="0.0384%" height="15" fill="rgb(249,31,29)" fg:x="178" fg:w="25"/><text x="0.5232%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (25 samples, 0.04%)</title><rect x="0.2732%" y="837" width="0.0384%" height="15" fill="rgb(225,111,53)" fg:x="178" fg:w="25"/><text x="0.5232%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.04%)</title><rect x="0.2732%" y="821" width="0.0384%" height="15" fill="rgb(238,160,17)" fg:x="178" fg:w="25"/><text x="0.5232%" y="831.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (14 samples, 0.02%)</title><rect x="0.3146%" y="869" width="0.0215%" height="15" fill="rgb(214,148,48)" fg:x="205" fg:w="14"/><text x="0.5646%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (14 samples, 0.02%)</title><rect x="0.3392%" y="869" width="0.0215%" height="15" fill="rgb(232,36,49)" fg:x="221" fg:w="14"/><text x="0.5892%" y="879.50"></text></g><g><title>__GI___libc_free (12 samples, 0.02%)</title><rect x="0.3760%" y="869" width="0.0184%" height="15" fill="rgb(209,103,24)" fg:x="245" fg:w="12"/><text x="0.6260%" y="879.50"></text></g><g><title>__GI___libc_malloc (45 samples, 0.07%)</title><rect x="0.3944%" y="869" width="0.0691%" height="15" fill="rgb(229,88,8)" fg:x="257" fg:w="45"/><text x="0.6444%" y="879.50"></text></g><g><title>__calloc (18 samples, 0.03%)</title><rect x="0.4635%" y="869" width="0.0276%" height="15" fill="rgb(213,181,19)" fg:x="302" fg:w="18"/><text x="0.7135%" y="879.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (8 samples, 0.01%)</title><rect x="0.4926%" y="869" width="0.0123%" height="15" fill="rgb(254,191,54)" fg:x="321" fg:w="8"/><text x="0.7426%" y="879.50"></text></g><g><title>_int_free (113 samples, 0.17%)</title><rect x="0.5187%" y="869" width="0.1734%" height="15" fill="rgb(241,83,37)" fg:x="338" fg:w="113"/><text x="0.7687%" y="879.50"></text></g><g><title>_int_malloc (150 samples, 0.23%)</title><rect x="0.6922%" y="869" width="0.2302%" height="15" fill="rgb(233,36,39)" fg:x="451" fg:w="150"/><text x="0.9422%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 0.02%)</title><rect x="0.9423%" y="869" width="0.0215%" height="15" fill="rgb(226,3,54)" fg:x="614" fg:w="14"/><text x="1.1923%" y="879.50"></text></g><g><title>std::io::Write::write_all (20 samples, 0.03%)</title><rect x="0.9653%" y="869" width="0.0307%" height="15" fill="rgb(245,192,40)" fg:x="629" fg:w="20"/><text x="1.2153%" y="879.50"></text></g><g><title>unlink_chunk.isra.0 (86 samples, 0.13%)</title><rect x="0.9960%" y="869" width="0.1320%" height="15" fill="rgb(238,167,29)" fg:x="649" fg:w="86"/><text x="1.2460%" y="879.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry (13 samples, 0.02%)</title><rect x="1.1280%" y="869" width="0.0200%" height="15" fill="rgb(232,182,51)" fg:x="735" fg:w="13"/><text x="1.3780%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (17 samples, 0.03%)</title><rect x="1.1679%" y="853" width="0.0261%" height="15" fill="rgb(231,60,39)" fg:x="761" fg:w="17"/><text x="1.4179%" y="863.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (17 samples, 0.03%)</title><rect x="1.1679%" y="837" width="0.0261%" height="15" fill="rgb(208,69,12)" fg:x="761" fg:w="17"/><text x="1.4179%" y="847.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (39 samples, 0.06%)</title><rect x="1.1480%" y="869" width="0.0599%" height="15" fill="rgb(235,93,37)" fg:x="748" fg:w="39"/><text x="1.3980%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (9 samples, 0.01%)</title><rect x="1.1940%" y="853" width="0.0138%" height="15" fill="rgb(213,116,39)" fg:x="778" fg:w="9"/><text x="1.4440%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (9 samples, 0.01%)</title><rect x="1.1940%" y="837" width="0.0138%" height="15" fill="rgb(222,207,29)" fg:x="778" fg:w="9"/><text x="1.4440%" y="847.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (9 samples, 0.01%)</title><rect x="1.1940%" y="821" width="0.0138%" height="15" fill="rgb(206,96,30)" fg:x="778" fg:w="9"/><text x="1.4440%" y="831.50"></text></g><g><title>[[heap]] (735 samples, 1.13%)</title><rect x="0.0829%" y="885" width="1.1280%" height="15" fill="rgb(218,138,4)" fg:x="54" fg:w="735"/><text x="0.3329%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.04%)</title><rect x="1.2109%" y="869" width="0.0353%" height="15" fill="rgb(250,191,14)" fg:x="789" fg:w="23"/><text x="1.4609%" y="879.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (34 samples, 0.05%)</title><rect x="1.2523%" y="869" width="0.0522%" height="15" fill="rgb(239,60,40)" fg:x="816" fg:w="34"/><text x="1.5023%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::read (8 samples, 0.01%)</title><rect x="1.2922%" y="853" width="0.0123%" height="15" fill="rgb(206,27,48)" fg:x="842" fg:w="8"/><text x="1.5422%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (8 samples, 0.01%)</title><rect x="1.2922%" y="837" width="0.0123%" height="15" fill="rgb(225,35,8)" fg:x="842" fg:w="8"/><text x="1.5422%" y="847.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (22 samples, 0.03%)</title><rect x="1.3045%" y="869" width="0.0338%" height="15" fill="rgb(250,213,24)" fg:x="850" fg:w="22"/><text x="1.5545%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (48 samples, 0.07%)</title><rect x="1.3551%" y="805" width="0.0737%" height="15" fill="rgb(247,123,22)" fg:x="883" fg:w="48"/><text x="1.6051%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (48 samples, 0.07%)</title><rect x="1.3551%" y="789" width="0.0737%" height="15" fill="rgb(231,138,38)" fg:x="883" fg:w="48"/><text x="1.6051%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (48 samples, 0.07%)</title><rect x="1.3551%" y="773" width="0.0737%" height="15" fill="rgb(231,145,46)" fg:x="883" fg:w="48"/><text x="1.6051%" y="783.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (48 samples, 0.07%)</title><rect x="1.3551%" y="757" width="0.0737%" height="15" fill="rgb(251,118,11)" fg:x="883" fg:w="48"/><text x="1.6051%" y="767.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (48 samples, 0.07%)</title><rect x="1.3551%" y="741" width="0.0737%" height="15" fill="rgb(217,147,25)" fg:x="883" fg:w="48"/><text x="1.6051%" y="751.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (55 samples, 0.08%)</title><rect x="1.3475%" y="869" width="0.0844%" height="15" fill="rgb(247,81,37)" fg:x="878" fg:w="55"/><text x="1.5975%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (50 samples, 0.08%)</title><rect x="1.3551%" y="853" width="0.0767%" height="15" fill="rgb(209,12,38)" fg:x="883" fg:w="50"/><text x="1.6051%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (50 samples, 0.08%)</title><rect x="1.3551%" y="837" width="0.0767%" height="15" fill="rgb(227,1,9)" fg:x="883" fg:w="50"/><text x="1.6051%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (50 samples, 0.08%)</title><rect x="1.3551%" y="821" width="0.0767%" height="15" fill="rgb(248,47,43)" fg:x="883" fg:w="50"/><text x="1.6051%" y="831.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::full (15 samples, 0.02%)</title><rect x="1.4319%" y="869" width="0.0230%" height="15" fill="rgb(221,10,30)" fg:x="933" fg:w="15"/><text x="1.6819%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::cap (11 samples, 0.02%)</title><rect x="1.4380%" y="853" width="0.0169%" height="15" fill="rgb(210,229,1)" fg:x="937" fg:w="11"/><text x="1.6880%" y="863.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (70 samples, 0.11%)</title><rect x="1.4764%" y="869" width="0.1074%" height="15" fill="rgb(222,148,37)" fg:x="962" fg:w="70"/><text x="1.7264%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (15 samples, 0.02%)</title><rect x="1.5838%" y="869" width="0.0230%" height="15" fill="rgb(234,67,33)" fg:x="1032" fg:w="15"/><text x="1.8338%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::flush (13 samples, 0.02%)</title><rect x="1.6068%" y="869" width="0.0200%" height="15" fill="rgb(247,98,35)" fg:x="1047" fg:w="13"/><text x="1.8568%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (9 samples, 0.01%)</title><rect x="1.6268%" y="869" width="0.0138%" height="15" fill="rgb(247,138,52)" fg:x="1060" fg:w="9"/><text x="1.8768%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut (14 samples, 0.02%)</title><rect x="1.6406%" y="869" width="0.0215%" height="15" fill="rgb(213,79,30)" fg:x="1069" fg:w="14"/><text x="1.8906%" y="879.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (19 samples, 0.03%)</title><rect x="1.6682%" y="869" width="0.0292%" height="15" fill="rgb(246,177,23)" fg:x="1087" fg:w="19"/><text x="1.9182%" y="879.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get_mut (25 samples, 0.04%)</title><rect x="1.6974%" y="869" width="0.0384%" height="15" fill="rgb(230,62,27)" fg:x="1106" fg:w="25"/><text x="1.9474%" y="879.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::put (22 samples, 0.03%)</title><rect x="1.7358%" y="869" width="0.0338%" height="15" fill="rgb(216,154,8)" fg:x="1131" fg:w="22"/><text x="1.9858%" y="879.50"></text></g><g><title>[libc-2.31.so] (37 samples, 0.06%)</title><rect x="1.7695%" y="869" width="0.0568%" height="15" fill="rgb(244,35,45)" fg:x="1153" fg:w="37"/><text x="2.0195%" y="879.50"></text></g><g><title>__GI___libc_malloc (95 samples, 0.15%)</title><rect x="1.8294%" y="869" width="0.1458%" height="15" fill="rgb(251,115,12)" fg:x="1192" fg:w="95"/><text x="2.0794%" y="879.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.01%)</title><rect x="1.9752%" y="869" width="0.0123%" height="15" fill="rgb(240,54,50)" fg:x="1287" fg:w="8"/><text x="2.2252%" y="879.50"></text></g><g><title>__libc_read (31 samples, 0.05%)</title><rect x="1.9874%" y="869" width="0.0476%" height="15" fill="rgb(233,84,52)" fg:x="1295" fg:w="31"/><text x="2.2374%" y="879.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="2.0227%" y="853" width="0.0123%" height="15" fill="rgb(207,117,47)" fg:x="1318" fg:w="8"/><text x="2.2727%" y="863.50"></text></g><g><title>__libc_write (26 samples, 0.04%)</title><rect x="2.0350%" y="869" width="0.0399%" height="15" fill="rgb(249,43,39)" fg:x="1326" fg:w="26"/><text x="2.2850%" y="879.50"></text></g><g><title>__lseek64 (416 samples, 0.64%)</title><rect x="2.0749%" y="869" width="0.6384%" height="15" fill="rgb(209,38,44)" fg:x="1352" fg:w="416"/><text x="2.3249%" y="879.50"></text></g><g><title>[unknown] (387 samples, 0.59%)</title><rect x="2.1194%" y="853" width="0.5939%" height="15" fill="rgb(236,212,23)" fg:x="1381" fg:w="387"/><text x="2.3694%" y="863.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (23 samples, 0.04%)</title><rect x="2.7134%" y="869" width="0.0353%" height="15" fill="rgb(242,79,21)" fg:x="1768" fg:w="23"/><text x="2.9634%" y="879.50"></text></g><g><title>__rdl_alloc (93 samples, 0.14%)</title><rect x="2.7487%" y="869" width="0.1427%" height="15" fill="rgb(211,96,35)" fg:x="1791" fg:w="93"/><text x="2.9987%" y="879.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (93 samples, 0.14%)</title><rect x="2.7487%" y="853" width="0.1427%" height="15" fill="rgb(253,215,40)" fg:x="1791" fg:w="93"/><text x="2.9987%" y="863.50"></text></g><g><title>__rdl_alloc_zeroed (21 samples, 0.03%)</title><rect x="2.8914%" y="869" width="0.0322%" height="15" fill="rgb(211,81,21)" fg:x="1884" fg:w="21"/><text x="3.1414%" y="879.50"></text></g><g><title>_int_free (58 samples, 0.09%)</title><rect x="2.9236%" y="869" width="0.0890%" height="15" fill="rgb(208,190,38)" fg:x="1905" fg:w="58"/><text x="3.1736%" y="879.50"></text></g><g><title>_int_malloc (12 samples, 0.02%)</title><rect x="3.0126%" y="869" width="0.0184%" height="15" fill="rgb(235,213,38)" fg:x="1963" fg:w="12"/><text x="3.2626%" y="879.50"></text></g><g><title>_int_realloc (7 samples, 0.01%)</title><rect x="3.0310%" y="869" width="0.0107%" height="15" fill="rgb(237,122,38)" fg:x="1975" fg:w="7"/><text x="3.2810%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="3.0449%" y="869" width="0.0230%" height="15" fill="rgb(244,218,35)" fg:x="1984" fg:w="15"/><text x="3.2949%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.01%)</title><rect x="3.0556%" y="853" width="0.0123%" height="15" fill="rgb(240,68,47)" fg:x="1991" fg:w="8"/><text x="3.3056%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.01%)</title><rect x="3.0556%" y="837" width="0.0123%" height="15" fill="rgb(210,16,53)" fg:x="1991" fg:w="8"/><text x="3.3056%" y="847.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.01%)</title><rect x="3.0556%" y="821" width="0.0123%" height="15" fill="rgb(235,124,12)" fg:x="1991" fg:w="8"/><text x="3.3056%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (7 samples, 0.01%)</title><rect x="3.0694%" y="869" width="0.0107%" height="15" fill="rgb(224,169,11)" fg:x="2000" fg:w="7"/><text x="3.3194%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (7 samples, 0.01%)</title><rect x="3.0694%" y="853" width="0.0107%" height="15" fill="rgb(250,166,2)" fg:x="2000" fg:w="7"/><text x="3.3194%" y="863.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (22 samples, 0.03%)</title><rect x="3.1032%" y="869" width="0.0338%" height="15" fill="rgb(242,216,29)" fg:x="2022" fg:w="22"/><text x="3.3532%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::write (10 samples, 0.02%)</title><rect x="3.1216%" y="853" width="0.0153%" height="15" fill="rgb(230,116,27)" fg:x="2034" fg:w="10"/><text x="3.3716%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (10 samples, 0.02%)</title><rect x="3.1216%" y="837" width="0.0153%" height="15" fill="rgb(228,99,48)" fg:x="2034" fg:w="10"/><text x="3.3716%" y="847.50"></text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (25 samples, 0.04%)</title><rect x="3.1415%" y="869" width="0.0384%" height="15" fill="rgb(253,11,6)" fg:x="2047" fg:w="25"/><text x="3.3915%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (18 samples, 0.03%)</title><rect x="3.1907%" y="853" width="0.0276%" height="15" fill="rgb(247,143,39)" fg:x="2079" fg:w="18"/><text x="3.4407%" y="863.50"></text></g><g><title>core::intrinsics::copy (18 samples, 0.03%)</title><rect x="3.1907%" y="837" width="0.0276%" height="15" fill="rgb(236,97,10)" fg:x="2079" fg:w="18"/><text x="3.4407%" y="847.50"></text></g><g><title>[[stack]] (1,311 samples, 2.01%)</title><rect x="1.2109%" y="885" width="2.0120%" height="15" fill="rgb(233,208,19)" fg:x="789" fg:w="1311"/><text x="1.4609%" y="895.50">[..</text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (22 samples, 0.03%)</title><rect x="3.1891%" y="869" width="0.0338%" height="15" fill="rgb(216,164,2)" fg:x="2078" fg:w="22"/><text x="3.4391%" y="879.50"></text></g><g><title>&lt;main::SelfStorage as main::Storage&gt;::lookup (12 samples, 0.02%)</title><rect x="3.2229%" y="869" width="0.0184%" height="15" fill="rgb(220,129,5)" fg:x="2100" fg:w="12"/><text x="3.4729%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (11 samples, 0.02%)</title><rect x="3.2413%" y="869" width="0.0169%" height="15" fill="rgb(242,17,10)" fg:x="2112" fg:w="11"/><text x="3.4913%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::insert (40 samples, 0.06%)</title><rect x="3.2582%" y="869" width="0.0614%" height="15" fill="rgb(242,107,0)" fg:x="2123" fg:w="40"/><text x="3.5082%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::lookup (17 samples, 0.03%)</title><rect x="3.3196%" y="869" width="0.0261%" height="15" fill="rgb(251,28,31)" fg:x="2163" fg:w="17"/><text x="3.5696%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::remove (43 samples, 0.07%)</title><rect x="3.3533%" y="869" width="0.0660%" height="15" fill="rgb(233,223,10)" fg:x="2185" fg:w="43"/><text x="3.6033%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::root_mut (9 samples, 0.01%)</title><rect x="3.4193%" y="869" width="0.0138%" height="15" fill="rgb(215,21,27)" fg:x="2228" fg:w="9"/><text x="3.6693%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (9 samples, 0.01%)</title><rect x="3.4193%" y="853" width="0.0138%" height="15" fill="rgb(232,23,21)" fg:x="2228" fg:w="9"/><text x="3.6693%" y="863.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (9 samples, 0.01%)</title><rect x="3.4193%" y="837" width="0.0138%" height="15" fill="rgb(244,5,23)" fg:x="2228" fg:w="9"/><text x="3.6693%" y="847.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (9 samples, 0.01%)</title><rect x="3.4193%" y="821" width="0.0138%" height="15" fill="rgb(226,81,46)" fg:x="2228" fg:w="9"/><text x="3.6693%" y="831.50"></text></g><g><title>core::cell::BorrowRefMut::new (9 samples, 0.01%)</title><rect x="3.4193%" y="805" width="0.0138%" height="15" fill="rgb(247,70,30)" fg:x="2228" fg:w="9"/><text x="3.6693%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (13 samples, 0.02%)</title><rect x="3.4423%" y="869" width="0.0200%" height="15" fill="rgb(212,68,19)" fg:x="2243" fg:w="13"/><text x="3.6923%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (10 samples, 0.02%)</title><rect x="3.4470%" y="853" width="0.0153%" height="15" fill="rgb(240,187,13)" fg:x="2246" fg:w="10"/><text x="3.6970%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (10 samples, 0.02%)</title><rect x="3.4470%" y="837" width="0.0153%" height="15" fill="rgb(223,113,26)" fg:x="2246" fg:w="10"/><text x="3.6970%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (10 samples, 0.02%)</title><rect x="3.4470%" y="821" width="0.0153%" height="15" fill="rgb(206,192,2)" fg:x="2246" fg:w="10"/><text x="3.6970%" y="831.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (18 samples, 0.03%)</title><rect x="3.4961%" y="853" width="0.0276%" height="15" fill="rgb(241,108,4)" fg:x="2278" fg:w="18"/><text x="3.7461%" y="863.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (18 samples, 0.03%)</title><rect x="3.4961%" y="837" width="0.0276%" height="15" fill="rgb(247,173,49)" fg:x="2278" fg:w="18"/><text x="3.7461%" y="847.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (49 samples, 0.08%)</title><rect x="3.4623%" y="869" width="0.0752%" height="15" fill="rgb(224,114,35)" fg:x="2256" fg:w="49"/><text x="3.7123%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (9 samples, 0.01%)</title><rect x="3.5237%" y="853" width="0.0138%" height="15" fill="rgb(245,159,27)" fg:x="2296" fg:w="9"/><text x="3.7737%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (9 samples, 0.01%)</title><rect x="3.5237%" y="837" width="0.0138%" height="15" fill="rgb(245,172,44)" fg:x="2296" fg:w="9"/><text x="3.7737%" y="847.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (9 samples, 0.01%)</title><rect x="3.5237%" y="821" width="0.0138%" height="15" fill="rgb(236,23,11)" fg:x="2296" fg:w="9"/><text x="3.7737%" y="831.50"></text></g><g><title>[anon] (213 samples, 0.33%)</title><rect x="3.2229%" y="885" width="0.3269%" height="15" fill="rgb(205,117,38)" fg:x="2100" fg:w="213"/><text x="3.4729%" y="895.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (8 samples, 0.01%)</title><rect x="3.5375%" y="869" width="0.0123%" height="15" fill="rgb(237,72,25)" fg:x="2305" fg:w="8"/><text x="3.7875%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="4.6271%" y="869" width="0.0246%" height="15" fill="rgb(244,70,9)" fg:x="3015" fg:w="16"/><text x="4.8771%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="4.6410%" y="853" width="0.0107%" height="15" fill="rgb(217,125,39)" fg:x="3024" fg:w="7"/><text x="4.8910%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (40 samples, 0.06%)</title><rect x="4.6624%" y="741" width="0.0614%" height="15" fill="rgb(235,36,10)" fg:x="3038" fg:w="40"/><text x="4.9124%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (40 samples, 0.06%)</title><rect x="4.6624%" y="725" width="0.0614%" height="15" fill="rgb(251,123,47)" fg:x="3038" fg:w="40"/><text x="4.9124%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (40 samples, 0.06%)</title><rect x="4.6624%" y="709" width="0.0614%" height="15" fill="rgb(221,13,13)" fg:x="3038" fg:w="40"/><text x="4.9124%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.06%)</title><rect x="4.6624%" y="693" width="0.0614%" height="15" fill="rgb(238,131,9)" fg:x="3038" fg:w="40"/><text x="4.9124%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.06%)</title><rect x="4.6624%" y="677" width="0.0614%" height="15" fill="rgb(211,50,8)" fg:x="3038" fg:w="40"/><text x="4.9124%" y="687.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.06%)</title><rect x="4.6624%" y="661" width="0.0614%" height="15" fill="rgb(245,182,24)" fg:x="3038" fg:w="40"/><text x="4.9124%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (109 samples, 0.17%)</title><rect x="4.6532%" y="869" width="0.1673%" height="15" fill="rgb(242,14,37)" fg:x="3032" fg:w="109"/><text x="4.9032%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (103 samples, 0.16%)</title><rect x="4.6624%" y="853" width="0.1581%" height="15" fill="rgb(246,228,12)" fg:x="3038" fg:w="103"/><text x="4.9124%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (103 samples, 0.16%)</title><rect x="4.6624%" y="837" width="0.1581%" height="15" fill="rgb(213,55,15)" fg:x="3038" fg:w="103"/><text x="4.9124%" y="847.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (103 samples, 0.16%)</title><rect x="4.6624%" y="821" width="0.1581%" height="15" fill="rgb(209,9,3)" fg:x="3038" fg:w="103"/><text x="4.9124%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (103 samples, 0.16%)</title><rect x="4.6624%" y="805" width="0.1581%" height="15" fill="rgb(230,59,30)" fg:x="3038" fg:w="103"/><text x="4.9124%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (103 samples, 0.16%)</title><rect x="4.6624%" y="789" width="0.1581%" height="15" fill="rgb(209,121,21)" fg:x="3038" fg:w="103"/><text x="4.9124%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (103 samples, 0.16%)</title><rect x="4.6624%" y="773" width="0.1581%" height="15" fill="rgb(220,109,13)" fg:x="3038" fg:w="103"/><text x="4.9124%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (103 samples, 0.16%)</title><rect x="4.6624%" y="757" width="0.1581%" height="15" fill="rgb(232,18,1)" fg:x="3038" fg:w="103"/><text x="4.9124%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (63 samples, 0.10%)</title><rect x="4.7238%" y="741" width="0.0967%" height="15" fill="rgb(215,41,42)" fg:x="3078" fg:w="63"/><text x="4.9738%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (63 samples, 0.10%)</title><rect x="4.7238%" y="725" width="0.0967%" height="15" fill="rgb(224,123,36)" fg:x="3078" fg:w="63"/><text x="4.9738%" y="735.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (14 samples, 0.02%)</title><rect x="4.8251%" y="869" width="0.0215%" height="15" fill="rgb(240,125,3)" fg:x="3144" fg:w="14"/><text x="5.0751%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 0.07%)</title><rect x="4.8543%" y="805" width="0.0721%" height="15" fill="rgb(205,98,50)" fg:x="3163" fg:w="47"/><text x="5.1043%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 0.07%)</title><rect x="4.8543%" y="789" width="0.0721%" height="15" fill="rgb(205,185,37)" fg:x="3163" fg:w="47"/><text x="5.1043%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (47 samples, 0.07%)</title><rect x="4.8543%" y="773" width="0.0721%" height="15" fill="rgb(238,207,15)" fg:x="3163" fg:w="47"/><text x="5.1043%" y="783.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (47 samples, 0.07%)</title><rect x="4.8543%" y="757" width="0.0721%" height="15" fill="rgb(213,199,42)" fg:x="3163" fg:w="47"/><text x="5.1043%" y="767.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (47 samples, 0.07%)</title><rect x="4.8543%" y="741" width="0.0721%" height="15" fill="rgb(235,201,11)" fg:x="3163" fg:w="47"/><text x="5.1043%" y="751.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (52 samples, 0.08%)</title><rect x="4.8481%" y="869" width="0.0798%" height="15" fill="rgb(207,46,11)" fg:x="3159" fg:w="52"/><text x="5.0981%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (48 samples, 0.07%)</title><rect x="4.8543%" y="853" width="0.0737%" height="15" fill="rgb(241,35,35)" fg:x="3163" fg:w="48"/><text x="5.1043%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (48 samples, 0.07%)</title><rect x="4.8543%" y="837" width="0.0737%" height="15" fill="rgb(243,32,47)" fg:x="3163" fg:w="48"/><text x="5.1043%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (48 samples, 0.07%)</title><rect x="4.8543%" y="821" width="0.0737%" height="15" fill="rgb(247,202,23)" fg:x="3163" fg:w="48"/><text x="5.1043%" y="831.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove (28 samples, 0.04%)</title><rect x="4.9325%" y="869" width="0.0430%" height="15" fill="rgb(219,102,11)" fg:x="3214" fg:w="28"/><text x="5.1825%" y="879.50"></text></g><g><title>yakvdb::disk::block::put_slice (23 samples, 0.04%)</title><rect x="4.9402%" y="853" width="0.0353%" height="15" fill="rgb(243,110,44)" fg:x="3219" fg:w="23"/><text x="5.1902%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (23 samples, 0.04%)</title><rect x="4.9402%" y="837" width="0.0353%" height="15" fill="rgb(222,74,54)" fg:x="3219" fg:w="23"/><text x="5.1902%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.04%)</title><rect x="4.9402%" y="821" width="0.0353%" height="15" fill="rgb(216,99,12)" fg:x="3219" fg:w="23"/><text x="5.1902%" y="831.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::reserve (34 samples, 0.05%)</title><rect x="4.9755%" y="869" width="0.0522%" height="15" fill="rgb(226,22,26)" fg:x="3242" fg:w="34"/><text x="5.2255%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="5.0154%" y="853" width="0.0123%" height="15" fill="rgb(217,163,10)" fg:x="3268" fg:w="8"/><text x="5.2654%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="5.0154%" y="837" width="0.0123%" height="15" fill="rgb(213,25,53)" fg:x="3268" fg:w="8"/><text x="5.2654%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="5.0154%" y="821" width="0.0123%" height="15" fill="rgb(252,105,26)" fg:x="3268" fg:w="8"/><text x="5.2654%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="5.0154%" y="805" width="0.0123%" height="15" fill="rgb(220,39,43)" fg:x="3268" fg:w="8"/><text x="5.2654%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="5.0154%" y="789" width="0.0123%" height="15" fill="rgb(229,68,48)" fg:x="3268" fg:w="8"/><text x="5.2654%" y="799.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (188 samples, 0.29%)</title><rect x="5.0277%" y="869" width="0.2885%" height="15" fill="rgb(252,8,32)" fg:x="3276" fg:w="188"/><text x="5.2777%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (52 samples, 0.08%)</title><rect x="5.3162%" y="869" width="0.0798%" height="15" fill="rgb(223,20,43)" fg:x="3464" fg:w="52"/><text x="5.5662%" y="879.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (8 samples, 0.01%)</title><rect x="5.4129%" y="853" width="0.0123%" height="15" fill="rgb(229,81,49)" fg:x="3527" fg:w="8"/><text x="5.6629%" y="863.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (8 samples, 0.01%)</title><rect x="5.4129%" y="837" width="0.0123%" height="15" fill="rgb(236,28,36)" fg:x="3527" fg:w="8"/><text x="5.6629%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (8 samples, 0.01%)</title><rect x="5.4129%" y="821" width="0.0123%" height="15" fill="rgb(249,185,26)" fg:x="3527" fg:w="8"/><text x="5.6629%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (8 samples, 0.01%)</title><rect x="5.4129%" y="805" width="0.0123%" height="15" fill="rgb(249,174,33)" fg:x="3527" fg:w="8"/><text x="5.6629%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(u32,())&gt;,hashbrown::raw::RawTable&lt;(u32,())&gt;::clear::{{closure}}&gt;&gt; (8 samples, 0.01%)</title><rect x="5.4129%" y="789" width="0.0123%" height="15" fill="rgb(233,201,37)" fg:x="3527" fg:w="8"/><text x="5.6629%" y="799.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="5.4129%" y="773" width="0.0123%" height="15" fill="rgb(221,78,26)" fg:x="3527" fg:w="8"/><text x="5.6629%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (8 samples, 0.01%)</title><rect x="5.4129%" y="757" width="0.0123%" height="15" fill="rgb(250,127,30)" fg:x="3527" fg:w="8"/><text x="5.6629%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (8 samples, 0.01%)</title><rect x="5.4129%" y="741" width="0.0123%" height="15" fill="rgb(230,49,44)" fg:x="3527" fg:w="8"/><text x="5.6629%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (8 samples, 0.01%)</title><rect x="5.4129%" y="725" width="0.0123%" height="15" fill="rgb(229,67,23)" fg:x="3527" fg:w="8"/><text x="5.6629%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (8 samples, 0.01%)</title><rect x="5.4129%" y="709" width="0.0123%" height="15" fill="rgb(249,83,47)" fg:x="3527" fg:w="8"/><text x="5.6629%" y="719.50"></text></g><g><title>core::intrinsics::write_bytes (8 samples, 0.01%)</title><rect x="5.4129%" y="693" width="0.0123%" height="15" fill="rgb(215,43,3)" fg:x="3527" fg:w="8"/><text x="5.6629%" y="703.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::flush (47 samples, 0.07%)</title><rect x="5.3960%" y="869" width="0.0721%" height="15" fill="rgb(238,154,13)" fg:x="3516" fg:w="47"/><text x="5.6460%" y="879.50"></text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::save (28 samples, 0.04%)</title><rect x="5.4252%" y="853" width="0.0430%" height="15" fill="rgb(219,56,2)" fg:x="3535" fg:w="28"/><text x="5.6752%" y="863.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (25 samples, 0.04%)</title><rect x="5.4789%" y="869" width="0.0384%" height="15" fill="rgb(233,0,4)" fg:x="3570" fg:w="25"/><text x="5.7289%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut (16 samples, 0.02%)</title><rect x="5.5173%" y="869" width="0.0246%" height="15" fill="rgb(235,30,7)" fg:x="3595" fg:w="16"/><text x="5.7673%" y="879.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.01%)</title><rect x="5.5602%" y="869" width="0.0138%" height="15" fill="rgb(250,79,13)" fg:x="3623" fg:w="9"/><text x="5.8102%" y="879.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="5.5741%" y="869" width="0.0123%" height="15" fill="rgb(211,146,34)" fg:x="3632" fg:w="8"/><text x="5.8241%" y="879.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="5.5741%" y="853" width="0.0123%" height="15" fill="rgb(228,22,38)" fg:x="3632" fg:w="8"/><text x="5.8241%" y="863.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="5.5741%" y="837" width="0.0123%" height="15" fill="rgb(235,168,5)" fg:x="3632" fg:w="8"/><text x="5.8241%" y="847.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="5.5741%" y="821" width="0.0123%" height="15" fill="rgb(221,155,16)" fg:x="3632" fg:w="8"/><text x="5.8241%" y="831.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="5.5741%" y="805" width="0.0123%" height="15" fill="rgb(215,215,53)" fg:x="3632" fg:w="8"/><text x="5.8241%" y="815.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="5.5756%" y="789" width="0.0107%" height="15" fill="rgb(223,4,10)" fg:x="3633" fg:w="7"/><text x="5.8256%" y="799.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="5.5756%" y="773" width="0.0107%" height="15" fill="rgb(234,103,6)" fg:x="3633" fg:w="7"/><text x="5.8256%" y="783.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="5.5756%" y="757" width="0.0107%" height="15" fill="rgb(227,97,0)" fg:x="3633" fg:w="7"/><text x="5.8256%" y="767.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="5.5756%" y="741" width="0.0107%" height="15" fill="rgb(234,150,53)" fg:x="3633" fg:w="7"/><text x="5.8256%" y="751.50"></text></g><g><title>__GI___libc_malloc (38 samples, 0.06%)</title><rect x="5.5955%" y="869" width="0.0583%" height="15" fill="rgb(228,201,54)" fg:x="3646" fg:w="38"/><text x="5.8455%" y="879.50"></text></g><g><title>__GI___libc_realloc (36 samples, 0.06%)</title><rect x="5.6539%" y="869" width="0.0552%" height="15" fill="rgb(222,22,37)" fg:x="3684" fg:w="36"/><text x="5.9039%" y="879.50"></text></g><g><title>__calloc (22 samples, 0.03%)</title><rect x="5.7091%" y="869" width="0.0338%" height="15" fill="rgb(237,53,32)" fg:x="3720" fg:w="22"/><text x="5.9591%" y="879.50"></text></g><g><title>__libc_write (265 samples, 0.41%)</title><rect x="5.7444%" y="869" width="0.4067%" height="15" fill="rgb(233,25,53)" fg:x="3743" fg:w="265"/><text x="5.9944%" y="879.50"></text></g><g><title>[unknown] (265 samples, 0.41%)</title><rect x="5.7444%" y="853" width="0.4067%" height="15" fill="rgb(210,40,34)" fg:x="3743" fg:w="265"/><text x="5.9944%" y="863.50"></text></g><g><title>__lseek64 (394 samples, 0.60%)</title><rect x="6.1511%" y="869" width="0.6047%" height="15" fill="rgb(241,220,44)" fg:x="4008" fg:w="394"/><text x="6.4011%" y="879.50"></text></g><g><title>[unknown] (394 samples, 0.60%)</title><rect x="6.1511%" y="853" width="0.6047%" height="15" fill="rgb(235,28,35)" fg:x="4008" fg:w="394"/><text x="6.4011%" y="863.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (7 samples, 0.01%)</title><rect x="6.7558%" y="869" width="0.0107%" height="15" fill="rgb(210,56,17)" fg:x="4402" fg:w="7"/><text x="7.0058%" y="879.50"></text></g><g><title>__memset_sse2_unaligned_erms (25 samples, 0.04%)</title><rect x="6.7665%" y="869" width="0.0384%" height="15" fill="rgb(224,130,29)" fg:x="4409" fg:w="25"/><text x="7.0165%" y="879.50"></text></g><g><title>__rdl_alloc (8 samples, 0.01%)</title><rect x="6.8049%" y="869" width="0.0123%" height="15" fill="rgb(235,212,8)" fg:x="4434" fg:w="8"/><text x="7.0549%" y="879.50"></text></g><g><title>__rdl_realloc (16 samples, 0.02%)</title><rect x="6.8172%" y="869" width="0.0246%" height="15" fill="rgb(223,33,50)" fg:x="4442" fg:w="16"/><text x="7.0672%" y="879.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (8 samples, 0.01%)</title><rect x="6.8294%" y="853" width="0.0123%" height="15" fill="rgb(219,149,13)" fg:x="4450" fg:w="8"/><text x="7.0794%" y="863.50"></text></g><g><title>_int_free (41 samples, 0.06%)</title><rect x="6.8417%" y="869" width="0.0629%" height="15" fill="rgb(250,156,29)" fg:x="4458" fg:w="41"/><text x="7.0917%" y="879.50"></text></g><g><title>_int_malloc (206 samples, 0.32%)</title><rect x="6.9046%" y="869" width="0.3161%" height="15" fill="rgb(216,193,19)" fg:x="4499" fg:w="206"/><text x="7.1546%" y="879.50"></text></g><g><title>_int_realloc (36 samples, 0.06%)</title><rect x="7.2208%" y="869" width="0.0552%" height="15" fill="rgb(216,135,14)" fg:x="4705" fg:w="36"/><text x="7.4708%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.01%)</title><rect x="7.2760%" y="869" width="0.0123%" height="15" fill="rgb(241,47,5)" fg:x="4741" fg:w="8"/><text x="7.5260%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (19 samples, 0.03%)</title><rect x="7.2914%" y="869" width="0.0292%" height="15" fill="rgb(233,42,35)" fg:x="4751" fg:w="19"/><text x="7.5414%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.01%)</title><rect x="7.3328%" y="869" width="0.0123%" height="15" fill="rgb(231,13,6)" fg:x="4778" fg:w="8"/><text x="7.5828%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (14 samples, 0.02%)</title><rect x="7.3451%" y="869" width="0.0215%" height="15" fill="rgb(207,181,40)" fg:x="4786" fg:w="14"/><text x="7.5951%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (10 samples, 0.02%)</title><rect x="7.3512%" y="853" width="0.0153%" height="15" fill="rgb(254,173,49)" fg:x="4790" fg:w="10"/><text x="7.6012%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.02%)</title><rect x="7.3512%" y="837" width="0.0153%" height="15" fill="rgb(221,1,38)" fg:x="4790" fg:w="10"/><text x="7.6012%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="7.3512%" y="821" width="0.0153%" height="15" fill="rgb(206,124,46)" fg:x="4790" fg:w="10"/><text x="7.6012%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (10 samples, 0.02%)</title><rect x="7.3666%" y="869" width="0.0153%" height="15" fill="rgb(249,21,11)" fg:x="4800" fg:w="10"/><text x="7.6166%" y="879.50"></text></g><g><title>malloc_consolidate (58 samples, 0.09%)</title><rect x="7.3912%" y="869" width="0.0890%" height="15" fill="rgb(222,201,40)" fg:x="4816" fg:w="58"/><text x="7.6412%" y="879.50"></text></g><g><title>std::io::default_read_exact (17 samples, 0.03%)</title><rect x="7.4863%" y="869" width="0.0261%" height="15" fill="rgb(235,61,29)" fg:x="4878" fg:w="17"/><text x="7.7363%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (9 samples, 0.01%)</title><rect x="7.4986%" y="853" width="0.0138%" height="15" fill="rgb(219,207,3)" fg:x="4886" fg:w="9"/><text x="7.7486%" y="863.50"></text></g><g><title>unlink_chunk.isra.0 (31 samples, 0.05%)</title><rect x="7.5124%" y="869" width="0.0476%" height="15" fill="rgb(222,56,46)" fg:x="4895" fg:w="31"/><text x="7.7624%" y="879.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (50 samples, 0.08%)</title><rect x="7.5968%" y="853" width="0.0767%" height="15" fill="rgb(239,76,54)" fg:x="4950" fg:w="50"/><text x="7.8468%" y="863.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (50 samples, 0.08%)</title><rect x="7.5968%" y="837" width="0.0767%" height="15" fill="rgb(231,124,27)" fg:x="4950" fg:w="50"/><text x="7.8468%" y="847.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (91 samples, 0.14%)</title><rect x="7.5646%" y="869" width="0.1397%" height="15" fill="rgb(249,195,6)" fg:x="4929" fg:w="91"/><text x="7.8146%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (20 samples, 0.03%)</title><rect x="7.6735%" y="853" width="0.0307%" height="15" fill="rgb(237,174,47)" fg:x="5000" fg:w="20"/><text x="7.9235%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (20 samples, 0.03%)</title><rect x="7.6735%" y="837" width="0.0307%" height="15" fill="rgb(206,201,31)" fg:x="5000" fg:w="20"/><text x="7.9235%" y="847.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (20 samples, 0.03%)</title><rect x="7.6735%" y="821" width="0.0307%" height="15" fill="rgb(231,57,52)" fg:x="5000" fg:w="20"/><text x="7.9235%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (8 samples, 0.01%)</title><rect x="7.7610%" y="853" width="0.0123%" height="15" fill="rgb(248,177,22)" fg:x="5057" fg:w="8"/><text x="8.0110%" y="863.50"></text></g><g><title>core::intrinsics::copy (8 samples, 0.01%)</title><rect x="7.7610%" y="837" width="0.0123%" height="15" fill="rgb(215,211,37)" fg:x="5057" fg:w="8"/><text x="8.0110%" y="847.50"></text></g><g><title>[unknown] (2,755 samples, 4.23%)</title><rect x="3.5528%" y="885" width="4.2281%" height="15" fill="rgb(241,128,51)" fg:x="2315" fg:w="2755"/><text x="3.8028%" y="895.50">[unkn..</text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (50 samples, 0.08%)</title><rect x="7.7042%" y="869" width="0.0767%" height="15" fill="rgb(227,165,31)" fg:x="5020" fg:w="50"/><text x="7.9542%" y="879.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (10 samples, 0.02%)</title><rect x="7.7886%" y="885" width="0.0153%" height="15" fill="rgb(228,167,24)" fg:x="5075" fg:w="10"/><text x="8.0386%" y="895.50"></text></g><g><title>_int_free (125 samples, 0.19%)</title><rect x="7.8117%" y="869" width="0.1918%" height="15" fill="rgb(228,143,12)" fg:x="5090" fg:w="125"/><text x="8.0617%" y="879.50"></text></g><g><title>__rust_alloc (131 samples, 0.20%)</title><rect x="7.8040%" y="885" width="0.2010%" height="15" fill="rgb(249,149,8)" fg:x="5085" fg:w="131"/><text x="8.0540%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.02%)</title><rect x="8.2844%" y="581" width="0.0153%" height="15" fill="rgb(243,35,44)" fg:x="5398" fg:w="10"/><text x="8.5344%" y="591.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (20 samples, 0.03%)</title><rect x="8.3135%" y="549" width="0.0307%" height="15" fill="rgb(246,89,9)" fg:x="5417" fg:w="20"/><text x="8.5635%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (25 samples, 0.04%)</title><rect x="8.3135%" y="565" width="0.0384%" height="15" fill="rgb(233,213,13)" fg:x="5417" fg:w="25"/><text x="8.5635%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (22 samples, 0.03%)</title><rect x="8.3534%" y="565" width="0.0338%" height="15" fill="rgb(233,141,41)" fg:x="5443" fg:w="22"/><text x="8.6034%" y="575.50"></text></g><g><title>core::cmp::PartialOrd::ge (22 samples, 0.03%)</title><rect x="8.3534%" y="549" width="0.0338%" height="15" fill="rgb(239,167,4)" fg:x="5443" fg:w="22"/><text x="8.6034%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (20 samples, 0.03%)</title><rect x="8.3565%" y="533" width="0.0307%" height="15" fill="rgb(209,217,16)" fg:x="5445" fg:w="20"/><text x="8.6065%" y="543.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (20 samples, 0.03%)</title><rect x="8.3565%" y="517" width="0.0307%" height="15" fill="rgb(219,88,35)" fg:x="5445" fg:w="20"/><text x="8.6065%" y="527.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (20 samples, 0.03%)</title><rect x="8.3565%" y="501" width="0.0307%" height="15" fill="rgb(220,193,23)" fg:x="5445" fg:w="20"/><text x="8.6065%" y="511.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.02%)</title><rect x="8.3672%" y="485" width="0.0200%" height="15" fill="rgb(230,90,52)" fg:x="5452" fg:w="13"/><text x="8.6172%" y="495.50"></text></g><g><title>&lt;u32 as core::ops::arith::Add&gt;::add (9 samples, 0.01%)</title><rect x="8.5084%" y="549" width="0.0138%" height="15" fill="rgb(252,106,19)" fg:x="5544" fg:w="9"/><text x="8.7584%" y="559.50"></text></g><g><title>&lt;u32 as core::ops::arith::Sub&gt;::sub (7 samples, 0.01%)</title><rect x="8.5299%" y="549" width="0.0107%" height="15" fill="rgb(206,74,20)" fg:x="5558" fg:w="7"/><text x="8.7799%" y="559.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (7 samples, 0.01%)</title><rect x="8.6358%" y="469" width="0.0107%" height="15" fill="rgb(230,138,44)" fg:x="5627" fg:w="7"/><text x="8.8858%" y="479.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (7 samples, 0.01%)</title><rect x="8.6358%" y="453" width="0.0107%" height="15" fill="rgb(235,182,43)" fg:x="5627" fg:w="7"/><text x="8.8858%" y="463.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (7 samples, 0.01%)</title><rect x="8.6358%" y="437" width="0.0107%" height="15" fill="rgb(242,16,51)" fg:x="5627" fg:w="7"/><text x="8.8858%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (12 samples, 0.02%)</title><rect x="8.6465%" y="469" width="0.0184%" height="15" fill="rgb(248,9,4)" fg:x="5634" fg:w="12"/><text x="8.8965%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="8.6465%" y="453" width="0.0184%" height="15" fill="rgb(210,31,22)" fg:x="5634" fg:w="12"/><text x="8.8965%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (26 samples, 0.04%)</title><rect x="8.6343%" y="501" width="0.0399%" height="15" fill="rgb(239,54,39)" fg:x="5626" fg:w="26"/><text x="8.8843%" y="511.50"></text></g><g><title>yakvdb::disk::block::get_u32 (25 samples, 0.04%)</title><rect x="8.6358%" y="485" width="0.0384%" height="15" fill="rgb(230,99,41)" fg:x="5627" fg:w="25"/><text x="8.8858%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (110 samples, 0.17%)</title><rect x="8.5453%" y="517" width="0.1688%" height="15" fill="rgb(253,106,12)" fg:x="5568" fg:w="110"/><text x="8.7953%" y="527.50"></text></g><g><title>yakvdb::disk::block::get_u32 (24 samples, 0.04%)</title><rect x="8.6772%" y="501" width="0.0368%" height="15" fill="rgb(213,46,41)" fg:x="5654" fg:w="24"/><text x="8.9272%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (16 samples, 0.02%)</title><rect x="8.6895%" y="485" width="0.0246%" height="15" fill="rgb(215,133,35)" fg:x="5662" fg:w="16"/><text x="8.9395%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (16 samples, 0.02%)</title><rect x="8.6895%" y="469" width="0.0246%" height="15" fill="rgb(213,28,5)" fg:x="5662" fg:w="16"/><text x="8.9395%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (143 samples, 0.22%)</title><rect x="8.5406%" y="549" width="0.2195%" height="15" fill="rgb(215,77,49)" fg:x="5565" fg:w="143"/><text x="8.7906%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (143 samples, 0.22%)</title><rect x="8.5406%" y="533" width="0.2195%" height="15" fill="rgb(248,100,22)" fg:x="5565" fg:w="143"/><text x="8.7906%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (30 samples, 0.05%)</title><rect x="8.7141%" y="517" width="0.0460%" height="15" fill="rgb(208,67,9)" fg:x="5678" fg:w="30"/><text x="8.9641%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key::{{closure}} (21 samples, 0.03%)</title><rect x="8.7279%" y="501" width="0.0322%" height="15" fill="rgb(219,133,21)" fg:x="5687" fg:w="21"/><text x="8.9779%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (15 samples, 0.02%)</title><rect x="8.7371%" y="485" width="0.0230%" height="15" fill="rgb(246,46,29)" fg:x="5693" fg:w="15"/><text x="8.9871%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (15 samples, 0.02%)</title><rect x="8.7371%" y="469" width="0.0230%" height="15" fill="rgb(246,185,52)" fg:x="5693" fg:w="15"/><text x="8.9871%" y="479.50"></text></g><g><title>[libc-2.31.so] (141 samples, 0.22%)</title><rect x="8.7877%" y="501" width="0.2164%" height="15" fill="rgb(252,136,11)" fg:x="5726" fg:w="141"/><text x="9.0377%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (172 samples, 0.26%)</title><rect x="8.7601%" y="549" width="0.2640%" height="15" fill="rgb(219,138,53)" fg:x="5708" fg:w="172"/><text x="9.0101%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (172 samples, 0.26%)</title><rect x="8.7601%" y="533" width="0.2640%" height="15" fill="rgb(211,51,23)" fg:x="5708" fg:w="172"/><text x="9.0101%" y="543.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (172 samples, 0.26%)</title><rect x="8.7601%" y="517" width="0.2640%" height="15" fill="rgb(247,221,28)" fg:x="5708" fg:w="172"/><text x="9.0101%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (13 samples, 0.02%)</title><rect x="9.0041%" y="501" width="0.0200%" height="15" fill="rgb(251,222,45)" fg:x="5867" fg:w="13"/><text x="9.2541%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (476 samples, 0.73%)</title><rect x="8.2997%" y="581" width="0.7305%" height="15" fill="rgb(217,162,53)" fg:x="5408" fg:w="476"/><text x="8.5497%" y="591.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (419 samples, 0.64%)</title><rect x="8.3872%" y="565" width="0.6430%" height="15" fill="rgb(229,93,14)" fg:x="5465" fg:w="419"/><text x="8.6372%" y="575.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (8 samples, 0.01%)</title><rect x="9.4016%" y="373" width="0.0123%" height="15" fill="rgb(209,67,49)" fg:x="6126" fg:w="8"/><text x="9.6516%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (8 samples, 0.01%)</title><rect x="9.4016%" y="357" width="0.0123%" height="15" fill="rgb(213,87,29)" fg:x="6126" fg:w="8"/><text x="9.6516%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (8 samples, 0.01%)</title><rect x="9.4016%" y="341" width="0.0123%" height="15" fill="rgb(205,151,52)" fg:x="6126" fg:w="8"/><text x="9.6516%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (26 samples, 0.04%)</title><rect x="9.4139%" y="373" width="0.0399%" height="15" fill="rgb(253,215,39)" fg:x="6134" fg:w="26"/><text x="9.6639%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.04%)</title><rect x="9.4139%" y="357" width="0.0399%" height="15" fill="rgb(221,220,41)" fg:x="6134" fg:w="26"/><text x="9.6639%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (53 samples, 0.08%)</title><rect x="9.3832%" y="405" width="0.0813%" height="15" fill="rgb(218,133,21)" fg:x="6114" fg:w="53"/><text x="9.6332%" y="415.50"></text></g><g><title>yakvdb::disk::block::get_u32 (41 samples, 0.06%)</title><rect x="9.4016%" y="389" width="0.0629%" height="15" fill="rgb(221,193,43)" fg:x="6126" fg:w="41"/><text x="9.6516%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.01%)</title><rect x="9.4538%" y="373" width="0.0107%" height="15" fill="rgb(240,128,52)" fg:x="6160" fg:w="7"/><text x="9.7038%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.01%)</title><rect x="9.4538%" y="357" width="0.0107%" height="15" fill="rgb(253,114,12)" fg:x="6160" fg:w="7"/><text x="9.7038%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (18 samples, 0.03%)</title><rect x="9.5029%" y="389" width="0.0276%" height="15" fill="rgb(215,223,47)" fg:x="6192" fg:w="18"/><text x="9.7529%" y="399.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (18 samples, 0.03%)</title><rect x="9.5029%" y="373" width="0.0276%" height="15" fill="rgb(248,225,23)" fg:x="6192" fg:w="18"/><text x="9.7529%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (18 samples, 0.03%)</title><rect x="9.5029%" y="357" width="0.0276%" height="15" fill="rgb(250,108,0)" fg:x="6192" fg:w="18"/><text x="9.7529%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (8 samples, 0.01%)</title><rect x="9.5305%" y="389" width="0.0123%" height="15" fill="rgb(228,208,7)" fg:x="6210" fg:w="8"/><text x="9.7805%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="9.5305%" y="373" width="0.0123%" height="15" fill="rgb(244,45,10)" fg:x="6210" fg:w="8"/><text x="9.7805%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (278 samples, 0.43%)</title><rect x="9.1868%" y="437" width="0.4266%" height="15" fill="rgb(207,125,25)" fg:x="5986" fg:w="278"/><text x="9.4368%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (267 samples, 0.41%)</title><rect x="9.2036%" y="421" width="0.4098%" height="15" fill="rgb(210,195,18)" fg:x="5997" fg:w="267"/><text x="9.4536%" y="431.50"></text></g><g><title>yakvdb::disk::block::get_u32 (97 samples, 0.15%)</title><rect x="9.4645%" y="405" width="0.1489%" height="15" fill="rgb(249,80,12)" fg:x="6167" fg:w="97"/><text x="9.7145%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (46 samples, 0.07%)</title><rect x="9.5428%" y="389" width="0.0706%" height="15" fill="rgb(221,65,9)" fg:x="6218" fg:w="46"/><text x="9.7928%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (46 samples, 0.07%)</title><rect x="9.5428%" y="373" width="0.0706%" height="15" fill="rgb(235,49,36)" fg:x="6218" fg:w="46"/><text x="9.7928%" y="383.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (368 samples, 0.56%)</title><rect x="9.0502%" y="453" width="0.5648%" height="15" fill="rgb(225,32,20)" fg:x="5897" fg:w="368"/><text x="9.3002%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (385 samples, 0.59%)</title><rect x="9.0502%" y="501" width="0.5909%" height="15" fill="rgb(215,141,46)" fg:x="5897" fg:w="385"/><text x="9.3002%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (385 samples, 0.59%)</title><rect x="9.0502%" y="485" width="0.5909%" height="15" fill="rgb(250,160,47)" fg:x="5897" fg:w="385"/><text x="9.3002%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (385 samples, 0.59%)</title><rect x="9.0502%" y="469" width="0.5909%" height="15" fill="rgb(216,222,40)" fg:x="5897" fg:w="385"/><text x="9.3002%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (17 samples, 0.03%)</title><rect x="9.6149%" y="453" width="0.0261%" height="15" fill="rgb(234,217,39)" fg:x="6265" fg:w="17"/><text x="9.8649%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (17 samples, 0.03%)</title><rect x="9.6149%" y="437" width="0.0261%" height="15" fill="rgb(207,178,40)" fg:x="6265" fg:w="17"/><text x="9.8649%" y="447.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (12 samples, 0.02%)</title><rect x="9.6226%" y="421" width="0.0184%" height="15" fill="rgb(221,136,13)" fg:x="6270" fg:w="12"/><text x="9.8726%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (12 samples, 0.02%)</title><rect x="9.6226%" y="405" width="0.0184%" height="15" fill="rgb(249,199,10)" fg:x="6270" fg:w="12"/><text x="9.8726%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (403 samples, 0.62%)</title><rect x="9.0302%" y="565" width="0.6185%" height="15" fill="rgb(249,222,13)" fg:x="5884" fg:w="403"/><text x="9.2802%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (390 samples, 0.60%)</title><rect x="9.0502%" y="549" width="0.5985%" height="15" fill="rgb(244,185,38)" fg:x="5897" fg:w="390"/><text x="9.3002%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (390 samples, 0.60%)</title><rect x="9.0502%" y="533" width="0.5985%" height="15" fill="rgb(236,202,9)" fg:x="5897" fg:w="390"/><text x="9.3002%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (390 samples, 0.60%)</title><rect x="9.0502%" y="517" width="0.5985%" height="15" fill="rgb(250,229,37)" fg:x="5897" fg:w="390"/><text x="9.3002%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::fits (404 samples, 0.62%)</title><rect x="9.0302%" y="581" width="0.6200%" height="15" fill="rgb(206,174,23)" fg:x="5884" fg:w="404"/><text x="9.2802%" y="591.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (23 samples, 0.04%)</title><rect x="10.9302%" y="373" width="0.0353%" height="15" fill="rgb(211,33,43)" fg:x="7122" fg:w="23"/><text x="11.1802%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (23 samples, 0.04%)</title><rect x="10.9302%" y="357" width="0.0353%" height="15" fill="rgb(245,58,50)" fg:x="7122" fg:w="23"/><text x="11.1802%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (23 samples, 0.04%)</title><rect x="10.9302%" y="341" width="0.0353%" height="15" fill="rgb(244,68,36)" fg:x="7122" fg:w="23"/><text x="11.1802%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (59 samples, 0.09%)</title><rect x="10.9655%" y="373" width="0.0905%" height="15" fill="rgb(232,229,15)" fg:x="7145" fg:w="59"/><text x="11.2155%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (59 samples, 0.09%)</title><rect x="10.9655%" y="357" width="0.0905%" height="15" fill="rgb(254,30,23)" fg:x="7145" fg:w="59"/><text x="11.2155%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (166 samples, 0.25%)</title><rect x="10.8412%" y="405" width="0.2548%" height="15" fill="rgb(235,160,14)" fg:x="7064" fg:w="166"/><text x="11.0912%" y="415.50"></text></g><g><title>yakvdb::disk::block::get_u32 (108 samples, 0.17%)</title><rect x="10.9302%" y="389" width="0.1657%" height="15" fill="rgb(212,155,44)" fg:x="7122" fg:w="108"/><text x="11.1802%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (26 samples, 0.04%)</title><rect x="11.0560%" y="373" width="0.0399%" height="15" fill="rgb(226,2,50)" fg:x="7204" fg:w="26"/><text x="11.3060%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (26 samples, 0.04%)</title><rect x="11.0560%" y="357" width="0.0399%" height="15" fill="rgb(234,177,6)" fg:x="7204" fg:w="26"/><text x="11.3060%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (68 samples, 0.10%)</title><rect x="11.2049%" y="389" width="0.1044%" height="15" fill="rgb(217,24,9)" fg:x="7301" fg:w="68"/><text x="11.4549%" y="399.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (68 samples, 0.10%)</title><rect x="11.2049%" y="373" width="0.1044%" height="15" fill="rgb(220,13,46)" fg:x="7301" fg:w="68"/><text x="11.4549%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (68 samples, 0.10%)</title><rect x="11.2049%" y="357" width="0.1044%" height="15" fill="rgb(239,221,27)" fg:x="7301" fg:w="68"/><text x="11.4549%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (39 samples, 0.06%)</title><rect x="11.3093%" y="389" width="0.0599%" height="15" fill="rgb(222,198,25)" fg:x="7369" fg:w="39"/><text x="11.5593%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.06%)</title><rect x="11.3093%" y="373" width="0.0599%" height="15" fill="rgb(211,99,13)" fg:x="7369" fg:w="39"/><text x="11.5593%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (960 samples, 1.47%)</title><rect x="10.1874%" y="437" width="1.4733%" height="15" fill="rgb(232,111,31)" fg:x="6638" fg:w="960"/><text x="10.4374%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (923 samples, 1.42%)</title><rect x="10.2442%" y="421" width="1.4165%" height="15" fill="rgb(245,82,37)" fg:x="6675" fg:w="923"/><text x="10.4942%" y="431.50"></text></g><g><title>yakvdb::disk::block::get_u32 (368 samples, 0.56%)</title><rect x="11.0959%" y="405" width="0.5648%" height="15" fill="rgb(227,149,46)" fg:x="7230" fg:w="368"/><text x="11.3459%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (190 samples, 0.29%)</title><rect x="11.3691%" y="389" width="0.2916%" height="15" fill="rgb(218,36,50)" fg:x="7408" fg:w="190"/><text x="11.6191%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (190 samples, 0.29%)</title><rect x="11.3691%" y="373" width="0.2916%" height="15" fill="rgb(226,80,48)" fg:x="7408" fg:w="190"/><text x="11.6191%" y="383.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (1,265 samples, 1.94%)</title><rect x="9.7208%" y="453" width="1.9414%" height="15" fill="rgb(238,224,15)" fg:x="6334" fg:w="1265"/><text x="9.9708%" y="463.50">c..</text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (56 samples, 0.09%)</title><rect x="11.6684%" y="421" width="0.0859%" height="15" fill="rgb(241,136,10)" fg:x="7603" fg:w="56"/><text x="11.9184%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (56 samples, 0.09%)</title><rect x="11.6684%" y="405" width="0.0859%" height="15" fill="rgb(208,32,45)" fg:x="7603" fg:w="56"/><text x="11.9184%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,331 samples, 2.04%)</title><rect x="9.7208%" y="501" width="2.0427%" height="15" fill="rgb(207,135,9)" fg:x="6334" fg:w="1331"/><text x="9.9708%" y="511.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,331 samples, 2.04%)</title><rect x="9.7208%" y="485" width="2.0427%" height="15" fill="rgb(206,86,44)" fg:x="6334" fg:w="1331"/><text x="9.9708%" y="495.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,331 samples, 2.04%)</title><rect x="9.7208%" y="469" width="2.0427%" height="15" fill="rgb(245,177,15)" fg:x="6334" fg:w="1331"/><text x="9.9708%" y="479.50">c..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (66 samples, 0.10%)</title><rect x="11.6622%" y="453" width="0.1013%" height="15" fill="rgb(206,64,50)" fg:x="7599" fg:w="66"/><text x="11.9122%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (66 samples, 0.10%)</title><rect x="11.6622%" y="437" width="0.1013%" height="15" fill="rgb(234,36,40)" fg:x="7599" fg:w="66"/><text x="11.9122%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::full (1,391 samples, 2.13%)</title><rect x="9.6502%" y="581" width="2.1348%" height="15" fill="rgb(213,64,8)" fg:x="6288" fg:w="1391"/><text x="9.9002%" y="591.50">&lt;..</text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (1,362 samples, 2.09%)</title><rect x="9.6947%" y="565" width="2.0903%" height="15" fill="rgb(210,75,36)" fg:x="6317" fg:w="1362"/><text x="9.9447%" y="575.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::min (1,345 samples, 2.06%)</title><rect x="9.7208%" y="549" width="2.0642%" height="15" fill="rgb(229,88,21)" fg:x="6334" fg:w="1345"/><text x="9.9708%" y="559.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1,345 samples, 2.06%)</title><rect x="9.7208%" y="533" width="2.0642%" height="15" fill="rgb(252,204,47)" fg:x="6334" fg:w="1345"/><text x="9.9708%" y="543.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1,345 samples, 2.06%)</title><rect x="9.7208%" y="517" width="2.0642%" height="15" fill="rgb(208,77,27)" fg:x="6334" fg:w="1345"/><text x="9.9708%" y="527.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="11.7635%" y="501" width="0.0215%" height="15" fill="rgb(221,76,26)" fg:x="7665" fg:w="14"/><text x="12.0135%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="11.7635%" y="485" width="0.0215%" height="15" fill="rgb(225,139,18)" fg:x="7665" fg:w="14"/><text x="12.0135%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (14 samples, 0.02%)</title><rect x="11.7635%" y="469" width="0.0215%" height="15" fill="rgb(230,137,11)" fg:x="7665" fg:w="14"/><text x="12.0135%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.02%)</title><rect x="11.7635%" y="453" width="0.0215%" height="15" fill="rgb(212,28,1)" fg:x="7665" fg:w="14"/><text x="12.0135%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (14 samples, 0.02%)</title><rect x="11.7635%" y="437" width="0.0215%" height="15" fill="rgb(248,164,17)" fg:x="7665" fg:w="14"/><text x="12.0135%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.02%)</title><rect x="11.7666%" y="421" width="0.0184%" height="15" fill="rgb(222,171,42)" fg:x="7667" fg:w="12"/><text x="12.0166%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (12 samples, 0.02%)</title><rect x="11.7666%" y="405" width="0.0184%" height="15" fill="rgb(243,84,45)" fg:x="7667" fg:w="12"/><text x="12.0166%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (11 samples, 0.02%)</title><rect x="11.7681%" y="389" width="0.0169%" height="15" fill="rgb(252,49,23)" fg:x="7668" fg:w="11"/><text x="12.0181%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::id (14 samples, 0.02%)</title><rect x="11.7850%" y="581" width="0.0215%" height="15" fill="rgb(215,19,7)" fg:x="7679" fg:w="14"/><text x="12.0350%" y="591.50"></text></g><g><title>yakvdb::disk::block::get_u32 (14 samples, 0.02%)</title><rect x="11.7850%" y="565" width="0.0215%" height="15" fill="rgb(238,81,41)" fg:x="7679" fg:w="14"/><text x="12.0350%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (13 samples, 0.02%)</title><rect x="11.7866%" y="549" width="0.0200%" height="15" fill="rgb(210,199,37)" fg:x="7680" fg:w="13"/><text x="12.0366%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="11.7866%" y="533" width="0.0200%" height="15" fill="rgb(244,192,49)" fg:x="7680" fg:w="13"/><text x="12.0366%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (8 samples, 0.01%)</title><rect x="11.8065%" y="565" width="0.0123%" height="15" fill="rgb(226,211,11)" fg:x="7693" fg:w="8"/><text x="12.0565%" y="575.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (10 samples, 0.02%)</title><rect x="11.8065%" y="581" width="0.0153%" height="15" fill="rgb(236,162,54)" fg:x="7693" fg:w="10"/><text x="12.0565%" y="591.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (14 samples, 0.02%)</title><rect x="11.8280%" y="581" width="0.0215%" height="15" fill="rgb(220,229,9)" fg:x="7707" fg:w="14"/><text x="12.0780%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="11.9063%" y="565" width="0.0123%" height="15" fill="rgb(250,87,22)" fg:x="7758" fg:w="8"/><text x="12.1563%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="11.9538%" y="389" width="0.0123%" height="15" fill="rgb(239,43,17)" fg:x="7789" fg:w="8"/><text x="12.2038%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.02%)</title><rect x="11.9707%" y="373" width="0.0230%" height="15" fill="rgb(231,177,25)" fg:x="7800" fg:w="15"/><text x="12.2207%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (37 samples, 0.06%)</title><rect x="11.9431%" y="437" width="0.0568%" height="15" fill="rgb(219,179,1)" fg:x="7782" fg:w="37"/><text x="12.1931%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (37 samples, 0.06%)</title><rect x="11.9431%" y="421" width="0.0568%" height="15" fill="rgb(238,219,53)" fg:x="7782" fg:w="37"/><text x="12.1931%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (37 samples, 0.06%)</title><rect x="11.9431%" y="405" width="0.0568%" height="15" fill="rgb(232,167,36)" fg:x="7782" fg:w="37"/><text x="12.1931%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (22 samples, 0.03%)</title><rect x="11.9661%" y="389" width="0.0338%" height="15" fill="rgb(244,19,51)" fg:x="7797" fg:w="22"/><text x="12.2161%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (44 samples, 0.07%)</title><rect x="11.9431%" y="469" width="0.0675%" height="15" fill="rgb(224,6,22)" fg:x="7782" fg:w="44"/><text x="12.1931%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (44 samples, 0.07%)</title><rect x="11.9431%" y="453" width="0.0675%" height="15" fill="rgb(224,145,5)" fg:x="7782" fg:w="44"/><text x="12.1931%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (19 samples, 0.03%)</title><rect x="12.0229%" y="405" width="0.0292%" height="15" fill="rgb(234,130,49)" fg:x="7834" fg:w="19"/><text x="12.2729%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (19 samples, 0.03%)</title><rect x="12.0229%" y="389" width="0.0292%" height="15" fill="rgb(254,6,2)" fg:x="7834" fg:w="19"/><text x="12.2729%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (21 samples, 0.03%)</title><rect x="12.0229%" y="421" width="0.0322%" height="15" fill="rgb(208,96,46)" fg:x="7834" fg:w="21"/><text x="12.2729%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (9 samples, 0.01%)</title><rect x="12.0613%" y="421" width="0.0138%" height="15" fill="rgb(239,3,39)" fg:x="7859" fg:w="9"/><text x="12.3113%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (9 samples, 0.01%)</title><rect x="12.0613%" y="405" width="0.0138%" height="15" fill="rgb(233,210,1)" fg:x="7859" fg:w="9"/><text x="12.3113%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.01%)</title><rect x="12.0613%" y="389" width="0.0138%" height="15" fill="rgb(244,137,37)" fg:x="7859" fg:w="9"/><text x="12.3113%" y="399.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (98 samples, 0.15%)</title><rect x="11.9339%" y="533" width="0.1504%" height="15" fill="rgb(240,136,2)" fg:x="7776" fg:w="98"/><text x="12.1839%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (98 samples, 0.15%)</title><rect x="11.9339%" y="517" width="0.1504%" height="15" fill="rgb(239,18,37)" fg:x="7776" fg:w="98"/><text x="12.1839%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (98 samples, 0.15%)</title><rect x="11.9339%" y="501" width="0.1504%" height="15" fill="rgb(218,185,22)" fg:x="7776" fg:w="98"/><text x="12.1839%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (98 samples, 0.15%)</title><rect x="11.9339%" y="485" width="0.1504%" height="15" fill="rgb(225,218,4)" fg:x="7776" fg:w="98"/><text x="12.1839%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (48 samples, 0.07%)</title><rect x="12.0106%" y="469" width="0.0737%" height="15" fill="rgb(230,182,32)" fg:x="7826" fg:w="48"/><text x="12.2606%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (48 samples, 0.07%)</title><rect x="12.0106%" y="453" width="0.0737%" height="15" fill="rgb(242,56,43)" fg:x="7826" fg:w="48"/><text x="12.2606%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (48 samples, 0.07%)</title><rect x="12.0106%" y="437" width="0.0737%" height="15" fill="rgb(233,99,24)" fg:x="7826" fg:w="48"/><text x="12.2606%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (108 samples, 0.17%)</title><rect x="11.9262%" y="549" width="0.1657%" height="15" fill="rgb(234,209,42)" fg:x="7771" fg:w="108"/><text x="12.1762%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.02%)</title><rect x="12.1104%" y="357" width="0.0169%" height="15" fill="rgb(227,7,12)" fg:x="7891" fg:w="11"/><text x="12.3604%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.03%)</title><rect x="12.0981%" y="421" width="0.0322%" height="15" fill="rgb(245,203,43)" fg:x="7883" fg:w="21"/><text x="12.3481%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21 samples, 0.03%)</title><rect x="12.0981%" y="405" width="0.0322%" height="15" fill="rgb(238,205,33)" fg:x="7883" fg:w="21"/><text x="12.3481%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21 samples, 0.03%)</title><rect x="12.0981%" y="389" width="0.0322%" height="15" fill="rgb(231,56,7)" fg:x="7883" fg:w="21"/><text x="12.3481%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.02%)</title><rect x="12.1073%" y="373" width="0.0230%" height="15" fill="rgb(244,186,29)" fg:x="7889" fg:w="15"/><text x="12.3573%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 0.04%)</title><rect x="12.0966%" y="453" width="0.0384%" height="15" fill="rgb(234,111,31)" fg:x="7882" fg:w="25"/><text x="12.3466%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (25 samples, 0.04%)</title><rect x="12.0966%" y="437" width="0.0384%" height="15" fill="rgb(241,149,10)" fg:x="7882" fg:w="25"/><text x="12.3466%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.01%)</title><rect x="12.1411%" y="389" width="0.0107%" height="15" fill="rgb(249,206,44)" fg:x="7911" fg:w="7"/><text x="12.3911%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (7 samples, 0.01%)</title><rect x="12.1411%" y="373" width="0.0107%" height="15" fill="rgb(251,153,30)" fg:x="7911" fg:w="7"/><text x="12.3911%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.01%)</title><rect x="12.1411%" y="405" width="0.0123%" height="15" fill="rgb(239,152,38)" fg:x="7911" fg:w="8"/><text x="12.3911%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (43 samples, 0.07%)</title><rect x="12.0966%" y="501" width="0.0660%" height="15" fill="rgb(249,139,47)" fg:x="7882" fg:w="43"/><text x="12.3466%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (43 samples, 0.07%)</title><rect x="12.0966%" y="485" width="0.0660%" height="15" fill="rgb(244,64,35)" fg:x="7882" fg:w="43"/><text x="12.3466%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (43 samples, 0.07%)</title><rect x="12.0966%" y="469" width="0.0660%" height="15" fill="rgb(216,46,15)" fg:x="7882" fg:w="43"/><text x="12.3466%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18 samples, 0.03%)</title><rect x="12.1349%" y="453" width="0.0276%" height="15" fill="rgb(250,74,19)" fg:x="7907" fg:w="18"/><text x="12.3849%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.03%)</title><rect x="12.1349%" y="437" width="0.0276%" height="15" fill="rgb(249,42,33)" fg:x="7907" fg:w="18"/><text x="12.3849%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (18 samples, 0.03%)</title><rect x="12.1349%" y="421" width="0.0276%" height="15" fill="rgb(242,149,17)" fg:x="7907" fg:w="18"/><text x="12.3849%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (25 samples, 0.04%)</title><rect x="12.1871%" y="357" width="0.0384%" height="15" fill="rgb(244,29,21)" fg:x="7941" fg:w="25"/><text x="12.4371%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (37 samples, 0.06%)</title><rect x="12.1718%" y="421" width="0.0568%" height="15" fill="rgb(220,130,37)" fg:x="7931" fg:w="37"/><text x="12.4218%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (37 samples, 0.06%)</title><rect x="12.1718%" y="405" width="0.0568%" height="15" fill="rgb(211,67,2)" fg:x="7931" fg:w="37"/><text x="12.4218%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (37 samples, 0.06%)</title><rect x="12.1718%" y="389" width="0.0568%" height="15" fill="rgb(235,68,52)" fg:x="7931" fg:w="37"/><text x="12.4218%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (30 samples, 0.05%)</title><rect x="12.1825%" y="373" width="0.0460%" height="15" fill="rgb(246,142,3)" fg:x="7938" fg:w="30"/><text x="12.4325%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (40 samples, 0.06%)</title><rect x="12.1718%" y="453" width="0.0614%" height="15" fill="rgb(241,25,7)" fg:x="7931" fg:w="40"/><text x="12.4218%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (40 samples, 0.06%)</title><rect x="12.1718%" y="437" width="0.0614%" height="15" fill="rgb(242,119,39)" fg:x="7931" fg:w="40"/><text x="12.4218%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (9 samples, 0.01%)</title><rect x="12.2439%" y="405" width="0.0138%" height="15" fill="rgb(241,98,45)" fg:x="7978" fg:w="9"/><text x="12.4939%" y="415.50"></text></g><g><title>hashbrown::raw::h2 (10 samples, 0.02%)</title><rect x="12.2577%" y="405" width="0.0153%" height="15" fill="rgb(254,28,30)" fg:x="7987" fg:w="10"/><text x="12.5077%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (81 samples, 0.12%)</title><rect x="12.1626%" y="501" width="0.1243%" height="15" fill="rgb(241,142,54)" fg:x="7925" fg:w="81"/><text x="12.4126%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (81 samples, 0.12%)</title><rect x="12.1626%" y="485" width="0.1243%" height="15" fill="rgb(222,85,15)" fg:x="7925" fg:w="81"/><text x="12.4126%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (79 samples, 0.12%)</title><rect x="12.1656%" y="469" width="0.1212%" height="15" fill="rgb(210,85,47)" fg:x="7927" fg:w="79"/><text x="12.4156%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (35 samples, 0.05%)</title><rect x="12.2332%" y="453" width="0.0537%" height="15" fill="rgb(224,206,25)" fg:x="7971" fg:w="35"/><text x="12.4832%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (35 samples, 0.05%)</title><rect x="12.2332%" y="437" width="0.0537%" height="15" fill="rgb(243,201,19)" fg:x="7971" fg:w="35"/><text x="12.4832%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (35 samples, 0.05%)</title><rect x="12.2332%" y="421" width="0.0537%" height="15" fill="rgb(236,59,4)" fg:x="7971" fg:w="35"/><text x="12.4832%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (16 samples, 0.02%)</title><rect x="12.2976%" y="485" width="0.0246%" height="15" fill="rgb(254,179,45)" fg:x="8013" fg:w="16"/><text x="12.5476%" y="495.50"></text></g><g><title>core::intrinsics::copy (16 samples, 0.02%)</title><rect x="12.2976%" y="469" width="0.0246%" height="15" fill="rgb(226,14,10)" fg:x="8013" fg:w="16"/><text x="12.5476%" y="479.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (15 samples, 0.02%)</title><rect x="12.2991%" y="453" width="0.0230%" height="15" fill="rgb(244,27,41)" fg:x="8014" fg:w="15"/><text x="12.5491%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (28 samples, 0.04%)</title><rect x="12.3498%" y="437" width="0.0430%" height="15" fill="rgb(235,35,32)" fg:x="8047" fg:w="28"/><text x="12.5998%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (20 samples, 0.03%)</title><rect x="12.3621%" y="421" width="0.0307%" height="15" fill="rgb(218,68,31)" fg:x="8055" fg:w="20"/><text x="12.6121%" y="431.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (20 samples, 0.03%)</title><rect x="12.3621%" y="405" width="0.0307%" height="15" fill="rgb(207,120,37)" fg:x="8055" fg:w="20"/><text x="12.6121%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.03%)</title><rect x="12.3621%" y="389" width="0.0307%" height="15" fill="rgb(227,98,0)" fg:x="8055" fg:w="20"/><text x="12.6121%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.03%)</title><rect x="12.3621%" y="373" width="0.0307%" height="15" fill="rgb(207,7,3)" fg:x="8055" fg:w="20"/><text x="12.6121%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (20 samples, 0.03%)</title><rect x="12.3621%" y="357" width="0.0307%" height="15" fill="rgb(206,98,19)" fg:x="8055" fg:w="20"/><text x="12.6121%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (56 samples, 0.09%)</title><rect x="12.3314%" y="485" width="0.0859%" height="15" fill="rgb(217,5,26)" fg:x="8035" fg:w="56"/><text x="12.5814%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (56 samples, 0.09%)</title><rect x="12.3314%" y="469" width="0.0859%" height="15" fill="rgb(235,190,38)" fg:x="8035" fg:w="56"/><text x="12.5814%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (56 samples, 0.09%)</title><rect x="12.3314%" y="453" width="0.0859%" height="15" fill="rgb(247,86,24)" fg:x="8035" fg:w="56"/><text x="12.5814%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="12.3928%" y="437" width="0.0246%" height="15" fill="rgb(205,101,16)" fg:x="8075" fg:w="16"/><text x="12.6428%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.02%)</title><rect x="12.4342%" y="341" width="0.0200%" height="15" fill="rgb(246,168,33)" fg:x="8102" fg:w="13"/><text x="12.6842%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.03%)</title><rect x="12.4265%" y="405" width="0.0338%" height="15" fill="rgb(231,114,1)" fg:x="8097" fg:w="22"/><text x="12.6765%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22 samples, 0.03%)</title><rect x="12.4265%" y="389" width="0.0338%" height="15" fill="rgb(207,184,53)" fg:x="8097" fg:w="22"/><text x="12.6765%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.03%)</title><rect x="12.4265%" y="373" width="0.0338%" height="15" fill="rgb(224,95,51)" fg:x="8097" fg:w="22"/><text x="12.6765%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.03%)</title><rect x="12.4327%" y="357" width="0.0276%" height="15" fill="rgb(212,188,45)" fg:x="8101" fg:w="18"/><text x="12.6827%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (24 samples, 0.04%)</title><rect x="12.4265%" y="437" width="0.0368%" height="15" fill="rgb(223,154,38)" fg:x="8097" fg:w="24"/><text x="12.6765%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24 samples, 0.04%)</title><rect x="12.4265%" y="421" width="0.0368%" height="15" fill="rgb(251,22,52)" fg:x="8097" fg:w="24"/><text x="12.6765%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.01%)</title><rect x="12.4802%" y="389" width="0.0123%" height="15" fill="rgb(229,209,22)" fg:x="8132" fg:w="8"/><text x="12.7302%" y="399.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (265 samples, 0.41%)</title><rect x="12.0920%" y="549" width="0.4067%" height="15" fill="rgb(234,138,34)" fg:x="7879" fg:w="265"/><text x="12.3420%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (265 samples, 0.41%)</title><rect x="12.0920%" y="533" width="0.4067%" height="15" fill="rgb(212,95,11)" fg:x="7879" fg:w="265"/><text x="12.3420%" y="543.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (265 samples, 0.41%)</title><rect x="12.0920%" y="517" width="0.4067%" height="15" fill="rgb(240,179,47)" fg:x="7879" fg:w="265"/><text x="12.3420%" y="527.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (138 samples, 0.21%)</title><rect x="12.2869%" y="501" width="0.2118%" height="15" fill="rgb(240,163,11)" fg:x="8006" fg:w="138"/><text x="12.5369%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (47 samples, 0.07%)</title><rect x="12.4265%" y="485" width="0.0721%" height="15" fill="rgb(236,37,12)" fg:x="8097" fg:w="47"/><text x="12.6765%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (47 samples, 0.07%)</title><rect x="12.4265%" y="469" width="0.0721%" height="15" fill="rgb(232,164,16)" fg:x="8097" fg:w="47"/><text x="12.6765%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (47 samples, 0.07%)</title><rect x="12.4265%" y="453" width="0.0721%" height="15" fill="rgb(244,205,15)" fg:x="8097" fg:w="47"/><text x="12.6765%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (23 samples, 0.04%)</title><rect x="12.4634%" y="437" width="0.0353%" height="15" fill="rgb(223,117,47)" fg:x="8121" fg:w="23"/><text x="12.7134%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (23 samples, 0.04%)</title><rect x="12.4634%" y="421" width="0.0353%" height="15" fill="rgb(244,107,35)" fg:x="8121" fg:w="23"/><text x="12.7134%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (23 samples, 0.04%)</title><rect x="12.4634%" y="405" width="0.0353%" height="15" fill="rgb(205,140,8)" fg:x="8121" fg:w="23"/><text x="12.7134%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (378 samples, 0.58%)</title><rect x="11.9201%" y="565" width="0.5801%" height="15" fill="rgb(228,84,46)" fg:x="7767" fg:w="378"/><text x="12.1701%" y="575.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.03%)</title><rect x="12.5247%" y="453" width="0.0338%" height="15" fill="rgb(254,188,9)" fg:x="8161" fg:w="22"/><text x="12.7747%" y="463.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.03%)</title><rect x="12.5247%" y="437" width="0.0338%" height="15" fill="rgb(206,112,54)" fg:x="8161" fg:w="22"/><text x="12.7747%" y="447.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.03%)</title><rect x="12.5247%" y="421" width="0.0338%" height="15" fill="rgb(216,84,49)" fg:x="8161" fg:w="22"/><text x="12.7747%" y="431.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.03%)</title><rect x="12.5247%" y="405" width="0.0338%" height="15" fill="rgb(214,194,35)" fg:x="8161" fg:w="22"/><text x="12.7747%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.03%)</title><rect x="12.5247%" y="389" width="0.0338%" height="15" fill="rgb(249,28,3)" fg:x="8161" fg:w="22"/><text x="12.7747%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (15 samples, 0.02%)</title><rect x="12.5355%" y="373" width="0.0230%" height="15" fill="rgb(222,56,52)" fg:x="8168" fg:w="15"/><text x="12.7855%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.04%)</title><rect x="12.5247%" y="469" width="0.0368%" height="15" fill="rgb(245,217,50)" fg:x="8161" fg:w="24"/><text x="12.7747%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.04%)</title><rect x="12.5247%" y="501" width="0.0384%" height="15" fill="rgb(213,201,24)" fg:x="8161" fg:w="25"/><text x="12.7747%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (25 samples, 0.04%)</title><rect x="12.5247%" y="485" width="0.0384%" height="15" fill="rgb(248,116,28)" fg:x="8161" fg:w="25"/><text x="12.7747%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="12.5631%" y="501" width="0.0169%" height="15" fill="rgb(219,72,43)" fg:x="8186" fg:w="11"/><text x="12.8131%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="12.5631%" y="485" width="0.0169%" height="15" fill="rgb(209,138,14)" fg:x="8186" fg:w="11"/><text x="12.8131%" y="495.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="12.5631%" y="469" width="0.0169%" height="15" fill="rgb(222,18,33)" fg:x="8186" fg:w="11"/><text x="12.8131%" y="479.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="12.5631%" y="453" width="0.0169%" height="15" fill="rgb(213,199,7)" fg:x="8186" fg:w="11"/><text x="12.8131%" y="463.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="12.5631%" y="437" width="0.0169%" height="15" fill="rgb(250,110,10)" fg:x="8186" fg:w="11"/><text x="12.8131%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="12.5631%" y="421" width="0.0169%" height="15" fill="rgb(248,123,6)" fg:x="8186" fg:w="11"/><text x="12.8131%" y="431.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.01%)</title><rect x="12.5815%" y="389" width="0.0107%" height="15" fill="rgb(206,91,31)" fg:x="8198" fg:w="7"/><text x="12.8315%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.02%)</title><rect x="12.5800%" y="501" width="0.0184%" height="15" fill="rgb(211,154,13)" fg:x="8197" fg:w="12"/><text x="12.8300%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="12.5800%" y="485" width="0.0184%" height="15" fill="rgb(225,148,7)" fg:x="8197" fg:w="12"/><text x="12.8300%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="12.5800%" y="469" width="0.0184%" height="15" fill="rgb(220,160,43)" fg:x="8197" fg:w="12"/><text x="12.8300%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.02%)</title><rect x="12.5800%" y="453" width="0.0184%" height="15" fill="rgb(213,52,39)" fg:x="8197" fg:w="12"/><text x="12.8300%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.02%)</title><rect x="12.5815%" y="437" width="0.0169%" height="15" fill="rgb(243,137,7)" fg:x="8198" fg:w="11"/><text x="12.8315%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.02%)</title><rect x="12.5815%" y="421" width="0.0169%" height="15" fill="rgb(230,79,13)" fg:x="8198" fg:w="11"/><text x="12.8315%" y="431.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.02%)</title><rect x="12.5815%" y="405" width="0.0169%" height="15" fill="rgb(247,105,23)" fg:x="8198" fg:w="11"/><text x="12.8315%" y="415.50"></text></g><g><title>core::cmp::max (7 samples, 0.01%)</title><rect x="12.5984%" y="501" width="0.0107%" height="15" fill="rgb(223,179,41)" fg:x="8209" fg:w="7"/><text x="12.8484%" y="511.50"></text></g><g><title>core::cmp::Ord::max (7 samples, 0.01%)</title><rect x="12.5984%" y="485" width="0.0107%" height="15" fill="rgb(218,9,34)" fg:x="8209" fg:w="7"/><text x="12.8484%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (70 samples, 0.11%)</title><rect x="12.5048%" y="565" width="0.1074%" height="15" fill="rgb(222,106,8)" fg:x="8148" fg:w="70"/><text x="12.7548%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (70 samples, 0.11%)</title><rect x="12.5048%" y="549" width="0.1074%" height="15" fill="rgb(211,220,0)" fg:x="8148" fg:w="70"/><text x="12.7548%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (68 samples, 0.10%)</title><rect x="12.5079%" y="533" width="0.1044%" height="15" fill="rgb(229,52,16)" fg:x="8150" fg:w="68"/><text x="12.7579%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (59 samples, 0.09%)</title><rect x="12.5217%" y="517" width="0.0905%" height="15" fill="rgb(212,155,18)" fg:x="8159" fg:w="59"/><text x="12.7717%" y="527.50"></text></g><g><title>__GI___libc_free (12 samples, 0.02%)</title><rect x="12.6122%" y="437" width="0.0184%" height="15" fill="rgb(242,21,14)" fg:x="8218" fg:w="12"/><text x="12.8622%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.05%)</title><rect x="12.6122%" y="469" width="0.0522%" height="15" fill="rgb(222,19,48)" fg:x="8218" fg:w="34"/><text x="12.8622%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.05%)</title><rect x="12.6122%" y="453" width="0.0522%" height="15" fill="rgb(232,45,27)" fg:x="8218" fg:w="34"/><text x="12.8622%" y="463.50"></text></g><g><title>_int_free (18 samples, 0.03%)</title><rect x="12.6368%" y="437" width="0.0276%" height="15" fill="rgb(249,103,42)" fg:x="8234" fg:w="18"/><text x="12.8868%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u32&gt;&gt; (35 samples, 0.05%)</title><rect x="12.6122%" y="565" width="0.0537%" height="15" fill="rgb(246,81,33)" fg:x="8218" fg:w="35"/><text x="12.8622%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.05%)</title><rect x="12.6122%" y="549" width="0.0537%" height="15" fill="rgb(252,33,42)" fg:x="8218" fg:w="35"/><text x="12.8622%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u32,alloc::alloc::Global&gt;&gt; (35 samples, 0.05%)</title><rect x="12.6122%" y="533" width="0.0537%" height="15" fill="rgb(209,212,41)" fg:x="8218" fg:w="35"/><text x="12.8622%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.05%)</title><rect x="12.6122%" y="517" width="0.0537%" height="15" fill="rgb(207,154,6)" fg:x="8218" fg:w="35"/><text x="12.8622%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (35 samples, 0.05%)</title><rect x="12.6122%" y="501" width="0.0537%" height="15" fill="rgb(223,64,47)" fg:x="8218" fg:w="35"/><text x="12.8622%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.05%)</title><rect x="12.6122%" y="485" width="0.0537%" height="15" fill="rgb(211,161,38)" fg:x="8218" fg:w="35"/><text x="12.8622%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (7 samples, 0.01%)</title><rect x="12.6767%" y="421" width="0.0107%" height="15" fill="rgb(219,138,40)" fg:x="8260" fg:w="7"/><text x="12.9267%" y="431.50"></text></g><g><title>core::intrinsics::write_bytes (7 samples, 0.01%)</title><rect x="12.6767%" y="405" width="0.0107%" height="15" fill="rgb(241,228,46)" fg:x="8260" fg:w="7"/><text x="12.9267%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (10 samples, 0.02%)</title><rect x="12.6751%" y="565" width="0.0153%" height="15" fill="rgb(223,209,38)" fg:x="8259" fg:w="10"/><text x="12.9251%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (10 samples, 0.02%)</title><rect x="12.6751%" y="549" width="0.0153%" height="15" fill="rgb(236,164,45)" fg:x="8259" fg:w="10"/><text x="12.9251%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (10 samples, 0.02%)</title><rect x="12.6751%" y="533" width="0.0153%" height="15" fill="rgb(231,15,5)" fg:x="8259" fg:w="10"/><text x="12.9251%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (10 samples, 0.02%)</title><rect x="12.6751%" y="517" width="0.0153%" height="15" fill="rgb(252,35,15)" fg:x="8259" fg:w="10"/><text x="12.9251%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(u32,())&gt;,hashbrown::raw::RawTable&lt;(u32,())&gt;::clear::{{closure}}&gt;&gt; (10 samples, 0.02%)</title><rect x="12.6751%" y="501" width="0.0153%" height="15" fill="rgb(248,181,18)" fg:x="8259" fg:w="10"/><text x="12.9251%" y="511.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="12.6751%" y="485" width="0.0153%" height="15" fill="rgb(233,39,42)" fg:x="8259" fg:w="10"/><text x="12.9251%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (10 samples, 0.02%)</title><rect x="12.6751%" y="469" width="0.0153%" height="15" fill="rgb(238,110,33)" fg:x="8259" fg:w="10"/><text x="12.9251%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (10 samples, 0.02%)</title><rect x="12.6751%" y="453" width="0.0153%" height="15" fill="rgb(233,195,10)" fg:x="8259" fg:w="10"/><text x="12.9251%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (10 samples, 0.02%)</title><rect x="12.6751%" y="437" width="0.0153%" height="15" fill="rgb(254,105,3)" fg:x="8259" fg:w="10"/><text x="12.9251%" y="447.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (1,052 samples, 1.61%)</title><rect x="12.7135%" y="549" width="1.6145%" height="15" fill="rgb(221,225,9)" fg:x="8284" fg:w="1052"/><text x="12.9635%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::seek (1,050 samples, 1.61%)</title><rect x="12.7166%" y="533" width="1.6114%" height="15" fill="rgb(224,227,45)" fg:x="8286" fg:w="1050"/><text x="12.9666%" y="543.50"></text></g><g><title>__lseek64 (1,035 samples, 1.59%)</title><rect x="12.7396%" y="517" width="1.5884%" height="15" fill="rgb(229,198,43)" fg:x="8301" fg:w="1035"/><text x="12.9896%" y="527.50"></text></g><g><title>[unknown] (1,007 samples, 1.55%)</title><rect x="12.7826%" y="501" width="1.5455%" height="15" fill="rgb(206,209,35)" fg:x="8329" fg:w="1007"/><text x="13.0326%" y="511.50"></text></g><g><title>[unknown] (725 samples, 1.11%)</title><rect x="13.2154%" y="485" width="1.1127%" height="15" fill="rgb(245,195,53)" fg:x="8611" fg:w="725"/><text x="13.4654%" y="495.50"></text></g><g><title>[unknown] (228 samples, 0.35%)</title><rect x="13.9781%" y="469" width="0.3499%" height="15" fill="rgb(240,92,26)" fg:x="9108" fg:w="228"/><text x="14.2281%" y="479.50"></text></g><g><title>[unknown] (222 samples, 0.34%)</title><rect x="13.9873%" y="453" width="0.3407%" height="15" fill="rgb(207,40,23)" fg:x="9114" fg:w="222"/><text x="14.2373%" y="463.50"></text></g><g><title>[unknown] (173 samples, 0.27%)</title><rect x="14.0625%" y="437" width="0.2655%" height="15" fill="rgb(223,111,35)" fg:x="9163" fg:w="173"/><text x="14.3125%" y="447.50"></text></g><g><title>[unknown] (102 samples, 0.16%)</title><rect x="14.1715%" y="421" width="0.1565%" height="15" fill="rgb(229,147,28)" fg:x="9234" fg:w="102"/><text x="14.4215%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (10 samples, 0.02%)</title><rect x="14.3326%" y="517" width="0.0153%" height="15" fill="rgb(211,29,28)" fg:x="9339" fg:w="10"/><text x="14.5826%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.02%)</title><rect x="14.3326%" y="501" width="0.0153%" height="15" fill="rgb(228,72,33)" fg:x="9339" fg:w="10"/><text x="14.5826%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::id (12 samples, 0.02%)</title><rect x="14.3311%" y="549" width="0.0184%" height="15" fill="rgb(205,214,31)" fg:x="9338" fg:w="12"/><text x="14.5811%" y="559.50"></text></g><g><title>yakvdb::disk::block::get_u32 (12 samples, 0.02%)</title><rect x="14.3311%" y="533" width="0.0184%" height="15" fill="rgb(224,111,15)" fg:x="9338" fg:w="12"/><text x="14.5811%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (58 samples, 0.09%)</title><rect x="14.3495%" y="549" width="0.0890%" height="15" fill="rgb(253,21,26)" fg:x="9350" fg:w="58"/><text x="14.5995%" y="559.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (58 samples, 0.09%)</title><rect x="14.3495%" y="533" width="0.0890%" height="15" fill="rgb(245,139,43)" fg:x="9350" fg:w="58"/><text x="14.5995%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (58 samples, 0.09%)</title><rect x="14.3495%" y="517" width="0.0890%" height="15" fill="rgb(252,170,7)" fg:x="9350" fg:w="58"/><text x="14.5995%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (58 samples, 0.09%)</title><rect x="14.3495%" y="501" width="0.0890%" height="15" fill="rgb(231,118,14)" fg:x="9350" fg:w="58"/><text x="14.5995%" y="511.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (58 samples, 0.09%)</title><rect x="14.3495%" y="485" width="0.0890%" height="15" fill="rgb(238,83,0)" fg:x="9350" fg:w="58"/><text x="14.5995%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (58 samples, 0.09%)</title><rect x="14.3495%" y="469" width="0.0890%" height="15" fill="rgb(221,39,39)" fg:x="9350" fg:w="58"/><text x="14.5995%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (58 samples, 0.09%)</title><rect x="14.3495%" y="453" width="0.0890%" height="15" fill="rgb(222,119,46)" fg:x="9350" fg:w="58"/><text x="14.5995%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (58 samples, 0.09%)</title><rect x="14.3495%" y="437" width="0.0890%" height="15" fill="rgb(222,165,49)" fg:x="9350" fg:w="58"/><text x="14.5995%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (58 samples, 0.09%)</title><rect x="14.3495%" y="421" width="0.0890%" height="15" fill="rgb(219,113,52)" fg:x="9350" fg:w="58"/><text x="14.5995%" y="431.50"></text></g><g><title>__libc_read (58 samples, 0.09%)</title><rect x="14.3495%" y="405" width="0.0890%" height="15" fill="rgb(214,7,15)" fg:x="9350" fg:w="58"/><text x="14.5995%" y="415.50"></text></g><g><title>[unknown] (58 samples, 0.09%)</title><rect x="14.3495%" y="389" width="0.0890%" height="15" fill="rgb(235,32,4)" fg:x="9350" fg:w="58"/><text x="14.5995%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::fs::File&gt;&gt; (31 samples, 0.05%)</title><rect x="14.4447%" y="549" width="0.0476%" height="15" fill="rgb(238,90,54)" fg:x="9412" fg:w="31"/><text x="14.6947%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (31 samples, 0.05%)</title><rect x="14.4447%" y="533" width="0.0476%" height="15" fill="rgb(213,208,19)" fg:x="9412" fg:w="31"/><text x="14.6947%" y="543.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (31 samples, 0.05%)</title><rect x="14.4447%" y="517" width="0.0476%" height="15" fill="rgb(233,156,4)" fg:x="9412" fg:w="31"/><text x="14.6947%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (31 samples, 0.05%)</title><rect x="14.4447%" y="501" width="0.0476%" height="15" fill="rgb(207,194,5)" fg:x="9412" fg:w="31"/><text x="14.6947%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (31 samples, 0.05%)</title><rect x="14.4447%" y="485" width="0.0476%" height="15" fill="rgb(206,111,30)" fg:x="9412" fg:w="31"/><text x="14.6947%" y="495.50"></text></g><g><title>core::mem::replace (31 samples, 0.05%)</title><rect x="14.4447%" y="469" width="0.0476%" height="15" fill="rgb(243,70,54)" fg:x="9412" fg:w="31"/><text x="14.6947%" y="479.50"></text></g><g><title>core::ptr::write (31 samples, 0.05%)</title><rect x="14.4447%" y="453" width="0.0476%" height="15" fill="rgb(242,28,8)" fg:x="9412" fg:w="31"/><text x="14.6947%" y="463.50"></text></g><g><title>__libc_write (8,088 samples, 12.41%)</title><rect x="14.5475%" y="485" width="12.4127%" height="15" fill="rgb(219,106,18)" fg:x="9479" fg:w="8088"/><text x="14.7975%" y="495.50">__libc_write</text></g><g><title>[unknown] (8,046 samples, 12.35%)</title><rect x="14.6119%" y="469" width="12.3483%" height="15" fill="rgb(244,222,10)" fg:x="9521" fg:w="8046"/><text x="14.8619%" y="479.50">[unknown]</text></g><g><title>[unknown] (7,733 samples, 11.87%)</title><rect x="15.0923%" y="453" width="11.8679%" height="15" fill="rgb(236,179,52)" fg:x="9834" fg:w="7733"/><text x="15.3423%" y="463.50">[unknown]</text></g><g><title>[unknown] (7,163 samples, 10.99%)</title><rect x="15.9671%" y="437" width="10.9931%" height="15" fill="rgb(213,23,39)" fg:x="10404" fg:w="7163"/><text x="16.2171%" y="447.50">[unknown]</text></g><g><title>[unknown] (7,142 samples, 10.96%)</title><rect x="15.9993%" y="421" width="10.9609%" height="15" fill="rgb(238,48,10)" fg:x="10425" fg:w="7142"/><text x="16.2493%" y="431.50">[unknown]</text></g><g><title>[unknown] (7,107 samples, 10.91%)</title><rect x="16.0530%" y="405" width="10.9072%" height="15" fill="rgb(251,196,23)" fg:x="10460" fg:w="7107"/><text x="16.3030%" y="415.50">[unknown]</text></g><g><title>[unknown] (7,014 samples, 10.76%)</title><rect x="16.1958%" y="389" width="10.7644%" height="15" fill="rgb(250,152,24)" fg:x="10553" fg:w="7014"/><text x="16.4458%" y="399.50">[unknown]</text></g><g><title>[unknown] (6,763 samples, 10.38%)</title><rect x="16.5810%" y="373" width="10.3792%" height="15" fill="rgb(209,150,17)" fg:x="10804" fg:w="6763"/><text x="16.8310%" y="383.50">[unknown]</text></g><g><title>[unknown] (6,167 samples, 9.46%)</title><rect x="17.4957%" y="357" width="9.4645%" height="15" fill="rgb(234,202,34)" fg:x="11400" fg:w="6167"/><text x="17.7457%" y="367.50">[unknown]</text></g><g><title>[unknown] (5,773 samples, 8.86%)</title><rect x="18.1003%" y="341" width="8.8599%" height="15" fill="rgb(253,148,53)" fg:x="11794" fg:w="5773"/><text x="18.3503%" y="351.50">[unknown]</text></g><g><title>[unknown] (5,361 samples, 8.23%)</title><rect x="18.7326%" y="325" width="8.2276%" height="15" fill="rgb(218,129,16)" fg:x="12206" fg:w="5361"/><text x="18.9826%" y="335.50">[unknown]</text></g><g><title>[unknown] (4,835 samples, 7.42%)</title><rect x="19.5399%" y="309" width="7.4203%" height="15" fill="rgb(216,85,19)" fg:x="12732" fg:w="4835"/><text x="19.7899%" y="319.50">[unknown]</text></g><g><title>[unknown] (4,203 samples, 6.45%)</title><rect x="20.5098%" y="293" width="6.4504%" height="15" fill="rgb(235,228,7)" fg:x="13364" fg:w="4203"/><text x="20.7598%" y="303.50">[unknown]</text></g><g><title>[unknown] (3,029 samples, 4.65%)</title><rect x="22.3116%" y="277" width="4.6486%" height="15" fill="rgb(245,175,0)" fg:x="14538" fg:w="3029"/><text x="22.5616%" y="287.50">[unkn..</text></g><g><title>[unknown] (2,602 samples, 3.99%)</title><rect x="22.9669%" y="261" width="3.9933%" height="15" fill="rgb(208,168,36)" fg:x="14965" fg:w="2602"/><text x="23.2169%" y="271.50">[unk..</text></g><g><title>[unknown] (1,599 samples, 2.45%)</title><rect x="24.5062%" y="245" width="2.4540%" height="15" fill="rgb(246,171,24)" fg:x="15968" fg:w="1599"/><text x="24.7562%" y="255.50">[u..</text></g><g><title>[unknown] (1,091 samples, 1.67%)</title><rect x="25.2858%" y="229" width="1.6744%" height="15" fill="rgb(215,142,24)" fg:x="16476" fg:w="1091"/><text x="25.5358%" y="239.50"></text></g><g><title>[unknown] (792 samples, 1.22%)</title><rect x="25.7447%" y="213" width="1.2155%" height="15" fill="rgb(250,187,7)" fg:x="16775" fg:w="792"/><text x="25.9947%" y="223.50"></text></g><g><title>[unknown] (732 samples, 1.12%)</title><rect x="25.8368%" y="197" width="1.1234%" height="15" fill="rgb(228,66,33)" fg:x="16835" fg:w="732"/><text x="26.0868%" y="207.50"></text></g><g><title>[unknown] (408 samples, 0.63%)</title><rect x="26.3340%" y="181" width="0.6262%" height="15" fill="rgb(234,215,21)" fg:x="17159" fg:w="408"/><text x="26.5840%" y="191.50"></text></g><g><title>[unknown] (265 samples, 0.41%)</title><rect x="26.5535%" y="165" width="0.4067%" height="15" fill="rgb(222,191,20)" fg:x="17302" fg:w="265"/><text x="26.8035%" y="175.50"></text></g><g><title>[unknown] (145 samples, 0.22%)</title><rect x="26.7377%" y="149" width="0.2225%" height="15" fill="rgb(245,79,54)" fg:x="17422" fg:w="145"/><text x="26.9877%" y="159.50"></text></g><g><title>[unknown] (22 samples, 0.03%)</title><rect x="26.9264%" y="133" width="0.0338%" height="15" fill="rgb(240,10,37)" fg:x="17545" fg:w="22"/><text x="27.1764%" y="143.50"></text></g><g><title>[unknown] (17 samples, 0.03%)</title><rect x="26.9341%" y="117" width="0.0261%" height="15" fill="rgb(214,192,32)" fg:x="17550" fg:w="17"/><text x="27.1841%" y="127.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="26.9372%" y="101" width="0.0230%" height="15" fill="rgb(209,36,54)" fg:x="17552" fg:w="15"/><text x="27.1872%" y="111.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="26.9387%" y="85" width="0.0215%" height="15" fill="rgb(220,10,11)" fg:x="17553" fg:w="14"/><text x="27.1887%" y="95.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="26.9418%" y="69" width="0.0184%" height="15" fill="rgb(221,106,17)" fg:x="17555" fg:w="12"/><text x="27.1918%" y="79.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="26.9464%" y="53" width="0.0138%" height="15" fill="rgb(251,142,44)" fg:x="17558" fg:w="9"/><text x="27.1964%" y="63.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="26.9495%" y="37" width="0.0107%" height="15" fill="rgb(238,13,15)" fg:x="17560" fg:w="7"/><text x="27.1995%" y="47.50"></text></g><g><title>std::io::Write::write_all (8,135 samples, 12.48%)</title><rect x="14.4922%" y="549" width="12.4848%" height="15" fill="rgb(208,107,27)" fg:x="9443" fg:w="8135"/><text x="14.7422%" y="559.50">std::io::Write::wri..</text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (8,103 samples, 12.44%)</title><rect x="14.5414%" y="533" width="12.4357%" height="15" fill="rgb(205,136,37)" fg:x="9475" fg:w="8103"/><text x="14.7914%" y="543.50">std::os::unix::net:..</text></g><g><title>std::sys::unix::net::Socket::write (8,103 samples, 12.44%)</title><rect x="14.5414%" y="517" width="12.4357%" height="15" fill="rgb(250,205,27)" fg:x="9475" fg:w="8103"/><text x="14.7914%" y="527.50">std::sys::unix::net..</text></g><g><title>std::sys::unix::fd::FileDesc::write (8,103 samples, 12.44%)</title><rect x="14.5414%" y="501" width="12.4357%" height="15" fill="rgb(210,80,43)" fg:x="9475" fg:w="8103"/><text x="14.7914%" y="511.50">std::sys::unix::fd:..</text></g><g><title>std::sys::unix::cvt (11 samples, 0.02%)</title><rect x="26.9602%" y="485" width="0.0169%" height="15" fill="rgb(247,160,36)" fg:x="17567" fg:w="11"/><text x="27.2102%" y="495.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (11 samples, 0.02%)</title><rect x="26.9602%" y="469" width="0.0169%" height="15" fill="rgb(234,13,49)" fg:x="17567" fg:w="11"/><text x="27.2102%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::flush (9,862 samples, 15.14%)</title><rect x="11.8495%" y="581" width="15.1353%" height="15" fill="rgb(234,122,0)" fg:x="7721" fg:w="9862"/><text x="12.0995%" y="591.50">&lt;yakvdb::disk::file::Fi..</text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::save (9,311 samples, 14.29%)</title><rect x="12.6951%" y="565" width="14.2897%" height="15" fill="rgb(207,146,38)" fg:x="8272" fg:w="9311"/><text x="12.9451%" y="575.50">yakvdb::disk::file::Fi..</text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.02%)</title><rect x="27.0001%" y="389" width="0.0230%" height="15" fill="rgb(207,177,25)" fg:x="17593" fg:w="15"/><text x="27.2501%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.03%)</title><rect x="26.9909%" y="453" width="0.0338%" height="15" fill="rgb(211,178,42)" fg:x="17587" fg:w="22"/><text x="27.2409%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22 samples, 0.03%)</title><rect x="26.9909%" y="437" width="0.0338%" height="15" fill="rgb(230,69,54)" fg:x="17587" fg:w="22"/><text x="27.2409%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.03%)</title><rect x="26.9909%" y="421" width="0.0338%" height="15" fill="rgb(214,135,41)" fg:x="17587" fg:w="22"/><text x="27.2409%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19 samples, 0.03%)</title><rect x="26.9955%" y="405" width="0.0292%" height="15" fill="rgb(237,67,25)" fg:x="17590" fg:w="19"/><text x="27.2455%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (26 samples, 0.04%)</title><rect x="26.9894%" y="485" width="0.0399%" height="15" fill="rgb(222,189,50)" fg:x="17586" fg:w="26"/><text x="27.2394%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 0.04%)</title><rect x="26.9894%" y="469" width="0.0399%" height="15" fill="rgb(245,148,34)" fg:x="17586" fg:w="26"/><text x="27.2394%" y="479.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (11 samples, 0.02%)</title><rect x="27.0415%" y="421" width="0.0169%" height="15" fill="rgb(222,29,6)" fg:x="17620" fg:w="11"/><text x="27.2915%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (11 samples, 0.02%)</title><rect x="27.0415%" y="405" width="0.0169%" height="15" fill="rgb(221,189,43)" fg:x="17620" fg:w="11"/><text x="27.2915%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.02%)</title><rect x="27.0415%" y="437" width="0.0184%" height="15" fill="rgb(207,36,27)" fg:x="17620" fg:w="12"/><text x="27.2915%" y="447.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (57 samples, 0.09%)</title><rect x="26.9863%" y="549" width="0.0875%" height="15" fill="rgb(217,90,24)" fg:x="17584" fg:w="57"/><text x="27.2363%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (57 samples, 0.09%)</title><rect x="26.9863%" y="533" width="0.0875%" height="15" fill="rgb(224,66,35)" fg:x="17584" fg:w="57"/><text x="27.2363%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (57 samples, 0.09%)</title><rect x="26.9863%" y="517" width="0.0875%" height="15" fill="rgb(221,13,50)" fg:x="17584" fg:w="57"/><text x="27.2363%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (57 samples, 0.09%)</title><rect x="26.9863%" y="501" width="0.0875%" height="15" fill="rgb(236,68,49)" fg:x="17584" fg:w="57"/><text x="27.2363%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (29 samples, 0.04%)</title><rect x="27.0293%" y="485" width="0.0445%" height="15" fill="rgb(229,146,28)" fg:x="17612" fg:w="29"/><text x="27.2793%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (29 samples, 0.04%)</title><rect x="27.0293%" y="469" width="0.0445%" height="15" fill="rgb(225,31,38)" fg:x="17612" fg:w="29"/><text x="27.2793%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (29 samples, 0.04%)</title><rect x="27.0293%" y="453" width="0.0445%" height="15" fill="rgb(250,208,3)" fg:x="17612" fg:w="29"/><text x="27.2793%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (61 samples, 0.09%)</title><rect x="26.9848%" y="565" width="0.0936%" height="15" fill="rgb(246,54,23)" fg:x="17583" fg:w="61"/><text x="27.2348%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.02%)</title><rect x="27.0876%" y="437" width="0.0169%" height="15" fill="rgb(243,76,11)" fg:x="17650" fg:w="11"/><text x="27.3376%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.02%)</title><rect x="27.0876%" y="421" width="0.0169%" height="15" fill="rgb(245,21,50)" fg:x="17650" fg:w="11"/><text x="27.3376%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.02%)</title><rect x="27.0876%" y="405" width="0.0169%" height="15" fill="rgb(228,9,43)" fg:x="17650" fg:w="11"/><text x="27.3376%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="27.0937%" y="389" width="0.0107%" height="15" fill="rgb(208,100,47)" fg:x="17654" fg:w="7"/><text x="27.3437%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.02%)</title><rect x="27.0861%" y="469" width="0.0230%" height="15" fill="rgb(232,26,8)" fg:x="17649" fg:w="15"/><text x="27.3361%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.02%)</title><rect x="27.0861%" y="453" width="0.0230%" height="15" fill="rgb(216,166,38)" fg:x="17649" fg:w="15"/><text x="27.3361%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (33 samples, 0.05%)</title><rect x="27.0830%" y="517" width="0.0506%" height="15" fill="rgb(251,202,51)" fg:x="17647" fg:w="33"/><text x="27.3330%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (33 samples, 0.05%)</title><rect x="27.0830%" y="501" width="0.0506%" height="15" fill="rgb(254,216,34)" fg:x="17647" fg:w="33"/><text x="27.3330%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (33 samples, 0.05%)</title><rect x="27.0830%" y="485" width="0.0506%" height="15" fill="rgb(251,32,27)" fg:x="17647" fg:w="33"/><text x="27.3330%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (16 samples, 0.02%)</title><rect x="27.1091%" y="469" width="0.0246%" height="15" fill="rgb(208,127,28)" fg:x="17664" fg:w="16"/><text x="27.3591%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.02%)</title><rect x="27.1091%" y="453" width="0.0246%" height="15" fill="rgb(224,137,22)" fg:x="17664" fg:w="16"/><text x="27.3591%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (16 samples, 0.02%)</title><rect x="27.1091%" y="437" width="0.0246%" height="15" fill="rgb(254,70,32)" fg:x="17664" fg:w="16"/><text x="27.3591%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (24 samples, 0.04%)</title><rect x="27.1367%" y="469" width="0.0368%" height="15" fill="rgb(229,75,37)" fg:x="17682" fg:w="24"/><text x="27.3867%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24 samples, 0.04%)</title><rect x="27.1367%" y="453" width="0.0368%" height="15" fill="rgb(252,64,23)" fg:x="17682" fg:w="24"/><text x="27.3867%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (24 samples, 0.04%)</title><rect x="27.1367%" y="437" width="0.0368%" height="15" fill="rgb(232,162,48)" fg:x="17682" fg:w="24"/><text x="27.3867%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (24 samples, 0.04%)</title><rect x="27.1367%" y="421" width="0.0368%" height="15" fill="rgb(246,160,12)" fg:x="17682" fg:w="24"/><text x="27.3867%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (24 samples, 0.04%)</title><rect x="27.1367%" y="405" width="0.0368%" height="15" fill="rgb(247,166,0)" fg:x="17682" fg:w="24"/><text x="27.3867%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.03%)</title><rect x="27.1459%" y="389" width="0.0276%" height="15" fill="rgb(249,219,21)" fg:x="17688" fg:w="18"/><text x="27.3959%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.03%)</title><rect x="27.1474%" y="373" width="0.0261%" height="15" fill="rgb(205,209,3)" fg:x="17689" fg:w="17"/><text x="27.3974%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (36 samples, 0.06%)</title><rect x="27.1336%" y="517" width="0.0552%" height="15" fill="rgb(243,44,1)" fg:x="17680" fg:w="36"/><text x="27.3836%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (36 samples, 0.06%)</title><rect x="27.1336%" y="501" width="0.0552%" height="15" fill="rgb(206,159,16)" fg:x="17680" fg:w="36"/><text x="27.3836%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.06%)</title><rect x="27.1336%" y="485" width="0.0552%" height="15" fill="rgb(244,77,30)" fg:x="17680" fg:w="36"/><text x="27.3836%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.02%)</title><rect x="27.1735%" y="469" width="0.0153%" height="15" fill="rgb(218,69,12)" fg:x="17706" fg:w="10"/><text x="27.4235%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.02%)</title><rect x="27.1735%" y="453" width="0.0153%" height="15" fill="rgb(212,87,7)" fg:x="17706" fg:w="10"/><text x="27.4235%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.02%)</title><rect x="27.1735%" y="437" width="0.0153%" height="15" fill="rgb(245,114,25)" fg:x="17706" fg:w="10"/><text x="27.4235%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (7 samples, 0.01%)</title><rect x="27.1935%" y="501" width="0.0107%" height="15" fill="rgb(210,61,42)" fg:x="17719" fg:w="7"/><text x="27.4435%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (16 samples, 0.02%)</title><rect x="27.2165%" y="453" width="0.0246%" height="15" fill="rgb(211,52,33)" fg:x="17734" fg:w="16"/><text x="27.4665%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (10 samples, 0.02%)</title><rect x="27.2257%" y="437" width="0.0153%" height="15" fill="rgb(234,58,33)" fg:x="17740" fg:w="10"/><text x="27.4757%" y="447.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (10 samples, 0.02%)</title><rect x="27.2257%" y="421" width="0.0153%" height="15" fill="rgb(220,115,36)" fg:x="17740" fg:w="10"/><text x="27.4757%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (10 samples, 0.02%)</title><rect x="27.2257%" y="405" width="0.0153%" height="15" fill="rgb(243,153,54)" fg:x="17740" fg:w="10"/><text x="27.4757%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (10 samples, 0.02%)</title><rect x="27.2257%" y="389" width="0.0153%" height="15" fill="rgb(251,47,18)" fg:x="17740" fg:w="10"/><text x="27.4757%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (10 samples, 0.02%)</title><rect x="27.2257%" y="373" width="0.0153%" height="15" fill="rgb(242,102,42)" fg:x="17740" fg:w="10"/><text x="27.4757%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (39 samples, 0.06%)</title><rect x="27.2058%" y="501" width="0.0599%" height="15" fill="rgb(234,31,38)" fg:x="17727" fg:w="39"/><text x="27.4558%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 0.06%)</title><rect x="27.2058%" y="485" width="0.0599%" height="15" fill="rgb(221,117,51)" fg:x="17727" fg:w="39"/><text x="27.4558%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (39 samples, 0.06%)</title><rect x="27.2058%" y="469" width="0.0599%" height="15" fill="rgb(212,20,18)" fg:x="17727" fg:w="39"/><text x="27.4558%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="27.2411%" y="453" width="0.0246%" height="15" fill="rgb(245,133,36)" fg:x="17750" fg:w="16"/><text x="27.4911%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.02%)</title><rect x="27.2794%" y="357" width="0.0169%" height="15" fill="rgb(212,6,19)" fg:x="17775" fg:w="11"/><text x="27.5294%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="27.2748%" y="421" width="0.0230%" height="15" fill="rgb(218,1,36)" fg:x="17772" fg:w="15"/><text x="27.5248%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="27.2748%" y="405" width="0.0230%" height="15" fill="rgb(246,84,54)" fg:x="17772" fg:w="15"/><text x="27.5248%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="27.2748%" y="389" width="0.0230%" height="15" fill="rgb(242,110,6)" fg:x="17772" fg:w="15"/><text x="27.5248%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.02%)</title><rect x="27.2764%" y="373" width="0.0215%" height="15" fill="rgb(214,47,5)" fg:x="17773" fg:w="14"/><text x="27.5264%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.03%)</title><rect x="27.2718%" y="453" width="0.0322%" height="15" fill="rgb(218,159,25)" fg:x="17770" fg:w="21"/><text x="27.5218%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.03%)</title><rect x="27.2718%" y="437" width="0.0322%" height="15" fill="rgb(215,211,28)" fg:x="17770" fg:w="21"/><text x="27.5218%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (223 samples, 0.34%)</title><rect x="26.9848%" y="581" width="0.3422%" height="15" fill="rgb(238,59,32)" fg:x="17583" fg:w="223"/><text x="27.2348%" y="591.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (162 samples, 0.25%)</title><rect x="27.0784%" y="565" width="0.2486%" height="15" fill="rgb(226,82,3)" fg:x="17644" fg:w="162"/><text x="27.3284%" y="575.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (162 samples, 0.25%)</title><rect x="27.0784%" y="549" width="0.2486%" height="15" fill="rgb(240,164,32)" fg:x="17644" fg:w="162"/><text x="27.3284%" y="559.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (162 samples, 0.25%)</title><rect x="27.0784%" y="533" width="0.2486%" height="15" fill="rgb(232,46,7)" fg:x="17644" fg:w="162"/><text x="27.3284%" y="543.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (90 samples, 0.14%)</title><rect x="27.1889%" y="517" width="0.1381%" height="15" fill="rgb(229,129,53)" fg:x="17716" fg:w="90"/><text x="27.4389%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (37 samples, 0.06%)</title><rect x="27.2702%" y="501" width="0.0568%" height="15" fill="rgb(234,188,29)" fg:x="17769" fg:w="37"/><text x="27.5202%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (37 samples, 0.06%)</title><rect x="27.2702%" y="485" width="0.0568%" height="15" fill="rgb(246,141,4)" fg:x="17769" fg:w="37"/><text x="27.5202%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (37 samples, 0.06%)</title><rect x="27.2702%" y="469" width="0.0568%" height="15" fill="rgb(229,23,39)" fg:x="17769" fg:w="37"/><text x="27.5202%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.02%)</title><rect x="27.3040%" y="453" width="0.0230%" height="15" fill="rgb(206,12,3)" fg:x="17791" fg:w="15"/><text x="27.5540%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.02%)</title><rect x="27.3040%" y="437" width="0.0230%" height="15" fill="rgb(252,226,20)" fg:x="17791" fg:w="15"/><text x="27.5540%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.02%)</title><rect x="27.3040%" y="421" width="0.0230%" height="15" fill="rgb(216,123,35)" fg:x="17791" fg:w="15"/><text x="27.5540%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (53 samples, 0.08%)</title><rect x="27.3838%" y="389" width="0.0813%" height="15" fill="rgb(212,68,40)" fg:x="17843" fg:w="53"/><text x="27.6338%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (74 samples, 0.11%)</title><rect x="27.3608%" y="453" width="0.1136%" height="15" fill="rgb(254,125,32)" fg:x="17828" fg:w="74"/><text x="27.6108%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (74 samples, 0.11%)</title><rect x="27.3608%" y="437" width="0.1136%" height="15" fill="rgb(253,97,22)" fg:x="17828" fg:w="74"/><text x="27.6108%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (74 samples, 0.11%)</title><rect x="27.3608%" y="421" width="0.1136%" height="15" fill="rgb(241,101,14)" fg:x="17828" fg:w="74"/><text x="27.6108%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (64 samples, 0.10%)</title><rect x="27.3761%" y="405" width="0.0982%" height="15" fill="rgb(238,103,29)" fg:x="17838" fg:w="64"/><text x="27.6261%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (77 samples, 0.12%)</title><rect x="27.3592%" y="485" width="0.1182%" height="15" fill="rgb(233,195,47)" fg:x="17827" fg:w="77"/><text x="27.6092%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (77 samples, 0.12%)</title><rect x="27.3592%" y="469" width="0.1182%" height="15" fill="rgb(246,218,30)" fg:x="17827" fg:w="77"/><text x="27.6092%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="27.4897%" y="437" width="0.0169%" height="15" fill="rgb(219,145,47)" fg:x="17912" fg:w="11"/><text x="27.7397%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (11 samples, 0.02%)</title><rect x="27.4897%" y="421" width="0.0169%" height="15" fill="rgb(243,12,26)" fg:x="17912" fg:w="11"/><text x="27.7397%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (18 samples, 0.03%)</title><rect x="27.5081%" y="421" width="0.0276%" height="15" fill="rgb(214,87,16)" fg:x="17924" fg:w="18"/><text x="27.7581%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (18 samples, 0.03%)</title><rect x="27.5081%" y="405" width="0.0276%" height="15" fill="rgb(208,99,42)" fg:x="17924" fg:w="18"/><text x="27.7581%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (22 samples, 0.03%)</title><rect x="27.5081%" y="437" width="0.0338%" height="15" fill="rgb(253,99,2)" fg:x="17924" fg:w="22"/><text x="27.7581%" y="447.50"></text></g><g><title>hashbrown::raw::h2 (7 samples, 0.01%)</title><rect x="27.5419%" y="437" width="0.0107%" height="15" fill="rgb(220,168,23)" fg:x="17946" fg:w="7"/><text x="27.7919%" y="447.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (138 samples, 0.21%)</title><rect x="27.3531%" y="549" width="0.2118%" height="15" fill="rgb(242,38,24)" fg:x="17823" fg:w="138"/><text x="27.6031%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (138 samples, 0.21%)</title><rect x="27.3531%" y="533" width="0.2118%" height="15" fill="rgb(225,182,9)" fg:x="17823" fg:w="138"/><text x="27.6031%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (138 samples, 0.21%)</title><rect x="27.3531%" y="517" width="0.2118%" height="15" fill="rgb(243,178,37)" fg:x="17823" fg:w="138"/><text x="27.6031%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (138 samples, 0.21%)</title><rect x="27.3531%" y="501" width="0.2118%" height="15" fill="rgb(232,139,19)" fg:x="17823" fg:w="138"/><text x="27.6031%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (57 samples, 0.09%)</title><rect x="27.4774%" y="485" width="0.0875%" height="15" fill="rgb(225,201,24)" fg:x="17904" fg:w="57"/><text x="27.7274%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (57 samples, 0.09%)</title><rect x="27.4774%" y="469" width="0.0875%" height="15" fill="rgb(221,47,46)" fg:x="17904" fg:w="57"/><text x="27.7274%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (57 samples, 0.09%)</title><rect x="27.4774%" y="453" width="0.0875%" height="15" fill="rgb(249,23,13)" fg:x="17904" fg:w="57"/><text x="27.7274%" y="463.50"></text></g><g><title>__GI___libc_free (19 samples, 0.03%)</title><rect x="27.5772%" y="485" width="0.0292%" height="15" fill="rgb(219,9,5)" fg:x="17969" fg:w="19"/><text x="27.8272%" y="495.50"></text></g><g><title>__rdl_dealloc (9 samples, 0.01%)</title><rect x="27.6063%" y="485" width="0.0138%" height="15" fill="rgb(254,171,16)" fg:x="17988" fg:w="9"/><text x="27.8563%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (9 samples, 0.01%)</title><rect x="27.6063%" y="469" width="0.0138%" height="15" fill="rgb(230,171,20)" fg:x="17988" fg:w="9"/><text x="27.8563%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;yakvdb::disk::block::Block&gt;&gt; (111 samples, 0.17%)</title><rect x="27.5710%" y="533" width="0.1704%" height="15" fill="rgb(210,71,41)" fg:x="17965" fg:w="111"/><text x="27.8210%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;yakvdb::disk::block::Block&gt; (109 samples, 0.17%)</title><rect x="27.5741%" y="517" width="0.1673%" height="15" fill="rgb(206,173,20)" fg:x="17967" fg:w="109"/><text x="27.8241%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (109 samples, 0.17%)</title><rect x="27.5741%" y="501" width="0.1673%" height="15" fill="rgb(233,88,34)" fg:x="17967" fg:w="109"/><text x="27.8241%" y="511.50"></text></g><g><title>_int_free (77 samples, 0.12%)</title><rect x="27.6232%" y="485" width="0.1182%" height="15" fill="rgb(223,209,46)" fg:x="17999" fg:w="77"/><text x="27.8732%" y="495.50"></text></g><g><title>unlink_chunk.isra.0 (12 samples, 0.02%)</title><rect x="27.7230%" y="469" width="0.0184%" height="15" fill="rgb(250,43,18)" fg:x="18064" fg:w="12"/><text x="27.9730%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.02%)</title><rect x="27.7613%" y="405" width="0.0153%" height="15" fill="rgb(208,13,10)" fg:x="18089" fg:w="10"/><text x="28.0113%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="27.7521%" y="469" width="0.0261%" height="15" fill="rgb(212,200,36)" fg:x="18083" fg:w="17"/><text x="28.0021%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="27.7521%" y="453" width="0.0261%" height="15" fill="rgb(225,90,30)" fg:x="18083" fg:w="17"/><text x="28.0021%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="27.7521%" y="437" width="0.0261%" height="15" fill="rgb(236,182,39)" fg:x="18083" fg:w="17"/><text x="28.0021%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.02%)</title><rect x="27.7583%" y="421" width="0.0200%" height="15" fill="rgb(212,144,35)" fg:x="18087" fg:w="13"/><text x="28.0083%" y="431.50"></text></g><g><title>hashbrown::map::make_insert_hash (20 samples, 0.03%)</title><rect x="27.7506%" y="501" width="0.0307%" height="15" fill="rgb(228,63,44)" fg:x="18082" fg:w="20"/><text x="28.0006%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20 samples, 0.03%)</title><rect x="27.7506%" y="485" width="0.0307%" height="15" fill="rgb(228,109,6)" fg:x="18082" fg:w="20"/><text x="28.0006%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (12 samples, 0.02%)</title><rect x="27.7813%" y="501" width="0.0184%" height="15" fill="rgb(238,117,24)" fg:x="18102" fg:w="12"/><text x="28.0313%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.02%)</title><rect x="27.7813%" y="485" width="0.0184%" height="15" fill="rgb(242,26,26)" fg:x="18102" fg:w="12"/><text x="28.0313%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.02%)</title><rect x="27.7813%" y="469" width="0.0184%" height="15" fill="rgb(221,92,48)" fg:x="18102" fg:w="12"/><text x="28.0313%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (7 samples, 0.01%)</title><rect x="27.8012%" y="485" width="0.0107%" height="15" fill="rgb(209,209,32)" fg:x="18115" fg:w="7"/><text x="28.0512%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (7 samples, 0.01%)</title><rect x="27.8012%" y="469" width="0.0107%" height="15" fill="rgb(221,70,22)" fg:x="18115" fg:w="7"/><text x="28.0512%" y="479.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="27.8012%" y="453" width="0.0107%" height="15" fill="rgb(248,145,5)" fg:x="18115" fg:w="7"/><text x="28.0512%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (56 samples, 0.09%)</title><rect x="27.7414%" y="533" width="0.0859%" height="15" fill="rgb(226,116,26)" fg:x="18076" fg:w="56"/><text x="27.9914%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (55 samples, 0.08%)</title><rect x="27.7429%" y="517" width="0.0844%" height="15" fill="rgb(244,5,17)" fg:x="18077" fg:w="55"/><text x="27.9929%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (18 samples, 0.03%)</title><rect x="27.7997%" y="501" width="0.0276%" height="15" fill="rgb(252,159,33)" fg:x="18114" fg:w="18"/><text x="28.0497%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.02%)</title><rect x="27.8365%" y="405" width="0.0153%" height="15" fill="rgb(206,71,0)" fg:x="18138" fg:w="10"/><text x="28.0865%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.03%)</title><rect x="27.8319%" y="453" width="0.0338%" height="15" fill="rgb(233,118,54)" fg:x="18135" fg:w="22"/><text x="28.0819%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22 samples, 0.03%)</title><rect x="27.8319%" y="437" width="0.0338%" height="15" fill="rgb(234,83,48)" fg:x="18135" fg:w="22"/><text x="28.0819%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.03%)</title><rect x="27.8319%" y="421" width="0.0338%" height="15" fill="rgb(228,3,54)" fg:x="18135" fg:w="22"/><text x="28.0819%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.01%)</title><rect x="27.8519%" y="405" width="0.0138%" height="15" fill="rgb(226,155,13)" fg:x="18148" fg:w="9"/><text x="28.1019%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="27.8534%" y="389" width="0.0123%" height="15" fill="rgb(241,28,37)" fg:x="18149" fg:w="8"/><text x="28.1034%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 0.04%)</title><rect x="27.8319%" y="485" width="0.0384%" height="15" fill="rgb(233,93,10)" fg:x="18135" fg:w="25"/><text x="28.0819%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (25 samples, 0.04%)</title><rect x="27.8319%" y="469" width="0.0384%" height="15" fill="rgb(225,113,19)" fg:x="18135" fg:w="25"/><text x="28.0819%" y="479.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14 samples, 0.02%)</title><rect x="27.8795%" y="421" width="0.0215%" height="15" fill="rgb(241,2,18)" fg:x="18166" fg:w="14"/><text x="28.1295%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (14 samples, 0.02%)</title><rect x="27.8795%" y="405" width="0.0215%" height="15" fill="rgb(228,207,21)" fg:x="18166" fg:w="14"/><text x="28.1295%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (16 samples, 0.02%)</title><rect x="27.8795%" y="437" width="0.0246%" height="15" fill="rgb(213,211,35)" fg:x="18166" fg:w="16"/><text x="28.1295%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 0.04%)</title><rect x="27.8703%" y="469" width="0.0399%" height="15" fill="rgb(209,83,10)" fg:x="18160" fg:w="26"/><text x="28.1203%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (26 samples, 0.04%)</title><rect x="27.8703%" y="453" width="0.0399%" height="15" fill="rgb(209,164,1)" fg:x="18160" fg:w="26"/><text x="28.1203%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (59 samples, 0.09%)</title><rect x="27.8273%" y="533" width="0.0905%" height="15" fill="rgb(213,184,43)" fg:x="18132" fg:w="59"/><text x="28.0773%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (59 samples, 0.09%)</title><rect x="27.8273%" y="517" width="0.0905%" height="15" fill="rgb(231,61,34)" fg:x="18132" fg:w="59"/><text x="28.0773%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (56 samples, 0.09%)</title><rect x="27.8319%" y="501" width="0.0859%" height="15" fill="rgb(235,75,3)" fg:x="18135" fg:w="56"/><text x="28.0819%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (31 samples, 0.05%)</title><rect x="27.8703%" y="485" width="0.0476%" height="15" fill="rgb(220,106,47)" fg:x="18160" fg:w="31"/><text x="28.1203%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (21 samples, 0.03%)</title><rect x="27.9209%" y="517" width="0.0322%" height="15" fill="rgb(210,196,33)" fg:x="18193" fg:w="21"/><text x="28.1709%" y="527.50"></text></g><g><title>core::intrinsics::copy (21 samples, 0.03%)</title><rect x="27.9209%" y="501" width="0.0322%" height="15" fill="rgb(229,154,42)" fg:x="18193" fg:w="21"/><text x="28.1709%" y="511.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (21 samples, 0.03%)</title><rect x="27.9209%" y="485" width="0.0322%" height="15" fill="rgb(228,114,26)" fg:x="18193" fg:w="21"/><text x="28.1709%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.01%)</title><rect x="27.9593%" y="373" width="0.0107%" height="15" fill="rgb(208,144,1)" fg:x="18218" fg:w="7"/><text x="28.2093%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.02%)</title><rect x="27.9562%" y="469" width="0.0153%" height="15" fill="rgb(239,112,37)" fg:x="18216" fg:w="10"/><text x="28.2062%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="27.9562%" y="453" width="0.0153%" height="15" fill="rgb(210,96,50)" fg:x="18216" fg:w="10"/><text x="28.2062%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="27.9562%" y="437" width="0.0153%" height="15" fill="rgb(222,178,2)" fg:x="18216" fg:w="10"/><text x="28.2062%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="27.9562%" y="421" width="0.0153%" height="15" fill="rgb(226,74,18)" fg:x="18216" fg:w="10"/><text x="28.2062%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="27.9562%" y="405" width="0.0153%" height="15" fill="rgb(225,67,54)" fg:x="18216" fg:w="10"/><text x="28.2062%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="27.9593%" y="389" width="0.0123%" height="15" fill="rgb(251,92,32)" fg:x="18218" fg:w="8"/><text x="28.2093%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (8 samples, 0.01%)</title><rect x="27.9839%" y="421" width="0.0123%" height="15" fill="rgb(228,149,22)" fg:x="18234" fg:w="8"/><text x="28.2339%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.01%)</title><rect x="27.9839%" y="405" width="0.0123%" height="15" fill="rgb(243,54,13)" fg:x="18234" fg:w="8"/><text x="28.2339%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="27.9839%" y="389" width="0.0123%" height="15" fill="rgb(243,180,28)" fg:x="18234" fg:w="8"/><text x="28.2339%" y="399.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::put (284 samples, 0.44%)</title><rect x="27.5649%" y="549" width="0.4359%" height="15" fill="rgb(208,167,24)" fg:x="17961" fg:w="284"/><text x="27.8149%" y="559.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (54 samples, 0.08%)</title><rect x="27.9179%" y="533" width="0.0829%" height="15" fill="rgb(245,73,45)" fg:x="18191" fg:w="54"/><text x="28.1679%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (30 samples, 0.05%)</title><rect x="27.9547%" y="517" width="0.0460%" height="15" fill="rgb(237,203,48)" fg:x="18215" fg:w="30"/><text x="28.2047%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (30 samples, 0.05%)</title><rect x="27.9547%" y="501" width="0.0460%" height="15" fill="rgb(211,197,16)" fg:x="18215" fg:w="30"/><text x="28.2047%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 0.05%)</title><rect x="27.9547%" y="485" width="0.0460%" height="15" fill="rgb(243,99,51)" fg:x="18215" fg:w="30"/><text x="28.2047%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19 samples, 0.03%)</title><rect x="27.9716%" y="469" width="0.0292%" height="15" fill="rgb(215,123,29)" fg:x="18226" fg:w="19"/><text x="28.2216%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.03%)</title><rect x="27.9716%" y="453" width="0.0292%" height="15" fill="rgb(239,186,37)" fg:x="18226" fg:w="19"/><text x="28.2216%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (19 samples, 0.03%)</title><rect x="27.9716%" y="437" width="0.0292%" height="15" fill="rgb(252,136,39)" fg:x="18226" fg:w="19"/><text x="28.2216%" y="447.50"></text></g><g><title>__libc_write (85 samples, 0.13%)</title><rect x="28.0422%" y="501" width="0.1305%" height="15" fill="rgb(223,213,32)" fg:x="18272" fg:w="85"/><text x="28.2922%" y="511.50"></text></g><g><title>[unknown] (85 samples, 0.13%)</title><rect x="28.0422%" y="485" width="0.1305%" height="15" fill="rgb(233,115,5)" fg:x="18272" fg:w="85"/><text x="28.2922%" y="495.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (747 samples, 1.15%)</title><rect x="28.0268%" y="533" width="1.1464%" height="15" fill="rgb(207,226,44)" fg:x="18262" fg:w="747"/><text x="28.2768%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::seek (746 samples, 1.14%)</title><rect x="28.0284%" y="517" width="1.1449%" height="15" fill="rgb(208,126,0)" fg:x="18263" fg:w="746"/><text x="28.2784%" y="527.50"></text></g><g><title>__lseek64 (652 samples, 1.00%)</title><rect x="28.1726%" y="501" width="1.0006%" height="15" fill="rgb(244,66,21)" fg:x="18357" fg:w="652"/><text x="28.4226%" y="511.50"></text></g><g><title>[unknown] (627 samples, 0.96%)</title><rect x="28.2110%" y="485" width="0.9623%" height="15" fill="rgb(222,97,12)" fg:x="18382" fg:w="627"/><text x="28.4610%" y="495.50"></text></g><g><title>[unknown] (471 samples, 0.72%)</title><rect x="28.4504%" y="469" width="0.7228%" height="15" fill="rgb(219,213,19)" fg:x="18538" fg:w="471"/><text x="28.7004%" y="479.50"></text></g><g><title>[unknown] (139 samples, 0.21%)</title><rect x="28.9599%" y="453" width="0.2133%" height="15" fill="rgb(252,169,30)" fg:x="18870" fg:w="139"/><text x="29.2099%" y="463.50"></text></g><g><title>[unknown] (135 samples, 0.21%)</title><rect x="28.9661%" y="437" width="0.2072%" height="15" fill="rgb(206,32,51)" fg:x="18874" fg:w="135"/><text x="29.2161%" y="447.50"></text></g><g><title>[unknown] (102 samples, 0.16%)</title><rect x="29.0167%" y="421" width="0.1565%" height="15" fill="rgb(250,172,42)" fg:x="18907" fg:w="102"/><text x="29.2667%" y="431.50"></text></g><g><title>[unknown] (60 samples, 0.09%)</title><rect x="29.0812%" y="405" width="0.0921%" height="15" fill="rgb(209,34,43)" fg:x="18949" fg:w="60"/><text x="29.3312%" y="415.50"></text></g><g><title>__PRETTY_FUNCTION__.10159 (13 samples, 0.02%)</title><rect x="29.2653%" y="389" width="0.0200%" height="15" fill="rgb(223,11,35)" fg:x="19069" fg:w="13"/><text x="29.5153%" y="399.50"></text></g><g><title>__memset_sse2_unaligned_erms (179 samples, 0.27%)</title><rect x="29.2945%" y="389" width="0.2747%" height="15" fill="rgb(251,219,26)" fg:x="19088" fg:w="179"/><text x="29.5445%" y="399.50"></text></g><g><title>__calloc (292 samples, 0.45%)</title><rect x="29.2055%" y="405" width="0.4481%" height="15" fill="rgb(231,119,3)" fg:x="19030" fg:w="292"/><text x="29.4555%" y="415.50"></text></g><g><title>_int_malloc (55 samples, 0.08%)</title><rect x="29.5692%" y="389" width="0.0844%" height="15" fill="rgb(216,97,11)" fg:x="19267" fg:w="55"/><text x="29.8192%" y="399.50"></text></g><g><title>alloc::vec::from_elem (306 samples, 0.47%)</title><rect x="29.1886%" y="517" width="0.4696%" height="15" fill="rgb(223,59,9)" fg:x="19019" fg:w="306"/><text x="29.4386%" y="527.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (306 samples, 0.47%)</title><rect x="29.1886%" y="501" width="0.4696%" height="15" fill="rgb(233,93,31)" fg:x="19019" fg:w="306"/><text x="29.4386%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (296 samples, 0.45%)</title><rect x="29.2039%" y="485" width="0.4543%" height="15" fill="rgb(239,81,33)" fg:x="19029" fg:w="296"/><text x="29.4539%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (296 samples, 0.45%)</title><rect x="29.2039%" y="469" width="0.4543%" height="15" fill="rgb(213,120,34)" fg:x="19029" fg:w="296"/><text x="29.4539%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (296 samples, 0.45%)</title><rect x="29.2039%" y="453" width="0.4543%" height="15" fill="rgb(243,49,53)" fg:x="19029" fg:w="296"/><text x="29.4539%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (296 samples, 0.45%)</title><rect x="29.2039%" y="437" width="0.4543%" height="15" fill="rgb(247,216,33)" fg:x="19029" fg:w="296"/><text x="29.4539%" y="447.50"></text></g><g><title>alloc::alloc::alloc_zeroed (296 samples, 0.45%)</title><rect x="29.2039%" y="421" width="0.4543%" height="15" fill="rgb(226,26,14)" fg:x="19029" fg:w="296"/><text x="29.4539%" y="431.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (240 samples, 0.37%)</title><rect x="29.6582%" y="517" width="0.3683%" height="15" fill="rgb(215,49,53)" fg:x="19325" fg:w="240"/><text x="29.9082%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (234 samples, 0.36%)</title><rect x="29.6674%" y="501" width="0.3591%" height="15" fill="rgb(245,162,40)" fg:x="19331" fg:w="234"/><text x="29.9174%" y="511.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (234 samples, 0.36%)</title><rect x="29.6674%" y="485" width="0.3591%" height="15" fill="rgb(229,68,17)" fg:x="19331" fg:w="234"/><text x="29.9174%" y="495.50"></text></g><g><title>malloc_consolidate (20 samples, 0.03%)</title><rect x="30.2921%" y="357" width="0.0307%" height="15" fill="rgb(213,182,10)" fg:x="19738" fg:w="20"/><text x="30.5421%" y="367.50"></text></g><g><title>__GI___libc_malloc (203 samples, 0.31%)</title><rect x="30.0266%" y="389" width="0.3115%" height="15" fill="rgb(245,125,30)" fg:x="19565" fg:w="203"/><text x="30.2766%" y="399.50"></text></g><g><title>_int_malloc (191 samples, 0.29%)</title><rect x="30.0450%" y="373" width="0.2931%" height="15" fill="rgb(232,202,2)" fg:x="19577" fg:w="191"/><text x="30.2950%" y="383.50"></text></g><g><title>unlink_chunk.isra.0 (10 samples, 0.02%)</title><rect x="30.3227%" y="357" width="0.0153%" height="15" fill="rgb(237,140,51)" fg:x="19758" fg:w="10"/><text x="30.5727%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (204 samples, 0.31%)</title><rect x="30.0266%" y="501" width="0.3131%" height="15" fill="rgb(236,157,25)" fg:x="19565" fg:w="204"/><text x="30.2766%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (204 samples, 0.31%)</title><rect x="30.0266%" y="485" width="0.3131%" height="15" fill="rgb(219,209,0)" fg:x="19565" fg:w="204"/><text x="30.2766%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (204 samples, 0.31%)</title><rect x="30.0266%" y="469" width="0.3131%" height="15" fill="rgb(240,116,54)" fg:x="19565" fg:w="204"/><text x="30.2766%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (204 samples, 0.31%)</title><rect x="30.0266%" y="453" width="0.3131%" height="15" fill="rgb(216,10,36)" fg:x="19565" fg:w="204"/><text x="30.2766%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (204 samples, 0.31%)</title><rect x="30.0266%" y="437" width="0.3131%" height="15" fill="rgb(222,72,44)" fg:x="19565" fg:w="204"/><text x="30.2766%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (204 samples, 0.31%)</title><rect x="30.0266%" y="421" width="0.3131%" height="15" fill="rgb(232,159,9)" fg:x="19565" fg:w="204"/><text x="30.2766%" y="431.50"></text></g><g><title>alloc::alloc::alloc (204 samples, 0.31%)</title><rect x="30.0266%" y="405" width="0.3131%" height="15" fill="rgb(210,39,32)" fg:x="19565" fg:w="204"/><text x="30.2766%" y="415.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (210 samples, 0.32%)</title><rect x="30.0266%" y="517" width="0.3223%" height="15" fill="rgb(216,194,45)" fg:x="19565" fg:w="210"/><text x="30.2766%" y="527.50"></text></g><g><title>__libc_read (42 samples, 0.06%)</title><rect x="30.3580%" y="437" width="0.0645%" height="15" fill="rgb(218,18,35)" fg:x="19781" fg:w="42"/><text x="30.6080%" y="447.50"></text></g><g><title>[unknown] (42 samples, 0.06%)</title><rect x="30.3580%" y="421" width="0.0645%" height="15" fill="rgb(207,83,51)" fg:x="19781" fg:w="42"/><text x="30.6080%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (100 samples, 0.15%)</title><rect x="30.3488%" y="469" width="0.1535%" height="15" fill="rgb(225,63,43)" fg:x="19775" fg:w="100"/><text x="30.5988%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (100 samples, 0.15%)</title><rect x="30.3488%" y="453" width="0.1535%" height="15" fill="rgb(207,57,36)" fg:x="19775" fg:w="100"/><text x="30.5988%" y="463.50"></text></g><g><title>_int_free (51 samples, 0.08%)</title><rect x="30.4240%" y="437" width="0.0783%" height="15" fill="rgb(216,99,33)" fg:x="19824" fg:w="51"/><text x="30.6740%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::reserve (867 samples, 1.33%)</title><rect x="29.1733%" y="533" width="1.3306%" height="15" fill="rgb(225,42,16)" fg:x="19009" fg:w="867"/><text x="29.4233%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (101 samples, 0.16%)</title><rect x="30.3488%" y="517" width="0.1550%" height="15" fill="rgb(220,201,45)" fg:x="19775" fg:w="101"/><text x="30.5988%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (101 samples, 0.16%)</title><rect x="30.3488%" y="501" width="0.1550%" height="15" fill="rgb(225,33,4)" fg:x="19775" fg:w="101"/><text x="30.5988%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.16%)</title><rect x="30.3488%" y="485" width="0.1550%" height="15" fill="rgb(224,33,50)" fg:x="19775" fg:w="101"/><text x="30.5988%" y="495.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (7 samples, 0.01%)</title><rect x="30.5038%" y="533" width="0.0107%" height="15" fill="rgb(246,198,51)" fg:x="19876" fg:w="7"/><text x="30.7538%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (7 samples, 0.01%)</title><rect x="30.5038%" y="517" width="0.0107%" height="15" fill="rgb(205,22,4)" fg:x="19876" fg:w="7"/><text x="30.7538%" y="527.50"></text></g><g><title>core::cell::BorrowRefMut::new (7 samples, 0.01%)</title><rect x="30.5038%" y="501" width="0.0107%" height="15" fill="rgb(206,3,8)" fg:x="19876" fg:w="7"/><text x="30.7538%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::fs::File&gt;&gt; (12 samples, 0.02%)</title><rect x="30.5146%" y="533" width="0.0184%" height="15" fill="rgb(251,23,15)" fg:x="19883" fg:w="12"/><text x="30.7646%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (12 samples, 0.02%)</title><rect x="30.5146%" y="517" width="0.0184%" height="15" fill="rgb(252,88,28)" fg:x="19883" fg:w="12"/><text x="30.7646%" y="527.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="30.5146%" y="501" width="0.0184%" height="15" fill="rgb(212,127,14)" fg:x="19883" fg:w="12"/><text x="30.7646%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (12 samples, 0.02%)</title><rect x="30.5146%" y="485" width="0.0184%" height="15" fill="rgb(247,145,37)" fg:x="19883" fg:w="12"/><text x="30.7646%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (12 samples, 0.02%)</title><rect x="30.5146%" y="469" width="0.0184%" height="15" fill="rgb(209,117,53)" fg:x="19883" fg:w="12"/><text x="30.7646%" y="479.50"></text></g><g><title>core::mem::replace (12 samples, 0.02%)</title><rect x="30.5146%" y="453" width="0.0184%" height="15" fill="rgb(212,90,42)" fg:x="19883" fg:w="12"/><text x="30.7646%" y="463.50"></text></g><g><title>core::ptr::write (12 samples, 0.02%)</title><rect x="30.5146%" y="437" width="0.0184%" height="15" fill="rgb(218,164,37)" fg:x="19883" fg:w="12"/><text x="30.7646%" y="447.50"></text></g><g><title>log::max_level (9 samples, 0.01%)</title><rect x="30.5330%" y="533" width="0.0138%" height="15" fill="rgb(246,65,34)" fg:x="19895" fg:w="9"/><text x="30.7830%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (9 samples, 0.01%)</title><rect x="30.5330%" y="517" width="0.0138%" height="15" fill="rgb(231,100,33)" fg:x="19895" fg:w="9"/><text x="30.7830%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.01%)</title><rect x="30.5330%" y="501" width="0.0138%" height="15" fill="rgb(228,126,14)" fg:x="19895" fg:w="9"/><text x="30.7830%" y="511.50"></text></g><g><title>__libc_read (2,272 samples, 3.49%)</title><rect x="30.5683%" y="453" width="3.4869%" height="15" fill="rgb(215,173,21)" fg:x="19918" fg:w="2272"/><text x="30.8183%" y="463.50">__l..</text></g><g><title>[unknown] (2,250 samples, 3.45%)</title><rect x="30.6021%" y="437" width="3.4531%" height="15" fill="rgb(210,6,40)" fg:x="19940" fg:w="2250"/><text x="30.8521%" y="447.50">[un..</text></g><g><title>[unknown] (2,091 samples, 3.21%)</title><rect x="30.8461%" y="421" width="3.2091%" height="15" fill="rgb(212,48,18)" fg:x="20099" fg:w="2091"/><text x="31.0961%" y="431.50">[un..</text></g><g><title>[unknown] (1,786 samples, 2.74%)</title><rect x="31.3142%" y="405" width="2.7410%" height="15" fill="rgb(230,214,11)" fg:x="20404" fg:w="1786"/><text x="31.5642%" y="415.50">[u..</text></g><g><title>[unknown] (1,773 samples, 2.72%)</title><rect x="31.3341%" y="389" width="2.7210%" height="15" fill="rgb(254,105,39)" fg:x="20417" fg:w="1773"/><text x="31.5841%" y="399.50">[u..</text></g><g><title>[unknown] (1,753 samples, 2.69%)</title><rect x="31.3648%" y="373" width="2.6903%" height="15" fill="rgb(245,158,5)" fg:x="20437" fg:w="1753"/><text x="31.6148%" y="383.50">[u..</text></g><g><title>[unknown] (1,725 samples, 2.65%)</title><rect x="31.4078%" y="357" width="2.6474%" height="15" fill="rgb(249,208,11)" fg:x="20465" fg:w="1725"/><text x="31.6578%" y="367.50">[u..</text></g><g><title>[unknown] (1,642 samples, 2.52%)</title><rect x="31.5352%" y="341" width="2.5200%" height="15" fill="rgb(210,39,28)" fg:x="20548" fg:w="1642"/><text x="31.7852%" y="351.50">[u..</text></g><g><title>[unknown] (1,532 samples, 2.35%)</title><rect x="31.7040%" y="325" width="2.3512%" height="15" fill="rgb(211,56,53)" fg:x="20658" fg:w="1532"/><text x="31.9540%" y="335.50">[..</text></g><g><title>[unknown] (1,442 samples, 2.21%)</title><rect x="31.8421%" y="309" width="2.2130%" height="15" fill="rgb(226,201,30)" fg:x="20748" fg:w="1442"/><text x="32.0921%" y="319.50">[..</text></g><g><title>[unknown] (1,367 samples, 2.10%)</title><rect x="31.9572%" y="293" width="2.0979%" height="15" fill="rgb(239,101,34)" fg:x="20823" fg:w="1367"/><text x="32.2072%" y="303.50">[..</text></g><g><title>[unknown] (1,201 samples, 1.84%)</title><rect x="32.2120%" y="277" width="1.8432%" height="15" fill="rgb(226,209,5)" fg:x="20989" fg:w="1201"/><text x="32.4620%" y="287.50">[..</text></g><g><title>[unknown] (1,128 samples, 1.73%)</title><rect x="32.3240%" y="261" width="1.7311%" height="15" fill="rgb(250,105,47)" fg:x="21062" fg:w="1128"/><text x="32.5740%" y="271.50"></text></g><g><title>[unknown] (225 samples, 0.35%)</title><rect x="33.7098%" y="245" width="0.3453%" height="15" fill="rgb(230,72,3)" fg:x="21965" fg:w="225"/><text x="33.9598%" y="255.50"></text></g><g><title>[unknown] (26 samples, 0.04%)</title><rect x="34.0153%" y="229" width="0.0399%" height="15" fill="rgb(232,218,39)" fg:x="22164" fg:w="26"/><text x="34.2653%" y="239.50"></text></g><g><title>[unknown] (19 samples, 0.03%)</title><rect x="34.0260%" y="213" width="0.0292%" height="15" fill="rgb(248,166,6)" fg:x="22171" fg:w="19"/><text x="34.2760%" y="223.50"></text></g><g><title>[unknown] (17 samples, 0.03%)</title><rect x="34.0291%" y="197" width="0.0261%" height="15" fill="rgb(247,89,20)" fg:x="22173" fg:w="17"/><text x="34.2791%" y="207.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="34.0321%" y="181" width="0.0230%" height="15" fill="rgb(248,130,54)" fg:x="22175" fg:w="15"/><text x="34.2821%" y="191.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="34.0383%" y="165" width="0.0169%" height="15" fill="rgb(234,196,4)" fg:x="22179" fg:w="11"/><text x="34.2883%" y="175.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="34.0383%" y="149" width="0.0169%" height="15" fill="rgb(250,143,31)" fg:x="22179" fg:w="11"/><text x="34.2883%" y="159.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="34.0429%" y="133" width="0.0123%" height="15" fill="rgb(211,110,34)" fg:x="22182" fg:w="8"/><text x="34.2929%" y="143.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (4,379 samples, 6.72%)</title><rect x="27.3362%" y="565" width="6.7205%" height="15" fill="rgb(215,124,48)" fg:x="17812" fg:w="4379"/><text x="27.5862%" y="575.50">&lt;yakvdb::..</text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (3,937 samples, 6.04%)</title><rect x="28.0145%" y="549" width="6.0421%" height="15" fill="rgb(216,46,13)" fg:x="18254" fg:w="3937"/><text x="28.2645%" y="559.50">yakvdb::..</text></g><g><title>std::io::Read::read_exact (2,287 samples, 3.51%)</title><rect x="30.5468%" y="533" width="3.5099%" height="15" fill="rgb(205,184,25)" fg:x="19904" fg:w="2287"/><text x="30.7968%" y="543.50">std..</text></g><g><title>std::io::default_read_exact (2,287 samples, 3.51%)</title><rect x="30.5468%" y="517" width="3.5099%" height="15" fill="rgb(228,1,10)" fg:x="19904" fg:w="2287"/><text x="30.7968%" y="527.50">std..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (2,278 samples, 3.50%)</title><rect x="30.5606%" y="501" width="3.4961%" height="15" fill="rgb(213,116,27)" fg:x="19913" fg:w="2278"/><text x="30.8106%" y="511.50">&lt;st..</text></g><g><title>std::sys::unix::fs::File::read (2,278 samples, 3.50%)</title><rect x="30.5606%" y="485" width="3.4961%" height="15" fill="rgb(241,95,50)" fg:x="19913" fg:w="2278"/><text x="30.8106%" y="495.50">std..</text></g><g><title>std::sys::unix::fd::FileDesc::read (2,278 samples, 3.50%)</title><rect x="30.5606%" y="469" width="3.4961%" height="15" fill="rgb(238,48,32)" fg:x="19913" fg:w="2278"/><text x="30.8106%" y="479.50">std..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.02%)</title><rect x="34.0782%" y="421" width="0.0153%" height="15" fill="rgb(235,113,49)" fg:x="22205" fg:w="10"/><text x="34.3282%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="34.0812%" y="405" width="0.0123%" height="15" fill="rgb(205,127,43)" fg:x="22207" fg:w="8"/><text x="34.3312%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (20 samples, 0.03%)</title><rect x="34.0981%" y="405" width="0.0307%" height="15" fill="rgb(250,162,2)" fg:x="22218" fg:w="20"/><text x="34.3481%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (51 samples, 0.08%)</title><rect x="34.0644%" y="469" width="0.0783%" height="15" fill="rgb(220,13,41)" fg:x="22196" fg:w="51"/><text x="34.3144%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (51 samples, 0.08%)</title><rect x="34.0644%" y="453" width="0.0783%" height="15" fill="rgb(249,221,25)" fg:x="22196" fg:w="51"/><text x="34.3144%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (51 samples, 0.08%)</title><rect x="34.0644%" y="437" width="0.0783%" height="15" fill="rgb(215,208,19)" fg:x="22196" fg:w="51"/><text x="34.3144%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (32 samples, 0.05%)</title><rect x="34.0935%" y="421" width="0.0491%" height="15" fill="rgb(236,175,2)" fg:x="22215" fg:w="32"/><text x="34.3435%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.01%)</title><rect x="34.1288%" y="405" width="0.0138%" height="15" fill="rgb(241,52,2)" fg:x="22238" fg:w="9"/><text x="34.3788%" y="415.50"></text></g><g><title>hashbrown::map::make_insert_hash (59 samples, 0.09%)</title><rect x="34.0644%" y="501" width="0.0905%" height="15" fill="rgb(248,140,14)" fg:x="22196" fg:w="59"/><text x="34.3144%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (59 samples, 0.09%)</title><rect x="34.0644%" y="485" width="0.0905%" height="15" fill="rgb(253,22,42)" fg:x="22196" fg:w="59"/><text x="34.3144%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (13 samples, 0.02%)</title><rect x="34.1764%" y="453" width="0.0200%" height="15" fill="rgb(234,61,47)" fg:x="22269" fg:w="13"/><text x="34.4264%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (13 samples, 0.02%)</title><rect x="34.1764%" y="437" width="0.0200%" height="15" fill="rgb(208,226,15)" fg:x="22269" fg:w="13"/><text x="34.4264%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (10 samples, 0.02%)</title><rect x="34.1810%" y="421" width="0.0153%" height="15" fill="rgb(217,221,4)" fg:x="22272" fg:w="10"/><text x="34.4310%" y="431.50"></text></g><g><title>hashbrown::raw::h2 (8 samples, 0.01%)</title><rect x="34.1964%" y="453" width="0.0123%" height="15" fill="rgb(212,174,34)" fg:x="22282" fg:w="8"/><text x="34.4464%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (12 samples, 0.02%)</title><rect x="34.2086%" y="453" width="0.0184%" height="15" fill="rgb(253,83,4)" fg:x="22290" fg:w="12"/><text x="34.4586%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (12 samples, 0.02%)</title><rect x="34.2086%" y="437" width="0.0184%" height="15" fill="rgb(250,195,49)" fg:x="22290" fg:w="12"/><text x="34.4586%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.02%)</title><rect x="34.2086%" y="421" width="0.0184%" height="15" fill="rgb(241,192,25)" fg:x="22290" fg:w="12"/><text x="34.4586%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (53 samples, 0.08%)</title><rect x="34.1549%" y="501" width="0.0813%" height="15" fill="rgb(208,124,10)" fg:x="22255" fg:w="53"/><text x="34.4049%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (53 samples, 0.08%)</title><rect x="34.1549%" y="485" width="0.0813%" height="15" fill="rgb(222,33,0)" fg:x="22255" fg:w="53"/><text x="34.4049%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (53 samples, 0.08%)</title><rect x="34.1549%" y="469" width="0.0813%" height="15" fill="rgb(234,209,28)" fg:x="22255" fg:w="53"/><text x="34.4049%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (9 samples, 0.01%)</title><rect x="34.2424%" y="485" width="0.0138%" height="15" fill="rgb(224,11,23)" fg:x="22312" fg:w="9"/><text x="34.4924%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (131 samples, 0.20%)</title><rect x="34.0567%" y="565" width="0.2010%" height="15" fill="rgb(232,99,1)" fg:x="22191" fg:w="131"/><text x="34.3067%" y="575.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (127 samples, 0.19%)</title><rect x="34.0628%" y="549" width="0.1949%" height="15" fill="rgb(237,95,45)" fg:x="22195" fg:w="127"/><text x="34.3128%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (127 samples, 0.19%)</title><rect x="34.0628%" y="533" width="0.1949%" height="15" fill="rgb(208,109,11)" fg:x="22195" fg:w="127"/><text x="34.3128%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (127 samples, 0.19%)</title><rect x="34.0628%" y="517" width="0.1949%" height="15" fill="rgb(216,190,48)" fg:x="22195" fg:w="127"/><text x="34.3128%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 0.02%)</title><rect x="34.2363%" y="501" width="0.0215%" height="15" fill="rgb(251,171,36)" fg:x="22308" fg:w="14"/><text x="34.4863%" y="511.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (8 samples, 0.01%)</title><rect x="34.2577%" y="565" width="0.0123%" height="15" fill="rgb(230,62,22)" fg:x="22322" fg:w="8"/><text x="34.5077%" y="575.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (8 samples, 0.01%)</title><rect x="34.2577%" y="549" width="0.0123%" height="15" fill="rgb(225,114,35)" fg:x="22322" fg:w="8"/><text x="34.5077%" y="559.50"></text></g><g><title>core::cell::BorrowRefMut::new (8 samples, 0.01%)</title><rect x="34.2577%" y="533" width="0.0123%" height="15" fill="rgb(215,118,42)" fg:x="22322" fg:w="8"/><text x="34.5077%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.01%)</title><rect x="34.2854%" y="389" width="0.0138%" height="15" fill="rgb(243,119,21)" fg:x="22340" fg:w="9"/><text x="34.5354%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.01%)</title><rect x="34.2854%" y="373" width="0.0138%" height="15" fill="rgb(252,177,53)" fg:x="22340" fg:w="9"/><text x="34.5354%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (30 samples, 0.05%)</title><rect x="34.3038%" y="373" width="0.0460%" height="15" fill="rgb(237,209,29)" fg:x="22352" fg:w="30"/><text x="34.5538%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (55 samples, 0.08%)</title><rect x="34.2762%" y="437" width="0.0844%" height="15" fill="rgb(212,65,23)" fg:x="22334" fg:w="55"/><text x="34.5262%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (55 samples, 0.08%)</title><rect x="34.2762%" y="421" width="0.0844%" height="15" fill="rgb(230,222,46)" fg:x="22334" fg:w="55"/><text x="34.5262%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (55 samples, 0.08%)</title><rect x="34.2762%" y="405" width="0.0844%" height="15" fill="rgb(215,135,32)" fg:x="22334" fg:w="55"/><text x="34.5262%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (40 samples, 0.06%)</title><rect x="34.2992%" y="389" width="0.0614%" height="15" fill="rgb(246,101,22)" fg:x="22349" fg:w="40"/><text x="34.5492%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.01%)</title><rect x="34.3498%" y="373" width="0.0107%" height="15" fill="rgb(206,107,13)" fg:x="22382" fg:w="7"/><text x="34.5998%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (61 samples, 0.09%)</title><rect x="34.2746%" y="469" width="0.0936%" height="15" fill="rgb(250,100,44)" fg:x="22333" fg:w="61"/><text x="34.5246%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (61 samples, 0.09%)</title><rect x="34.2746%" y="453" width="0.0936%" height="15" fill="rgb(231,147,38)" fg:x="22333" fg:w="61"/><text x="34.5246%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (10 samples, 0.02%)</title><rect x="34.3882%" y="405" width="0.0153%" height="15" fill="rgb(229,8,40)" fg:x="22407" fg:w="10"/><text x="34.6382%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (10 samples, 0.02%)</title><rect x="34.3882%" y="389" width="0.0153%" height="15" fill="rgb(221,135,30)" fg:x="22407" fg:w="10"/><text x="34.6382%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (15 samples, 0.02%)</title><rect x="34.3882%" y="421" width="0.0230%" height="15" fill="rgb(249,193,18)" fg:x="22407" fg:w="15"/><text x="34.6382%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (106 samples, 0.16%)</title><rect x="34.2716%" y="517" width="0.1627%" height="15" fill="rgb(209,133,39)" fg:x="22331" fg:w="106"/><text x="34.5216%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (106 samples, 0.16%)</title><rect x="34.2716%" y="501" width="0.1627%" height="15" fill="rgb(232,100,14)" fg:x="22331" fg:w="106"/><text x="34.5216%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (106 samples, 0.16%)</title><rect x="34.2716%" y="485" width="0.1627%" height="15" fill="rgb(224,185,1)" fg:x="22331" fg:w="106"/><text x="34.5216%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (43 samples, 0.07%)</title><rect x="34.3682%" y="469" width="0.0660%" height="15" fill="rgb(223,139,8)" fg:x="22394" fg:w="43"/><text x="34.6182%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (43 samples, 0.07%)</title><rect x="34.3682%" y="453" width="0.0660%" height="15" fill="rgb(232,213,38)" fg:x="22394" fg:w="43"/><text x="34.6182%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (43 samples, 0.07%)</title><rect x="34.3682%" y="437" width="0.0660%" height="15" fill="rgb(207,94,22)" fg:x="22394" fg:w="43"/><text x="34.6182%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (27 samples, 0.04%)</title><rect x="34.4803%" y="501" width="0.0414%" height="15" fill="rgb(219,183,54)" fg:x="22467" fg:w="27"/><text x="34.7303%" y="511.50"></text></g><g><title>core::intrinsics::copy (23 samples, 0.04%)</title><rect x="34.4864%" y="485" width="0.0353%" height="15" fill="rgb(216,185,54)" fg:x="22471" fg:w="23"/><text x="34.7364%" y="495.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (20 samples, 0.03%)</title><rect x="34.4910%" y="469" width="0.0307%" height="15" fill="rgb(254,217,39)" fg:x="22474" fg:w="20"/><text x="34.7410%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (63 samples, 0.10%)</title><rect x="34.5892%" y="453" width="0.0967%" height="15" fill="rgb(240,178,23)" fg:x="22538" fg:w="63"/><text x="34.8392%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (45 samples, 0.07%)</title><rect x="34.6169%" y="437" width="0.0691%" height="15" fill="rgb(218,11,47)" fg:x="22556" fg:w="45"/><text x="34.8669%" y="447.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (45 samples, 0.07%)</title><rect x="34.6169%" y="421" width="0.0691%" height="15" fill="rgb(218,51,51)" fg:x="22556" fg:w="45"/><text x="34.8669%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (45 samples, 0.07%)</title><rect x="34.6169%" y="405" width="0.0691%" height="15" fill="rgb(238,126,27)" fg:x="22556" fg:w="45"/><text x="34.8669%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (45 samples, 0.07%)</title><rect x="34.6169%" y="389" width="0.0691%" height="15" fill="rgb(249,202,22)" fg:x="22556" fg:w="45"/><text x="34.8669%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (45 samples, 0.07%)</title><rect x="34.6169%" y="373" width="0.0691%" height="15" fill="rgb(254,195,49)" fg:x="22556" fg:w="45"/><text x="34.8669%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (153 samples, 0.23%)</title><rect x="34.5325%" y="501" width="0.2348%" height="15" fill="rgb(208,123,14)" fg:x="22501" fg:w="153"/><text x="34.7825%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (153 samples, 0.23%)</title><rect x="34.5325%" y="485" width="0.2348%" height="15" fill="rgb(224,200,8)" fg:x="22501" fg:w="153"/><text x="34.7825%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (153 samples, 0.23%)</title><rect x="34.5325%" y="469" width="0.2348%" height="15" fill="rgb(217,61,36)" fg:x="22501" fg:w="153"/><text x="34.7825%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.08%)</title><rect x="34.6859%" y="453" width="0.0813%" height="15" fill="rgb(206,35,45)" fg:x="22601" fg:w="53"/><text x="34.9359%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;alloc::vec::Vec&lt;u32&gt;&gt;&gt; (28 samples, 0.04%)</title><rect x="34.7673%" y="501" width="0.0430%" height="15" fill="rgb(217,65,33)" fg:x="22654" fg:w="28"/><text x="35.0173%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (28 samples, 0.04%)</title><rect x="34.7673%" y="485" width="0.0430%" height="15" fill="rgb(222,158,48)" fg:x="22654" fg:w="28"/><text x="35.0173%" y="495.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (28 samples, 0.04%)</title><rect x="34.7673%" y="469" width="0.0430%" height="15" fill="rgb(254,2,54)" fg:x="22654" fg:w="28"/><text x="35.0173%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (28 samples, 0.04%)</title><rect x="34.7673%" y="453" width="0.0430%" height="15" fill="rgb(250,143,38)" fg:x="22654" fg:w="28"/><text x="35.0173%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (28 samples, 0.04%)</title><rect x="34.7673%" y="437" width="0.0430%" height="15" fill="rgb(248,25,0)" fg:x="22654" fg:w="28"/><text x="35.0173%" y="447.50"></text></g><g><title>core::mem::replace (28 samples, 0.04%)</title><rect x="34.7673%" y="421" width="0.0430%" height="15" fill="rgb(206,152,27)" fg:x="22654" fg:w="28"/><text x="35.0173%" y="431.50"></text></g><g><title>core::ptr::write (28 samples, 0.04%)</title><rect x="34.7673%" y="405" width="0.0430%" height="15" fill="rgb(240,77,30)" fg:x="22654" fg:w="28"/><text x="35.0173%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.02%)</title><rect x="34.8148%" y="373" width="0.0153%" height="15" fill="rgb(231,5,3)" fg:x="22685" fg:w="10"/><text x="35.0648%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (27 samples, 0.04%)</title><rect x="34.8440%" y="357" width="0.0414%" height="15" fill="rgb(207,226,32)" fg:x="22704" fg:w="27"/><text x="35.0940%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (54 samples, 0.08%)</title><rect x="34.8133%" y="421" width="0.0829%" height="15" fill="rgb(222,207,47)" fg:x="22684" fg:w="54"/><text x="35.0633%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (54 samples, 0.08%)</title><rect x="34.8133%" y="405" width="0.0829%" height="15" fill="rgb(229,115,45)" fg:x="22684" fg:w="54"/><text x="35.0633%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (54 samples, 0.08%)</title><rect x="34.8133%" y="389" width="0.0829%" height="15" fill="rgb(224,191,6)" fg:x="22684" fg:w="54"/><text x="35.0633%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (43 samples, 0.07%)</title><rect x="34.8302%" y="373" width="0.0660%" height="15" fill="rgb(230,227,24)" fg:x="22695" fg:w="43"/><text x="35.0802%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.01%)</title><rect x="34.8854%" y="357" width="0.0107%" height="15" fill="rgb(228,80,19)" fg:x="22731" fg:w="7"/><text x="35.1354%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (59 samples, 0.09%)</title><rect x="34.8102%" y="453" width="0.0905%" height="15" fill="rgb(247,229,0)" fg:x="22682" fg:w="59"/><text x="35.0602%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (59 samples, 0.09%)</title><rect x="34.8102%" y="437" width="0.0905%" height="15" fill="rgb(237,194,15)" fg:x="22682" fg:w="59"/><text x="35.0602%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14 samples, 0.02%)</title><rect x="34.9177%" y="389" width="0.0215%" height="15" fill="rgb(219,203,20)" fg:x="22752" fg:w="14"/><text x="35.1677%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (14 samples, 0.02%)</title><rect x="34.9177%" y="373" width="0.0215%" height="15" fill="rgb(234,128,8)" fg:x="22752" fg:w="14"/><text x="35.1677%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (17 samples, 0.03%)</title><rect x="34.9177%" y="405" width="0.0261%" height="15" fill="rgb(248,202,8)" fg:x="22752" fg:w="17"/><text x="35.1677%" y="415.50"></text></g><g><title>hashbrown::raw::h2 (11 samples, 0.02%)</title><rect x="34.9438%" y="405" width="0.0169%" height="15" fill="rgb(206,104,37)" fg:x="22769" fg:w="11"/><text x="35.1938%" y="415.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get_mut (460 samples, 0.71%)</title><rect x="34.2700%" y="533" width="0.7060%" height="15" fill="rgb(223,8,27)" fg:x="22330" fg:w="460"/><text x="34.5200%" y="543.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (353 samples, 0.54%)</title><rect x="34.4342%" y="517" width="0.5418%" height="15" fill="rgb(216,217,28)" fg:x="22437" fg:w="353"/><text x="34.6842%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (108 samples, 0.17%)</title><rect x="34.8102%" y="501" width="0.1657%" height="15" fill="rgb(249,199,1)" fg:x="22682" fg:w="108"/><text x="35.0602%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (108 samples, 0.17%)</title><rect x="34.8102%" y="485" width="0.1657%" height="15" fill="rgb(240,85,17)" fg:x="22682" fg:w="108"/><text x="35.0602%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (108 samples, 0.17%)</title><rect x="34.8102%" y="469" width="0.1657%" height="15" fill="rgb(206,108,45)" fg:x="22682" fg:w="108"/><text x="35.0602%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (49 samples, 0.08%)</title><rect x="34.9008%" y="453" width="0.0752%" height="15" fill="rgb(245,210,41)" fg:x="22741" fg:w="49"/><text x="35.1508%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (49 samples, 0.08%)</title><rect x="34.9008%" y="437" width="0.0752%" height="15" fill="rgb(206,13,37)" fg:x="22741" fg:w="49"/><text x="35.1508%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (49 samples, 0.08%)</title><rect x="34.9008%" y="421" width="0.0752%" height="15" fill="rgb(250,61,18)" fg:x="22741" fg:w="49"/><text x="35.1508%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.01%)</title><rect x="34.9652%" y="405" width="0.0107%" height="15" fill="rgb(235,172,48)" fg:x="22783" fg:w="7"/><text x="35.2152%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.01%)</title><rect x="34.9652%" y="389" width="0.0107%" height="15" fill="rgb(249,201,17)" fg:x="22783" fg:w="7"/><text x="35.2152%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.03%)</title><rect x="35.0036%" y="405" width="0.0276%" height="15" fill="rgb(219,208,6)" fg:x="22808" fg:w="18"/><text x="35.2536%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (24 samples, 0.04%)</title><rect x="34.9990%" y="421" width="0.0368%" height="15" fill="rgb(248,31,23)" fg:x="22805" fg:w="24"/><text x="35.2490%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (34 samples, 0.05%)</title><rect x="35.0404%" y="405" width="0.0522%" height="15" fill="rgb(245,15,42)" fg:x="22832" fg:w="34"/><text x="35.2904%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (74 samples, 0.11%)</title><rect x="34.9883%" y="469" width="0.1136%" height="15" fill="rgb(222,217,39)" fg:x="22798" fg:w="74"/><text x="35.2383%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (74 samples, 0.11%)</title><rect x="34.9883%" y="453" width="0.1136%" height="15" fill="rgb(210,219,27)" fg:x="22798" fg:w="74"/><text x="35.2383%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (74 samples, 0.11%)</title><rect x="34.9883%" y="437" width="0.1136%" height="15" fill="rgb(252,166,36)" fg:x="22798" fg:w="74"/><text x="35.2383%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (43 samples, 0.07%)</title><rect x="35.0358%" y="421" width="0.0660%" height="15" fill="rgb(245,132,34)" fg:x="22829" fg:w="43"/><text x="35.2858%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (81 samples, 0.12%)</title><rect x="34.9883%" y="501" width="0.1243%" height="15" fill="rgb(236,54,3)" fg:x="22798" fg:w="81"/><text x="35.2383%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (81 samples, 0.12%)</title><rect x="34.9883%" y="485" width="0.1243%" height="15" fill="rgb(241,173,43)" fg:x="22798" fg:w="81"/><text x="35.2383%" y="495.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (16 samples, 0.02%)</title><rect x="35.1356%" y="437" width="0.0246%" height="15" fill="rgb(215,190,9)" fg:x="22894" fg:w="16"/><text x="35.3856%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (16 samples, 0.02%)</title><rect x="35.1356%" y="421" width="0.0246%" height="15" fill="rgb(242,101,16)" fg:x="22894" fg:w="16"/><text x="35.3856%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (19 samples, 0.03%)</title><rect x="35.1356%" y="453" width="0.0292%" height="15" fill="rgb(223,190,21)" fg:x="22894" fg:w="19"/><text x="35.3856%" y="463.50"></text></g><g><title>hashbrown::raw::h2 (14 samples, 0.02%)</title><rect x="35.1648%" y="453" width="0.0215%" height="15" fill="rgb(215,228,25)" fg:x="22913" fg:w="14"/><text x="35.4148%" y="463.50"></text></g><g><title>core::cell::RefMut&lt;T&gt;::map (607 samples, 0.93%)</title><rect x="34.2700%" y="565" width="0.9316%" height="15" fill="rgb(225,36,22)" fg:x="22330" fg:w="607"/><text x="34.5200%" y="575.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut::{{closure}} (607 samples, 0.93%)</title><rect x="34.2700%" y="549" width="0.9316%" height="15" fill="rgb(251,106,46)" fg:x="22330" fg:w="607"/><text x="34.5200%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (147 samples, 0.23%)</title><rect x="34.9760%" y="533" width="0.2256%" height="15" fill="rgb(208,90,1)" fg:x="22790" fg:w="147"/><text x="35.2260%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (141 samples, 0.22%)</title><rect x="34.9852%" y="517" width="0.2164%" height="15" fill="rgb(243,10,4)" fg:x="22796" fg:w="141"/><text x="35.2352%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (58 samples, 0.09%)</title><rect x="35.1126%" y="501" width="0.0890%" height="15" fill="rgb(212,137,27)" fg:x="22879" fg:w="58"/><text x="35.3626%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (58 samples, 0.09%)</title><rect x="35.1126%" y="485" width="0.0890%" height="15" fill="rgb(231,220,49)" fg:x="22879" fg:w="58"/><text x="35.3626%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (58 samples, 0.09%)</title><rect x="35.1126%" y="469" width="0.0890%" height="15" fill="rgb(237,96,20)" fg:x="22879" fg:w="58"/><text x="35.3626%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.02%)</title><rect x="35.1862%" y="453" width="0.0153%" height="15" fill="rgb(239,229,30)" fg:x="22927" fg:w="10"/><text x="35.4362%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.02%)</title><rect x="35.1862%" y="437" width="0.0153%" height="15" fill="rgb(219,65,33)" fg:x="22927" fg:w="10"/><text x="35.4362%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut (5,151 samples, 7.91%)</title><rect x="27.3270%" y="581" width="7.9053%" height="15" fill="rgb(243,134,7)" fg:x="17806" fg:w="5151"/><text x="27.5770%" y="591.50">&lt;yakvdb::di..</text></g><g><title>core::result::Result&lt;T,E&gt;::ok (20 samples, 0.03%)</title><rect x="35.2016%" y="565" width="0.0307%" height="15" fill="rgb(216,177,54)" fg:x="22937" fg:w="20"/><text x="35.4516%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.01%)</title><rect x="35.2353%" y="421" width="0.0107%" height="15" fill="rgb(211,160,20)" fg:x="22959" fg:w="7"/><text x="35.4853%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="35.2353%" y="469" width="0.0184%" height="15" fill="rgb(239,85,39)" fg:x="22959" fg:w="12"/><text x="35.4853%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="35.2353%" y="453" width="0.0184%" height="15" fill="rgb(232,125,22)" fg:x="22959" fg:w="12"/><text x="35.4853%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="35.2353%" y="437" width="0.0184%" height="15" fill="rgb(244,57,34)" fg:x="22959" fg:w="12"/><text x="35.4853%" y="447.50"></text></g><g><title>hashbrown::map::make_insert_hash (16 samples, 0.02%)</title><rect x="35.2338%" y="501" width="0.0246%" height="15" fill="rgb(214,203,32)" fg:x="22958" fg:w="16"/><text x="35.4838%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.02%)</title><rect x="35.2338%" y="485" width="0.0246%" height="15" fill="rgb(207,58,43)" fg:x="22958" fg:w="16"/><text x="35.4838%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (8 samples, 0.01%)</title><rect x="35.2584%" y="501" width="0.0123%" height="15" fill="rgb(215,193,15)" fg:x="22974" fg:w="8"/><text x="35.5084%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.01%)</title><rect x="35.2584%" y="485" width="0.0123%" height="15" fill="rgb(232,15,44)" fg:x="22974" fg:w="8"/><text x="35.5084%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.01%)</title><rect x="35.2584%" y="469" width="0.0123%" height="15" fill="rgb(212,3,48)" fg:x="22974" fg:w="8"/><text x="35.5084%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (31 samples, 0.05%)</title><rect x="35.2323%" y="565" width="0.0476%" height="15" fill="rgb(218,128,7)" fg:x="22957" fg:w="31"/><text x="35.4823%" y="575.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (31 samples, 0.05%)</title><rect x="35.2323%" y="549" width="0.0476%" height="15" fill="rgb(226,216,39)" fg:x="22957" fg:w="31"/><text x="35.4823%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (31 samples, 0.05%)</title><rect x="35.2323%" y="533" width="0.0476%" height="15" fill="rgb(243,47,51)" fg:x="22957" fg:w="31"/><text x="35.4823%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (31 samples, 0.05%)</title><rect x="35.2323%" y="517" width="0.0476%" height="15" fill="rgb(241,183,40)" fg:x="22957" fg:w="31"/><text x="35.4823%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="35.2937%" y="373" width="0.0123%" height="15" fill="rgb(231,217,32)" fg:x="22997" fg:w="8"/><text x="35.5437%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="35.2860%" y="437" width="0.0230%" height="15" fill="rgb(229,61,38)" fg:x="22992" fg:w="15"/><text x="35.5360%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="35.2860%" y="421" width="0.0230%" height="15" fill="rgb(225,210,5)" fg:x="22992" fg:w="15"/><text x="35.5360%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="35.2860%" y="405" width="0.0230%" height="15" fill="rgb(231,79,45)" fg:x="22992" fg:w="15"/><text x="35.5360%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.02%)</title><rect x="35.2937%" y="389" width="0.0153%" height="15" fill="rgb(224,100,7)" fg:x="22997" fg:w="10"/><text x="35.5437%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.02%)</title><rect x="35.2860%" y="469" width="0.0246%" height="15" fill="rgb(241,198,18)" fg:x="22992" fg:w="16"/><text x="35.5360%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.02%)</title><rect x="35.2860%" y="453" width="0.0246%" height="15" fill="rgb(252,97,53)" fg:x="22992" fg:w="16"/><text x="35.5360%" y="463.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (30 samples, 0.05%)</title><rect x="35.2845%" y="533" width="0.0460%" height="15" fill="rgb(220,88,7)" fg:x="22991" fg:w="30"/><text x="35.5345%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (30 samples, 0.05%)</title><rect x="35.2845%" y="517" width="0.0460%" height="15" fill="rgb(213,176,14)" fg:x="22991" fg:w="30"/><text x="35.5345%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (30 samples, 0.05%)</title><rect x="35.2845%" y="501" width="0.0460%" height="15" fill="rgb(246,73,7)" fg:x="22991" fg:w="30"/><text x="35.5345%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 0.05%)</title><rect x="35.2845%" y="485" width="0.0460%" height="15" fill="rgb(245,64,36)" fg:x="22991" fg:w="30"/><text x="35.5345%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.02%)</title><rect x="35.3105%" y="469" width="0.0200%" height="15" fill="rgb(245,80,10)" fg:x="23008" fg:w="13"/><text x="35.5605%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.02%)</title><rect x="35.3105%" y="453" width="0.0200%" height="15" fill="rgb(232,107,50)" fg:x="23008" fg:w="13"/><text x="35.5605%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (13 samples, 0.02%)</title><rect x="35.3105%" y="437" width="0.0200%" height="15" fill="rgb(253,3,0)" fg:x="23008" fg:w="13"/><text x="35.5605%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (33 samples, 0.05%)</title><rect x="35.2814%" y="549" width="0.0506%" height="15" fill="rgb(212,99,53)" fg:x="22989" fg:w="33"/><text x="35.5314%" y="559.50"></text></g><g><title>hashbrown::map::make_insert_hash (9 samples, 0.01%)</title><rect x="35.3351%" y="485" width="0.0138%" height="15" fill="rgb(249,111,54)" fg:x="23024" fg:w="9"/><text x="35.5851%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.01%)</title><rect x="35.3351%" y="469" width="0.0138%" height="15" fill="rgb(249,55,30)" fg:x="23024" fg:w="9"/><text x="35.5851%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="35.3366%" y="453" width="0.0123%" height="15" fill="rgb(237,47,42)" fg:x="23025" fg:w="8"/><text x="35.5866%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="35.3366%" y="437" width="0.0123%" height="15" fill="rgb(211,20,18)" fg:x="23025" fg:w="8"/><text x="35.5866%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="35.3366%" y="421" width="0.0123%" height="15" fill="rgb(231,203,46)" fg:x="23025" fg:w="8"/><text x="35.5866%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (21 samples, 0.03%)</title><rect x="35.3320%" y="549" width="0.0322%" height="15" fill="rgb(237,142,3)" fg:x="23022" fg:w="21"/><text x="35.5820%" y="559.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (20 samples, 0.03%)</title><rect x="35.3336%" y="533" width="0.0307%" height="15" fill="rgb(241,107,1)" fg:x="23023" fg:w="20"/><text x="35.5836%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (20 samples, 0.03%)</title><rect x="35.3336%" y="517" width="0.0307%" height="15" fill="rgb(229,83,13)" fg:x="23023" fg:w="20"/><text x="35.5836%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.03%)</title><rect x="35.3336%" y="501" width="0.0307%" height="15" fill="rgb(241,91,40)" fg:x="23023" fg:w="20"/><text x="35.5836%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 0.02%)</title><rect x="35.3489%" y="485" width="0.0153%" height="15" fill="rgb(225,3,45)" fg:x="23033" fg:w="10"/><text x="35.5989%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.02%)</title><rect x="35.3489%" y="469" width="0.0153%" height="15" fill="rgb(244,223,14)" fg:x="23033" fg:w="10"/><text x="35.5989%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.02%)</title><rect x="35.3489%" y="453" width="0.0153%" height="15" fill="rgb(224,124,37)" fg:x="23033" fg:w="10"/><text x="35.5989%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.02%)</title><rect x="35.3658%" y="453" width="0.0153%" height="15" fill="rgb(251,171,30)" fg:x="23044" fg:w="10"/><text x="35.6158%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="35.3658%" y="437" width="0.0153%" height="15" fill="rgb(236,46,54)" fg:x="23044" fg:w="10"/><text x="35.6158%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (20 samples, 0.03%)</title><rect x="35.3658%" y="501" width="0.0307%" height="15" fill="rgb(245,213,5)" fg:x="23044" fg:w="20"/><text x="35.6158%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (20 samples, 0.03%)</title><rect x="35.3658%" y="485" width="0.0307%" height="15" fill="rgb(230,144,27)" fg:x="23044" fg:w="20"/><text x="35.6158%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.03%)</title><rect x="35.3658%" y="469" width="0.0307%" height="15" fill="rgb(220,86,6)" fg:x="23044" fg:w="20"/><text x="35.6158%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.02%)</title><rect x="35.3811%" y="453" width="0.0153%" height="15" fill="rgb(240,20,13)" fg:x="23054" fg:w="10"/><text x="35.6311%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.02%)</title><rect x="35.3811%" y="437" width="0.0153%" height="15" fill="rgb(217,89,34)" fg:x="23054" fg:w="10"/><text x="35.6311%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.02%)</title><rect x="35.3811%" y="421" width="0.0153%" height="15" fill="rgb(229,13,5)" fg:x="23054" fg:w="10"/><text x="35.6311%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (8 samples, 0.01%)</title><rect x="35.4026%" y="437" width="0.0123%" height="15" fill="rgb(244,67,35)" fg:x="23068" fg:w="8"/><text x="35.6526%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (18 samples, 0.03%)</title><rect x="35.4011%" y="485" width="0.0276%" height="15" fill="rgb(221,40,2)" fg:x="23067" fg:w="18"/><text x="35.6511%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.03%)</title><rect x="35.4011%" y="469" width="0.0276%" height="15" fill="rgb(237,157,21)" fg:x="23067" fg:w="18"/><text x="35.6511%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.03%)</title><rect x="35.4011%" y="453" width="0.0276%" height="15" fill="rgb(222,94,11)" fg:x="23067" fg:w="18"/><text x="35.6511%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="35.4149%" y="437" width="0.0138%" height="15" fill="rgb(249,113,6)" fg:x="23076" fg:w="9"/><text x="35.6649%" y="447.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get_mut (49 samples, 0.08%)</title><rect x="35.3658%" y="517" width="0.0752%" height="15" fill="rgb(238,137,36)" fg:x="23044" fg:w="49"/><text x="35.6158%" y="527.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (29 samples, 0.04%)</title><rect x="35.3965%" y="501" width="0.0445%" height="15" fill="rgb(210,102,26)" fg:x="23064" fg:w="29"/><text x="35.6465%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.02%)</title><rect x="35.4471%" y="485" width="0.0200%" height="15" fill="rgb(218,30,30)" fg:x="23097" fg:w="13"/><text x="35.6971%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.02%)</title><rect x="35.4471%" y="469" width="0.0200%" height="15" fill="rgb(214,67,26)" fg:x="23097" fg:w="13"/><text x="35.6971%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="35.4471%" y="453" width="0.0200%" height="15" fill="rgb(251,9,53)" fg:x="23097" fg:w="13"/><text x="35.6971%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="35.4471%" y="437" width="0.0200%" height="15" fill="rgb(228,204,25)" fg:x="23097" fg:w="13"/><text x="35.6971%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="35.4471%" y="421" width="0.0200%" height="15" fill="rgb(207,153,8)" fg:x="23097" fg:w="13"/><text x="35.6971%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="35.4563%" y="405" width="0.0107%" height="15" fill="rgb(242,9,16)" fg:x="23103" fg:w="7"/><text x="35.7063%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::root_mut (162 samples, 0.25%)</title><rect x="35.2323%" y="581" width="0.2486%" height="15" fill="rgb(217,211,10)" fg:x="22957" fg:w="162"/><text x="35.4823%" y="591.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut (131 samples, 0.20%)</title><rect x="35.2799%" y="565" width="0.2010%" height="15" fill="rgb(219,228,52)" fg:x="22988" fg:w="131"/><text x="35.5299%" y="575.50"></text></g><g><title>core::cell::RefMut&lt;T&gt;::map (75 samples, 0.12%)</title><rect x="35.3658%" y="549" width="0.1151%" height="15" fill="rgb(231,92,29)" fg:x="23044" fg:w="75"/><text x="35.6158%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut::{{closure}} (75 samples, 0.12%)</title><rect x="35.3658%" y="533" width="0.1151%" height="15" fill="rgb(232,8,23)" fg:x="23044" fg:w="75"/><text x="35.6158%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (25 samples, 0.04%)</title><rect x="35.4425%" y="517" width="0.0384%" height="15" fill="rgb(216,211,34)" fg:x="23094" fg:w="25"/><text x="35.6925%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (23 samples, 0.04%)</title><rect x="35.4456%" y="501" width="0.0353%" height="15" fill="rgb(236,151,0)" fg:x="23096" fg:w="23"/><text x="35.6956%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (9 samples, 0.01%)</title><rect x="35.4671%" y="485" width="0.0138%" height="15" fill="rgb(209,168,3)" fg:x="23110" fg:w="9"/><text x="35.7171%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.01%)</title><rect x="35.4671%" y="469" width="0.0138%" height="15" fill="rgb(208,129,28)" fg:x="23110" fg:w="9"/><text x="35.7171%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.01%)</title><rect x="35.4671%" y="453" width="0.0138%" height="15" fill="rgb(229,78,22)" fg:x="23110" fg:w="9"/><text x="35.7171%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.03%)</title><rect x="35.4947%" y="437" width="0.0338%" height="15" fill="rgb(228,187,13)" fg:x="23128" fg:w="22"/><text x="35.7447%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (22 samples, 0.03%)</title><rect x="35.4947%" y="421" width="0.0338%" height="15" fill="rgb(240,119,24)" fg:x="23128" fg:w="22"/><text x="35.7447%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.03%)</title><rect x="35.4947%" y="405" width="0.0338%" height="15" fill="rgb(209,194,42)" fg:x="23128" fg:w="22"/><text x="35.7447%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (22 samples, 0.03%)</title><rect x="35.4947%" y="389" width="0.0338%" height="15" fill="rgb(247,200,46)" fg:x="23128" fg:w="22"/><text x="35.7447%" y="399.50"></text></g><g><title>__GI___libc_malloc (82 samples, 0.13%)</title><rect x="35.5638%" y="229" width="0.1258%" height="15" fill="rgb(218,76,16)" fg:x="23173" fg:w="82"/><text x="35.8138%" y="239.50"></text></g><g><title>_int_malloc (74 samples, 0.11%)</title><rect x="35.5761%" y="213" width="0.1136%" height="15" fill="rgb(225,21,48)" fg:x="23181" fg:w="74"/><text x="35.8261%" y="223.50"></text></g><g><title>unlink_chunk.isra.0 (8 samples, 0.01%)</title><rect x="35.6773%" y="197" width="0.0123%" height="15" fill="rgb(239,223,50)" fg:x="23247" fg:w="8"/><text x="35.9273%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (89 samples, 0.14%)</title><rect x="35.5576%" y="325" width="0.1366%" height="15" fill="rgb(244,45,21)" fg:x="23169" fg:w="89"/><text x="35.8076%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (86 samples, 0.13%)</title><rect x="35.5622%" y="309" width="0.1320%" height="15" fill="rgb(232,33,43)" fg:x="23172" fg:w="86"/><text x="35.8122%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (86 samples, 0.13%)</title><rect x="35.5622%" y="293" width="0.1320%" height="15" fill="rgb(209,8,3)" fg:x="23172" fg:w="86"/><text x="35.8122%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (85 samples, 0.13%)</title><rect x="35.5638%" y="277" width="0.1305%" height="15" fill="rgb(214,25,53)" fg:x="23173" fg:w="85"/><text x="35.8138%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (85 samples, 0.13%)</title><rect x="35.5638%" y="261" width="0.1305%" height="15" fill="rgb(254,186,54)" fg:x="23173" fg:w="85"/><text x="35.8138%" y="271.50"></text></g><g><title>alloc::alloc::alloc (85 samples, 0.13%)</title><rect x="35.5638%" y="245" width="0.1305%" height="15" fill="rgb(208,174,49)" fg:x="23173" fg:w="85"/><text x="35.8138%" y="255.50"></text></g><g><title>__memcpy_sse2_unaligned (10 samples, 0.02%)</title><rect x="35.6942%" y="293" width="0.0153%" height="15" fill="rgb(233,191,51)" fg:x="23258" fg:w="10"/><text x="35.9442%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (106 samples, 0.16%)</title><rect x="35.5561%" y="389" width="0.1627%" height="15" fill="rgb(222,134,10)" fg:x="23168" fg:w="106"/><text x="35.8061%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106 samples, 0.16%)</title><rect x="35.5561%" y="373" width="0.1627%" height="15" fill="rgb(230,226,20)" fg:x="23168" fg:w="106"/><text x="35.8061%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (106 samples, 0.16%)</title><rect x="35.5561%" y="357" width="0.1627%" height="15" fill="rgb(251,111,25)" fg:x="23168" fg:w="106"/><text x="35.8061%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (106 samples, 0.16%)</title><rect x="35.5561%" y="341" width="0.1627%" height="15" fill="rgb(224,40,46)" fg:x="23168" fg:w="106"/><text x="35.8061%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (16 samples, 0.02%)</title><rect x="35.6942%" y="325" width="0.0246%" height="15" fill="rgb(236,108,47)" fg:x="23258" fg:w="16"/><text x="35.9442%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.02%)</title><rect x="35.6942%" y="309" width="0.0246%" height="15" fill="rgb(234,93,0)" fg:x="23258" fg:w="16"/><text x="35.9442%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (149 samples, 0.23%)</title><rect x="35.4947%" y="453" width="0.2287%" height="15" fill="rgb(224,213,32)" fg:x="23128" fg:w="149"/><text x="35.7447%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (127 samples, 0.19%)</title><rect x="35.5285%" y="437" width="0.1949%" height="15" fill="rgb(251,11,48)" fg:x="23150" fg:w="127"/><text x="35.7785%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (115 samples, 0.18%)</title><rect x="35.5469%" y="421" width="0.1765%" height="15" fill="rgb(236,173,5)" fg:x="23162" fg:w="115"/><text x="35.7969%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::copy::{{closure}} (115 samples, 0.18%)</title><rect x="35.5469%" y="405" width="0.1765%" height="15" fill="rgb(230,95,12)" fg:x="23162" fg:w="115"/><text x="35.7969%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="35.7234%" y="453" width="0.0138%" height="15" fill="rgb(232,209,1)" fg:x="23277" fg:w="9"/><text x="35.9734%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="35.7234%" y="437" width="0.0138%" height="15" fill="rgb(232,6,1)" fg:x="23277" fg:w="9"/><text x="35.9734%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="35.7234%" y="421" width="0.0138%" height="15" fill="rgb(210,224,50)" fg:x="23277" fg:w="9"/><text x="35.9734%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="35.7234%" y="405" width="0.0138%" height="15" fill="rgb(228,127,35)" fg:x="23277" fg:w="9"/><text x="35.9734%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="35.7234%" y="389" width="0.0138%" height="15" fill="rgb(245,102,45)" fg:x="23277" fg:w="9"/><text x="35.9734%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.01%)</title><rect x="35.7234%" y="373" width="0.0138%" height="15" fill="rgb(214,1,49)" fg:x="23277" fg:w="9"/><text x="35.9734%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.01%)</title><rect x="35.7234%" y="357" width="0.0138%" height="15" fill="rgb(226,163,40)" fg:x="23277" fg:w="9"/><text x="35.9734%" y="367.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.01%)</title><rect x="35.7234%" y="341" width="0.0138%" height="15" fill="rgb(239,212,28)" fg:x="23277" fg:w="9"/><text x="35.9734%" y="351.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.01%)</title><rect x="35.7234%" y="325" width="0.0138%" height="15" fill="rgb(220,20,13)" fg:x="23277" fg:w="9"/><text x="35.9734%" y="335.50"></text></g><g><title>_int_realloc (8 samples, 0.01%)</title><rect x="35.7249%" y="309" width="0.0123%" height="15" fill="rgb(210,164,35)" fg:x="23278" fg:w="8"/><text x="35.9749%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (180 samples, 0.28%)</title><rect x="35.4824%" y="485" width="0.2762%" height="15" fill="rgb(248,109,41)" fg:x="23120" fg:w="180"/><text x="35.7324%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (180 samples, 0.28%)</title><rect x="35.4824%" y="469" width="0.2762%" height="15" fill="rgb(238,23,50)" fg:x="23120" fg:w="180"/><text x="35.7324%" y="479.50"></text></g><g><title>core::ptr::write (13 samples, 0.02%)</title><rect x="35.7387%" y="453" width="0.0200%" height="15" fill="rgb(211,48,49)" fg:x="23287" fg:w="13"/><text x="35.9887%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::copy (182 samples, 0.28%)</title><rect x="35.4824%" y="565" width="0.2793%" height="15" fill="rgb(223,36,21)" fg:x="23120" fg:w="182"/><text x="35.7324%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (182 samples, 0.28%)</title><rect x="35.4824%" y="549" width="0.2793%" height="15" fill="rgb(207,123,46)" fg:x="23120" fg:w="182"/><text x="35.7324%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (182 samples, 0.28%)</title><rect x="35.4824%" y="533" width="0.2793%" height="15" fill="rgb(240,218,32)" fg:x="23120" fg:w="182"/><text x="35.7324%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (182 samples, 0.28%)</title><rect x="35.4824%" y="517" width="0.2793%" height="15" fill="rgb(252,5,43)" fg:x="23120" fg:w="182"/><text x="35.7324%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (182 samples, 0.28%)</title><rect x="35.4824%" y="501" width="0.2793%" height="15" fill="rgb(252,84,19)" fg:x="23120" fg:w="182"/><text x="35.7324%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="35.7710%" y="453" width="0.0184%" height="15" fill="rgb(243,152,39)" fg:x="23308" fg:w="12"/><text x="36.0210%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (12 samples, 0.02%)</title><rect x="35.7710%" y="437" width="0.0184%" height="15" fill="rgb(234,160,15)" fg:x="23308" fg:w="12"/><text x="36.0210%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.02%)</title><rect x="35.7710%" y="421" width="0.0184%" height="15" fill="rgb(237,34,20)" fg:x="23308" fg:w="12"/><text x="36.0210%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (12 samples, 0.02%)</title><rect x="35.7710%" y="405" width="0.0184%" height="15" fill="rgb(229,97,13)" fg:x="23308" fg:w="12"/><text x="36.0210%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (16 samples, 0.02%)</title><rect x="35.7710%" y="469" width="0.0246%" height="15" fill="rgb(234,71,50)" fg:x="23308" fg:w="16"/><text x="36.0210%" y="479.50"></text></g><g><title>__GI___libc_malloc (30 samples, 0.05%)</title><rect x="35.8001%" y="229" width="0.0460%" height="15" fill="rgb(253,155,4)" fg:x="23327" fg:w="30"/><text x="36.0501%" y="239.50"></text></g><g><title>_int_malloc (24 samples, 0.04%)</title><rect x="35.8093%" y="213" width="0.0368%" height="15" fill="rgb(222,185,37)" fg:x="23333" fg:w="24"/><text x="36.0593%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.05%)</title><rect x="35.7986%" y="325" width="0.0491%" height="15" fill="rgb(251,177,13)" fg:x="23326" fg:w="32"/><text x="36.0486%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32 samples, 0.05%)</title><rect x="35.7986%" y="309" width="0.0491%" height="15" fill="rgb(250,179,40)" fg:x="23326" fg:w="32"/><text x="36.0486%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (32 samples, 0.05%)</title><rect x="35.7986%" y="293" width="0.0491%" height="15" fill="rgb(242,44,2)" fg:x="23326" fg:w="32"/><text x="36.0486%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.05%)</title><rect x="35.7986%" y="277" width="0.0491%" height="15" fill="rgb(216,177,13)" fg:x="23326" fg:w="32"/><text x="36.0486%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.05%)</title><rect x="35.7986%" y="261" width="0.0491%" height="15" fill="rgb(216,106,43)" fg:x="23326" fg:w="32"/><text x="36.0486%" y="271.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.05%)</title><rect x="35.7986%" y="245" width="0.0491%" height="15" fill="rgb(216,183,2)" fg:x="23326" fg:w="32"/><text x="36.0486%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (37 samples, 0.06%)</title><rect x="35.7986%" y="389" width="0.0568%" height="15" fill="rgb(249,75,3)" fg:x="23326" fg:w="37"/><text x="36.0486%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37 samples, 0.06%)</title><rect x="35.7986%" y="373" width="0.0568%" height="15" fill="rgb(219,67,39)" fg:x="23326" fg:w="37"/><text x="36.0486%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 0.06%)</title><rect x="35.7986%" y="357" width="0.0568%" height="15" fill="rgb(253,228,2)" fg:x="23326" fg:w="37"/><text x="36.0486%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37 samples, 0.06%)</title><rect x="35.7986%" y="341" width="0.0568%" height="15" fill="rgb(235,138,27)" fg:x="23326" fg:w="37"/><text x="36.0486%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (45 samples, 0.07%)</title><rect x="35.7955%" y="405" width="0.0691%" height="15" fill="rgb(236,97,51)" fg:x="23324" fg:w="45"/><text x="36.0455%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (63 samples, 0.10%)</title><rect x="35.7710%" y="549" width="0.0967%" height="15" fill="rgb(240,80,30)" fg:x="23308" fg:w="63"/><text x="36.0210%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (63 samples, 0.10%)</title><rect x="35.7710%" y="533" width="0.0967%" height="15" fill="rgb(230,178,19)" fg:x="23308" fg:w="63"/><text x="36.0210%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (63 samples, 0.10%)</title><rect x="35.7710%" y="517" width="0.0967%" height="15" fill="rgb(210,190,27)" fg:x="23308" fg:w="63"/><text x="36.0210%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (63 samples, 0.10%)</title><rect x="35.7710%" y="501" width="0.0967%" height="15" fill="rgb(222,107,31)" fg:x="23308" fg:w="63"/><text x="36.0210%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (63 samples, 0.10%)</title><rect x="35.7710%" y="485" width="0.0967%" height="15" fill="rgb(216,127,34)" fg:x="23308" fg:w="63"/><text x="36.0210%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (47 samples, 0.07%)</title><rect x="35.7955%" y="469" width="0.0721%" height="15" fill="rgb(234,116,52)" fg:x="23324" fg:w="47"/><text x="36.0455%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 0.07%)</title><rect x="35.7955%" y="453" width="0.0721%" height="15" fill="rgb(222,124,15)" fg:x="23324" fg:w="47"/><text x="36.0455%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (47 samples, 0.07%)</title><rect x="35.7955%" y="437" width="0.0721%" height="15" fill="rgb(231,179,28)" fg:x="23324" fg:w="47"/><text x="36.0455%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (47 samples, 0.07%)</title><rect x="35.7955%" y="421" width="0.0721%" height="15" fill="rgb(226,93,45)" fg:x="23324" fg:w="47"/><text x="36.0455%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (19 samples, 0.03%)</title><rect x="35.8784%" y="549" width="0.0292%" height="15" fill="rgb(215,8,51)" fg:x="23378" fg:w="19"/><text x="36.1284%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.03%)</title><rect x="35.8784%" y="533" width="0.0292%" height="15" fill="rgb(223,106,5)" fg:x="23378" fg:w="19"/><text x="36.1284%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (19 samples, 0.03%)</title><rect x="35.8784%" y="517" width="0.0292%" height="15" fill="rgb(250,191,5)" fg:x="23378" fg:w="19"/><text x="36.1284%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (19 samples, 0.03%)</title><rect x="35.8784%" y="501" width="0.0292%" height="15" fill="rgb(242,132,44)" fg:x="23378" fg:w="19"/><text x="36.1284%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (19 samples, 0.03%)</title><rect x="35.8784%" y="485" width="0.0292%" height="15" fill="rgb(251,152,29)" fg:x="23378" fg:w="19"/><text x="36.1284%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (19 samples, 0.03%)</title><rect x="35.8784%" y="469" width="0.0292%" height="15" fill="rgb(218,179,5)" fg:x="23378" fg:w="19"/><text x="36.1284%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.03%)</title><rect x="35.8784%" y="453" width="0.0292%" height="15" fill="rgb(227,67,19)" fg:x="23378" fg:w="19"/><text x="36.1284%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.03%)</title><rect x="35.8784%" y="437" width="0.0292%" height="15" fill="rgb(233,119,31)" fg:x="23378" fg:w="19"/><text x="36.1284%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.03%)</title><rect x="35.8784%" y="421" width="0.0292%" height="15" fill="rgb(241,120,22)" fg:x="23378" fg:w="19"/><text x="36.1284%" y="431.50"></text></g><g><title>_int_free (14 samples, 0.02%)</title><rect x="35.8861%" y="405" width="0.0215%" height="15" fill="rgb(224,102,30)" fg:x="23383" fg:w="14"/><text x="36.1361%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove (102 samples, 0.16%)</title><rect x="35.7633%" y="565" width="0.1565%" height="15" fill="rgb(210,164,37)" fg:x="23303" fg:w="102"/><text x="36.0133%" y="575.50"></text></g><g><title>yakvdb::disk::block::put_slice (7 samples, 0.01%)</title><rect x="35.9091%" y="549" width="0.0107%" height="15" fill="rgb(226,191,16)" fg:x="23398" fg:w="7"/><text x="36.1591%" y="559.50"></text></g><g><title>std::fs::File::metadata (29 samples, 0.04%)</title><rect x="35.9367%" y="549" width="0.0445%" height="15" fill="rgb(214,40,45)" fg:x="23416" fg:w="29"/><text x="36.1867%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (26 samples, 0.04%)</title><rect x="35.9413%" y="533" width="0.0399%" height="15" fill="rgb(244,29,26)" fg:x="23419" fg:w="26"/><text x="36.1913%" y="543.50"></text></g><g><title>std::sys::unix::fs::try_statx (26 samples, 0.04%)</title><rect x="35.9413%" y="517" width="0.0399%" height="15" fill="rgb(216,16,5)" fg:x="23419" fg:w="26"/><text x="36.1913%" y="527.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (24 samples, 0.04%)</title><rect x="35.9444%" y="501" width="0.0368%" height="15" fill="rgb(249,76,35)" fg:x="23421" fg:w="24"/><text x="36.1944%" y="511.50"></text></g><g><title>statx (24 samples, 0.04%)</title><rect x="35.9444%" y="485" width="0.0368%" height="15" fill="rgb(207,11,44)" fg:x="23421" fg:w="24"/><text x="36.1944%" y="495.50"></text></g><g><title>[unknown] (23 samples, 0.04%)</title><rect x="35.9459%" y="469" width="0.0353%" height="15" fill="rgb(228,190,49)" fg:x="23422" fg:w="23"/><text x="36.1959%" y="479.50"></text></g><g><title>[unknown] (22 samples, 0.03%)</title><rect x="35.9475%" y="453" width="0.0338%" height="15" fill="rgb(214,173,12)" fg:x="23423" fg:w="22"/><text x="36.1975%" y="463.50"></text></g><g><title>[unknown] (19 samples, 0.03%)</title><rect x="35.9521%" y="437" width="0.0292%" height="15" fill="rgb(218,26,35)" fg:x="23426" fg:w="19"/><text x="36.2021%" y="447.50"></text></g><g><title>[unknown] (18 samples, 0.03%)</title><rect x="35.9536%" y="421" width="0.0276%" height="15" fill="rgb(220,200,19)" fg:x="23427" fg:w="18"/><text x="36.2036%" y="431.50"></text></g><g><title>[unknown] (18 samples, 0.03%)</title><rect x="35.9536%" y="405" width="0.0276%" height="15" fill="rgb(239,95,49)" fg:x="23427" fg:w="18"/><text x="36.2036%" y="415.50"></text></g><g><title>[unknown] (18 samples, 0.03%)</title><rect x="35.9536%" y="389" width="0.0276%" height="15" fill="rgb(235,85,53)" fg:x="23427" fg:w="18"/><text x="36.2036%" y="399.50"></text></g><g><title>[unknown] (18 samples, 0.03%)</title><rect x="35.9536%" y="373" width="0.0276%" height="15" fill="rgb(233,133,31)" fg:x="23427" fg:w="18"/><text x="36.2036%" y="383.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="35.9613%" y="357" width="0.0200%" height="15" fill="rgb(218,25,20)" fg:x="23432" fg:w="13"/><text x="36.2113%" y="367.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="35.9674%" y="341" width="0.0138%" height="15" fill="rgb(252,210,38)" fg:x="23436" fg:w="9"/><text x="36.2174%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::next_id (175 samples, 0.27%)</title><rect x="35.9198%" y="565" width="0.2686%" height="15" fill="rgb(242,134,21)" fg:x="23405" fg:w="175"/><text x="36.1698%" y="575.50"></text></g><g><title>std::io::Write::write_all (135 samples, 0.21%)</title><rect x="35.9812%" y="549" width="0.2072%" height="15" fill="rgb(213,28,48)" fg:x="23445" fg:w="135"/><text x="36.2312%" y="559.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (134 samples, 0.21%)</title><rect x="35.9827%" y="533" width="0.2057%" height="15" fill="rgb(250,196,2)" fg:x="23446" fg:w="134"/><text x="36.2327%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::write (134 samples, 0.21%)</title><rect x="35.9827%" y="517" width="0.2057%" height="15" fill="rgb(227,5,17)" fg:x="23446" fg:w="134"/><text x="36.2327%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (134 samples, 0.21%)</title><rect x="35.9827%" y="501" width="0.2057%" height="15" fill="rgb(221,226,24)" fg:x="23446" fg:w="134"/><text x="36.2327%" y="511.50"></text></g><g><title>__libc_write (134 samples, 0.21%)</title><rect x="35.9827%" y="485" width="0.2057%" height="15" fill="rgb(211,5,48)" fg:x="23446" fg:w="134"/><text x="36.2327%" y="495.50"></text></g><g><title>[unknown] (133 samples, 0.20%)</title><rect x="35.9843%" y="469" width="0.2041%" height="15" fill="rgb(219,150,6)" fg:x="23447" fg:w="133"/><text x="36.2343%" y="479.50"></text></g><g><title>[unknown] (131 samples, 0.20%)</title><rect x="35.9874%" y="453" width="0.2010%" height="15" fill="rgb(251,46,16)" fg:x="23449" fg:w="131"/><text x="36.2374%" y="463.50"></text></g><g><title>[unknown] (127 samples, 0.19%)</title><rect x="35.9935%" y="437" width="0.1949%" height="15" fill="rgb(220,204,40)" fg:x="23453" fg:w="127"/><text x="36.2435%" y="447.50"></text></g><g><title>[unknown] (127 samples, 0.19%)</title><rect x="35.9935%" y="421" width="0.1949%" height="15" fill="rgb(211,85,2)" fg:x="23453" fg:w="127"/><text x="36.2435%" y="431.50"></text></g><g><title>[unknown] (126 samples, 0.19%)</title><rect x="35.9950%" y="405" width="0.1934%" height="15" fill="rgb(229,17,7)" fg:x="23454" fg:w="126"/><text x="36.2450%" y="415.50"></text></g><g><title>[unknown] (126 samples, 0.19%)</title><rect x="35.9950%" y="389" width="0.1934%" height="15" fill="rgb(239,72,28)" fg:x="23454" fg:w="126"/><text x="36.2450%" y="399.50"></text></g><g><title>[unknown] (125 samples, 0.19%)</title><rect x="35.9966%" y="373" width="0.1918%" height="15" fill="rgb(230,47,54)" fg:x="23455" fg:w="125"/><text x="36.2466%" y="383.50"></text></g><g><title>[unknown] (118 samples, 0.18%)</title><rect x="36.0073%" y="357" width="0.1811%" height="15" fill="rgb(214,50,8)" fg:x="23462" fg:w="118"/><text x="36.2573%" y="367.50"></text></g><g><title>[unknown] (116 samples, 0.18%)</title><rect x="36.0104%" y="341" width="0.1780%" height="15" fill="rgb(216,198,43)" fg:x="23464" fg:w="116"/><text x="36.2604%" y="351.50"></text></g><g><title>[unknown] (113 samples, 0.17%)</title><rect x="36.0150%" y="325" width="0.1734%" height="15" fill="rgb(234,20,35)" fg:x="23467" fg:w="113"/><text x="36.2650%" y="335.50"></text></g><g><title>[unknown] (106 samples, 0.16%)</title><rect x="36.0257%" y="309" width="0.1627%" height="15" fill="rgb(254,45,19)" fg:x="23474" fg:w="106"/><text x="36.2757%" y="319.50"></text></g><g><title>[unknown] (98 samples, 0.15%)</title><rect x="36.0380%" y="293" width="0.1504%" height="15" fill="rgb(219,14,44)" fg:x="23482" fg:w="98"/><text x="36.2880%" y="303.50"></text></g><g><title>[unknown] (90 samples, 0.14%)</title><rect x="36.0503%" y="277" width="0.1381%" height="15" fill="rgb(217,220,26)" fg:x="23490" fg:w="90"/><text x="36.3003%" y="287.50"></text></g><g><title>[unknown] (86 samples, 0.13%)</title><rect x="36.0564%" y="261" width="0.1320%" height="15" fill="rgb(213,158,28)" fg:x="23494" fg:w="86"/><text x="36.3064%" y="271.50"></text></g><g><title>[unknown] (78 samples, 0.12%)</title><rect x="36.0687%" y="245" width="0.1197%" height="15" fill="rgb(252,51,52)" fg:x="23502" fg:w="78"/><text x="36.3187%" y="255.50"></text></g><g><title>[unknown] (69 samples, 0.11%)</title><rect x="36.0825%" y="229" width="0.1059%" height="15" fill="rgb(246,89,16)" fg:x="23511" fg:w="69"/><text x="36.3325%" y="239.50"></text></g><g><title>[unknown] (50 samples, 0.08%)</title><rect x="36.1117%" y="213" width="0.0767%" height="15" fill="rgb(216,158,49)" fg:x="23530" fg:w="50"/><text x="36.3617%" y="223.50"></text></g><g><title>[unknown] (30 samples, 0.05%)</title><rect x="36.1424%" y="197" width="0.0460%" height="15" fill="rgb(236,107,19)" fg:x="23550" fg:w="30"/><text x="36.3924%" y="207.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="36.1715%" y="181" width="0.0169%" height="15" fill="rgb(228,185,30)" fg:x="23569" fg:w="11"/><text x="36.4215%" y="191.50"></text></g><g><title>malloc_consolidate (10 samples, 0.02%)</title><rect x="36.2314%" y="341" width="0.0153%" height="15" fill="rgb(246,134,8)" fg:x="23608" fg:w="10"/><text x="36.4814%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::reserve (24 samples, 0.04%)</title><rect x="36.2114%" y="517" width="0.0368%" height="15" fill="rgb(214,143,50)" fg:x="23595" fg:w="24"/><text x="36.4614%" y="527.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (15 samples, 0.02%)</title><rect x="36.2252%" y="501" width="0.0230%" height="15" fill="rgb(228,75,8)" fg:x="23604" fg:w="15"/><text x="36.4752%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (15 samples, 0.02%)</title><rect x="36.2252%" y="485" width="0.0230%" height="15" fill="rgb(207,175,4)" fg:x="23604" fg:w="15"/><text x="36.4752%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="36.2252%" y="469" width="0.0230%" height="15" fill="rgb(205,108,24)" fg:x="23604" fg:w="15"/><text x="36.4752%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="36.2252%" y="453" width="0.0230%" height="15" fill="rgb(244,120,49)" fg:x="23604" fg:w="15"/><text x="36.4752%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.02%)</title><rect x="36.2252%" y="437" width="0.0230%" height="15" fill="rgb(223,47,38)" fg:x="23604" fg:w="15"/><text x="36.4752%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.02%)</title><rect x="36.2252%" y="421" width="0.0230%" height="15" fill="rgb(229,179,11)" fg:x="23604" fg:w="15"/><text x="36.4752%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.02%)</title><rect x="36.2252%" y="405" width="0.0230%" height="15" fill="rgb(231,122,1)" fg:x="23604" fg:w="15"/><text x="36.4752%" y="415.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.02%)</title><rect x="36.2252%" y="389" width="0.0230%" height="15" fill="rgb(245,119,9)" fg:x="23604" fg:w="15"/><text x="36.4752%" y="399.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.02%)</title><rect x="36.2252%" y="373" width="0.0230%" height="15" fill="rgb(241,163,25)" fg:x="23604" fg:w="15"/><text x="36.4752%" y="383.50"></text></g><g><title>_int_malloc (15 samples, 0.02%)</title><rect x="36.2252%" y="357" width="0.0230%" height="15" fill="rgb(217,214,3)" fg:x="23604" fg:w="15"/><text x="36.4752%" y="367.50"></text></g><g><title>__libc_read (25 samples, 0.04%)</title><rect x="36.2498%" y="437" width="0.0384%" height="15" fill="rgb(240,86,28)" fg:x="23620" fg:w="25"/><text x="36.4998%" y="447.50"></text></g><g><title>[unknown] (25 samples, 0.04%)</title><rect x="36.2498%" y="421" width="0.0384%" height="15" fill="rgb(215,47,9)" fg:x="23620" fg:w="25"/><text x="36.4998%" y="431.50"></text></g><g><title>[unknown] (25 samples, 0.04%)</title><rect x="36.2498%" y="405" width="0.0384%" height="15" fill="rgb(252,25,45)" fg:x="23620" fg:w="25"/><text x="36.4998%" y="415.50"></text></g><g><title>[unknown] (25 samples, 0.04%)</title><rect x="36.2498%" y="389" width="0.0384%" height="15" fill="rgb(251,164,9)" fg:x="23620" fg:w="25"/><text x="36.4998%" y="399.50"></text></g><g><title>[unknown] (25 samples, 0.04%)</title><rect x="36.2498%" y="373" width="0.0384%" height="15" fill="rgb(233,194,0)" fg:x="23620" fg:w="25"/><text x="36.4998%" y="383.50"></text></g><g><title>[unknown] (25 samples, 0.04%)</title><rect x="36.2498%" y="357" width="0.0384%" height="15" fill="rgb(249,111,24)" fg:x="23620" fg:w="25"/><text x="36.4998%" y="367.50"></text></g><g><title>[unknown] (25 samples, 0.04%)</title><rect x="36.2498%" y="341" width="0.0384%" height="15" fill="rgb(250,223,3)" fg:x="23620" fg:w="25"/><text x="36.4998%" y="351.50"></text></g><g><title>[unknown] (24 samples, 0.04%)</title><rect x="36.2513%" y="325" width="0.0368%" height="15" fill="rgb(236,178,37)" fg:x="23621" fg:w="24"/><text x="36.5013%" y="335.50"></text></g><g><title>[unknown] (23 samples, 0.04%)</title><rect x="36.2529%" y="309" width="0.0353%" height="15" fill="rgb(241,158,50)" fg:x="23622" fg:w="23"/><text x="36.5029%" y="319.50"></text></g><g><title>[unknown] (21 samples, 0.03%)</title><rect x="36.2559%" y="293" width="0.0322%" height="15" fill="rgb(213,121,41)" fg:x="23624" fg:w="21"/><text x="36.5059%" y="303.50"></text></g><g><title>[unknown] (19 samples, 0.03%)</title><rect x="36.2590%" y="277" width="0.0292%" height="15" fill="rgb(240,92,3)" fg:x="23626" fg:w="19"/><text x="36.5090%" y="287.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="36.2697%" y="261" width="0.0184%" height="15" fill="rgb(205,123,3)" fg:x="23633" fg:w="12"/><text x="36.5197%" y="271.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="36.2759%" y="245" width="0.0123%" height="15" fill="rgb(205,97,47)" fg:x="23637" fg:w="8"/><text x="36.5259%" y="255.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (63 samples, 0.10%)</title><rect x="36.1930%" y="549" width="0.0967%" height="15" fill="rgb(247,152,14)" fg:x="23583" fg:w="63"/><text x="36.4430%" y="559.50"></text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (57 samples, 0.09%)</title><rect x="36.2022%" y="533" width="0.0875%" height="15" fill="rgb(248,195,53)" fg:x="23589" fg:w="57"/><text x="36.4522%" y="543.50"></text></g><g><title>std::io::Read::read_exact (27 samples, 0.04%)</title><rect x="36.2483%" y="517" width="0.0414%" height="15" fill="rgb(226,201,16)" fg:x="23619" fg:w="27"/><text x="36.4983%" y="527.50"></text></g><g><title>std::io::default_read_exact (27 samples, 0.04%)</title><rect x="36.2483%" y="501" width="0.0414%" height="15" fill="rgb(205,98,0)" fg:x="23619" fg:w="27"/><text x="36.4983%" y="511.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (27 samples, 0.04%)</title><rect x="36.2483%" y="485" width="0.0414%" height="15" fill="rgb(214,191,48)" fg:x="23619" fg:w="27"/><text x="36.4983%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::read (27 samples, 0.04%)</title><rect x="36.2483%" y="469" width="0.0414%" height="15" fill="rgb(237,112,39)" fg:x="23619" fg:w="27"/><text x="36.4983%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (27 samples, 0.04%)</title><rect x="36.2483%" y="453" width="0.0414%" height="15" fill="rgb(247,203,27)" fg:x="23619" fg:w="27"/><text x="36.4983%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut (71 samples, 0.11%)</title><rect x="36.1915%" y="565" width="0.1090%" height="15" fill="rgb(235,124,28)" fg:x="23582" fg:w="71"/><text x="36.4415%" y="575.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (11 samples, 0.02%)</title><rect x="36.3342%" y="421" width="0.0169%" height="15" fill="rgb(208,207,46)" fg:x="23675" fg:w="11"/><text x="36.5842%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (12 samples, 0.02%)</title><rect x="36.3342%" y="453" width="0.0184%" height="15" fill="rgb(234,176,4)" fg:x="23675" fg:w="12"/><text x="36.5842%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (12 samples, 0.02%)</title><rect x="36.3342%" y="437" width="0.0184%" height="15" fill="rgb(230,133,28)" fg:x="23675" fg:w="12"/><text x="36.5842%" y="447.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.03%)</title><rect x="36.3541%" y="405" width="0.0276%" height="15" fill="rgb(211,137,40)" fg:x="23688" fg:w="18"/><text x="36.6041%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find (53 samples, 0.08%)</title><rect x="36.3081%" y="485" width="0.0813%" height="15" fill="rgb(254,35,13)" fg:x="23658" fg:w="53"/><text x="36.5581%" y="495.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (47 samples, 0.07%)</title><rect x="36.3173%" y="469" width="0.0721%" height="15" fill="rgb(225,49,51)" fg:x="23664" fg:w="47"/><text x="36.5673%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (24 samples, 0.04%)</title><rect x="36.3526%" y="453" width="0.0368%" height="15" fill="rgb(251,10,15)" fg:x="23687" fg:w="24"/><text x="36.6026%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (24 samples, 0.04%)</title><rect x="36.3526%" y="437" width="0.0368%" height="15" fill="rgb(228,207,15)" fg:x="23687" fg:w="24"/><text x="36.6026%" y="447.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (24 samples, 0.04%)</title><rect x="36.3526%" y="421" width="0.0368%" height="15" fill="rgb(241,99,19)" fg:x="23687" fg:w="24"/><text x="36.6026%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="36.5245%" y="469" width="0.0246%" height="15" fill="rgb(207,104,49)" fg:x="23799" fg:w="16"/><text x="36.7745%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="36.5245%" y="453" width="0.0246%" height="15" fill="rgb(234,99,18)" fg:x="23799" fg:w="16"/><text x="36.7745%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (7 samples, 0.01%)</title><rect x="36.5598%" y="469" width="0.0107%" height="15" fill="rgb(213,191,49)" fg:x="23822" fg:w="7"/><text x="36.8098%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (7 samples, 0.01%)</title><rect x="36.5598%" y="453" width="0.0107%" height="15" fill="rgb(210,226,19)" fg:x="23822" fg:w="7"/><text x="36.8098%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.01%)</title><rect x="36.5705%" y="469" width="0.0138%" height="15" fill="rgb(229,97,18)" fg:x="23829" fg:w="9"/><text x="36.8205%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (9 samples, 0.01%)</title><rect x="36.5844%" y="469" width="0.0138%" height="15" fill="rgb(211,167,15)" fg:x="23838" fg:w="9"/><text x="36.8344%" y="479.50"></text></g><g><title>core::intrinsics::copy (9 samples, 0.01%)</title><rect x="36.5844%" y="453" width="0.0138%" height="15" fill="rgb(210,169,34)" fg:x="23838" fg:w="9"/><text x="36.8344%" y="463.50"></text></g><g><title>__calloc (12 samples, 0.02%)</title><rect x="36.5997%" y="357" width="0.0184%" height="15" fill="rgb(241,121,31)" fg:x="23848" fg:w="12"/><text x="36.8497%" y="367.50"></text></g><g><title>_int_malloc (8 samples, 0.01%)</title><rect x="36.6058%" y="341" width="0.0123%" height="15" fill="rgb(232,40,11)" fg:x="23852" fg:w="8"/><text x="36.8558%" y="351.50"></text></g><g><title>alloc::vec::from_elem (14 samples, 0.02%)</title><rect x="36.5982%" y="469" width="0.0215%" height="15" fill="rgb(205,86,26)" fg:x="23847" fg:w="14"/><text x="36.8482%" y="479.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (14 samples, 0.02%)</title><rect x="36.5982%" y="453" width="0.0215%" height="15" fill="rgb(231,126,28)" fg:x="23847" fg:w="14"/><text x="36.8482%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (14 samples, 0.02%)</title><rect x="36.5982%" y="437" width="0.0215%" height="15" fill="rgb(219,221,18)" fg:x="23847" fg:w="14"/><text x="36.8482%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.02%)</title><rect x="36.5982%" y="421" width="0.0215%" height="15" fill="rgb(211,40,0)" fg:x="23847" fg:w="14"/><text x="36.8482%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (14 samples, 0.02%)</title><rect x="36.5982%" y="405" width="0.0215%" height="15" fill="rgb(239,85,43)" fg:x="23847" fg:w="14"/><text x="36.8482%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="36.5982%" y="389" width="0.0215%" height="15" fill="rgb(231,55,21)" fg:x="23847" fg:w="14"/><text x="36.8482%" y="399.50"></text></g><g><title>alloc::alloc::alloc_zeroed (14 samples, 0.02%)</title><rect x="36.5982%" y="373" width="0.0215%" height="15" fill="rgb(225,184,43)" fg:x="23847" fg:w="14"/><text x="36.8482%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (18 samples, 0.03%)</title><rect x="36.6442%" y="325" width="0.0276%" height="15" fill="rgb(251,158,41)" fg:x="23877" fg:w="18"/><text x="36.8942%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (18 samples, 0.03%)</title><rect x="36.6442%" y="309" width="0.0276%" height="15" fill="rgb(234,159,37)" fg:x="23877" fg:w="18"/><text x="36.8942%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (17 samples, 0.03%)</title><rect x="36.6457%" y="293" width="0.0261%" height="15" fill="rgb(216,204,22)" fg:x="23878" fg:w="17"/><text x="36.8957%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (13 samples, 0.02%)</title><rect x="37.3210%" y="229" width="0.0200%" height="15" fill="rgb(214,17,3)" fg:x="24318" fg:w="13"/><text x="37.5710%" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (13 samples, 0.02%)</title><rect x="37.3210%" y="213" width="0.0200%" height="15" fill="rgb(212,111,17)" fg:x="24318" fg:w="13"/><text x="37.5710%" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (13 samples, 0.02%)</title><rect x="37.3210%" y="197" width="0.0200%" height="15" fill="rgb(221,157,24)" fg:x="24318" fg:w="13"/><text x="37.5710%" y="207.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (22 samples, 0.03%)</title><rect x="37.3179%" y="261" width="0.0338%" height="15" fill="rgb(252,16,13)" fg:x="24316" fg:w="22"/><text x="37.5679%" y="271.50"></text></g><g><title>yakvdb::disk::block::get_u32 (20 samples, 0.03%)</title><rect x="37.3210%" y="245" width="0.0307%" height="15" fill="rgb(221,62,2)" fg:x="24318" fg:w="20"/><text x="37.5710%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.01%)</title><rect x="37.3410%" y="229" width="0.0107%" height="15" fill="rgb(247,87,22)" fg:x="24331" fg:w="7"/><text x="37.5910%" y="239.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.01%)</title><rect x="37.3410%" y="213" width="0.0107%" height="15" fill="rgb(215,73,9)" fg:x="24331" fg:w="7"/><text x="37.5910%" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (15 samples, 0.02%)</title><rect x="37.3717%" y="245" width="0.0230%" height="15" fill="rgb(207,175,33)" fg:x="24351" fg:w="15"/><text x="37.6217%" y="255.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (15 samples, 0.02%)</title><rect x="37.3717%" y="229" width="0.0230%" height="15" fill="rgb(243,129,54)" fg:x="24351" fg:w="15"/><text x="37.6217%" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (15 samples, 0.02%)</title><rect x="37.3717%" y="213" width="0.0230%" height="15" fill="rgb(227,119,45)" fg:x="24351" fg:w="15"/><text x="37.6217%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (510 samples, 0.78%)</title><rect x="36.6442%" y="373" width="0.7827%" height="15" fill="rgb(205,109,36)" fg:x="23877" fg:w="510"/><text x="36.8942%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (510 samples, 0.78%)</title><rect x="36.6442%" y="357" width="0.7827%" height="15" fill="rgb(205,6,39)" fg:x="23877" fg:w="510"/><text x="36.8942%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (510 samples, 0.78%)</title><rect x="36.6442%" y="341" width="0.7827%" height="15" fill="rgb(221,32,16)" fg:x="23877" fg:w="510"/><text x="36.8942%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (492 samples, 0.76%)</title><rect x="36.6718%" y="325" width="0.7551%" height="15" fill="rgb(228,144,50)" fg:x="23895" fg:w="492"/><text x="36.9218%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (155 samples, 0.24%)</title><rect x="37.1890%" y="309" width="0.2379%" height="15" fill="rgb(229,201,53)" fg:x="24232" fg:w="155"/><text x="37.4390%" y="319.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (155 samples, 0.24%)</title><rect x="37.1890%" y="293" width="0.2379%" height="15" fill="rgb(249,153,27)" fg:x="24232" fg:w="155"/><text x="37.4390%" y="303.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (134 samples, 0.21%)</title><rect x="37.2213%" y="277" width="0.2057%" height="15" fill="rgb(227,106,25)" fg:x="24253" fg:w="134"/><text x="37.4713%" y="287.50"></text></g><g><title>yakvdb::disk::block::get_u32 (49 samples, 0.08%)</title><rect x="37.3517%" y="261" width="0.0752%" height="15" fill="rgb(230,65,29)" fg:x="24338" fg:w="49"/><text x="37.6017%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (20 samples, 0.03%)</title><rect x="37.3962%" y="245" width="0.0307%" height="15" fill="rgb(221,57,46)" fg:x="24367" fg:w="20"/><text x="37.6462%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (20 samples, 0.03%)</title><rect x="37.3962%" y="229" width="0.0307%" height="15" fill="rgb(229,161,17)" fg:x="24367" fg:w="20"/><text x="37.6462%" y="239.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (15 samples, 0.02%)</title><rect x="37.4929%" y="213" width="0.0230%" height="15" fill="rgb(222,213,11)" fg:x="24430" fg:w="15"/><text x="37.7429%" y="223.50"></text></g><g><title>_int_free (21 samples, 0.03%)</title><rect x="37.5159%" y="213" width="0.0322%" height="15" fill="rgb(235,35,13)" fg:x="24445" fg:w="21"/><text x="37.7659%" y="223.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="38.9079%" y="181" width="0.0107%" height="15" fill="rgb(233,158,34)" fg:x="25352" fg:w="7"/><text x="39.1579%" y="191.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="38.9079%" y="165" width="0.0107%" height="15" fill="rgb(215,151,48)" fg:x="25352" fg:w="7"/><text x="39.1579%" y="175.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="38.9079%" y="149" width="0.0107%" height="15" fill="rgb(229,84,14)" fg:x="25352" fg:w="7"/><text x="39.1579%" y="159.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="38.9079%" y="133" width="0.0107%" height="15" fill="rgb(229,68,14)" fg:x="25352" fg:w="7"/><text x="39.1579%" y="143.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="38.9079%" y="117" width="0.0107%" height="15" fill="rgb(243,106,26)" fg:x="25352" fg:w="7"/><text x="39.1579%" y="127.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="38.9079%" y="101" width="0.0107%" height="15" fill="rgb(206,45,38)" fg:x="25352" fg:w="7"/><text x="39.1579%" y="111.50"></text></g><g><title>malloc_consolidate (868 samples, 1.33%)</title><rect x="37.8551%" y="197" width="1.3321%" height="15" fill="rgb(226,6,15)" fg:x="24666" fg:w="868"/><text x="38.1051%" y="207.50"></text></g><g><title>unlink_chunk.isra.0 (175 samples, 0.27%)</title><rect x="38.9186%" y="181" width="0.2686%" height="15" fill="rgb(232,22,54)" fg:x="25359" fg:w="175"/><text x="39.1686%" y="191.50"></text></g><g><title>_int_malloc (1,073 samples, 1.65%)</title><rect x="37.5482%" y="213" width="1.6467%" height="15" fill="rgb(229,222,32)" fg:x="24466" fg:w="1073"/><text x="37.7982%" y="223.50"></text></g><g><title>__GI___libc_realloc (1,144 samples, 1.76%)</title><rect x="37.4438%" y="245" width="1.7557%" height="15" fill="rgb(228,62,29)" fg:x="24398" fg:w="1144"/><text x="37.6938%" y="255.50"></text></g><g><title>_int_realloc (1,127 samples, 1.73%)</title><rect x="37.4699%" y="229" width="1.7296%" height="15" fill="rgb(251,103,34)" fg:x="24415" fg:w="1127"/><text x="37.7199%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,146 samples, 1.76%)</title><rect x="37.4438%" y="293" width="1.7588%" height="15" fill="rgb(233,12,30)" fg:x="24398" fg:w="1146"/><text x="37.6938%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,146 samples, 1.76%)</title><rect x="37.4438%" y="277" width="1.7588%" height="15" fill="rgb(238,52,0)" fg:x="24398" fg:w="1146"/><text x="37.6938%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1,146 samples, 1.76%)</title><rect x="37.4438%" y="261" width="1.7588%" height="15" fill="rgb(223,98,5)" fg:x="24398" fg:w="1146"/><text x="37.6938%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,151 samples, 1.77%)</title><rect x="37.4423%" y="309" width="1.7664%" height="15" fill="rgb(228,75,37)" fg:x="24397" fg:w="1151"/><text x="37.6923%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,162 samples, 1.78%)</title><rect x="37.4315%" y="373" width="1.7833%" height="15" fill="rgb(205,115,49)" fg:x="24390" fg:w="1162"/><text x="37.6815%" y="383.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,162 samples, 1.78%)</title><rect x="37.4315%" y="357" width="1.7833%" height="15" fill="rgb(250,154,43)" fg:x="24390" fg:w="1162"/><text x="37.6815%" y="367.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,162 samples, 1.78%)</title><rect x="37.4315%" y="341" width="1.7833%" height="15" fill="rgb(226,43,29)" fg:x="24390" fg:w="1162"/><text x="37.6815%" y="351.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,162 samples, 1.78%)</title><rect x="37.4315%" y="325" width="1.7833%" height="15" fill="rgb(249,228,39)" fg:x="24390" fg:w="1162"/><text x="37.6815%" y="335.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,776 samples, 2.73%)</title><rect x="36.6243%" y="389" width="2.7256%" height="15" fill="rgb(216,79,43)" fg:x="23864" fg:w="1776"/><text x="36.8743%" y="399.50">al..</text></g><g><title>core::ptr::write (88 samples, 0.14%)</title><rect x="39.2148%" y="373" width="0.1351%" height="15" fill="rgb(228,95,12)" fg:x="25552" fg:w="88"/><text x="39.4648%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.03%)</title><rect x="39.3606%" y="341" width="0.0338%" height="15" fill="rgb(249,221,15)" fg:x="25647" fg:w="22"/><text x="39.6106%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (14 samples, 0.02%)</title><rect x="39.4711%" y="245" width="0.0215%" height="15" fill="rgb(233,34,13)" fg:x="25719" fg:w="14"/><text x="39.7211%" y="255.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="43.1729%" y="117" width="0.0123%" height="15" fill="rgb(214,103,39)" fg:x="28131" fg:w="8"/><text x="43.4229%" y="127.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="43.1744%" y="101" width="0.0107%" height="15" fill="rgb(251,126,39)" fg:x="28132" fg:w="7"/><text x="43.4244%" y="111.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="43.1744%" y="85" width="0.0107%" height="15" fill="rgb(214,216,36)" fg:x="28132" fg:w="7"/><text x="43.4244%" y="95.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="43.1744%" y="69" width="0.0107%" height="15" fill="rgb(220,221,8)" fg:x="28132" fg:w="7"/><text x="43.4244%" y="79.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="43.1744%" y="53" width="0.0107%" height="15" fill="rgb(240,216,3)" fg:x="28132" fg:w="7"/><text x="43.4244%" y="63.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="43.1744%" y="37" width="0.0107%" height="15" fill="rgb(232,218,17)" fg:x="28132" fg:w="7"/><text x="43.4244%" y="47.50"></text></g><g><title>__GI___libc_malloc (2,367 samples, 3.63%)</title><rect x="39.6446%" y="149" width="3.6327%" height="15" fill="rgb(229,163,45)" fg:x="25832" fg:w="2367"/><text x="39.8946%" y="159.50">__GI..</text></g><g><title>_int_malloc (1,837 samples, 2.82%)</title><rect x="40.4580%" y="133" width="2.8193%" height="15" fill="rgb(231,110,42)" fg:x="26362" fg:w="1837"/><text x="40.7080%" y="143.50">_i..</text></g><g><title>unlink_chunk.isra.0 (60 samples, 0.09%)</title><rect x="43.1851%" y="117" width="0.0921%" height="15" fill="rgb(208,170,48)" fg:x="28139" fg:w="60"/><text x="43.4351%" y="127.50"></text></g><g><title>__rdl_alloc (36 samples, 0.06%)</title><rect x="43.2772%" y="149" width="0.0552%" height="15" fill="rgb(239,116,25)" fg:x="28199" fg:w="36"/><text x="43.5272%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (36 samples, 0.06%)</title><rect x="43.2772%" y="133" width="0.0552%" height="15" fill="rgb(219,200,50)" fg:x="28199" fg:w="36"/><text x="43.5272%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,538 samples, 3.90%)</title><rect x="39.4926%" y="245" width="3.8951%" height="15" fill="rgb(245,200,0)" fg:x="25733" fg:w="2538"/><text x="39.7426%" y="255.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,514 samples, 3.86%)</title><rect x="39.5295%" y="229" width="3.8583%" height="15" fill="rgb(245,119,33)" fg:x="25757" fg:w="2514"/><text x="39.7795%" y="239.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,514 samples, 3.86%)</title><rect x="39.5295%" y="213" width="3.8583%" height="15" fill="rgb(231,125,12)" fg:x="25757" fg:w="2514"/><text x="39.7795%" y="223.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,477 samples, 3.80%)</title><rect x="39.5862%" y="197" width="3.8015%" height="15" fill="rgb(216,96,41)" fg:x="25794" fg:w="2477"/><text x="39.8362%" y="207.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,477 samples, 3.80%)</title><rect x="39.5862%" y="181" width="3.8015%" height="15" fill="rgb(248,43,45)" fg:x="25794" fg:w="2477"/><text x="39.8362%" y="191.50">allo..</text></g><g><title>alloc::alloc::alloc (2,477 samples, 3.80%)</title><rect x="39.5862%" y="165" width="3.8015%" height="15" fill="rgb(217,222,7)" fg:x="25794" fg:w="2477"/><text x="39.8362%" y="175.50">allo..</text></g><g><title>__rust_alloc (36 samples, 0.06%)</title><rect x="43.3325%" y="149" width="0.0552%" height="15" fill="rgb(233,28,6)" fg:x="28235" fg:w="36"/><text x="43.5825%" y="159.50"></text></g><g><title>__memcpy_sse2_unaligned (45 samples, 0.07%)</title><rect x="43.4077%" y="213" width="0.0691%" height="15" fill="rgb(231,218,15)" fg:x="28284" fg:w="45"/><text x="43.6577%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,716 samples, 4.17%)</title><rect x="39.4711%" y="309" width="4.1683%" height="15" fill="rgb(226,171,48)" fg:x="25719" fg:w="2716"/><text x="39.7211%" y="319.50">alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,716 samples, 4.17%)</title><rect x="39.4711%" y="293" width="4.1683%" height="15" fill="rgb(235,201,9)" fg:x="25719" fg:w="2716"/><text x="39.7211%" y="303.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (2,716 samples, 4.17%)</title><rect x="39.4711%" y="277" width="4.1683%" height="15" fill="rgb(217,80,15)" fg:x="25719" fg:w="2716"/><text x="39.7211%" y="287.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,716 samples, 4.17%)</title><rect x="39.4711%" y="261" width="4.1683%" height="15" fill="rgb(219,152,8)" fg:x="25719" fg:w="2716"/><text x="39.7211%" y="271.50">&lt;T as..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (164 samples, 0.25%)</title><rect x="43.3877%" y="245" width="0.2517%" height="15" fill="rgb(243,107,38)" fg:x="28271" fg:w="164"/><text x="43.6377%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (164 samples, 0.25%)</title><rect x="43.3877%" y="229" width="0.2517%" height="15" fill="rgb(231,17,5)" fg:x="28271" fg:w="164"/><text x="43.6377%" y="239.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (106 samples, 0.16%)</title><rect x="43.4767%" y="213" width="0.1627%" height="15" fill="rgb(209,25,54)" fg:x="28329" fg:w="106"/><text x="43.7267%" y="223.50"></text></g><g><title>yakvdb::disk::block::get_key (71 samples, 0.11%)</title><rect x="43.6394%" y="309" width="0.1090%" height="15" fill="rgb(219,0,2)" fg:x="28435" fg:w="71"/><text x="43.8894%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (51 samples, 0.08%)</title><rect x="43.6701%" y="293" width="0.0783%" height="15" fill="rgb(246,9,5)" fg:x="28455" fg:w="51"/><text x="43.9201%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (51 samples, 0.08%)</title><rect x="43.6701%" y="277" width="0.0783%" height="15" fill="rgb(226,159,4)" fg:x="28455" fg:w="51"/><text x="43.9201%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.01%)</title><rect x="43.7346%" y="261" width="0.0138%" height="15" fill="rgb(219,175,34)" fg:x="28497" fg:w="9"/><text x="43.9846%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (9 samples, 0.01%)</title><rect x="43.7346%" y="245" width="0.0138%" height="15" fill="rgb(236,10,46)" fg:x="28497" fg:w="9"/><text x="43.9846%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (9 samples, 0.01%)</title><rect x="43.7346%" y="229" width="0.0138%" height="15" fill="rgb(240,211,16)" fg:x="28497" fg:w="9"/><text x="43.9846%" y="239.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (2,912 samples, 4.47%)</title><rect x="39.3944%" y="325" width="4.4691%" height="15" fill="rgb(205,3,43)" fg:x="25669" fg:w="2912"/><text x="39.6444%" y="335.50">&lt;yakv..</text></g><g><title>yakvdb::disk::block::get_val (75 samples, 0.12%)</title><rect x="43.7484%" y="309" width="0.1151%" height="15" fill="rgb(245,7,22)" fg:x="28506" fg:w="75"/><text x="43.9984%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (43 samples, 0.07%)</title><rect x="43.7975%" y="293" width="0.0660%" height="15" fill="rgb(239,132,32)" fg:x="28538" fg:w="43"/><text x="44.0475%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (43 samples, 0.07%)</title><rect x="43.7975%" y="277" width="0.0660%" height="15" fill="rgb(228,202,34)" fg:x="28538" fg:w="43"/><text x="44.0475%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.02%)</title><rect x="43.8481%" y="261" width="0.0153%" height="15" fill="rgb(254,200,22)" fg:x="28571" fg:w="10"/><text x="44.0981%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (10 samples, 0.02%)</title><rect x="43.8481%" y="245" width="0.0153%" height="15" fill="rgb(219,10,39)" fg:x="28571" fg:w="10"/><text x="44.0981%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (10 samples, 0.02%)</title><rect x="43.8481%" y="229" width="0.0153%" height="15" fill="rgb(226,210,39)" fg:x="28571" fg:w="10"/><text x="44.0981%" y="239.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2,969 samples, 4.56%)</title><rect x="39.3944%" y="341" width="4.5565%" height="15" fill="rgb(208,219,16)" fg:x="25669" fg:w="2969"/><text x="39.6444%" y="351.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (57 samples, 0.09%)</title><rect x="43.8635%" y="325" width="0.0875%" height="15" fill="rgb(216,158,51)" fg:x="28581" fg:w="57"/><text x="44.1135%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (57 samples, 0.09%)</title><rect x="43.8635%" y="309" width="0.0875%" height="15" fill="rgb(233,14,44)" fg:x="28581" fg:w="57"/><text x="44.1135%" y="319.50"></text></g><g><title>core::ptr::write (57 samples, 0.09%)</title><rect x="43.8635%" y="293" width="0.0875%" height="15" fill="rgb(237,97,39)" fg:x="28581" fg:w="57"/><text x="44.1135%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,779 samples, 7.33%)</title><rect x="36.6243%" y="405" width="7.3344%" height="15" fill="rgb(218,198,43)" fg:x="23864" fg:w="4779"/><text x="36.8743%" y="415.50">&lt;alloc::ve..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,003 samples, 4.61%)</title><rect x="39.3499%" y="389" width="4.6087%" height="15" fill="rgb(231,104,20)" fg:x="25640" fg:w="3003"/><text x="39.5999%" y="399.50">core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,002 samples, 4.61%)</title><rect x="39.3514%" y="373" width="4.6072%" height="15" fill="rgb(254,36,13)" fg:x="25641" fg:w="3002"/><text x="39.6014%" y="383.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,001 samples, 4.61%)</title><rect x="39.3530%" y="357" width="4.6057%" height="15" fill="rgb(248,14,50)" fg:x="25642" fg:w="3001"/><text x="39.6030%" y="367.50">core:..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="43.9586%" y="405" width="0.0153%" height="15" fill="rgb(217,107,29)" fg:x="28643" fg:w="10"/><text x="44.2086%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (10 samples, 0.02%)</title><rect x="43.9586%" y="389" width="0.0153%" height="15" fill="rgb(251,169,33)" fg:x="28643" fg:w="10"/><text x="44.2086%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.02%)</title><rect x="43.9586%" y="373" width="0.0153%" height="15" fill="rgb(217,108,32)" fg:x="28643" fg:w="10"/><text x="44.2086%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (10 samples, 0.02%)</title><rect x="43.9586%" y="357" width="0.0153%" height="15" fill="rgb(219,66,42)" fg:x="28643" fg:w="10"/><text x="44.2086%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.01%)</title><rect x="43.9632%" y="341" width="0.0107%" height="15" fill="rgb(206,180,7)" fg:x="28646" fg:w="7"/><text x="44.2132%" y="351.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (7 samples, 0.01%)</title><rect x="43.9632%" y="325" width="0.0107%" height="15" fill="rgb(208,226,31)" fg:x="28646" fg:w="7"/><text x="44.2132%" y="335.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (7 samples, 0.01%)</title><rect x="43.9632%" y="309" width="0.0107%" height="15" fill="rgb(218,26,49)" fg:x="28646" fg:w="7"/><text x="44.2132%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,836 samples, 7.42%)</title><rect x="36.6197%" y="469" width="7.4218%" height="15" fill="rgb(233,197,48)" fg:x="23861" fg:w="4836"/><text x="36.8697%" y="479.50">core::iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,836 samples, 7.42%)</title><rect x="36.6197%" y="453" width="7.4218%" height="15" fill="rgb(252,181,51)" fg:x="23861" fg:w="4836"/><text x="36.8697%" y="463.50">&lt;alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,834 samples, 7.42%)</title><rect x="36.6227%" y="437" width="7.4188%" height="15" fill="rgb(253,90,19)" fg:x="23863" fg:w="4834"/><text x="36.8727%" y="447.50">&lt;alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,833 samples, 7.42%)</title><rect x="36.6243%" y="421" width="7.4172%" height="15" fill="rgb(215,171,30)" fg:x="23864" fg:w="4833"/><text x="36.8743%" y="431.50">&lt;alloc::ve..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (44 samples, 0.07%)</title><rect x="43.9740%" y="405" width="0.0675%" height="15" fill="rgb(214,222,9)" fg:x="28653" fg:w="44"/><text x="44.2240%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (44 samples, 0.07%)</title><rect x="43.9740%" y="389" width="0.0675%" height="15" fill="rgb(223,3,22)" fg:x="28653" fg:w="44"/><text x="44.2240%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43 samples, 0.07%)</title><rect x="43.9755%" y="373" width="0.0660%" height="15" fill="rgb(225,196,46)" fg:x="28654" fg:w="43"/><text x="44.2255%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.07%)</title><rect x="43.9755%" y="357" width="0.0660%" height="15" fill="rgb(209,110,37)" fg:x="28654" fg:w="43"/><text x="44.2255%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42 samples, 0.06%)</title><rect x="43.9770%" y="341" width="0.0645%" height="15" fill="rgb(249,89,12)" fg:x="28655" fg:w="42"/><text x="44.2270%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.06%)</title><rect x="43.9770%" y="325" width="0.0645%" height="15" fill="rgb(226,27,33)" fg:x="28655" fg:w="42"/><text x="44.2270%" y="335.50"></text></g><g><title>alloc::alloc::alloc (42 samples, 0.06%)</title><rect x="43.9770%" y="309" width="0.0645%" height="15" fill="rgb(213,82,22)" fg:x="28655" fg:w="42"/><text x="44.2270%" y="319.50"></text></g><g><title>__GI___libc_malloc (42 samples, 0.06%)</title><rect x="43.9770%" y="293" width="0.0645%" height="15" fill="rgb(248,140,0)" fg:x="28655" fg:w="42"/><text x="44.2270%" y="303.50"></text></g><g><title>_int_malloc (35 samples, 0.05%)</title><rect x="43.9878%" y="277" width="0.0537%" height="15" fill="rgb(228,106,3)" fg:x="28662" fg:w="35"/><text x="44.2378%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.03%)</title><rect x="44.0415%" y="421" width="0.0322%" height="15" fill="rgb(209,23,37)" fg:x="28697" fg:w="21"/><text x="44.2915%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (19 samples, 0.03%)</title><rect x="44.1367%" y="341" width="0.0292%" height="15" fill="rgb(241,93,50)" fg:x="28759" fg:w="19"/><text x="44.3867%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (19 samples, 0.03%)</title><rect x="44.1367%" y="325" width="0.0292%" height="15" fill="rgb(253,46,43)" fg:x="28759" fg:w="19"/><text x="44.3867%" y="335.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (19 samples, 0.03%)</title><rect x="44.1367%" y="309" width="0.0292%" height="15" fill="rgb(226,206,43)" fg:x="28759" fg:w="19"/><text x="44.3867%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (72 samples, 0.11%)</title><rect x="44.1658%" y="341" width="0.1105%" height="15" fill="rgb(217,54,7)" fg:x="28778" fg:w="72"/><text x="44.4158%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (72 samples, 0.11%)</title><rect x="44.1658%" y="325" width="0.1105%" height="15" fill="rgb(223,5,52)" fg:x="28778" fg:w="72"/><text x="44.4158%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (188 samples, 0.29%)</title><rect x="44.0737%" y="421" width="0.2885%" height="15" fill="rgb(206,52,46)" fg:x="28718" fg:w="188"/><text x="44.3237%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (188 samples, 0.29%)</title><rect x="44.0737%" y="405" width="0.2885%" height="15" fill="rgb(253,136,11)" fg:x="28718" fg:w="188"/><text x="44.3237%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (188 samples, 0.29%)</title><rect x="44.0737%" y="389" width="0.2885%" height="15" fill="rgb(208,106,33)" fg:x="28718" fg:w="188"/><text x="44.3237%" y="399.50"></text></g><g><title>yakvdb::disk::block::put_slot (167 samples, 0.26%)</title><rect x="44.1060%" y="373" width="0.2563%" height="15" fill="rgb(206,54,4)" fg:x="28739" fg:w="167"/><text x="44.3560%" y="383.50"></text></g><g><title>yakvdb::disk::block::put_u32 (157 samples, 0.24%)</title><rect x="44.1213%" y="357" width="0.2409%" height="15" fill="rgb(213,3,15)" fg:x="28749" fg:w="157"/><text x="44.3713%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (56 samples, 0.09%)</title><rect x="44.2763%" y="341" width="0.0859%" height="15" fill="rgb(252,211,39)" fg:x="28850" fg:w="56"/><text x="44.5263%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (56 samples, 0.09%)</title><rect x="44.2763%" y="325" width="0.0859%" height="15" fill="rgb(223,6,36)" fg:x="28850" fg:w="56"/><text x="44.5263%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="44.3623%" y="325" width="0.0246%" height="15" fill="rgb(252,169,45)" fg:x="28906" fg:w="16"/><text x="44.6123%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="44.3623%" y="309" width="0.0246%" height="15" fill="rgb(212,48,26)" fg:x="28906" fg:w="16"/><text x="44.6123%" y="319.50"></text></g><g><title>_int_free (9 samples, 0.01%)</title><rect x="44.3730%" y="293" width="0.0138%" height="15" fill="rgb(251,102,48)" fg:x="28913" fg:w="9"/><text x="44.6230%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (227 samples, 0.35%)</title><rect x="44.0415%" y="469" width="0.3484%" height="15" fill="rgb(243,208,16)" fg:x="28697" fg:w="227"/><text x="44.2915%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (227 samples, 0.35%)</title><rect x="44.0415%" y="453" width="0.3484%" height="15" fill="rgb(219,96,24)" fg:x="28697" fg:w="227"/><text x="44.2915%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (227 samples, 0.35%)</title><rect x="44.0415%" y="437" width="0.3484%" height="15" fill="rgb(219,33,29)" fg:x="28697" fg:w="227"/><text x="44.2915%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;yakvdb::api::page::Slot&gt;&gt; (18 samples, 0.03%)</title><rect x="44.3623%" y="421" width="0.0276%" height="15" fill="rgb(223,176,5)" fg:x="28906" fg:w="18"/><text x="44.6123%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.03%)</title><rect x="44.3623%" y="405" width="0.0276%" height="15" fill="rgb(228,140,14)" fg:x="28906" fg:w="18"/><text x="44.6123%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;yakvdb::api::page::Slot,alloc::alloc::Global&gt;&gt; (18 samples, 0.03%)</title><rect x="44.3623%" y="389" width="0.0276%" height="15" fill="rgb(217,179,31)" fg:x="28906" fg:w="18"/><text x="44.6123%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.03%)</title><rect x="44.3623%" y="373" width="0.0276%" height="15" fill="rgb(230,9,30)" fg:x="28906" fg:w="18"/><text x="44.6123%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;yakvdb::api::page::Slot&gt;&gt; (18 samples, 0.03%)</title><rect x="44.3623%" y="357" width="0.0276%" height="15" fill="rgb(230,136,20)" fg:x="28906" fg:w="18"/><text x="44.6123%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.03%)</title><rect x="44.3623%" y="341" width="0.0276%" height="15" fill="rgb(215,210,22)" fg:x="28906" fg:w="18"/><text x="44.6123%" y="351.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (15 samples, 0.02%)</title><rect x="44.3991%" y="389" width="0.0230%" height="15" fill="rgb(218,43,5)" fg:x="28930" fg:w="15"/><text x="44.6491%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (37 samples, 0.06%)</title><rect x="44.3899%" y="469" width="0.0568%" height="15" fill="rgb(216,11,5)" fg:x="28924" fg:w="37"/><text x="44.6399%" y="479.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum (37 samples, 0.06%)</title><rect x="44.3899%" y="453" width="0.0568%" height="15" fill="rgb(209,82,29)" fg:x="28924" fg:w="37"/><text x="44.6399%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.06%)</title><rect x="44.3899%" y="437" width="0.0568%" height="15" fill="rgb(244,115,12)" fg:x="28924" fg:w="37"/><text x="44.6399%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (37 samples, 0.06%)</title><rect x="44.3899%" y="421" width="0.0568%" height="15" fill="rgb(222,82,18)" fg:x="28924" fg:w="37"/><text x="44.6399%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (31 samples, 0.05%)</title><rect x="44.3991%" y="405" width="0.0476%" height="15" fill="rgb(249,227,8)" fg:x="28930" fg:w="31"/><text x="44.6491%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (16 samples, 0.02%)</title><rect x="44.4221%" y="389" width="0.0246%" height="15" fill="rgb(253,141,45)" fg:x="28945" fg:w="16"/><text x="44.6721%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (11 samples, 0.02%)</title><rect x="44.4467%" y="469" width="0.0169%" height="15" fill="rgb(234,184,4)" fg:x="28961" fg:w="11"/><text x="44.6967%" y="479.50"></text></g><g><title>__GI___libc_free (197 samples, 0.30%)</title><rect x="44.5986%" y="325" width="0.3023%" height="15" fill="rgb(218,194,23)" fg:x="29060" fg:w="197"/><text x="44.8486%" y="335.50"></text></g><g><title>__rdl_dealloc (42 samples, 0.06%)</title><rect x="44.9009%" y="325" width="0.0645%" height="15" fill="rgb(235,66,41)" fg:x="29257" fg:w="42"/><text x="45.1509%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (42 samples, 0.06%)</title><rect x="44.9009%" y="309" width="0.0645%" height="15" fill="rgb(245,217,1)" fg:x="29257" fg:w="42"/><text x="45.1509%" y="319.50"></text></g><g><title>__rust_alloc (13 samples, 0.02%)</title><rect x="44.9654%" y="325" width="0.0200%" height="15" fill="rgb(229,91,1)" fg:x="29299" fg:w="13"/><text x="45.2154%" y="335.50"></text></g><g><title>_int_free (13 samples, 0.02%)</title><rect x="44.9654%" y="309" width="0.0200%" height="15" fill="rgb(207,101,30)" fg:x="29299" fg:w="13"/><text x="45.2154%" y="319.50"></text></g><g><title>__rust_dealloc (43 samples, 0.07%)</title><rect x="44.9853%" y="325" width="0.0660%" height="15" fill="rgb(223,82,49)" fg:x="29312" fg:w="43"/><text x="45.2353%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,137 samples, 1.74%)</title><rect x="44.5572%" y="357" width="1.7450%" height="15" fill="rgb(218,167,17)" fg:x="29033" fg:w="1137"/><text x="44.8072%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1,137 samples, 1.74%)</title><rect x="44.5572%" y="341" width="1.7450%" height="15" fill="rgb(208,103,14)" fg:x="29033" fg:w="1137"/><text x="44.8072%" y="351.50"></text></g><g><title>_int_free (815 samples, 1.25%)</title><rect x="45.0513%" y="325" width="1.2508%" height="15" fill="rgb(238,20,8)" fg:x="29355" fg:w="815"/><text x="45.3013%" y="335.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="46.2883%" y="309" width="0.0138%" height="15" fill="rgb(218,80,54)" fg:x="30161" fg:w="9"/><text x="46.5383%" y="319.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="46.2883%" y="293" width="0.0138%" height="15" fill="rgb(240,144,17)" fg:x="30161" fg:w="9"/><text x="46.5383%" y="303.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="46.2883%" y="277" width="0.0138%" height="15" fill="rgb(245,27,50)" fg:x="30161" fg:w="9"/><text x="46.5383%" y="287.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="46.2883%" y="261" width="0.0138%" height="15" fill="rgb(251,51,7)" fg:x="30161" fg:w="9"/><text x="46.5383%" y="271.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="46.2883%" y="245" width="0.0138%" height="15" fill="rgb(245,217,29)" fg:x="30161" fg:w="9"/><text x="46.5383%" y="255.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="46.2883%" y="229" width="0.0138%" height="15" fill="rgb(221,176,29)" fg:x="30161" fg:w="9"/><text x="46.5383%" y="239.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="46.2898%" y="213" width="0.0123%" height="15" fill="rgb(212,180,24)" fg:x="30162" fg:w="8"/><text x="46.5398%" y="223.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="46.2914%" y="197" width="0.0107%" height="15" fill="rgb(254,24,2)" fg:x="30163" fg:w="7"/><text x="46.5414%" y="207.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="46.2914%" y="181" width="0.0107%" height="15" fill="rgb(230,100,2)" fg:x="30163" fg:w="7"/><text x="46.5414%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,302 samples, 2.00%)</title><rect x="44.4635%" y="453" width="1.9982%" height="15" fill="rgb(219,142,25)" fg:x="28972" fg:w="1302"/><text x="44.7135%" y="463.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (1,302 samples, 2.00%)</title><rect x="44.4635%" y="437" width="1.9982%" height="15" fill="rgb(240,73,43)" fg:x="28972" fg:w="1302"/><text x="44.7135%" y="447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (1,300 samples, 2.00%)</title><rect x="44.4666%" y="421" width="1.9951%" height="15" fill="rgb(214,114,15)" fg:x="28974" fg:w="1300"/><text x="44.7166%" y="431.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,300 samples, 2.00%)</title><rect x="44.4666%" y="405" width="1.9951%" height="15" fill="rgb(207,130,4)" fg:x="28974" fg:w="1300"/><text x="44.7166%" y="415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,300 samples, 2.00%)</title><rect x="44.4666%" y="389" width="1.9951%" height="15" fill="rgb(221,25,40)" fg:x="28974" fg:w="1300"/><text x="44.7166%" y="399.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,300 samples, 2.00%)</title><rect x="44.4666%" y="373" width="1.9951%" height="15" fill="rgb(241,184,7)" fg:x="28974" fg:w="1300"/><text x="44.7166%" y="383.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (104 samples, 0.16%)</title><rect x="46.3021%" y="357" width="0.1596%" height="15" fill="rgb(235,159,4)" fg:x="30170" fg:w="104"/><text x="46.5521%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (52 samples, 0.08%)</title><rect x="46.3819%" y="341" width="0.0798%" height="15" fill="rgb(214,87,48)" fg:x="30222" fg:w="52"/><text x="46.6319%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (52 samples, 0.08%)</title><rect x="46.3819%" y="325" width="0.0798%" height="15" fill="rgb(246,198,24)" fg:x="30222" fg:w="52"/><text x="46.6319%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (1,314 samples, 2.02%)</title><rect x="44.4635%" y="469" width="2.0166%" height="15" fill="rgb(209,66,40)" fg:x="28972" fg:w="1314"/><text x="44.7135%" y="479.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (12 samples, 0.02%)</title><rect x="46.4617%" y="453" width="0.0184%" height="15" fill="rgb(233,147,39)" fg:x="30274" fg:w="12"/><text x="46.7117%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="46.4617%" y="437" width="0.0184%" height="15" fill="rgb(231,145,52)" fg:x="30274" fg:w="12"/><text x="46.7117%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="46.4663%" y="421" width="0.0138%" height="15" fill="rgb(206,20,26)" fg:x="30277" fg:w="9"/><text x="46.7163%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="46.4663%" y="405" width="0.0138%" height="15" fill="rgb(238,220,4)" fg:x="30277" fg:w="9"/><text x="46.7163%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.01%)</title><rect x="46.4801%" y="421" width="0.0107%" height="15" fill="rgb(252,195,42)" fg:x="30286" fg:w="7"/><text x="46.7301%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.01%)</title><rect x="46.4801%" y="405" width="0.0107%" height="15" fill="rgb(209,10,6)" fg:x="30286" fg:w="7"/><text x="46.7301%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="46.4801%" y="469" width="0.0123%" height="15" fill="rgb(229,3,52)" fg:x="30286" fg:w="8"/><text x="46.7301%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.01%)</title><rect x="46.4801%" y="453" width="0.0123%" height="15" fill="rgb(253,49,37)" fg:x="30286" fg:w="8"/><text x="46.7301%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="46.4801%" y="437" width="0.0123%" height="15" fill="rgb(240,103,49)" fg:x="30286" fg:w="8"/><text x="46.7301%" y="447.50"></text></g><g><title>__memcpy_sse2_unaligned (51 samples, 0.08%)</title><rect x="46.5078%" y="421" width="0.0783%" height="15" fill="rgb(250,182,30)" fg:x="30304" fg:w="51"/><text x="46.7578%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (259 samples, 0.40%)</title><rect x="46.5078%" y="453" width="0.3975%" height="15" fill="rgb(248,8,30)" fg:x="30304" fg:w="259"/><text x="46.7578%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (259 samples, 0.40%)</title><rect x="46.5078%" y="437" width="0.3975%" height="15" fill="rgb(237,120,30)" fg:x="30304" fg:w="259"/><text x="46.7578%" y="447.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (208 samples, 0.32%)</title><rect x="46.5860%" y="421" width="0.3192%" height="15" fill="rgb(221,146,34)" fg:x="30355" fg:w="208"/><text x="46.8360%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove (6,907 samples, 10.60%)</title><rect x="36.3894%" y="485" width="10.6002%" height="15" fill="rgb(242,55,13)" fg:x="23711" fg:w="6907"/><text x="36.6394%" y="495.50">&lt;yakvdb::disk::..</text></g><g><title>yakvdb::disk::block::put_slice (322 samples, 0.49%)</title><rect x="46.4955%" y="469" width="0.4942%" height="15" fill="rgb(242,112,31)" fg:x="30296" fg:w="322"/><text x="46.7455%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (55 samples, 0.08%)</title><rect x="46.9053%" y="453" width="0.0844%" height="15" fill="rgb(249,192,27)" fg:x="30563" fg:w="55"/><text x="47.1553%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (55 samples, 0.08%)</title><rect x="46.9053%" y="437" width="0.0844%" height="15" fill="rgb(208,204,44)" fg:x="30563" fg:w="55"/><text x="47.1553%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (11 samples, 0.02%)</title><rect x="46.9728%" y="421" width="0.0169%" height="15" fill="rgb(208,93,54)" fg:x="30607" fg:w="11"/><text x="47.2228%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 0.02%)</title><rect x="46.9728%" y="405" width="0.0169%" height="15" fill="rgb(242,1,31)" fg:x="30607" fg:w="11"/><text x="47.2228%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.02%)</title><rect x="46.9728%" y="389" width="0.0169%" height="15" fill="rgb(241,83,25)" fg:x="30607" fg:w="11"/><text x="47.2228%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (7 samples, 0.01%)</title><rect x="47.0035%" y="421" width="0.0107%" height="15" fill="rgb(205,169,50)" fg:x="30627" fg:w="7"/><text x="47.2535%" y="431.50"></text></g><g><title>yakvdb::disk::block::get_u32 (7 samples, 0.01%)</title><rect x="47.0035%" y="405" width="0.0107%" height="15" fill="rgb(239,186,37)" fg:x="30627" fg:w="7"/><text x="47.2535%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (11 samples, 0.02%)</title><rect x="46.9989%" y="437" width="0.0169%" height="15" fill="rgb(205,221,10)" fg:x="30624" fg:w="11"/><text x="47.2489%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (14 samples, 0.02%)</title><rect x="46.9989%" y="453" width="0.0215%" height="15" fill="rgb(218,196,15)" fg:x="30624" fg:w="14"/><text x="47.2489%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (13 samples, 0.02%)</title><rect x="47.0265%" y="453" width="0.0200%" height="15" fill="rgb(218,196,35)" fg:x="30642" fg:w="13"/><text x="47.2765%" y="463.50"></text></g><g><title>core::cmp::PartialOrd::ge (13 samples, 0.02%)</title><rect x="47.0265%" y="437" width="0.0200%" height="15" fill="rgb(233,63,24)" fg:x="30642" fg:w="13"/><text x="47.2765%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (13 samples, 0.02%)</title><rect x="47.0265%" y="421" width="0.0200%" height="15" fill="rgb(225,8,4)" fg:x="30642" fg:w="13"/><text x="47.2765%" y="431.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (13 samples, 0.02%)</title><rect x="47.0265%" y="405" width="0.0200%" height="15" fill="rgb(234,105,35)" fg:x="30642" fg:w="13"/><text x="47.2765%" y="415.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (13 samples, 0.02%)</title><rect x="47.0265%" y="389" width="0.0200%" height="15" fill="rgb(236,21,32)" fg:x="30642" fg:w="13"/><text x="47.2765%" y="399.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.02%)</title><rect x="47.0280%" y="373" width="0.0184%" height="15" fill="rgb(228,109,6)" fg:x="30643" fg:w="12"/><text x="47.2780%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (7 samples, 0.01%)</title><rect x="47.0894%" y="389" width="0.0107%" height="15" fill="rgb(229,215,31)" fg:x="30683" fg:w="7"/><text x="47.3394%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (37 samples, 0.06%)</title><rect x="47.0664%" y="405" width="0.0568%" height="15" fill="rgb(221,52,54)" fg:x="30668" fg:w="37"/><text x="47.3164%" y="415.50"></text></g><g><title>yakvdb::disk::block::get_u32 (14 samples, 0.02%)</title><rect x="47.1017%" y="389" width="0.0215%" height="15" fill="rgb(252,129,43)" fg:x="30691" fg:w="14"/><text x="47.3517%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.01%)</title><rect x="47.1109%" y="373" width="0.0123%" height="15" fill="rgb(248,183,27)" fg:x="30697" fg:w="8"/><text x="47.3609%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.01%)</title><rect x="47.1109%" y="357" width="0.0123%" height="15" fill="rgb(250,0,22)" fg:x="30697" fg:w="8"/><text x="47.3609%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (44 samples, 0.07%)</title><rect x="47.0664%" y="437" width="0.0675%" height="15" fill="rgb(213,166,10)" fg:x="30668" fg:w="44"/><text x="47.3164%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (44 samples, 0.07%)</title><rect x="47.0664%" y="421" width="0.0675%" height="15" fill="rgb(207,163,36)" fg:x="30668" fg:w="44"/><text x="47.3164%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.01%)</title><rect x="47.1232%" y="405" width="0.0107%" height="15" fill="rgb(208,122,22)" fg:x="30705" fg:w="7"/><text x="47.3732%" y="415.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.04%)</title><rect x="47.1401%" y="389" width="0.0414%" height="15" fill="rgb(207,104,49)" fg:x="30716" fg:w="27"/><text x="47.3901%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (125 samples, 0.19%)</title><rect x="46.9943%" y="469" width="0.1918%" height="15" fill="rgb(248,211,50)" fg:x="30621" fg:w="125"/><text x="47.2443%" y="479.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (91 samples, 0.14%)</title><rect x="47.0465%" y="453" width="0.1397%" height="15" fill="rgb(217,13,45)" fg:x="30655" fg:w="91"/><text x="47.2965%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (34 samples, 0.05%)</title><rect x="47.1339%" y="437" width="0.0522%" height="15" fill="rgb(211,216,49)" fg:x="30712" fg:w="34"/><text x="47.3839%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (34 samples, 0.05%)</title><rect x="47.1339%" y="421" width="0.0522%" height="15" fill="rgb(221,58,53)" fg:x="30712" fg:w="34"/><text x="47.3839%" y="431.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (34 samples, 0.05%)</title><rect x="47.1339%" y="405" width="0.0522%" height="15" fill="rgb(220,112,41)" fg:x="30712" fg:w="34"/><text x="47.3839%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (8 samples, 0.01%)</title><rect x="47.2874%" y="261" width="0.0123%" height="15" fill="rgb(236,38,28)" fg:x="30812" fg:w="8"/><text x="47.5374%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="47.2874%" y="245" width="0.0123%" height="15" fill="rgb(227,195,22)" fg:x="30812" fg:w="8"/><text x="47.5374%" y="255.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (14 samples, 0.02%)</title><rect x="47.2797%" y="293" width="0.0215%" height="15" fill="rgb(214,55,33)" fg:x="30807" fg:w="14"/><text x="47.5297%" y="303.50"></text></g><g><title>yakvdb::disk::block::get_u32 (9 samples, 0.01%)</title><rect x="47.2874%" y="277" width="0.0138%" height="15" fill="rgb(248,80,13)" fg:x="30812" fg:w="9"/><text x="47.5374%" y="287.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (92 samples, 0.14%)</title><rect x="47.1938%" y="341" width="0.1412%" height="15" fill="rgb(238,52,6)" fg:x="30751" fg:w="92"/><text x="47.4438%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (62 samples, 0.10%)</title><rect x="47.2398%" y="325" width="0.0952%" height="15" fill="rgb(224,198,47)" fg:x="30781" fg:w="62"/><text x="47.4898%" y="335.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (60 samples, 0.09%)</title><rect x="47.2429%" y="309" width="0.0921%" height="15" fill="rgb(233,171,20)" fg:x="30783" fg:w="60"/><text x="47.4929%" y="319.50"></text></g><g><title>yakvdb::disk::block::get_u32 (22 samples, 0.03%)</title><rect x="47.3012%" y="293" width="0.0338%" height="15" fill="rgb(241,30,25)" fg:x="30821" fg:w="22"/><text x="47.5512%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (14 samples, 0.02%)</title><rect x="47.3135%" y="277" width="0.0215%" height="15" fill="rgb(207,171,38)" fg:x="30829" fg:w="14"/><text x="47.5635%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (14 samples, 0.02%)</title><rect x="47.3135%" y="261" width="0.0215%" height="15" fill="rgb(234,70,1)" fg:x="30829" fg:w="14"/><text x="47.5635%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (94 samples, 0.14%)</title><rect x="47.1938%" y="389" width="0.1443%" height="15" fill="rgb(232,178,18)" fg:x="30751" fg:w="94"/><text x="47.4438%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (94 samples, 0.14%)</title><rect x="47.1938%" y="373" width="0.1443%" height="15" fill="rgb(241,78,40)" fg:x="30751" fg:w="94"/><text x="47.4438%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (94 samples, 0.14%)</title><rect x="47.1938%" y="357" width="0.1443%" height="15" fill="rgb(222,35,25)" fg:x="30751" fg:w="94"/><text x="47.4438%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::fits (100 samples, 0.15%)</title><rect x="47.1861%" y="469" width="0.1535%" height="15" fill="rgb(207,92,16)" fg:x="30746" fg:w="100"/><text x="47.4361%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (99 samples, 0.15%)</title><rect x="47.1876%" y="453" width="0.1519%" height="15" fill="rgb(216,59,51)" fg:x="30747" fg:w="99"/><text x="47.4376%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (95 samples, 0.15%)</title><rect x="47.1938%" y="437" width="0.1458%" height="15" fill="rgb(213,80,28)" fg:x="30751" fg:w="95"/><text x="47.4438%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (95 samples, 0.15%)</title><rect x="47.1938%" y="421" width="0.1458%" height="15" fill="rgb(220,93,7)" fg:x="30751" fg:w="95"/><text x="47.4438%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (95 samples, 0.15%)</title><rect x="47.1938%" y="405" width="0.1458%" height="15" fill="rgb(225,24,44)" fg:x="30751" fg:w="95"/><text x="47.4438%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.02%)</title><rect x="47.3427%" y="453" width="0.0153%" height="15" fill="rgb(243,74,40)" fg:x="30848" fg:w="10"/><text x="47.5927%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.02%)</title><rect x="47.3427%" y="437" width="0.0153%" height="15" fill="rgb(228,39,7)" fg:x="30848" fg:w="10"/><text x="47.5927%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.02%)</title><rect x="47.3427%" y="421" width="0.0153%" height="15" fill="rgb(227,79,8)" fg:x="30848" fg:w="10"/><text x="47.5927%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.02%)</title><rect x="47.3427%" y="405" width="0.0153%" height="15" fill="rgb(236,58,11)" fg:x="30848" fg:w="10"/><text x="47.5927%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="47.3442%" y="389" width="0.0138%" height="15" fill="rgb(249,63,35)" fg:x="30849" fg:w="9"/><text x="47.5942%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.01%)</title><rect x="47.3442%" y="373" width="0.0138%" height="15" fill="rgb(252,114,16)" fg:x="30849" fg:w="9"/><text x="47.5942%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.01%)</title><rect x="47.3442%" y="357" width="0.0138%" height="15" fill="rgb(254,151,24)" fg:x="30849" fg:w="9"/><text x="47.5942%" y="367.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.01%)</title><rect x="47.3442%" y="341" width="0.0138%" height="15" fill="rgb(253,54,39)" fg:x="30849" fg:w="9"/><text x="47.5942%" y="351.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.01%)</title><rect x="47.3442%" y="325" width="0.0138%" height="15" fill="rgb(243,25,45)" fg:x="30849" fg:w="9"/><text x="47.5942%" y="335.50"></text></g><g><title>_int_realloc (9 samples, 0.01%)</title><rect x="47.3442%" y="309" width="0.0138%" height="15" fill="rgb(234,134,9)" fg:x="30849" fg:w="9"/><text x="47.5942%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (16 samples, 0.02%)</title><rect x="47.3411%" y="469" width="0.0246%" height="15" fill="rgb(227,166,31)" fg:x="30847" fg:w="16"/><text x="47.5911%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.02%)</title><rect x="47.3764%" y="325" width="0.0169%" height="15" fill="rgb(245,143,41)" fg:x="30870" fg:w="11"/><text x="47.6264%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.02%)</title><rect x="47.3764%" y="309" width="0.0169%" height="15" fill="rgb(238,181,32)" fg:x="30870" fg:w="11"/><text x="47.6264%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (10 samples, 0.02%)</title><rect x="47.3780%" y="293" width="0.0153%" height="15" fill="rgb(224,113,18)" fg:x="30871" fg:w="10"/><text x="47.6280%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (7 samples, 0.01%)</title><rect x="47.5867%" y="229" width="0.0107%" height="15" fill="rgb(240,229,28)" fg:x="31007" fg:w="7"/><text x="47.8367%" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (7 samples, 0.01%)</title><rect x="47.5867%" y="213" width="0.0107%" height="15" fill="rgb(250,185,3)" fg:x="31007" fg:w="7"/><text x="47.8367%" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (7 samples, 0.01%)</title><rect x="47.5867%" y="197" width="0.0107%" height="15" fill="rgb(212,59,25)" fg:x="31007" fg:w="7"/><text x="47.8367%" y="207.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (13 samples, 0.02%)</title><rect x="47.5867%" y="261" width="0.0200%" height="15" fill="rgb(221,87,20)" fg:x="31007" fg:w="13"/><text x="47.8367%" y="271.50"></text></g><g><title>yakvdb::disk::block::get_u32 (13 samples, 0.02%)</title><rect x="47.5867%" y="245" width="0.0200%" height="15" fill="rgb(213,74,28)" fg:x="31007" fg:w="13"/><text x="47.8367%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (171 samples, 0.26%)</title><rect x="47.3764%" y="373" width="0.2624%" height="15" fill="rgb(224,132,34)" fg:x="30870" fg:w="171"/><text x="47.6264%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (171 samples, 0.26%)</title><rect x="47.3764%" y="357" width="0.2624%" height="15" fill="rgb(222,101,24)" fg:x="30870" fg:w="171"/><text x="47.6264%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (171 samples, 0.26%)</title><rect x="47.3764%" y="341" width="0.2624%" height="15" fill="rgb(254,142,4)" fg:x="30870" fg:w="171"/><text x="47.6264%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (160 samples, 0.25%)</title><rect x="47.3933%" y="325" width="0.2456%" height="15" fill="rgb(230,229,49)" fg:x="30881" fg:w="160"/><text x="47.6433%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (55 samples, 0.08%)</title><rect x="47.5544%" y="309" width="0.0844%" height="15" fill="rgb(238,70,47)" fg:x="30986" fg:w="55"/><text x="47.8044%" y="319.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (55 samples, 0.08%)</title><rect x="47.5544%" y="293" width="0.0844%" height="15" fill="rgb(231,160,17)" fg:x="30986" fg:w="55"/><text x="47.8044%" y="303.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (49 samples, 0.08%)</title><rect x="47.5637%" y="277" width="0.0752%" height="15" fill="rgb(218,68,53)" fg:x="30992" fg:w="49"/><text x="47.8137%" y="287.50"></text></g><g><title>yakvdb::disk::block::get_u32 (21 samples, 0.03%)</title><rect x="47.6066%" y="261" width="0.0322%" height="15" fill="rgb(236,111,10)" fg:x="31020" fg:w="21"/><text x="47.8566%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.02%)</title><rect x="47.6220%" y="245" width="0.0169%" height="15" fill="rgb(224,34,41)" fg:x="31030" fg:w="11"/><text x="47.8720%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.02%)</title><rect x="47.6220%" y="229" width="0.0169%" height="15" fill="rgb(241,118,19)" fg:x="31030" fg:w="11"/><text x="47.8720%" y="239.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (21 samples, 0.03%)</title><rect x="47.6972%" y="213" width="0.0322%" height="15" fill="rgb(238,129,25)" fg:x="31079" fg:w="21"/><text x="47.9472%" y="223.50"></text></g><g><title>_int_free (19 samples, 0.03%)</title><rect x="47.7294%" y="213" width="0.0292%" height="15" fill="rgb(238,22,31)" fg:x="31100" fg:w="19"/><text x="47.9794%" y="223.50"></text></g><g><title>__GI___libc_realloc (117 samples, 0.18%)</title><rect x="47.6542%" y="245" width="0.1796%" height="15" fill="rgb(222,174,48)" fg:x="31051" fg:w="117"/><text x="47.9042%" y="255.50"></text></g><g><title>_int_realloc (102 samples, 0.16%)</title><rect x="47.6772%" y="229" width="0.1565%" height="15" fill="rgb(206,152,40)" fg:x="31066" fg:w="102"/><text x="47.9272%" y="239.50"></text></g><g><title>_int_malloc (49 samples, 0.08%)</title><rect x="47.7586%" y="213" width="0.0752%" height="15" fill="rgb(218,99,54)" fg:x="31119" fg:w="49"/><text x="48.0086%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (119 samples, 0.18%)</title><rect x="47.6527%" y="293" width="0.1826%" height="15" fill="rgb(220,174,26)" fg:x="31050" fg:w="119"/><text x="47.9027%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (119 samples, 0.18%)</title><rect x="47.6527%" y="277" width="0.1826%" height="15" fill="rgb(245,116,9)" fg:x="31050" fg:w="119"/><text x="47.9027%" y="287.50"></text></g><g><title>alloc::alloc::realloc (118 samples, 0.18%)</title><rect x="47.6542%" y="261" width="0.1811%" height="15" fill="rgb(209,72,35)" fg:x="31051" fg:w="118"/><text x="47.9042%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 samples, 0.19%)</title><rect x="47.6511%" y="309" width="0.1888%" height="15" fill="rgb(226,126,21)" fg:x="31049" fg:w="123"/><text x="47.9011%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (133 samples, 0.20%)</title><rect x="47.6389%" y="373" width="0.2041%" height="15" fill="rgb(227,192,1)" fg:x="31041" fg:w="133"/><text x="47.8889%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (133 samples, 0.20%)</title><rect x="47.6389%" y="357" width="0.2041%" height="15" fill="rgb(237,180,29)" fg:x="31041" fg:w="133"/><text x="47.8889%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (132 samples, 0.20%)</title><rect x="47.6404%" y="341" width="0.2026%" height="15" fill="rgb(230,197,35)" fg:x="31042" fg:w="132"/><text x="47.8904%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (132 samples, 0.20%)</title><rect x="47.6404%" y="325" width="0.2026%" height="15" fill="rgb(246,193,31)" fg:x="31042" fg:w="132"/><text x="47.8904%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (333 samples, 0.51%)</title><rect x="47.3687%" y="405" width="0.5111%" height="15" fill="rgb(241,36,4)" fg:x="30865" fg:w="333"/><text x="47.6187%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (333 samples, 0.51%)</title><rect x="47.3687%" y="389" width="0.5111%" height="15" fill="rgb(241,130,17)" fg:x="30865" fg:w="333"/><text x="47.6187%" y="399.50"></text></g><g><title>core::ptr::write (24 samples, 0.04%)</title><rect x="47.8430%" y="373" width="0.0368%" height="15" fill="rgb(206,137,32)" fg:x="31174" fg:w="24"/><text x="48.0930%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="47.8798%" y="405" width="0.0153%" height="15" fill="rgb(237,228,51)" fg:x="31198" fg:w="10"/><text x="48.1298%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (10 samples, 0.02%)</title><rect x="47.8798%" y="389" width="0.0153%" height="15" fill="rgb(243,6,42)" fg:x="31198" fg:w="10"/><text x="48.1298%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.02%)</title><rect x="47.8798%" y="373" width="0.0153%" height="15" fill="rgb(251,74,28)" fg:x="31198" fg:w="10"/><text x="48.1298%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (10 samples, 0.02%)</title><rect x="47.8798%" y="357" width="0.0153%" height="15" fill="rgb(218,20,49)" fg:x="31198" fg:w="10"/><text x="48.1298%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (349 samples, 0.54%)</title><rect x="47.3657%" y="469" width="0.5356%" height="15" fill="rgb(238,28,14)" fg:x="30863" fg:w="349"/><text x="47.6157%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (349 samples, 0.54%)</title><rect x="47.3657%" y="453" width="0.5356%" height="15" fill="rgb(229,40,46)" fg:x="30863" fg:w="349"/><text x="47.6157%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (348 samples, 0.53%)</title><rect x="47.3672%" y="437" width="0.5341%" height="15" fill="rgb(244,195,20)" fg:x="30864" fg:w="348"/><text x="47.6172%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (348 samples, 0.53%)</title><rect x="47.3672%" y="421" width="0.5341%" height="15" fill="rgb(253,56,35)" fg:x="30864" fg:w="348"/><text x="47.6172%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="47.9013%" y="421" width="0.0138%" height="15" fill="rgb(210,149,44)" fg:x="31212" fg:w="9"/><text x="48.1513%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (8 samples, 0.01%)</title><rect x="47.9504%" y="341" width="0.0123%" height="15" fill="rgb(240,135,12)" fg:x="31244" fg:w="8"/><text x="48.2004%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (8 samples, 0.01%)</title><rect x="47.9504%" y="325" width="0.0123%" height="15" fill="rgb(251,24,50)" fg:x="31244" fg:w="8"/><text x="48.2004%" y="335.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (8 samples, 0.01%)</title><rect x="47.9504%" y="309" width="0.0123%" height="15" fill="rgb(243,200,47)" fg:x="31244" fg:w="8"/><text x="48.2004%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (30 samples, 0.05%)</title><rect x="47.9627%" y="341" width="0.0460%" height="15" fill="rgb(224,166,26)" fg:x="31252" fg:w="30"/><text x="48.2127%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (30 samples, 0.05%)</title><rect x="47.9627%" y="325" width="0.0460%" height="15" fill="rgb(233,0,47)" fg:x="31252" fg:w="30"/><text x="48.2127%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (75 samples, 0.12%)</title><rect x="47.9151%" y="421" width="0.1151%" height="15" fill="rgb(253,80,5)" fg:x="31221" fg:w="75"/><text x="48.1651%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (75 samples, 0.12%)</title><rect x="47.9151%" y="405" width="0.1151%" height="15" fill="rgb(214,133,25)" fg:x="31221" fg:w="75"/><text x="48.1651%" y="415.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (75 samples, 0.12%)</title><rect x="47.9151%" y="389" width="0.1151%" height="15" fill="rgb(209,27,14)" fg:x="31221" fg:w="75"/><text x="48.1651%" y="399.50"></text></g><g><title>yakvdb::disk::block::put_slot (60 samples, 0.09%)</title><rect x="47.9381%" y="373" width="0.0921%" height="15" fill="rgb(219,102,51)" fg:x="31236" fg:w="60"/><text x="48.1881%" y="383.50"></text></g><g><title>yakvdb::disk::block::put_u32 (57 samples, 0.09%)</title><rect x="47.9427%" y="357" width="0.0875%" height="15" fill="rgb(237,18,16)" fg:x="31239" fg:w="57"/><text x="48.1927%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (14 samples, 0.02%)</title><rect x="48.0087%" y="341" width="0.0215%" height="15" fill="rgb(241,85,17)" fg:x="31282" fg:w="14"/><text x="48.2587%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (14 samples, 0.02%)</title><rect x="48.0087%" y="325" width="0.0215%" height="15" fill="rgb(236,90,42)" fg:x="31282" fg:w="14"/><text x="48.2587%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.03%)</title><rect x="48.0302%" y="325" width="0.0276%" height="15" fill="rgb(249,57,21)" fg:x="31296" fg:w="18"/><text x="48.2802%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.03%)</title><rect x="48.0302%" y="309" width="0.0276%" height="15" fill="rgb(243,12,36)" fg:x="31296" fg:w="18"/><text x="48.2802%" y="319.50"></text></g><g><title>_int_free (15 samples, 0.02%)</title><rect x="48.0348%" y="293" width="0.0230%" height="15" fill="rgb(253,128,47)" fg:x="31299" fg:w="15"/><text x="48.2848%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (109 samples, 0.17%)</title><rect x="47.9013%" y="469" width="0.1673%" height="15" fill="rgb(207,33,20)" fg:x="31212" fg:w="109"/><text x="48.1513%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (109 samples, 0.17%)</title><rect x="47.9013%" y="453" width="0.1673%" height="15" fill="rgb(233,215,35)" fg:x="31212" fg:w="109"/><text x="48.1513%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (109 samples, 0.17%)</title><rect x="47.9013%" y="437" width="0.1673%" height="15" fill="rgb(249,188,52)" fg:x="31212" fg:w="109"/><text x="48.1513%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;yakvdb::api::page::Slot&gt;&gt; (25 samples, 0.04%)</title><rect x="48.0302%" y="421" width="0.0384%" height="15" fill="rgb(225,12,32)" fg:x="31296" fg:w="25"/><text x="48.2802%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.04%)</title><rect x="48.0302%" y="405" width="0.0384%" height="15" fill="rgb(247,98,14)" fg:x="31296" fg:w="25"/><text x="48.2802%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;yakvdb::api::page::Slot,alloc::alloc::Global&gt;&gt; (25 samples, 0.04%)</title><rect x="48.0302%" y="389" width="0.0384%" height="15" fill="rgb(247,219,48)" fg:x="31296" fg:w="25"/><text x="48.2802%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.04%)</title><rect x="48.0302%" y="373" width="0.0384%" height="15" fill="rgb(253,60,48)" fg:x="31296" fg:w="25"/><text x="48.2802%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;yakvdb::api::page::Slot&gt;&gt; (25 samples, 0.04%)</title><rect x="48.0302%" y="357" width="0.0384%" height="15" fill="rgb(245,15,52)" fg:x="31296" fg:w="25"/><text x="48.2802%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.04%)</title><rect x="48.0302%" y="341" width="0.0384%" height="15" fill="rgb(220,133,28)" fg:x="31296" fg:w="25"/><text x="48.2802%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (7 samples, 0.01%)</title><rect x="48.0578%" y="325" width="0.0107%" height="15" fill="rgb(217,180,4)" fg:x="31314" fg:w="7"/><text x="48.3078%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (11 samples, 0.02%)</title><rect x="48.0686%" y="469" width="0.0169%" height="15" fill="rgb(251,24,1)" fg:x="31321" fg:w="11"/><text x="48.3186%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (11 samples, 0.02%)</title><rect x="48.0686%" y="453" width="0.0169%" height="15" fill="rgb(212,185,49)" fg:x="31321" fg:w="11"/><text x="48.3186%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (11 samples, 0.02%)</title><rect x="48.0686%" y="437" width="0.0169%" height="15" fill="rgb(215,175,22)" fg:x="31321" fg:w="11"/><text x="48.3186%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.02%)</title><rect x="48.0686%" y="421" width="0.0169%" height="15" fill="rgb(250,205,14)" fg:x="31321" fg:w="11"/><text x="48.3186%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.02%)</title><rect x="48.0686%" y="405" width="0.0169%" height="15" fill="rgb(225,211,22)" fg:x="31321" fg:w="11"/><text x="48.3186%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.01%)</title><rect x="48.0732%" y="389" width="0.0123%" height="15" fill="rgb(251,179,42)" fg:x="31324" fg:w="8"/><text x="48.3232%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::{{closure}} (8 samples, 0.01%)</title><rect x="48.0732%" y="373" width="0.0123%" height="15" fill="rgb(208,216,51)" fg:x="31324" fg:w="8"/><text x="48.3232%" y="383.50"></text></g><g><title>core::cmp::min_by (8 samples, 0.01%)</title><rect x="48.0732%" y="357" width="0.0123%" height="15" fill="rgb(235,36,11)" fg:x="31324" fg:w="8"/><text x="48.3232%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7,683 samples, 11.79%)</title><rect x="36.3020%" y="565" width="11.7912%" height="15" fill="rgb(213,189,28)" fg:x="23654" fg:w="7683"/><text x="36.5520%" y="575.50">core::iter::trait..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,683 samples, 11.79%)</title><rect x="36.3020%" y="549" width="11.7912%" height="15" fill="rgb(227,203,42)" fg:x="23654" fg:w="7683"/><text x="36.5520%" y="559.50">&lt;core::iter::adap..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (7,683 samples, 11.79%)</title><rect x="36.3020%" y="533" width="11.7912%" height="15" fill="rgb(244,72,36)" fg:x="23654" fg:w="7683"/><text x="36.5520%" y="543.50">core::iter::trait..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7,681 samples, 11.79%)</title><rect x="36.3050%" y="517" width="11.7881%" height="15" fill="rgb(213,53,17)" fg:x="23656" fg:w="7681"/><text x="36.5550%" y="527.50">core::iter::trait..</text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::split::{{closure}} (7,681 samples, 11.79%)</title><rect x="36.3050%" y="501" width="11.7881%" height="15" fill="rgb(207,167,3)" fg:x="23656" fg:w="7681"/><text x="36.5550%" y="511.50">&lt;yakvdb::disk::fi..</text></g><g><title>yakvdb::disk::block::Block::put_entry (718 samples, 1.10%)</title><rect x="46.9912%" y="485" width="1.1019%" height="15" fill="rgb(216,98,30)" fg:x="30619" fg:w="718"/><text x="47.2412%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.04%)</title><rect x="48.0993%" y="453" width="0.0414%" height="15" fill="rgb(236,123,15)" fg:x="31341" fg:w="27"/><text x="48.3493%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.04%)</title><rect x="48.0993%" y="437" width="0.0414%" height="15" fill="rgb(248,81,50)" fg:x="31341" fg:w="27"/><text x="48.3493%" y="447.50"></text></g><g><title>_int_free (16 samples, 0.02%)</title><rect x="48.1161%" y="421" width="0.0246%" height="15" fill="rgb(214,120,4)" fg:x="31352" fg:w="16"/><text x="48.3661%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;,u32)&gt;&gt; (33 samples, 0.05%)</title><rect x="48.0931%" y="565" width="0.0506%" height="15" fill="rgb(208,179,34)" fg:x="31337" fg:w="33"/><text x="48.3431%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.05%)</title><rect x="48.0931%" y="549" width="0.0506%" height="15" fill="rgb(227,140,7)" fg:x="31337" fg:w="33"/><text x="48.3431%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;,u32)]&gt; (33 samples, 0.05%)</title><rect x="48.0931%" y="533" width="0.0506%" height="15" fill="rgb(214,22,6)" fg:x="31337" fg:w="33"/><text x="48.3431%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;,u32)&gt; (33 samples, 0.05%)</title><rect x="48.0931%" y="517" width="0.0506%" height="15" fill="rgb(207,137,27)" fg:x="31337" fg:w="33"/><text x="48.3431%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (33 samples, 0.05%)</title><rect x="48.0931%" y="501" width="0.0506%" height="15" fill="rgb(210,8,46)" fg:x="31337" fg:w="33"/><text x="48.3431%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (33 samples, 0.05%)</title><rect x="48.0931%" y="485" width="0.0506%" height="15" fill="rgb(240,16,54)" fg:x="31337" fg:w="33"/><text x="48.3431%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.05%)</title><rect x="48.0931%" y="469" width="0.0506%" height="15" fill="rgb(211,209,29)" fg:x="31337" fg:w="33"/><text x="48.3431%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (7 samples, 0.01%)</title><rect x="48.1484%" y="549" width="0.0107%" height="15" fill="rgb(226,228,24)" fg:x="31373" fg:w="7"/><text x="48.3984%" y="559.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (7 samples, 0.01%)</title><rect x="48.1484%" y="533" width="0.0107%" height="15" fill="rgb(222,84,9)" fg:x="31373" fg:w="7"/><text x="48.3984%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.02%)</title><rect x="48.1591%" y="469" width="0.0200%" height="15" fill="rgb(234,203,30)" fg:x="31380" fg:w="13"/><text x="48.4091%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.02%)</title><rect x="48.1591%" y="453" width="0.0200%" height="15" fill="rgb(238,109,14)" fg:x="31380" fg:w="13"/><text x="48.4091%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 0.02%)</title><rect x="48.1591%" y="437" width="0.0200%" height="15" fill="rgb(233,206,34)" fg:x="31380" fg:w="13"/><text x="48.4091%" y="447.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (13 samples, 0.02%)</title><rect x="48.1591%" y="421" width="0.0200%" height="15" fill="rgb(220,167,47)" fg:x="31380" fg:w="13"/><text x="48.4091%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (7 samples, 0.01%)</title><rect x="48.1683%" y="405" width="0.0107%" height="15" fill="rgb(238,105,10)" fg:x="31386" fg:w="7"/><text x="48.4183%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (7 samples, 0.01%)</title><rect x="48.1683%" y="389" width="0.0107%" height="15" fill="rgb(213,227,17)" fg:x="31386" fg:w="7"/><text x="48.4183%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::fits (14 samples, 0.02%)</title><rect x="48.1591%" y="549" width="0.0215%" height="15" fill="rgb(217,132,38)" fg:x="31380" fg:w="14"/><text x="48.4091%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (14 samples, 0.02%)</title><rect x="48.1591%" y="533" width="0.0215%" height="15" fill="rgb(242,146,4)" fg:x="31380" fg:w="14"/><text x="48.4091%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (14 samples, 0.02%)</title><rect x="48.1591%" y="517" width="0.0215%" height="15" fill="rgb(212,61,9)" fg:x="31380" fg:w="14"/><text x="48.4091%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (14 samples, 0.02%)</title><rect x="48.1591%" y="501" width="0.0215%" height="15" fill="rgb(247,126,22)" fg:x="31380" fg:w="14"/><text x="48.4091%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (14 samples, 0.02%)</title><rect x="48.1591%" y="485" width="0.0215%" height="15" fill="rgb(220,196,2)" fg:x="31380" fg:w="14"/><text x="48.4091%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.03%)</title><rect x="48.1883%" y="453" width="0.0307%" height="15" fill="rgb(208,46,4)" fg:x="31399" fg:w="20"/><text x="48.4383%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (20 samples, 0.03%)</title><rect x="48.1883%" y="437" width="0.0307%" height="15" fill="rgb(252,104,46)" fg:x="31399" fg:w="20"/><text x="48.4383%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (20 samples, 0.03%)</title><rect x="48.1883%" y="421" width="0.0307%" height="15" fill="rgb(237,152,48)" fg:x="31399" fg:w="20"/><text x="48.4383%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (20 samples, 0.03%)</title><rect x="48.1883%" y="405" width="0.0307%" height="15" fill="rgb(221,59,37)" fg:x="31399" fg:w="20"/><text x="48.4383%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.02%)</title><rect x="48.2036%" y="389" width="0.0153%" height="15" fill="rgb(209,202,51)" fg:x="31409" fg:w="10"/><text x="48.4536%" y="399.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (10 samples, 0.02%)</title><rect x="48.2036%" y="373" width="0.0153%" height="15" fill="rgb(228,81,30)" fg:x="31409" fg:w="10"/><text x="48.4536%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (10 samples, 0.02%)</title><rect x="48.2036%" y="357" width="0.0153%" height="15" fill="rgb(227,42,39)" fg:x="31409" fg:w="10"/><text x="48.4536%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.02%)</title><rect x="48.2190%" y="453" width="0.0200%" height="15" fill="rgb(221,26,2)" fg:x="31419" fg:w="13"/><text x="48.4690%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.02%)</title><rect x="48.2190%" y="437" width="0.0200%" height="15" fill="rgb(254,61,31)" fg:x="31419" fg:w="13"/><text x="48.4690%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.02%)</title><rect x="48.2190%" y="421" width="0.0200%" height="15" fill="rgb(222,173,38)" fg:x="31419" fg:w="13"/><text x="48.4690%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.02%)</title><rect x="48.2190%" y="405" width="0.0200%" height="15" fill="rgb(218,50,12)" fg:x="31419" fg:w="13"/><text x="48.4690%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.02%)</title><rect x="48.2205%" y="389" width="0.0184%" height="15" fill="rgb(223,88,40)" fg:x="31420" fg:w="12"/><text x="48.4705%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.02%)</title><rect x="48.2205%" y="373" width="0.0184%" height="15" fill="rgb(237,54,19)" fg:x="31420" fg:w="12"/><text x="48.4705%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.02%)</title><rect x="48.2205%" y="357" width="0.0184%" height="15" fill="rgb(251,129,25)" fg:x="31420" fg:w="12"/><text x="48.4705%" y="367.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.02%)</title><rect x="48.2205%" y="341" width="0.0184%" height="15" fill="rgb(238,97,19)" fg:x="31420" fg:w="12"/><text x="48.4705%" y="351.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.02%)</title><rect x="48.2205%" y="325" width="0.0184%" height="15" fill="rgb(240,169,18)" fg:x="31420" fg:w="12"/><text x="48.4705%" y="335.50"></text></g><g><title>_int_realloc (12 samples, 0.02%)</title><rect x="48.2205%" y="309" width="0.0184%" height="15" fill="rgb(230,187,49)" fg:x="31420" fg:w="12"/><text x="48.4705%" y="319.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="48.2220%" y="293" width="0.0169%" height="15" fill="rgb(209,44,26)" fg:x="31421" fg:w="11"/><text x="48.4720%" y="303.50"></text></g><g><title>malloc_consolidate (7 samples, 0.01%)</title><rect x="48.2282%" y="277" width="0.0107%" height="15" fill="rgb(244,0,6)" fg:x="31425" fg:w="7"/><text x="48.4782%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (41 samples, 0.06%)</title><rect x="48.1852%" y="549" width="0.0629%" height="15" fill="rgb(248,18,21)" fg:x="31397" fg:w="41"/><text x="48.4352%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (41 samples, 0.06%)</title><rect x="48.1852%" y="533" width="0.0629%" height="15" fill="rgb(245,180,19)" fg:x="31397" fg:w="41"/><text x="48.4352%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 0.06%)</title><rect x="48.1852%" y="517" width="0.0629%" height="15" fill="rgb(252,118,36)" fg:x="31397" fg:w="41"/><text x="48.4352%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (41 samples, 0.06%)</title><rect x="48.1852%" y="501" width="0.0629%" height="15" fill="rgb(210,224,19)" fg:x="31397" fg:w="41"/><text x="48.4352%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (41 samples, 0.06%)</title><rect x="48.1852%" y="485" width="0.0629%" height="15" fill="rgb(218,30,24)" fg:x="31397" fg:w="41"/><text x="48.4352%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (41 samples, 0.06%)</title><rect x="48.1852%" y="469" width="0.0629%" height="15" fill="rgb(219,75,50)" fg:x="31397" fg:w="41"/><text x="48.4352%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.02%)</title><rect x="48.2481%" y="549" width="0.0184%" height="15" fill="rgb(234,72,50)" fg:x="31438" fg:w="12"/><text x="48.4981%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.02%)</title><rect x="48.2481%" y="533" width="0.0184%" height="15" fill="rgb(219,100,48)" fg:x="31438" fg:w="12"/><text x="48.4981%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.02%)</title><rect x="48.2481%" y="517" width="0.0184%" height="15" fill="rgb(253,5,41)" fg:x="31438" fg:w="12"/><text x="48.4981%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (11 samples, 0.02%)</title><rect x="48.2497%" y="501" width="0.0169%" height="15" fill="rgb(247,181,11)" fg:x="31439" fg:w="11"/><text x="48.4997%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (11 samples, 0.02%)</title><rect x="48.2497%" y="485" width="0.0169%" height="15" fill="rgb(222,223,25)" fg:x="31439" fg:w="11"/><text x="48.4997%" y="495.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (11 samples, 0.02%)</title><rect x="48.2497%" y="469" width="0.0169%" height="15" fill="rgb(214,198,28)" fg:x="31439" fg:w="11"/><text x="48.4997%" y="479.50"></text></g><g><title>yakvdb::disk::block::put_slot (9 samples, 0.01%)</title><rect x="48.2527%" y="453" width="0.0138%" height="15" fill="rgb(230,46,43)" fg:x="31441" fg:w="9"/><text x="48.5027%" y="463.50"></text></g><g><title>yakvdb::disk::block::put_u32 (9 samples, 0.01%)</title><rect x="48.2527%" y="437" width="0.0138%" height="15" fill="rgb(233,65,53)" fg:x="31441" fg:w="9"/><text x="48.5027%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::split (8,333 samples, 12.79%)</title><rect x="35.4809%" y="581" width="12.7887%" height="15" fill="rgb(221,121,27)" fg:x="23119" fg:w="8333"/><text x="35.7309%" y="591.50">&lt;yakvdb::disk::file..</text></g><g><title>yakvdb::disk::block::Block::put_entry (81 samples, 0.12%)</title><rect x="48.1453%" y="565" width="0.1243%" height="15" fill="rgb(247,70,47)" fg:x="31371" fg:w="81"/><text x="48.3953%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.01%)</title><rect x="48.2834%" y="581" width="0.0138%" height="15" fill="rgb(228,85,35)" fg:x="31461" fg:w="9"/><text x="48.5334%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="48.2834%" y="565" width="0.0138%" height="15" fill="rgb(209,50,18)" fg:x="31461" fg:w="9"/><text x="48.5334%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="48.2834%" y="549" width="0.0138%" height="15" fill="rgb(250,19,35)" fg:x="31461" fg:w="9"/><text x="48.5334%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.01%)</title><rect x="48.2834%" y="533" width="0.0138%" height="15" fill="rgb(253,107,29)" fg:x="31461" fg:w="9"/><text x="48.5334%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.01%)</title><rect x="48.2850%" y="517" width="0.0123%" height="15" fill="rgb(252,179,29)" fg:x="31462" fg:w="8"/><text x="48.5350%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.01%)</title><rect x="48.2850%" y="501" width="0.0123%" height="15" fill="rgb(238,194,6)" fg:x="31462" fg:w="8"/><text x="48.5350%" y="511.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="48.2850%" y="485" width="0.0123%" height="15" fill="rgb(238,164,29)" fg:x="31462" fg:w="8"/><text x="48.5350%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (16 samples, 0.02%)</title><rect x="48.2972%" y="581" width="0.0246%" height="15" fill="rgb(224,25,9)" fg:x="31470" fg:w="16"/><text x="48.5472%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::gt (16 samples, 0.02%)</title><rect x="48.2972%" y="565" width="0.0246%" height="15" fill="rgb(244,153,23)" fg:x="31470" fg:w="16"/><text x="48.5472%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (15 samples, 0.02%)</title><rect x="48.2988%" y="549" width="0.0230%" height="15" fill="rgb(212,203,14)" fg:x="31471" fg:w="15"/><text x="48.5488%" y="559.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (15 samples, 0.02%)</title><rect x="48.2988%" y="533" width="0.0230%" height="15" fill="rgb(220,164,20)" fg:x="31471" fg:w="15"/><text x="48.5488%" y="543.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (15 samples, 0.02%)</title><rect x="48.2988%" y="517" width="0.0230%" height="15" fill="rgb(222,203,48)" fg:x="31471" fg:w="15"/><text x="48.5488%" y="527.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.02%)</title><rect x="48.3018%" y="501" width="0.0200%" height="15" fill="rgb(215,159,22)" fg:x="31473" fg:w="13"/><text x="48.5518%" y="511.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (14 samples, 0.02%)</title><rect x="48.3310%" y="581" width="0.0215%" height="15" fill="rgb(216,183,47)" fg:x="31492" fg:w="14"/><text x="48.5810%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (9 samples, 0.01%)</title><rect x="48.3586%" y="581" width="0.0138%" height="15" fill="rgb(229,195,25)" fg:x="31510" fg:w="9"/><text x="48.6086%" y="591.50"></text></g><g><title>__GI___libc_free (21 samples, 0.03%)</title><rect x="48.3893%" y="501" width="0.0322%" height="15" fill="rgb(224,132,51)" fg:x="31530" fg:w="21"/><text x="48.6393%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u32,u32)&gt;&gt; (36 samples, 0.06%)</title><rect x="48.3724%" y="581" width="0.0552%" height="15" fill="rgb(240,63,7)" fg:x="31519" fg:w="36"/><text x="48.6224%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u32,u32)&gt;&gt; (36 samples, 0.06%)</title><rect x="48.3724%" y="565" width="0.0552%" height="15" fill="rgb(249,182,41)" fg:x="31519" fg:w="36"/><text x="48.6224%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.06%)</title><rect x="48.3724%" y="549" width="0.0552%" height="15" fill="rgb(243,47,26)" fg:x="31519" fg:w="36"/><text x="48.6224%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.04%)</title><rect x="48.3893%" y="533" width="0.0384%" height="15" fill="rgb(233,48,2)" fg:x="31530" fg:w="25"/><text x="48.6393%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.04%)</title><rect x="48.3893%" y="517" width="0.0384%" height="15" fill="rgb(244,165,34)" fg:x="31530" fg:w="25"/><text x="48.6393%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (16 samples, 0.02%)</title><rect x="48.4277%" y="501" width="0.0246%" height="15" fill="rgb(207,89,7)" fg:x="31555" fg:w="16"/><text x="48.6777%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (16 samples, 0.02%)</title><rect x="48.4277%" y="485" width="0.0246%" height="15" fill="rgb(244,117,36)" fg:x="31555" fg:w="16"/><text x="48.6777%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="48.4277%" y="469" width="0.0246%" height="15" fill="rgb(226,144,34)" fg:x="31555" fg:w="16"/><text x="48.6777%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.02%)</title><rect x="48.4292%" y="453" width="0.0230%" height="15" fill="rgb(213,23,19)" fg:x="31556" fg:w="15"/><text x="48.6792%" y="463.50"></text></g><g><title>_int_free (11 samples, 0.02%)</title><rect x="48.4354%" y="437" width="0.0169%" height="15" fill="rgb(217,75,12)" fg:x="31560" fg:w="11"/><text x="48.6854%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;u32&gt;&gt; (17 samples, 0.03%)</title><rect x="48.4277%" y="581" width="0.0261%" height="15" fill="rgb(224,159,17)" fg:x="31555" fg:w="17"/><text x="48.6777%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;u32,std::collections::hash::map::RandomState&gt;&gt; (17 samples, 0.03%)</title><rect x="48.4277%" y="565" width="0.0261%" height="15" fill="rgb(217,118,1)" fg:x="31555" fg:w="17"/><text x="48.6777%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,(),std::collections::hash::map::RandomState&gt;&gt; (17 samples, 0.03%)</title><rect x="48.4277%" y="549" width="0.0261%" height="15" fill="rgb(232,180,48)" fg:x="31555" fg:w="17"/><text x="48.6777%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,())&gt;&gt; (17 samples, 0.03%)</title><rect x="48.4277%" y="533" width="0.0261%" height="15" fill="rgb(230,27,33)" fg:x="31555" fg:w="17"/><text x="48.6777%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="48.4277%" y="517" width="0.0261%" height="15" fill="rgb(205,31,21)" fg:x="31555" fg:w="17"/><text x="48.6777%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.02%)</title><rect x="48.4691%" y="421" width="0.0169%" height="15" fill="rgb(253,59,4)" fg:x="31582" fg:w="11"/><text x="48.7191%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.03%)</title><rect x="48.4569%" y="485" width="0.0322%" height="15" fill="rgb(224,201,9)" fg:x="31574" fg:w="21"/><text x="48.7069%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21 samples, 0.03%)</title><rect x="48.4569%" y="469" width="0.0322%" height="15" fill="rgb(229,206,30)" fg:x="31574" fg:w="21"/><text x="48.7069%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21 samples, 0.03%)</title><rect x="48.4569%" y="453" width="0.0322%" height="15" fill="rgb(212,67,47)" fg:x="31574" fg:w="21"/><text x="48.7069%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.02%)</title><rect x="48.4661%" y="437" width="0.0230%" height="15" fill="rgb(211,96,50)" fg:x="31580" fg:w="15"/><text x="48.7161%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.03%)</title><rect x="48.4569%" y="517" width="0.0338%" height="15" fill="rgb(252,114,18)" fg:x="31574" fg:w="22"/><text x="48.7069%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (22 samples, 0.03%)</title><rect x="48.4569%" y="501" width="0.0338%" height="15" fill="rgb(223,58,37)" fg:x="31574" fg:w="22"/><text x="48.7069%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (31 samples, 0.05%)</title><rect x="48.4538%" y="581" width="0.0476%" height="15" fill="rgb(237,70,4)" fg:x="31572" fg:w="31"/><text x="48.7038%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (31 samples, 0.05%)</title><rect x="48.4538%" y="565" width="0.0476%" height="15" fill="rgb(244,85,46)" fg:x="31572" fg:w="31"/><text x="48.7038%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (31 samples, 0.05%)</title><rect x="48.4538%" y="549" width="0.0476%" height="15" fill="rgb(223,39,52)" fg:x="31572" fg:w="31"/><text x="48.7038%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (31 samples, 0.05%)</title><rect x="48.4538%" y="533" width="0.0476%" height="15" fill="rgb(218,200,14)" fg:x="31572" fg:w="31"/><text x="48.7038%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.01%)</title><rect x="48.4906%" y="517" width="0.0107%" height="15" fill="rgb(208,171,16)" fg:x="31596" fg:w="7"/><text x="48.7406%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.01%)</title><rect x="48.4906%" y="501" width="0.0107%" height="15" fill="rgb(234,200,18)" fg:x="31596" fg:w="7"/><text x="48.7406%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (7 samples, 0.01%)</title><rect x="48.4906%" y="485" width="0.0107%" height="15" fill="rgb(228,45,11)" fg:x="31596" fg:w="7"/><text x="48.7406%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.01%)</title><rect x="48.5029%" y="437" width="0.0107%" height="15" fill="rgb(237,182,11)" fg:x="31604" fg:w="7"/><text x="48.7529%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="48.5014%" y="501" width="0.0138%" height="15" fill="rgb(241,175,49)" fg:x="31603" fg:w="9"/><text x="48.7514%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="48.5014%" y="485" width="0.0138%" height="15" fill="rgb(247,38,35)" fg:x="31603" fg:w="9"/><text x="48.7514%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.01%)</title><rect x="48.5014%" y="469" width="0.0138%" height="15" fill="rgb(228,39,49)" fg:x="31603" fg:w="9"/><text x="48.7514%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.01%)</title><rect x="48.5014%" y="453" width="0.0138%" height="15" fill="rgb(226,101,26)" fg:x="31603" fg:w="9"/><text x="48.7514%" y="463.50"></text></g><g><title>hashbrown::map::make_insert_hash (11 samples, 0.02%)</title><rect x="48.5014%" y="533" width="0.0169%" height="15" fill="rgb(206,141,19)" fg:x="31603" fg:w="11"/><text x="48.7514%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="48.5014%" y="517" width="0.0169%" height="15" fill="rgb(211,200,13)" fg:x="31603" fg:w="11"/><text x="48.7514%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (12 samples, 0.02%)</title><rect x="48.5290%" y="517" width="0.0184%" height="15" fill="rgb(241,121,6)" fg:x="31621" fg:w="12"/><text x="48.7790%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (32 samples, 0.05%)</title><rect x="48.5014%" y="581" width="0.0491%" height="15" fill="rgb(234,221,29)" fg:x="31603" fg:w="32"/><text x="48.7514%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (32 samples, 0.05%)</title><rect x="48.5014%" y="565" width="0.0491%" height="15" fill="rgb(229,136,5)" fg:x="31603" fg:w="32"/><text x="48.7514%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (32 samples, 0.05%)</title><rect x="48.5014%" y="549" width="0.0491%" height="15" fill="rgb(238,36,11)" fg:x="31603" fg:w="32"/><text x="48.7514%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (16 samples, 0.02%)</title><rect x="48.5259%" y="533" width="0.0246%" height="15" fill="rgb(251,55,41)" fg:x="31619" fg:w="16"/><text x="48.7759%" y="543.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.01%)</title><rect x="48.5858%" y="389" width="0.0123%" height="15" fill="rgb(242,34,40)" fg:x="31658" fg:w="8"/><text x="48.8358%" y="399.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (11 samples, 0.02%)</title><rect x="48.5827%" y="453" width="0.0169%" height="15" fill="rgb(215,42,17)" fg:x="31656" fg:w="11"/><text x="48.8327%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.02%)</title><rect x="48.5827%" y="437" width="0.0169%" height="15" fill="rgb(207,44,46)" fg:x="31656" fg:w="11"/><text x="48.8327%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.02%)</title><rect x="48.5827%" y="421" width="0.0169%" height="15" fill="rgb(211,206,28)" fg:x="31656" fg:w="11"/><text x="48.8327%" y="431.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.02%)</title><rect x="48.5827%" y="405" width="0.0169%" height="15" fill="rgb(237,167,16)" fg:x="31656" fg:w="11"/><text x="48.8327%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (17 samples, 0.03%)</title><rect x="48.5750%" y="469" width="0.0261%" height="15" fill="rgb(233,66,6)" fg:x="31651" fg:w="17"/><text x="48.8250%" y="479.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::with_capacity (38 samples, 0.06%)</title><rect x="48.5505%" y="581" width="0.0583%" height="15" fill="rgb(246,123,29)" fg:x="31635" fg:w="38"/><text x="48.8005%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::with_capacity_and_hasher (33 samples, 0.05%)</title><rect x="48.5581%" y="565" width="0.0506%" height="15" fill="rgb(209,62,40)" fg:x="31640" fg:w="33"/><text x="48.8081%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (24 samples, 0.04%)</title><rect x="48.5720%" y="549" width="0.0368%" height="15" fill="rgb(218,4,25)" fg:x="31649" fg:w="24"/><text x="48.8220%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (24 samples, 0.04%)</title><rect x="48.5720%" y="533" width="0.0368%" height="15" fill="rgb(253,91,49)" fg:x="31649" fg:w="24"/><text x="48.8220%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (23 samples, 0.04%)</title><rect x="48.5735%" y="517" width="0.0353%" height="15" fill="rgb(228,155,29)" fg:x="31650" fg:w="23"/><text x="48.8235%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (23 samples, 0.04%)</title><rect x="48.5735%" y="501" width="0.0353%" height="15" fill="rgb(243,57,37)" fg:x="31650" fg:w="23"/><text x="48.8235%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (23 samples, 0.04%)</title><rect x="48.5735%" y="485" width="0.0353%" height="15" fill="rgb(244,167,17)" fg:x="31650" fg:w="23"/><text x="48.8235%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (9 samples, 0.01%)</title><rect x="48.6395%" y="533" width="0.0138%" height="15" fill="rgb(207,181,38)" fg:x="31693" fg:w="9"/><text x="48.8895%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (7 samples, 0.01%)</title><rect x="48.6426%" y="517" width="0.0107%" height="15" fill="rgb(211,8,23)" fg:x="31695" fg:w="7"/><text x="48.8926%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (11 samples, 0.02%)</title><rect x="48.6395%" y="549" width="0.0169%" height="15" fill="rgb(235,11,44)" fg:x="31693" fg:w="11"/><text x="48.8895%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (18 samples, 0.03%)</title><rect x="48.6579%" y="549" width="0.0276%" height="15" fill="rgb(248,18,52)" fg:x="31705" fg:w="18"/><text x="48.9079%" y="559.50"></text></g><g><title>core::cmp::PartialOrd::ge (18 samples, 0.03%)</title><rect x="48.6579%" y="533" width="0.0276%" height="15" fill="rgb(208,4,7)" fg:x="31705" fg:w="18"/><text x="48.9079%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (18 samples, 0.03%)</title><rect x="48.6579%" y="517" width="0.0276%" height="15" fill="rgb(240,17,39)" fg:x="31705" fg:w="18"/><text x="48.9079%" y="527.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (18 samples, 0.03%)</title><rect x="48.6579%" y="501" width="0.0276%" height="15" fill="rgb(207,170,3)" fg:x="31705" fg:w="18"/><text x="48.9079%" y="511.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (18 samples, 0.03%)</title><rect x="48.6579%" y="485" width="0.0276%" height="15" fill="rgb(236,100,52)" fg:x="31705" fg:w="18"/><text x="48.9079%" y="495.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.02%)</title><rect x="48.6671%" y="469" width="0.0184%" height="15" fill="rgb(246,78,51)" fg:x="31711" fg:w="12"/><text x="48.9171%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (11 samples, 0.02%)</title><rect x="48.8267%" y="453" width="0.0169%" height="15" fill="rgb(211,17,15)" fg:x="31815" fg:w="11"/><text x="49.0767%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.02%)</title><rect x="48.8267%" y="437" width="0.0169%" height="15" fill="rgb(209,59,46)" fg:x="31815" fg:w="11"/><text x="49.0767%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (27 samples, 0.04%)</title><rect x="48.8098%" y="485" width="0.0414%" height="15" fill="rgb(210,92,25)" fg:x="31804" fg:w="27"/><text x="49.0598%" y="495.50"></text></g><g><title>yakvdb::disk::block::get_u32 (22 samples, 0.03%)</title><rect x="48.8175%" y="469" width="0.0338%" height="15" fill="rgb(238,174,52)" fg:x="31809" fg:w="22"/><text x="49.0675%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (65 samples, 0.10%)</title><rect x="48.7761%" y="501" width="0.0998%" height="15" fill="rgb(230,73,7)" fg:x="31782" fg:w="65"/><text x="49.0261%" y="511.50"></text></g><g><title>yakvdb::disk::block::get_u32 (16 samples, 0.02%)</title><rect x="48.8513%" y="485" width="0.0246%" height="15" fill="rgb(243,124,40)" fg:x="31831" fg:w="16"/><text x="49.1013%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.02%)</title><rect x="48.8574%" y="469" width="0.0184%" height="15" fill="rgb(244,170,11)" fg:x="31835" fg:w="12"/><text x="49.1074%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.02%)</title><rect x="48.8574%" y="453" width="0.0184%" height="15" fill="rgb(207,114,54)" fg:x="31835" fg:w="12"/><text x="49.1074%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (78 samples, 0.12%)</title><rect x="48.7730%" y="533" width="0.1197%" height="15" fill="rgb(205,42,20)" fg:x="31780" fg:w="78"/><text x="49.0230%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (78 samples, 0.12%)</title><rect x="48.7730%" y="517" width="0.1197%" height="15" fill="rgb(230,30,28)" fg:x="31780" fg:w="78"/><text x="49.0230%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.02%)</title><rect x="48.8758%" y="501" width="0.0169%" height="15" fill="rgb(205,73,54)" fg:x="31847" fg:w="11"/><text x="49.1258%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key::{{closure}} (9 samples, 0.01%)</title><rect x="48.8789%" y="485" width="0.0138%" height="15" fill="rgb(254,227,23)" fg:x="31849" fg:w="9"/><text x="49.1289%" y="495.50"></text></g><g><title>[libc-2.31.so] (68 samples, 0.10%)</title><rect x="48.9188%" y="485" width="0.1044%" height="15" fill="rgb(228,202,34)" fg:x="31875" fg:w="68"/><text x="49.1688%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (91 samples, 0.14%)</title><rect x="48.8942%" y="533" width="0.1397%" height="15" fill="rgb(222,225,37)" fg:x="31859" fg:w="91"/><text x="49.1442%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (91 samples, 0.14%)</title><rect x="48.8942%" y="517" width="0.1397%" height="15" fill="rgb(221,14,54)" fg:x="31859" fg:w="91"/><text x="49.1442%" y="527.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (91 samples, 0.14%)</title><rect x="48.8942%" y="501" width="0.1397%" height="15" fill="rgb(254,102,2)" fg:x="31859" fg:w="91"/><text x="49.1442%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (7 samples, 0.01%)</title><rect x="49.0232%" y="485" width="0.0107%" height="15" fill="rgb(232,104,17)" fg:x="31943" fg:w="7"/><text x="49.2732%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (265 samples, 0.41%)</title><rect x="48.6318%" y="565" width="0.4067%" height="15" fill="rgb(250,220,14)" fg:x="31688" fg:w="265"/><text x="48.8818%" y="575.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (230 samples, 0.35%)</title><rect x="48.6855%" y="549" width="0.3530%" height="15" fill="rgb(241,158,9)" fg:x="31723" fg:w="230"/><text x="48.9355%" y="559.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (7 samples, 0.01%)</title><rect x="49.4897%" y="357" width="0.0107%" height="15" fill="rgb(246,9,43)" fg:x="32247" fg:w="7"/><text x="49.7397%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (7 samples, 0.01%)</title><rect x="49.4897%" y="341" width="0.0107%" height="15" fill="rgb(206,73,33)" fg:x="32247" fg:w="7"/><text x="49.7397%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (7 samples, 0.01%)</title><rect x="49.4897%" y="325" width="0.0107%" height="15" fill="rgb(222,79,8)" fg:x="32247" fg:w="7"/><text x="49.7397%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (23 samples, 0.04%)</title><rect x="49.5005%" y="357" width="0.0353%" height="15" fill="rgb(234,8,54)" fg:x="32254" fg:w="23"/><text x="49.7505%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.04%)</title><rect x="49.5005%" y="341" width="0.0353%" height="15" fill="rgb(209,134,38)" fg:x="32254" fg:w="23"/><text x="49.7505%" y="351.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (59 samples, 0.09%)</title><rect x="49.4652%" y="389" width="0.0905%" height="15" fill="rgb(230,127,29)" fg:x="32231" fg:w="59"/><text x="49.7152%" y="399.50"></text></g><g><title>yakvdb::disk::block::get_u32 (43 samples, 0.07%)</title><rect x="49.4897%" y="373" width="0.0660%" height="15" fill="rgb(242,44,41)" fg:x="32247" fg:w="43"/><text x="49.7397%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (13 samples, 0.02%)</title><rect x="49.5358%" y="357" width="0.0200%" height="15" fill="rgb(222,56,43)" fg:x="32277" fg:w="13"/><text x="49.7858%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.02%)</title><rect x="49.5358%" y="341" width="0.0200%" height="15" fill="rgb(238,39,47)" fg:x="32277" fg:w="13"/><text x="49.7858%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (31 samples, 0.05%)</title><rect x="49.5864%" y="373" width="0.0476%" height="15" fill="rgb(226,79,43)" fg:x="32310" fg:w="31"/><text x="49.8364%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (31 samples, 0.05%)</title><rect x="49.5864%" y="357" width="0.0476%" height="15" fill="rgb(242,105,53)" fg:x="32310" fg:w="31"/><text x="49.8364%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (31 samples, 0.05%)</title><rect x="49.5864%" y="341" width="0.0476%" height="15" fill="rgb(251,132,46)" fg:x="32310" fg:w="31"/><text x="49.8364%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (9 samples, 0.01%)</title><rect x="49.6340%" y="373" width="0.0138%" height="15" fill="rgb(231,77,14)" fg:x="32341" fg:w="9"/><text x="49.8840%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.01%)</title><rect x="49.6340%" y="357" width="0.0138%" height="15" fill="rgb(240,135,9)" fg:x="32341" fg:w="9"/><text x="49.8840%" y="367.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (442 samples, 0.68%)</title><rect x="49.0508%" y="437" width="0.6783%" height="15" fill="rgb(248,109,14)" fg:x="31961" fg:w="442"/><text x="49.3008%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (331 samples, 0.51%)</title><rect x="49.2211%" y="421" width="0.5080%" height="15" fill="rgb(227,146,52)" fg:x="32072" fg:w="331"/><text x="49.4711%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (319 samples, 0.49%)</title><rect x="49.2396%" y="405" width="0.4896%" height="15" fill="rgb(232,54,3)" fg:x="32084" fg:w="319"/><text x="49.4896%" y="415.50"></text></g><g><title>yakvdb::disk::block::get_u32 (113 samples, 0.17%)</title><rect x="49.5557%" y="389" width="0.1734%" height="15" fill="rgb(229,201,43)" fg:x="32290" fg:w="113"/><text x="49.8057%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (53 samples, 0.08%)</title><rect x="49.6478%" y="373" width="0.0813%" height="15" fill="rgb(252,161,33)" fg:x="32350" fg:w="53"/><text x="49.8978%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (53 samples, 0.08%)</title><rect x="49.6478%" y="357" width="0.0813%" height="15" fill="rgb(226,146,40)" fg:x="32350" fg:w="53"/><text x="49.8978%" y="367.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (12 samples, 0.02%)</title><rect x="49.7337%" y="405" width="0.0184%" height="15" fill="rgb(219,47,25)" fg:x="32406" fg:w="12"/><text x="49.9837%" y="415.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (12 samples, 0.02%)</title><rect x="49.7337%" y="389" width="0.0184%" height="15" fill="rgb(250,135,13)" fg:x="32406" fg:w="12"/><text x="49.9837%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (460 samples, 0.71%)</title><rect x="49.0508%" y="485" width="0.7060%" height="15" fill="rgb(219,229,18)" fg:x="31961" fg:w="460"/><text x="49.3008%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (460 samples, 0.71%)</title><rect x="49.0508%" y="469" width="0.7060%" height="15" fill="rgb(217,152,27)" fg:x="31961" fg:w="460"/><text x="49.3008%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (460 samples, 0.71%)</title><rect x="49.0508%" y="453" width="0.7060%" height="15" fill="rgb(225,71,47)" fg:x="31961" fg:w="460"/><text x="49.3008%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (18 samples, 0.03%)</title><rect x="49.7291%" y="437" width="0.0276%" height="15" fill="rgb(220,139,14)" fg:x="32403" fg:w="18"/><text x="49.9791%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (18 samples, 0.03%)</title><rect x="49.7291%" y="421" width="0.0276%" height="15" fill="rgb(247,54,32)" fg:x="32403" fg:w="18"/><text x="49.9791%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::fits (475 samples, 0.73%)</title><rect x="49.0385%" y="565" width="0.7290%" height="15" fill="rgb(252,131,39)" fg:x="31953" fg:w="475"/><text x="49.2885%" y="575.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (475 samples, 0.73%)</title><rect x="49.0385%" y="549" width="0.7290%" height="15" fill="rgb(210,108,39)" fg:x="31953" fg:w="475"/><text x="49.2885%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (467 samples, 0.72%)</title><rect x="49.0508%" y="533" width="0.7167%" height="15" fill="rgb(205,23,29)" fg:x="31961" fg:w="467"/><text x="49.3008%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (467 samples, 0.72%)</title><rect x="49.0508%" y="517" width="0.7167%" height="15" fill="rgb(246,139,46)" fg:x="31961" fg:w="467"/><text x="49.3008%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (467 samples, 0.72%)</title><rect x="49.0508%" y="501" width="0.7167%" height="15" fill="rgb(250,81,26)" fg:x="31961" fg:w="467"/><text x="49.3008%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="49.7567%" y="485" width="0.0107%" height="15" fill="rgb(214,104,7)" fg:x="32421" fg:w="7"/><text x="50.0067%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="49.7567%" y="469" width="0.0107%" height="15" fill="rgb(233,189,8)" fg:x="32421" fg:w="7"/><text x="50.0067%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (7 samples, 0.01%)</title><rect x="49.7567%" y="453" width="0.0107%" height="15" fill="rgb(228,141,17)" fg:x="32421" fg:w="7"/><text x="50.0067%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.01%)</title><rect x="49.7567%" y="437" width="0.0107%" height="15" fill="rgb(247,157,1)" fg:x="32421" fg:w="7"/><text x="50.0067%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (7 samples, 0.01%)</title><rect x="49.7567%" y="421" width="0.0107%" height="15" fill="rgb(249,225,5)" fg:x="32421" fg:w="7"/><text x="50.0067%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.01%)</title><rect x="49.7567%" y="405" width="0.0107%" height="15" fill="rgb(242,55,13)" fg:x="32421" fg:w="7"/><text x="50.0067%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (7 samples, 0.01%)</title><rect x="49.7567%" y="389" width="0.0107%" height="15" fill="rgb(230,49,50)" fg:x="32421" fg:w="7"/><text x="50.0067%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (7 samples, 0.01%)</title><rect x="49.7675%" y="549" width="0.0107%" height="15" fill="rgb(241,111,38)" fg:x="32428" fg:w="7"/><text x="50.0175%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (9 samples, 0.01%)</title><rect x="49.7675%" y="565" width="0.0138%" height="15" fill="rgb(252,155,4)" fg:x="32428" fg:w="9"/><text x="50.0175%" y="575.50"></text></g><g><title>core::intrinsics::copy (25 samples, 0.04%)</title><rect x="49.7920%" y="549" width="0.0384%" height="15" fill="rgb(212,69,32)" fg:x="32444" fg:w="25"/><text x="50.0420%" y="559.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (24 samples, 0.04%)</title><rect x="49.7936%" y="533" width="0.0368%" height="15" fill="rgb(243,107,47)" fg:x="32445" fg:w="24"/><text x="50.0436%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (32 samples, 0.05%)</title><rect x="49.7874%" y="565" width="0.0491%" height="15" fill="rgb(247,130,12)" fg:x="32441" fg:w="32"/><text x="50.0374%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (20 samples, 0.03%)</title><rect x="49.8841%" y="421" width="0.0307%" height="15" fill="rgb(233,74,16)" fg:x="32504" fg:w="20"/><text x="50.1341%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (20 samples, 0.03%)</title><rect x="49.8841%" y="405" width="0.0307%" height="15" fill="rgb(208,58,18)" fg:x="32504" fg:w="20"/><text x="50.1341%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (19 samples, 0.03%)</title><rect x="49.8857%" y="389" width="0.0292%" height="15" fill="rgb(242,225,1)" fg:x="32505" fg:w="19"/><text x="50.1357%" y="399.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (38 samples, 0.06%)</title><rect x="51.0444%" y="325" width="0.0583%" height="15" fill="rgb(249,39,40)" fg:x="33260" fg:w="38"/><text x="51.2944%" y="335.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (38 samples, 0.06%)</title><rect x="51.0444%" y="309" width="0.0583%" height="15" fill="rgb(207,72,44)" fg:x="33260" fg:w="38"/><text x="51.2944%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (38 samples, 0.06%)</title><rect x="51.0444%" y="293" width="0.0583%" height="15" fill="rgb(215,193,12)" fg:x="33260" fg:w="38"/><text x="51.2944%" y="303.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (64 samples, 0.10%)</title><rect x="51.0428%" y="357" width="0.0982%" height="15" fill="rgb(248,41,39)" fg:x="33259" fg:w="64"/><text x="51.2928%" y="367.50"></text></g><g><title>yakvdb::disk::block::get_u32 (63 samples, 0.10%)</title><rect x="51.0444%" y="341" width="0.0967%" height="15" fill="rgb(253,85,4)" fg:x="33260" fg:w="63"/><text x="51.2944%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (22 samples, 0.03%)</title><rect x="51.1073%" y="325" width="0.0338%" height="15" fill="rgb(243,70,31)" fg:x="33301" fg:w="22"/><text x="51.3573%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (22 samples, 0.03%)</title><rect x="51.1073%" y="309" width="0.0338%" height="15" fill="rgb(253,195,26)" fg:x="33301" fg:w="22"/><text x="51.3573%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (25 samples, 0.04%)</title><rect x="51.1764%" y="341" width="0.0384%" height="15" fill="rgb(243,42,11)" fg:x="33346" fg:w="25"/><text x="51.4264%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (25 samples, 0.04%)</title><rect x="51.1764%" y="325" width="0.0384%" height="15" fill="rgb(239,66,17)" fg:x="33346" fg:w="25"/><text x="51.4264%" y="335.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (25 samples, 0.04%)</title><rect x="51.1764%" y="309" width="0.0384%" height="15" fill="rgb(217,132,21)" fg:x="33346" fg:w="25"/><text x="51.4264%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (911 samples, 1.40%)</title><rect x="49.8841%" y="469" width="1.3981%" height="15" fill="rgb(252,202,21)" fg:x="32504" fg:w="911"/><text x="50.1341%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (911 samples, 1.40%)</title><rect x="49.8841%" y="453" width="1.3981%" height="15" fill="rgb(233,98,36)" fg:x="32504" fg:w="911"/><text x="50.1341%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (911 samples, 1.40%)</title><rect x="49.8841%" y="437" width="1.3981%" height="15" fill="rgb(216,153,54)" fg:x="32504" fg:w="911"/><text x="50.1341%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (891 samples, 1.37%)</title><rect x="49.9148%" y="421" width="1.3674%" height="15" fill="rgb(250,99,7)" fg:x="32524" fg:w="891"/><text x="50.1648%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (281 samples, 0.43%)</title><rect x="50.8510%" y="405" width="0.4313%" height="15" fill="rgb(207,56,50)" fg:x="33134" fg:w="281"/><text x="51.1010%" y="415.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (281 samples, 0.43%)</title><rect x="50.8510%" y="389" width="0.4313%" height="15" fill="rgb(244,61,34)" fg:x="33134" fg:w="281"/><text x="51.1010%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (252 samples, 0.39%)</title><rect x="50.8955%" y="373" width="0.3867%" height="15" fill="rgb(241,50,38)" fg:x="33163" fg:w="252"/><text x="51.1455%" y="383.50"></text></g><g><title>yakvdb::disk::block::get_u32 (92 samples, 0.14%)</title><rect x="51.1411%" y="357" width="0.1412%" height="15" fill="rgb(212,166,30)" fg:x="33323" fg:w="92"/><text x="51.3911%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (41 samples, 0.06%)</title><rect x="51.2193%" y="341" width="0.0629%" height="15" fill="rgb(249,127,32)" fg:x="33374" fg:w="41"/><text x="51.4693%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (41 samples, 0.06%)</title><rect x="51.2193%" y="325" width="0.0629%" height="15" fill="rgb(209,103,0)" fg:x="33374" fg:w="41"/><text x="51.4693%" y="335.50"></text></g><g><title>__PRETTY_FUNCTION__.4467 (9 samples, 0.01%)</title><rect x="51.4158%" y="309" width="0.0138%" height="15" fill="rgb(238,209,51)" fg:x="33502" fg:w="9"/><text x="51.6658%" y="319.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (46 samples, 0.07%)</title><rect x="51.4373%" y="309" width="0.0706%" height="15" fill="rgb(237,56,23)" fg:x="33516" fg:w="46"/><text x="51.6873%" y="319.50"></text></g><g><title>_int_free (40 samples, 0.06%)</title><rect x="51.5079%" y="309" width="0.0614%" height="15" fill="rgb(215,153,46)" fg:x="33562" fg:w="40"/><text x="51.7579%" y="319.50"></text></g><g><title>_int_malloc (142 samples, 0.22%)</title><rect x="51.5692%" y="309" width="0.2179%" height="15" fill="rgb(224,49,31)" fg:x="33602" fg:w="142"/><text x="51.8192%" y="319.50"></text></g><g><title>unlink_chunk.isra.0 (15 samples, 0.02%)</title><rect x="51.7641%" y="293" width="0.0230%" height="15" fill="rgb(250,18,42)" fg:x="33729" fg:w="15"/><text x="52.0141%" y="303.50"></text></g><g><title>__GI___libc_realloc (299 samples, 0.46%)</title><rect x="51.3314%" y="341" width="0.4589%" height="15" fill="rgb(215,176,39)" fg:x="33447" fg:w="299"/><text x="51.5814%" y="351.50"></text></g><g><title>_int_realloc (267 samples, 0.41%)</title><rect x="51.3805%" y="325" width="0.4098%" height="15" fill="rgb(223,77,29)" fg:x="33479" fg:w="267"/><text x="51.6305%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (308 samples, 0.47%)</title><rect x="51.3237%" y="389" width="0.4727%" height="15" fill="rgb(234,94,52)" fg:x="33442" fg:w="308"/><text x="51.5737%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (308 samples, 0.47%)</title><rect x="51.3237%" y="373" width="0.4727%" height="15" fill="rgb(220,154,50)" fg:x="33442" fg:w="308"/><text x="51.5737%" y="383.50"></text></g><g><title>alloc::alloc::realloc (304 samples, 0.47%)</title><rect x="51.3298%" y="357" width="0.4666%" height="15" fill="rgb(212,11,10)" fg:x="33446" fg:w="304"/><text x="51.5798%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (330 samples, 0.51%)</title><rect x="51.3191%" y="405" width="0.5065%" height="15" fill="rgb(205,166,19)" fg:x="33439" fg:w="330"/><text x="51.5691%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (19 samples, 0.03%)</title><rect x="51.7964%" y="389" width="0.0292%" height="15" fill="rgb(244,198,16)" fg:x="33750" fg:w="19"/><text x="52.0464%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (354 samples, 0.54%)</title><rect x="51.2884%" y="469" width="0.5433%" height="15" fill="rgb(219,69,12)" fg:x="33419" fg:w="354"/><text x="51.5384%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (354 samples, 0.54%)</title><rect x="51.2884%" y="453" width="0.5433%" height="15" fill="rgb(245,30,7)" fg:x="33419" fg:w="354"/><text x="51.5384%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (353 samples, 0.54%)</title><rect x="51.2899%" y="437" width="0.5418%" height="15" fill="rgb(218,221,48)" fg:x="33420" fg:w="353"/><text x="51.5399%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (353 samples, 0.54%)</title><rect x="51.2899%" y="421" width="0.5418%" height="15" fill="rgb(216,66,15)" fg:x="33420" fg:w="353"/><text x="51.5399%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,454 samples, 2.23%)</title><rect x="49.8442%" y="501" width="2.2315%" height="15" fill="rgb(226,122,50)" fg:x="32478" fg:w="1454"/><text x="50.0942%" y="511.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,454 samples, 2.23%)</title><rect x="49.8442%" y="485" width="2.2315%" height="15" fill="rgb(239,156,16)" fg:x="32478" fg:w="1454"/><text x="50.0942%" y="495.50">a..</text></g><g><title>core::ptr::write (157 samples, 0.24%)</title><rect x="51.8347%" y="469" width="0.2409%" height="15" fill="rgb(224,27,38)" fg:x="33775" fg:w="157"/><text x="52.0847%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="52.0757%" y="501" width="0.0215%" height="15" fill="rgb(224,39,27)" fg:x="33932" fg:w="14"/><text x="52.3257%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (14 samples, 0.02%)</title><rect x="52.0757%" y="485" width="0.0215%" height="15" fill="rgb(215,92,29)" fg:x="33932" fg:w="14"/><text x="52.3257%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.02%)</title><rect x="52.0757%" y="469" width="0.0215%" height="15" fill="rgb(207,159,16)" fg:x="33932" fg:w="14"/><text x="52.3257%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (13 samples, 0.02%)</title><rect x="52.0772%" y="453" width="0.0200%" height="15" fill="rgb(238,163,47)" fg:x="33933" fg:w="13"/><text x="52.3272%" y="463.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.02%)</title><rect x="52.0972%" y="389" width="0.0200%" height="15" fill="rgb(219,91,49)" fg:x="33946" fg:w="13"/><text x="52.3472%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.02%)</title><rect x="52.0972%" y="437" width="0.0215%" height="15" fill="rgb(227,167,31)" fg:x="33946" fg:w="14"/><text x="52.3472%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="52.0972%" y="421" width="0.0215%" height="15" fill="rgb(234,80,54)" fg:x="33946" fg:w="14"/><text x="52.3472%" y="431.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.02%)</title><rect x="52.0972%" y="405" width="0.0215%" height="15" fill="rgb(212,114,2)" fg:x="33946" fg:w="14"/><text x="52.3472%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,483 samples, 2.28%)</title><rect x="49.8442%" y="517" width="2.2760%" height="15" fill="rgb(234,50,24)" fg:x="32478" fg:w="1483"/><text x="50.0942%" y="527.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (15 samples, 0.02%)</title><rect x="52.0972%" y="501" width="0.0230%" height="15" fill="rgb(221,68,8)" fg:x="33946" fg:w="15"/><text x="52.3472%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="52.0972%" y="485" width="0.0230%" height="15" fill="rgb(254,180,31)" fg:x="33946" fg:w="15"/><text x="52.3472%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="52.0972%" y="469" width="0.0230%" height="15" fill="rgb(247,130,50)" fg:x="33946" fg:w="15"/><text x="52.3472%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.02%)</title><rect x="52.0972%" y="453" width="0.0230%" height="15" fill="rgb(211,109,4)" fg:x="33946" fg:w="15"/><text x="52.3472%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,487 samples, 2.28%)</title><rect x="49.8396%" y="565" width="2.2821%" height="15" fill="rgb(238,50,21)" fg:x="32475" fg:w="1487"/><text x="50.0896%" y="575.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,487 samples, 2.28%)</title><rect x="49.8396%" y="549" width="2.2821%" height="15" fill="rgb(225,57,45)" fg:x="32475" fg:w="1487"/><text x="50.0896%" y="559.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,485 samples, 2.28%)</title><rect x="49.8427%" y="533" width="2.2790%" height="15" fill="rgb(209,196,50)" fg:x="32477" fg:w="1485"/><text x="50.0927%" y="543.50">&lt;..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.03%)</title><rect x="52.1217%" y="517" width="0.0292%" height="15" fill="rgb(242,140,13)" fg:x="33962" fg:w="19"/><text x="52.3717%" y="527.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (30 samples, 0.05%)</title><rect x="52.2322%" y="437" width="0.0460%" height="15" fill="rgb(217,111,7)" fg:x="34034" fg:w="30"/><text x="52.4822%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (30 samples, 0.05%)</title><rect x="52.2322%" y="421" width="0.0460%" height="15" fill="rgb(253,193,51)" fg:x="34034" fg:w="30"/><text x="52.4822%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (30 samples, 0.05%)</title><rect x="52.2322%" y="405" width="0.0460%" height="15" fill="rgb(252,70,29)" fg:x="34034" fg:w="30"/><text x="52.4822%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (78 samples, 0.12%)</title><rect x="52.2783%" y="437" width="0.1197%" height="15" fill="rgb(232,127,12)" fg:x="34064" fg:w="78"/><text x="52.5283%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (78 samples, 0.12%)</title><rect x="52.2783%" y="421" width="0.1197%" height="15" fill="rgb(211,180,21)" fg:x="34064" fg:w="78"/><text x="52.5283%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (197 samples, 0.30%)</title><rect x="52.1509%" y="517" width="0.3023%" height="15" fill="rgb(229,72,13)" fg:x="33981" fg:w="197"/><text x="52.4009%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (197 samples, 0.30%)</title><rect x="52.1509%" y="501" width="0.3023%" height="15" fill="rgb(240,211,49)" fg:x="33981" fg:w="197"/><text x="52.4009%" y="511.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (197 samples, 0.30%)</title><rect x="52.1509%" y="485" width="0.3023%" height="15" fill="rgb(219,149,40)" fg:x="33981" fg:w="197"/><text x="52.4009%" y="495.50"></text></g><g><title>yakvdb::disk::block::put_slot (163 samples, 0.25%)</title><rect x="52.2031%" y="469" width="0.2502%" height="15" fill="rgb(210,127,46)" fg:x="34015" fg:w="163"/><text x="52.4531%" y="479.50"></text></g><g><title>yakvdb::disk::block::put_u32 (152 samples, 0.23%)</title><rect x="52.2200%" y="453" width="0.2333%" height="15" fill="rgb(220,106,7)" fg:x="34026" fg:w="152"/><text x="52.4700%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (36 samples, 0.06%)</title><rect x="52.3980%" y="437" width="0.0552%" height="15" fill="rgb(249,31,22)" fg:x="34142" fg:w="36"/><text x="52.6480%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (36 samples, 0.06%)</title><rect x="52.3980%" y="421" width="0.0552%" height="15" fill="rgb(253,1,49)" fg:x="34142" fg:w="36"/><text x="52.6480%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.04%)</title><rect x="52.4532%" y="421" width="0.0384%" height="15" fill="rgb(227,144,33)" fg:x="34178" fg:w="25"/><text x="52.7032%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.04%)</title><rect x="52.4532%" y="405" width="0.0384%" height="15" fill="rgb(249,163,44)" fg:x="34178" fg:w="25"/><text x="52.7032%" y="415.50"></text></g><g><title>_int_free (15 samples, 0.02%)</title><rect x="52.4686%" y="389" width="0.0230%" height="15" fill="rgb(234,15,39)" fg:x="34188" fg:w="15"/><text x="52.7186%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (246 samples, 0.38%)</title><rect x="52.1217%" y="565" width="0.3775%" height="15" fill="rgb(207,66,16)" fg:x="33962" fg:w="246"/><text x="52.3717%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (246 samples, 0.38%)</title><rect x="52.1217%" y="549" width="0.3775%" height="15" fill="rgb(233,112,24)" fg:x="33962" fg:w="246"/><text x="52.3717%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (246 samples, 0.38%)</title><rect x="52.1217%" y="533" width="0.3775%" height="15" fill="rgb(230,90,22)" fg:x="33962" fg:w="246"/><text x="52.3717%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;yakvdb::api::page::Slot&gt;&gt; (30 samples, 0.05%)</title><rect x="52.4532%" y="517" width="0.0460%" height="15" fill="rgb(229,61,13)" fg:x="34178" fg:w="30"/><text x="52.7032%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.05%)</title><rect x="52.4532%" y="501" width="0.0460%" height="15" fill="rgb(225,57,24)" fg:x="34178" fg:w="30"/><text x="52.7032%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;yakvdb::api::page::Slot,alloc::alloc::Global&gt;&gt; (30 samples, 0.05%)</title><rect x="52.4532%" y="485" width="0.0460%" height="15" fill="rgb(208,169,48)" fg:x="34178" fg:w="30"/><text x="52.7032%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.05%)</title><rect x="52.4532%" y="469" width="0.0460%" height="15" fill="rgb(244,218,51)" fg:x="34178" fg:w="30"/><text x="52.7032%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;yakvdb::api::page::Slot&gt;&gt; (30 samples, 0.05%)</title><rect x="52.4532%" y="453" width="0.0460%" height="15" fill="rgb(214,148,10)" fg:x="34178" fg:w="30"/><text x="52.7032%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.05%)</title><rect x="52.4532%" y="437" width="0.0460%" height="15" fill="rgb(225,174,27)" fg:x="34178" fg:w="30"/><text x="52.7032%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="52.5269%" y="485" width="0.0107%" height="15" fill="rgb(230,96,26)" fg:x="34226" fg:w="7"/><text x="52.7769%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (61 samples, 0.09%)</title><rect x="52.4993%" y="565" width="0.0936%" height="15" fill="rgb(232,10,30)" fg:x="34208" fg:w="61"/><text x="52.7493%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (61 samples, 0.09%)</title><rect x="52.4993%" y="549" width="0.0936%" height="15" fill="rgb(222,8,50)" fg:x="34208" fg:w="61"/><text x="52.7493%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (61 samples, 0.09%)</title><rect x="52.4993%" y="533" width="0.0936%" height="15" fill="rgb(213,81,27)" fg:x="34208" fg:w="61"/><text x="52.7493%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 0.09%)</title><rect x="52.4993%" y="517" width="0.0936%" height="15" fill="rgb(245,50,10)" fg:x="34208" fg:w="61"/><text x="52.7493%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (61 samples, 0.09%)</title><rect x="52.4993%" y="501" width="0.0936%" height="15" fill="rgb(216,100,18)" fg:x="34208" fg:w="61"/><text x="52.7493%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (36 samples, 0.06%)</title><rect x="52.5376%" y="485" width="0.0552%" height="15" fill="rgb(236,147,54)" fg:x="34233" fg:w="36"/><text x="52.7876%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::{{closure}} (36 samples, 0.06%)</title><rect x="52.5376%" y="469" width="0.0552%" height="15" fill="rgb(205,143,26)" fg:x="34233" fg:w="36"/><text x="52.7876%" y="479.50"></text></g><g><title>core::cmp::min_by (36 samples, 0.06%)</title><rect x="52.5376%" y="453" width="0.0552%" height="15" fill="rgb(236,26,9)" fg:x="34233" fg:w="36"/><text x="52.7876%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::insert (29,009 samples, 44.52%)</title><rect x="8.1815%" y="597" width="44.5203%" height="15" fill="rgb(221,165,53)" fg:x="5331" fg:w="29009"/><text x="8.4315%" y="607.50">&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::insert</text></g><g><title>yakvdb::disk::block::Block::put_entry (2,667 samples, 4.09%)</title><rect x="48.6088%" y="581" width="4.0931%" height="15" fill="rgb(214,110,17)" fg:x="31673" fg:w="2667"/><text x="48.8588%" y="591.50">yakv..</text></g><g><title>yakvdb::disk::block::put_slice (70 samples, 0.11%)</title><rect x="52.5944%" y="565" width="0.1074%" height="15" fill="rgb(237,197,12)" fg:x="34270" fg:w="70"/><text x="52.8444%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (70 samples, 0.11%)</title><rect x="52.5944%" y="549" width="0.1074%" height="15" fill="rgb(205,84,17)" fg:x="34270" fg:w="70"/><text x="52.8444%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (70 samples, 0.11%)</title><rect x="52.5944%" y="533" width="0.1074%" height="15" fill="rgb(237,18,45)" fg:x="34270" fg:w="70"/><text x="52.8444%" y="543.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (69 samples, 0.11%)</title><rect x="52.5960%" y="517" width="0.1059%" height="15" fill="rgb(221,87,14)" fg:x="34271" fg:w="69"/><text x="52.8460%" y="527.50"></text></g><g><title>&lt;main::SelfStorage as main::Storage&gt;::insert (29,021 samples, 44.54%)</title><rect x="8.1815%" y="613" width="44.5387%" height="15" fill="rgb(238,186,15)" fg:x="5331" fg:w="29021"/><text x="8.4315%" y="623.50">&lt;main::SelfStorage as main::Storage&gt;::insert</text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (12 samples, 0.02%)</title><rect x="52.7019%" y="597" width="0.0184%" height="15" fill="rgb(208,115,11)" fg:x="34340" fg:w="12"/><text x="52.9519%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.01%)</title><rect x="52.8860%" y="501" width="0.0107%" height="15" fill="rgb(254,175,0)" fg:x="34460" fg:w="7"/><text x="53.1360%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="52.8860%" y="485" width="0.0107%" height="15" fill="rgb(227,24,42)" fg:x="34460" fg:w="7"/><text x="53.1360%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (19 samples, 0.03%)</title><rect x="52.8799%" y="533" width="0.0292%" height="15" fill="rgb(223,211,37)" fg:x="34456" fg:w="19"/><text x="53.1299%" y="543.50"></text></g><g><title>yakvdb::disk::block::get_u32 (18 samples, 0.03%)</title><rect x="52.8814%" y="517" width="0.0276%" height="15" fill="rgb(235,49,27)" fg:x="34457" fg:w="18"/><text x="53.1314%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.01%)</title><rect x="52.8968%" y="501" width="0.0123%" height="15" fill="rgb(254,97,51)" fg:x="34467" fg:w="8"/><text x="53.1468%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.01%)</title><rect x="52.8968%" y="485" width="0.0123%" height="15" fill="rgb(249,51,40)" fg:x="34467" fg:w="8"/><text x="53.1468%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (39 samples, 0.06%)</title><rect x="52.8630%" y="549" width="0.0599%" height="15" fill="rgb(210,128,45)" fg:x="34445" fg:w="39"/><text x="53.1130%" y="559.50"></text></g><g><title>yakvdb::disk::block::get_u32 (9 samples, 0.01%)</title><rect x="52.9090%" y="533" width="0.0138%" height="15" fill="rgb(224,137,50)" fg:x="34475" fg:w="9"/><text x="53.1590%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (49 samples, 0.08%)</title><rect x="52.8630%" y="565" width="0.0752%" height="15" fill="rgb(242,15,9)" fg:x="34445" fg:w="49"/><text x="53.1130%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.02%)</title><rect x="52.9229%" y="549" width="0.0153%" height="15" fill="rgb(233,187,41)" fg:x="34484" fg:w="10"/><text x="53.1729%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key::{{closure}} (7 samples, 0.01%)</title><rect x="52.9275%" y="533" width="0.0107%" height="15" fill="rgb(227,2,29)" fg:x="34487" fg:w="7"/><text x="53.1775%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (17 samples, 0.03%)</title><rect x="52.9459%" y="533" width="0.0261%" height="15" fill="rgb(222,70,3)" fg:x="34499" fg:w="17"/><text x="53.1959%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.03%)</title><rect x="52.9459%" y="517" width="0.0261%" height="15" fill="rgb(213,11,42)" fg:x="34499" fg:w="17"/><text x="53.1959%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (23 samples, 0.04%)</title><rect x="52.9382%" y="565" width="0.0353%" height="15" fill="rgb(225,150,9)" fg:x="34494" fg:w="23"/><text x="53.1882%" y="575.50"></text></g><g><title>yakvdb::disk::block::get_u32 (18 samples, 0.03%)</title><rect x="52.9459%" y="549" width="0.0276%" height="15" fill="rgb(230,162,45)" fg:x="34499" fg:w="18"/><text x="53.1959%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (37 samples, 0.06%)</title><rect x="52.9735%" y="565" width="0.0568%" height="15" fill="rgb(222,14,52)" fg:x="34517" fg:w="37"/><text x="53.2235%" y="575.50"></text></g><g><title>core::cmp::PartialOrd::ge (37 samples, 0.06%)</title><rect x="52.9735%" y="549" width="0.0568%" height="15" fill="rgb(254,198,14)" fg:x="34517" fg:w="37"/><text x="53.2235%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (31 samples, 0.05%)</title><rect x="52.9827%" y="533" width="0.0476%" height="15" fill="rgb(220,217,30)" fg:x="34523" fg:w="31"/><text x="53.2327%" y="543.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (31 samples, 0.05%)</title><rect x="52.9827%" y="517" width="0.0476%" height="15" fill="rgb(215,146,41)" fg:x="34523" fg:w="31"/><text x="53.2327%" y="527.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (31 samples, 0.05%)</title><rect x="52.9827%" y="501" width="0.0476%" height="15" fill="rgb(217,27,36)" fg:x="34523" fg:w="31"/><text x="53.2327%" y="511.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.03%)</title><rect x="52.9981%" y="485" width="0.0322%" height="15" fill="rgb(219,218,39)" fg:x="34533" fg:w="21"/><text x="53.2481%" y="495.50"></text></g><g><title>&lt;u32 as core::ops::arith::Add&gt;::add (10 samples, 0.02%)</title><rect x="53.2528%" y="549" width="0.0153%" height="15" fill="rgb(219,4,42)" fg:x="34699" fg:w="10"/><text x="53.5028%" y="559.50"></text></g><g><title>&lt;u32 as core::ops::arith::Div&gt;::div (10 samples, 0.02%)</title><rect x="53.2682%" y="549" width="0.0153%" height="15" fill="rgb(249,119,36)" fg:x="34709" fg:w="10"/><text x="53.5182%" y="559.50"></text></g><g><title>&lt;u32 as core::ops::arith::Sub&gt;::sub (8 samples, 0.01%)</title><rect x="53.2835%" y="549" width="0.0123%" height="15" fill="rgb(209,23,33)" fg:x="34719" fg:w="8"/><text x="53.5335%" y="559.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (8 samples, 0.01%)</title><rect x="53.4447%" y="469" width="0.0123%" height="15" fill="rgb(211,10,0)" fg:x="34824" fg:w="8"/><text x="53.6947%" y="479.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (8 samples, 0.01%)</title><rect x="53.4447%" y="453" width="0.0123%" height="15" fill="rgb(208,99,37)" fg:x="34824" fg:w="8"/><text x="53.6947%" y="463.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (8 samples, 0.01%)</title><rect x="53.4447%" y="437" width="0.0123%" height="15" fill="rgb(213,132,31)" fg:x="34824" fg:w="8"/><text x="53.6947%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (19 samples, 0.03%)</title><rect x="53.4569%" y="469" width="0.0292%" height="15" fill="rgb(243,129,40)" fg:x="34832" fg:w="19"/><text x="53.7069%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.03%)</title><rect x="53.4569%" y="453" width="0.0292%" height="15" fill="rgb(210,66,33)" fg:x="34832" fg:w="19"/><text x="53.7069%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (44 samples, 0.07%)</title><rect x="53.4370%" y="501" width="0.0675%" height="15" fill="rgb(209,189,4)" fg:x="34819" fg:w="44"/><text x="53.6870%" y="511.50"></text></g><g><title>yakvdb::disk::block::get_u32 (39 samples, 0.06%)</title><rect x="53.4447%" y="485" width="0.0599%" height="15" fill="rgb(214,107,37)" fg:x="34824" fg:w="39"/><text x="53.6947%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.02%)</title><rect x="53.4861%" y="469" width="0.0184%" height="15" fill="rgb(245,88,54)" fg:x="34851" fg:w="12"/><text x="53.7361%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.02%)</title><rect x="53.4861%" y="453" width="0.0184%" height="15" fill="rgb(205,146,20)" fg:x="34851" fg:w="12"/><text x="53.7361%" y="463.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (18 samples, 0.03%)</title><rect x="53.5152%" y="485" width="0.0276%" height="15" fill="rgb(220,161,25)" fg:x="34870" fg:w="18"/><text x="53.7652%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (18 samples, 0.03%)</title><rect x="53.5152%" y="469" width="0.0276%" height="15" fill="rgb(215,152,15)" fg:x="34870" fg:w="18"/><text x="53.7652%" y="479.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (18 samples, 0.03%)</title><rect x="53.5152%" y="453" width="0.0276%" height="15" fill="rgb(233,192,44)" fg:x="34870" fg:w="18"/><text x="53.7652%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.01%)</title><rect x="53.5429%" y="485" width="0.0107%" height="15" fill="rgb(240,170,46)" fg:x="34888" fg:w="7"/><text x="53.7929%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="53.5429%" y="469" width="0.0107%" height="15" fill="rgb(207,104,33)" fg:x="34888" fg:w="7"/><text x="53.7929%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (180 samples, 0.28%)</title><rect x="53.3065%" y="517" width="0.2762%" height="15" fill="rgb(219,21,39)" fg:x="34734" fg:w="180"/><text x="53.5565%" y="527.50"></text></g><g><title>yakvdb::disk::block::get_u32 (51 samples, 0.08%)</title><rect x="53.5045%" y="501" width="0.0783%" height="15" fill="rgb(214,133,29)" fg:x="34863" fg:w="51"/><text x="53.7545%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (19 samples, 0.03%)</title><rect x="53.5536%" y="485" width="0.0292%" height="15" fill="rgb(226,93,6)" fg:x="34895" fg:w="19"/><text x="53.8036%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (19 samples, 0.03%)</title><rect x="53.5536%" y="469" width="0.0292%" height="15" fill="rgb(252,222,34)" fg:x="34895" fg:w="19"/><text x="53.8036%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (232 samples, 0.36%)</title><rect x="53.2958%" y="549" width="0.3561%" height="15" fill="rgb(252,92,48)" fg:x="34727" fg:w="232"/><text x="53.5458%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (232 samples, 0.36%)</title><rect x="53.2958%" y="533" width="0.3561%" height="15" fill="rgb(245,223,24)" fg:x="34727" fg:w="232"/><text x="53.5458%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (45 samples, 0.07%)</title><rect x="53.5828%" y="517" width="0.0691%" height="15" fill="rgb(205,176,3)" fg:x="34914" fg:w="45"/><text x="53.8328%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key::{{closure}} (23 samples, 0.04%)</title><rect x="53.6165%" y="501" width="0.0353%" height="15" fill="rgb(235,151,15)" fg:x="34936" fg:w="23"/><text x="53.8665%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.02%)</title><rect x="53.6334%" y="485" width="0.0184%" height="15" fill="rgb(237,209,11)" fg:x="34947" fg:w="12"/><text x="53.8834%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.02%)</title><rect x="53.6334%" y="469" width="0.0184%" height="15" fill="rgb(243,227,24)" fg:x="34947" fg:w="12"/><text x="53.8834%" y="479.50"></text></g><g><title>[libc-2.31.so] (263 samples, 0.40%)</title><rect x="53.7056%" y="501" width="0.4036%" height="15" fill="rgb(239,193,16)" fg:x="34994" fg:w="263"/><text x="53.9556%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (315 samples, 0.48%)</title><rect x="53.6518%" y="549" width="0.4834%" height="15" fill="rgb(231,27,9)" fg:x="34959" fg:w="315"/><text x="53.9018%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (315 samples, 0.48%)</title><rect x="53.6518%" y="533" width="0.4834%" height="15" fill="rgb(219,169,10)" fg:x="34959" fg:w="315"/><text x="53.9018%" y="543.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (315 samples, 0.48%)</title><rect x="53.6518%" y="517" width="0.4834%" height="15" fill="rgb(244,229,43)" fg:x="34959" fg:w="315"/><text x="53.9018%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (17 samples, 0.03%)</title><rect x="54.1092%" y="501" width="0.0261%" height="15" fill="rgb(254,38,20)" fg:x="35257" fg:w="17"/><text x="54.3592%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (843 samples, 1.29%)</title><rect x="52.8507%" y="581" width="1.2938%" height="15" fill="rgb(250,47,30)" fg:x="34437" fg:w="843"/><text x="53.1007%" y="591.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (726 samples, 1.11%)</title><rect x="53.0303%" y="565" width="1.1142%" height="15" fill="rgb(224,124,36)" fg:x="34554" fg:w="726"/><text x="53.2803%" y="575.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (10 samples, 0.02%)</title><rect x="54.1475%" y="565" width="0.0153%" height="15" fill="rgb(246,68,51)" fg:x="35282" fg:w="10"/><text x="54.3975%" y="575.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (11 samples, 0.02%)</title><rect x="54.1475%" y="581" width="0.0169%" height="15" fill="rgb(253,43,49)" fg:x="35282" fg:w="11"/><text x="54.3975%" y="591.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (20 samples, 0.03%)</title><rect x="54.1644%" y="581" width="0.0307%" height="15" fill="rgb(219,54,36)" fg:x="35293" fg:w="20"/><text x="54.4144%" y="591.50"></text></g><g><title>yakvdb::disk::block::get_u32 (7 samples, 0.01%)</title><rect x="54.1844%" y="565" width="0.0107%" height="15" fill="rgb(227,133,34)" fg:x="35306" fg:w="7"/><text x="54.4344%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.02%)</title><rect x="54.2089%" y="549" width="0.0169%" height="15" fill="rgb(247,227,15)" fg:x="35322" fg:w="11"/><text x="54.4589%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16 samples, 0.02%)</title><rect x="54.2565%" y="389" width="0.0246%" height="15" fill="rgb(229,96,14)" fg:x="35353" fg:w="16"/><text x="54.5065%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (34 samples, 0.05%)</title><rect x="54.2350%" y="453" width="0.0522%" height="15" fill="rgb(220,79,17)" fg:x="35339" fg:w="34"/><text x="54.4850%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (34 samples, 0.05%)</title><rect x="54.2350%" y="437" width="0.0522%" height="15" fill="rgb(205,131,53)" fg:x="35339" fg:w="34"/><text x="54.4850%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (34 samples, 0.05%)</title><rect x="54.2350%" y="421" width="0.0522%" height="15" fill="rgb(209,50,29)" fg:x="35339" fg:w="34"/><text x="54.4850%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (27 samples, 0.04%)</title><rect x="54.2458%" y="405" width="0.0414%" height="15" fill="rgb(245,86,46)" fg:x="35346" fg:w="27"/><text x="54.4958%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (35 samples, 0.05%)</title><rect x="54.2350%" y="485" width="0.0537%" height="15" fill="rgb(235,66,46)" fg:x="35339" fg:w="35"/><text x="54.4850%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (35 samples, 0.05%)</title><rect x="54.2350%" y="469" width="0.0537%" height="15" fill="rgb(232,148,31)" fg:x="35339" fg:w="35"/><text x="54.4850%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (13 samples, 0.02%)</title><rect x="54.2964%" y="437" width="0.0200%" height="15" fill="rgb(217,149,8)" fg:x="35379" fg:w="13"/><text x="54.5464%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (13 samples, 0.02%)</title><rect x="54.2964%" y="421" width="0.0200%" height="15" fill="rgb(209,183,11)" fg:x="35379" fg:w="13"/><text x="54.5464%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (13 samples, 0.02%)</title><rect x="54.2964%" y="405" width="0.0200%" height="15" fill="rgb(208,55,20)" fg:x="35379" fg:w="13"/><text x="54.5464%" y="415.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (73 samples, 0.11%)</title><rect x="54.2258%" y="549" width="0.1120%" height="15" fill="rgb(218,39,14)" fg:x="35333" fg:w="73"/><text x="54.4758%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (73 samples, 0.11%)</title><rect x="54.2258%" y="533" width="0.1120%" height="15" fill="rgb(216,169,33)" fg:x="35333" fg:w="73"/><text x="54.4758%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (73 samples, 0.11%)</title><rect x="54.2258%" y="517" width="0.1120%" height="15" fill="rgb(233,80,24)" fg:x="35333" fg:w="73"/><text x="54.4758%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (73 samples, 0.11%)</title><rect x="54.2258%" y="501" width="0.1120%" height="15" fill="rgb(213,179,31)" fg:x="35333" fg:w="73"/><text x="54.4758%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (32 samples, 0.05%)</title><rect x="54.2887%" y="485" width="0.0491%" height="15" fill="rgb(209,19,5)" fg:x="35374" fg:w="32"/><text x="54.5387%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (32 samples, 0.05%)</title><rect x="54.2887%" y="469" width="0.0491%" height="15" fill="rgb(219,18,35)" fg:x="35374" fg:w="32"/><text x="54.5387%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (32 samples, 0.05%)</title><rect x="54.2887%" y="453" width="0.0491%" height="15" fill="rgb(209,169,16)" fg:x="35374" fg:w="32"/><text x="54.5387%" y="463.50"></text></g><g><title>__GI___libc_free (18 samples, 0.03%)</title><rect x="54.3532%" y="485" width="0.0276%" height="15" fill="rgb(245,90,51)" fg:x="35416" fg:w="18"/><text x="54.6032%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;yakvdb::disk::block::Block&gt;&gt; (72 samples, 0.11%)</title><rect x="54.3486%" y="533" width="0.1105%" height="15" fill="rgb(220,99,45)" fg:x="35413" fg:w="72"/><text x="54.5986%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;yakvdb::disk::block::Block&gt; (71 samples, 0.11%)</title><rect x="54.3501%" y="517" width="0.1090%" height="15" fill="rgb(249,89,25)" fg:x="35414" fg:w="71"/><text x="54.6001%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (71 samples, 0.11%)</title><rect x="54.3501%" y="501" width="0.1090%" height="15" fill="rgb(239,193,0)" fg:x="35414" fg:w="71"/><text x="54.6001%" y="511.50"></text></g><g><title>_int_free (47 samples, 0.07%)</title><rect x="54.3870%" y="485" width="0.0721%" height="15" fill="rgb(231,126,1)" fg:x="35438" fg:w="47"/><text x="54.6370%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="54.4622%" y="469" width="0.0200%" height="15" fill="rgb(243,166,3)" fg:x="35487" fg:w="13"/><text x="54.7122%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="54.4622%" y="453" width="0.0200%" height="15" fill="rgb(223,22,34)" fg:x="35487" fg:w="13"/><text x="54.7122%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="54.4622%" y="437" width="0.0200%" height="15" fill="rgb(251,52,51)" fg:x="35487" fg:w="13"/><text x="54.7122%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.01%)</title><rect x="54.4683%" y="421" width="0.0138%" height="15" fill="rgb(221,165,28)" fg:x="35491" fg:w="9"/><text x="54.7183%" y="431.50"></text></g><g><title>hashbrown::map::make_insert_hash (15 samples, 0.02%)</title><rect x="54.4606%" y="501" width="0.0230%" height="15" fill="rgb(218,121,47)" fg:x="35486" fg:w="15"/><text x="54.7106%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.02%)</title><rect x="54.4606%" y="485" width="0.0230%" height="15" fill="rgb(209,120,9)" fg:x="35486" fg:w="15"/><text x="54.7106%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (8 samples, 0.01%)</title><rect x="54.4836%" y="501" width="0.0123%" height="15" fill="rgb(236,68,12)" fg:x="35501" fg:w="8"/><text x="54.7336%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.01%)</title><rect x="54.4836%" y="485" width="0.0123%" height="15" fill="rgb(225,194,26)" fg:x="35501" fg:w="8"/><text x="54.7336%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.01%)</title><rect x="54.4836%" y="469" width="0.0123%" height="15" fill="rgb(231,84,39)" fg:x="35501" fg:w="8"/><text x="54.7336%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (12 samples, 0.02%)</title><rect x="54.5097%" y="485" width="0.0184%" height="15" fill="rgb(210,11,45)" fg:x="35518" fg:w="12"/><text x="54.7597%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (46 samples, 0.07%)</title><rect x="54.4591%" y="533" width="0.0706%" height="15" fill="rgb(224,54,52)" fg:x="35485" fg:w="46"/><text x="54.7091%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (46 samples, 0.07%)</title><rect x="54.4591%" y="517" width="0.0706%" height="15" fill="rgb(238,102,14)" fg:x="35485" fg:w="46"/><text x="54.7091%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (22 samples, 0.03%)</title><rect x="54.4959%" y="501" width="0.0338%" height="15" fill="rgb(243,160,52)" fg:x="35509" fg:w="22"/><text x="54.7459%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="54.5312%" y="453" width="0.0200%" height="15" fill="rgb(216,114,19)" fg:x="35532" fg:w="13"/><text x="54.7812%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="54.5312%" y="437" width="0.0200%" height="15" fill="rgb(244,166,37)" fg:x="35532" fg:w="13"/><text x="54.7812%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="54.5312%" y="421" width="0.0200%" height="15" fill="rgb(246,29,44)" fg:x="35532" fg:w="13"/><text x="54.7812%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.02%)</title><rect x="54.5343%" y="405" width="0.0169%" height="15" fill="rgb(215,56,53)" fg:x="35534" fg:w="11"/><text x="54.7843%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.02%)</title><rect x="54.5343%" y="389" width="0.0169%" height="15" fill="rgb(217,60,2)" fg:x="35534" fg:w="11"/><text x="54.7843%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.02%)</title><rect x="54.5312%" y="485" width="0.0230%" height="15" fill="rgb(207,26,24)" fg:x="35532" fg:w="15"/><text x="54.7812%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.02%)</title><rect x="54.5312%" y="469" width="0.0230%" height="15" fill="rgb(252,210,15)" fg:x="35532" fg:w="15"/><text x="54.7812%" y="479.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.01%)</title><rect x="54.5635%" y="421" width="0.0138%" height="15" fill="rgb(253,209,26)" fg:x="35553" fg:w="9"/><text x="54.8135%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (9 samples, 0.01%)</title><rect x="54.5635%" y="405" width="0.0138%" height="15" fill="rgb(238,170,14)" fg:x="35553" fg:w="9"/><text x="54.8135%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (10 samples, 0.02%)</title><rect x="54.5635%" y="437" width="0.0153%" height="15" fill="rgb(216,178,15)" fg:x="35553" fg:w="10"/><text x="54.8135%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (27 samples, 0.04%)</title><rect x="54.5542%" y="469" width="0.0414%" height="15" fill="rgb(250,197,2)" fg:x="35547" fg:w="27"/><text x="54.8042%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (27 samples, 0.04%)</title><rect x="54.5542%" y="453" width="0.0414%" height="15" fill="rgb(212,70,42)" fg:x="35547" fg:w="27"/><text x="54.8042%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (47 samples, 0.07%)</title><rect x="54.5297%" y="533" width="0.0721%" height="15" fill="rgb(227,213,9)" fg:x="35531" fg:w="47"/><text x="54.7797%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (47 samples, 0.07%)</title><rect x="54.5297%" y="517" width="0.0721%" height="15" fill="rgb(245,99,25)" fg:x="35531" fg:w="47"/><text x="54.7797%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (46 samples, 0.07%)</title><rect x="54.5312%" y="501" width="0.0706%" height="15" fill="rgb(250,82,29)" fg:x="35532" fg:w="46"/><text x="54.7812%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (31 samples, 0.05%)</title><rect x="54.5542%" y="485" width="0.0476%" height="15" fill="rgb(241,226,54)" fg:x="35547" fg:w="31"/><text x="54.8042%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (19 samples, 0.03%)</title><rect x="54.6018%" y="517" width="0.0292%" height="15" fill="rgb(221,99,41)" fg:x="35578" fg:w="19"/><text x="54.8518%" y="527.50"></text></g><g><title>core::intrinsics::copy (16 samples, 0.02%)</title><rect x="54.6064%" y="501" width="0.0246%" height="15" fill="rgb(213,90,21)" fg:x="35581" fg:w="16"/><text x="54.8564%" y="511.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (15 samples, 0.02%)</title><rect x="54.6080%" y="485" width="0.0230%" height="15" fill="rgb(205,208,24)" fg:x="35582" fg:w="15"/><text x="54.8580%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.02%)</title><rect x="54.6402%" y="373" width="0.0184%" height="15" fill="rgb(246,31,12)" fg:x="35603" fg:w="12"/><text x="54.8902%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.03%)</title><rect x="54.6340%" y="469" width="0.0276%" height="15" fill="rgb(213,154,6)" fg:x="35599" fg:w="18"/><text x="54.8840%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.03%)</title><rect x="54.6340%" y="453" width="0.0276%" height="15" fill="rgb(222,163,29)" fg:x="35599" fg:w="18"/><text x="54.8840%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="54.6356%" y="437" width="0.0261%" height="15" fill="rgb(227,201,8)" fg:x="35600" fg:w="17"/><text x="54.8856%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="54.6356%" y="421" width="0.0261%" height="15" fill="rgb(233,9,32)" fg:x="35600" fg:w="17"/><text x="54.8856%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="54.6356%" y="405" width="0.0261%" height="15" fill="rgb(217,54,24)" fg:x="35600" fg:w="17"/><text x="54.8856%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.02%)</title><rect x="54.6402%" y="389" width="0.0215%" height="15" fill="rgb(235,192,0)" fg:x="35603" fg:w="14"/><text x="54.8902%" y="399.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::put (227 samples, 0.35%)</title><rect x="54.3379%" y="549" width="0.3484%" height="15" fill="rgb(235,45,9)" fg:x="35406" fg:w="227"/><text x="54.5879%" y="559.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (55 samples, 0.08%)</title><rect x="54.6018%" y="533" width="0.0844%" height="15" fill="rgb(246,42,40)" fg:x="35578" fg:w="55"/><text x="54.8518%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (34 samples, 0.05%)</title><rect x="54.6340%" y="517" width="0.0522%" height="15" fill="rgb(248,111,24)" fg:x="35599" fg:w="34"/><text x="54.8840%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (34 samples, 0.05%)</title><rect x="54.6340%" y="501" width="0.0522%" height="15" fill="rgb(249,65,22)" fg:x="35599" fg:w="34"/><text x="54.8840%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (34 samples, 0.05%)</title><rect x="54.6340%" y="485" width="0.0522%" height="15" fill="rgb(238,111,51)" fg:x="35599" fg:w="34"/><text x="54.8840%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (16 samples, 0.02%)</title><rect x="54.6617%" y="469" width="0.0246%" height="15" fill="rgb(250,118,22)" fg:x="35617" fg:w="16"/><text x="54.9117%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.02%)</title><rect x="54.6617%" y="453" width="0.0246%" height="15" fill="rgb(234,84,26)" fg:x="35617" fg:w="16"/><text x="54.9117%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (16 samples, 0.02%)</title><rect x="54.6617%" y="437" width="0.0246%" height="15" fill="rgb(243,172,12)" fg:x="35617" fg:w="16"/><text x="54.9117%" y="447.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (650 samples, 1.00%)</title><rect x="54.7000%" y="533" width="0.9976%" height="15" fill="rgb(236,150,49)" fg:x="35642" fg:w="650"/><text x="54.9500%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::seek (649 samples, 1.00%)</title><rect x="54.7016%" y="517" width="0.9960%" height="15" fill="rgb(225,197,26)" fg:x="35643" fg:w="649"/><text x="54.9516%" y="527.50"></text></g><g><title>__lseek64 (642 samples, 0.99%)</title><rect x="54.7123%" y="501" width="0.9853%" height="15" fill="rgb(214,17,42)" fg:x="35650" fg:w="642"/><text x="54.9623%" y="511.50"></text></g><g><title>[unknown] (617 samples, 0.95%)</title><rect x="54.7507%" y="485" width="0.9469%" height="15" fill="rgb(224,165,40)" fg:x="35675" fg:w="617"/><text x="55.0007%" y="495.50"></text></g><g><title>[unknown] (436 samples, 0.67%)</title><rect x="55.0285%" y="469" width="0.6691%" height="15" fill="rgb(246,100,4)" fg:x="35856" fg:w="436"/><text x="55.2785%" y="479.50"></text></g><g><title>[unknown] (129 samples, 0.20%)</title><rect x="55.4996%" y="453" width="0.1980%" height="15" fill="rgb(222,103,0)" fg:x="36163" fg:w="129"/><text x="55.7496%" y="463.50"></text></g><g><title>[unknown] (118 samples, 0.18%)</title><rect x="55.5165%" y="437" width="0.1811%" height="15" fill="rgb(227,189,26)" fg:x="36174" fg:w="118"/><text x="55.7665%" y="447.50"></text></g><g><title>[unknown] (88 samples, 0.14%)</title><rect x="55.5625%" y="421" width="0.1351%" height="15" fill="rgb(214,202,17)" fg:x="36204" fg:w="88"/><text x="55.8125%" y="431.50"></text></g><g><title>[unknown] (45 samples, 0.07%)</title><rect x="55.6285%" y="405" width="0.0691%" height="15" fill="rgb(229,111,3)" fg:x="36247" fg:w="45"/><text x="55.8785%" y="415.50"></text></g><g><title>__memset_sse2_unaligned_erms (179 samples, 0.27%)</title><rect x="55.7498%" y="389" width="0.2747%" height="15" fill="rgb(229,172,15)" fg:x="36326" fg:w="179"/><text x="55.9998%" y="399.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="56.0675%" y="373" width="0.0184%" height="15" fill="rgb(230,224,35)" fg:x="36533" fg:w="12"/><text x="56.3175%" y="383.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="56.0675%" y="357" width="0.0184%" height="15" fill="rgb(251,141,6)" fg:x="36533" fg:w="12"/><text x="56.3175%" y="367.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="56.0690%" y="341" width="0.0169%" height="15" fill="rgb(225,208,6)" fg:x="36534" fg:w="11"/><text x="56.3190%" y="351.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="56.0690%" y="325" width="0.0169%" height="15" fill="rgb(246,181,16)" fg:x="36534" fg:w="11"/><text x="56.3190%" y="335.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="56.0705%" y="309" width="0.0153%" height="15" fill="rgb(227,129,36)" fg:x="36535" fg:w="10"/><text x="56.3205%" y="319.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="56.0721%" y="293" width="0.0138%" height="15" fill="rgb(248,117,24)" fg:x="36536" fg:w="9"/><text x="56.3221%" y="303.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="56.0736%" y="277" width="0.0123%" height="15" fill="rgb(214,185,35)" fg:x="36537" fg:w="8"/><text x="56.3236%" y="287.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="56.0751%" y="261" width="0.0107%" height="15" fill="rgb(236,150,34)" fg:x="36538" fg:w="7"/><text x="56.3251%" y="271.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="56.0751%" y="245" width="0.0107%" height="15" fill="rgb(243,228,27)" fg:x="36538" fg:w="7"/><text x="56.3251%" y="255.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="56.0751%" y="229" width="0.0107%" height="15" fill="rgb(245,77,44)" fg:x="36538" fg:w="7"/><text x="56.3251%" y="239.50"></text></g><g><title>__calloc (243 samples, 0.37%)</title><rect x="55.7160%" y="405" width="0.3729%" height="15" fill="rgb(235,214,42)" fg:x="36304" fg:w="243"/><text x="55.9660%" y="415.50"></text></g><g><title>_int_malloc (42 samples, 0.06%)</title><rect x="56.0245%" y="389" width="0.0645%" height="15" fill="rgb(221,74,3)" fg:x="36505" fg:w="42"/><text x="56.2745%" y="399.50"></text></g><g><title>alloc::vec::from_elem (251 samples, 0.39%)</title><rect x="55.7068%" y="517" width="0.3852%" height="15" fill="rgb(206,121,29)" fg:x="36298" fg:w="251"/><text x="55.9568%" y="527.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (251 samples, 0.39%)</title><rect x="55.7068%" y="501" width="0.3852%" height="15" fill="rgb(249,131,53)" fg:x="36298" fg:w="251"/><text x="55.9568%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (250 samples, 0.38%)</title><rect x="55.7083%" y="485" width="0.3837%" height="15" fill="rgb(236,170,29)" fg:x="36299" fg:w="250"/><text x="55.9583%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (250 samples, 0.38%)</title><rect x="55.7083%" y="469" width="0.3837%" height="15" fill="rgb(247,96,15)" fg:x="36299" fg:w="250"/><text x="55.9583%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (247 samples, 0.38%)</title><rect x="55.7129%" y="453" width="0.3791%" height="15" fill="rgb(211,210,7)" fg:x="36302" fg:w="247"/><text x="55.9629%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (247 samples, 0.38%)</title><rect x="55.7129%" y="437" width="0.3791%" height="15" fill="rgb(240,88,50)" fg:x="36302" fg:w="247"/><text x="55.9629%" y="447.50"></text></g><g><title>alloc::alloc::alloc_zeroed (247 samples, 0.38%)</title><rect x="55.7129%" y="421" width="0.3791%" height="15" fill="rgb(209,229,26)" fg:x="36302" fg:w="247"/><text x="55.9629%" y="431.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (216 samples, 0.33%)</title><rect x="56.0920%" y="517" width="0.3315%" height="15" fill="rgb(210,68,23)" fg:x="36549" fg:w="216"/><text x="56.3420%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (212 samples, 0.33%)</title><rect x="56.0982%" y="501" width="0.3254%" height="15" fill="rgb(229,180,13)" fg:x="36553" fg:w="212"/><text x="56.3482%" y="511.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (211 samples, 0.32%)</title><rect x="56.0997%" y="485" width="0.3238%" height="15" fill="rgb(236,53,44)" fg:x="36554" fg:w="211"/><text x="56.3497%" y="495.50"></text></g><g><title>__GI___libc_malloc (63 samples, 0.10%)</title><rect x="56.4235%" y="389" width="0.0967%" height="15" fill="rgb(244,214,29)" fg:x="36765" fg:w="63"/><text x="56.6735%" y="399.50"></text></g><g><title>_int_malloc (55 samples, 0.08%)</title><rect x="56.4358%" y="373" width="0.0844%" height="15" fill="rgb(220,75,29)" fg:x="36773" fg:w="55"/><text x="56.6858%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (64 samples, 0.10%)</title><rect x="56.4235%" y="501" width="0.0982%" height="15" fill="rgb(214,183,37)" fg:x="36765" fg:w="64"/><text x="56.6735%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (64 samples, 0.10%)</title><rect x="56.4235%" y="485" width="0.0982%" height="15" fill="rgb(239,117,29)" fg:x="36765" fg:w="64"/><text x="56.6735%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (64 samples, 0.10%)</title><rect x="56.4235%" y="469" width="0.0982%" height="15" fill="rgb(237,171,35)" fg:x="36765" fg:w="64"/><text x="56.6735%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (64 samples, 0.10%)</title><rect x="56.4235%" y="453" width="0.0982%" height="15" fill="rgb(229,178,53)" fg:x="36765" fg:w="64"/><text x="56.6735%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (64 samples, 0.10%)</title><rect x="56.4235%" y="437" width="0.0982%" height="15" fill="rgb(210,102,19)" fg:x="36765" fg:w="64"/><text x="56.6735%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (64 samples, 0.10%)</title><rect x="56.4235%" y="421" width="0.0982%" height="15" fill="rgb(235,127,22)" fg:x="36765" fg:w="64"/><text x="56.6735%" y="431.50"></text></g><g><title>alloc::alloc::alloc (64 samples, 0.10%)</title><rect x="56.4235%" y="405" width="0.0982%" height="15" fill="rgb(244,31,31)" fg:x="36765" fg:w="64"/><text x="56.6735%" y="415.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (67 samples, 0.10%)</title><rect x="56.4235%" y="517" width="0.1028%" height="15" fill="rgb(231,43,21)" fg:x="36765" fg:w="67"/><text x="56.6735%" y="527.50"></text></g><g><title>__GI___libc_free (7 samples, 0.01%)</title><rect x="56.5263%" y="437" width="0.0107%" height="15" fill="rgb(217,131,35)" fg:x="36832" fg:w="7"/><text x="56.7763%" y="447.50"></text></g><g><title>__libc_read (124 samples, 0.19%)</title><rect x="56.5371%" y="437" width="0.1903%" height="15" fill="rgb(221,149,4)" fg:x="36839" fg:w="124"/><text x="56.7871%" y="447.50"></text></g><g><title>[unknown] (124 samples, 0.19%)</title><rect x="56.5371%" y="421" width="0.1903%" height="15" fill="rgb(232,170,28)" fg:x="36839" fg:w="124"/><text x="56.7871%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::reserve (701 samples, 1.08%)</title><rect x="55.6976%" y="533" width="1.0758%" height="15" fill="rgb(238,56,10)" fg:x="36292" fg:w="701"/><text x="55.9476%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (161 samples, 0.25%)</title><rect x="56.5263%" y="517" width="0.2471%" height="15" fill="rgb(235,196,14)" fg:x="36832" fg:w="161"/><text x="56.7763%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (161 samples, 0.25%)</title><rect x="56.5263%" y="501" width="0.2471%" height="15" fill="rgb(216,45,48)" fg:x="36832" fg:w="161"/><text x="56.7763%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (161 samples, 0.25%)</title><rect x="56.5263%" y="485" width="0.2471%" height="15" fill="rgb(238,213,17)" fg:x="36832" fg:w="161"/><text x="56.7763%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (161 samples, 0.25%)</title><rect x="56.5263%" y="469" width="0.2471%" height="15" fill="rgb(212,13,2)" fg:x="36832" fg:w="161"/><text x="56.7763%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (161 samples, 0.25%)</title><rect x="56.5263%" y="453" width="0.2471%" height="15" fill="rgb(240,114,20)" fg:x="36832" fg:w="161"/><text x="56.7763%" y="463.50"></text></g><g><title>_int_free (30 samples, 0.05%)</title><rect x="56.7274%" y="437" width="0.0460%" height="15" fill="rgb(228,41,40)" fg:x="36963" fg:w="30"/><text x="56.9774%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::fs::File&gt;&gt; (16 samples, 0.02%)</title><rect x="56.7780%" y="533" width="0.0246%" height="15" fill="rgb(244,132,35)" fg:x="36996" fg:w="16"/><text x="57.0280%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (16 samples, 0.02%)</title><rect x="56.7780%" y="517" width="0.0246%" height="15" fill="rgb(253,189,4)" fg:x="36996" fg:w="16"/><text x="57.0280%" y="527.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="56.7780%" y="501" width="0.0246%" height="15" fill="rgb(224,37,19)" fg:x="36996" fg:w="16"/><text x="57.0280%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (16 samples, 0.02%)</title><rect x="56.7780%" y="485" width="0.0246%" height="15" fill="rgb(235,223,18)" fg:x="36996" fg:w="16"/><text x="57.0280%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (16 samples, 0.02%)</title><rect x="56.7780%" y="469" width="0.0246%" height="15" fill="rgb(235,163,25)" fg:x="36996" fg:w="16"/><text x="57.0280%" y="479.50"></text></g><g><title>core::mem::replace (16 samples, 0.02%)</title><rect x="56.7780%" y="453" width="0.0246%" height="15" fill="rgb(217,145,28)" fg:x="36996" fg:w="16"/><text x="57.0280%" y="463.50"></text></g><g><title>core::ptr::write (16 samples, 0.02%)</title><rect x="56.7780%" y="437" width="0.0246%" height="15" fill="rgb(223,223,32)" fg:x="36996" fg:w="16"/><text x="57.0280%" y="447.50"></text></g><g><title>__libc_read (2,144 samples, 3.29%)</title><rect x="56.8103%" y="453" width="3.2904%" height="15" fill="rgb(227,189,39)" fg:x="37017" fg:w="2144"/><text x="57.0603%" y="463.50">__l..</text></g><g><title>[unknown] (2,115 samples, 3.25%)</title><rect x="56.8548%" y="437" width="3.2459%" height="15" fill="rgb(248,10,22)" fg:x="37046" fg:w="2115"/><text x="57.1048%" y="447.50">[un..</text></g><g><title>[unknown] (1,938 samples, 2.97%)</title><rect x="57.1264%" y="421" width="2.9743%" height="15" fill="rgb(248,46,39)" fg:x="37223" fg:w="1938"/><text x="57.3764%" y="431.50">[un..</text></g><g><title>[unknown] (1,618 samples, 2.48%)</title><rect x="57.6175%" y="405" width="2.4832%" height="15" fill="rgb(248,113,48)" fg:x="37543" fg:w="1618"/><text x="57.8675%" y="415.50">[u..</text></g><g><title>[unknown] (1,613 samples, 2.48%)</title><rect x="57.6252%" y="389" width="2.4755%" height="15" fill="rgb(245,16,25)" fg:x="37548" fg:w="1613"/><text x="57.8752%" y="399.50">[u..</text></g><g><title>[unknown] (1,601 samples, 2.46%)</title><rect x="57.6436%" y="373" width="2.4571%" height="15" fill="rgb(249,152,16)" fg:x="37560" fg:w="1601"/><text x="57.8936%" y="383.50">[u..</text></g><g><title>[unknown] (1,569 samples, 2.41%)</title><rect x="57.6927%" y="357" width="2.4080%" height="15" fill="rgb(250,16,1)" fg:x="37592" fg:w="1569"/><text x="57.9427%" y="367.50">[u..</text></g><g><title>[unknown] (1,486 samples, 2.28%)</title><rect x="57.8201%" y="341" width="2.2806%" height="15" fill="rgb(249,138,3)" fg:x="37675" fg:w="1486"/><text x="58.0701%" y="351.50">[..</text></g><g><title>[unknown] (1,385 samples, 2.13%)</title><rect x="57.9751%" y="325" width="2.1256%" height="15" fill="rgb(227,71,41)" fg:x="37776" fg:w="1385"/><text x="58.2251%" y="335.50">[..</text></g><g><title>[unknown] (1,296 samples, 1.99%)</title><rect x="58.1117%" y="309" width="1.9890%" height="15" fill="rgb(209,184,23)" fg:x="37865" fg:w="1296"/><text x="58.3617%" y="319.50">[..</text></g><g><title>[unknown] (1,230 samples, 1.89%)</title><rect x="58.2130%" y="293" width="1.8877%" height="15" fill="rgb(223,215,31)" fg:x="37931" fg:w="1230"/><text x="58.4630%" y="303.50">[..</text></g><g><title>[unknown] (1,093 samples, 1.68%)</title><rect x="58.4232%" y="277" width="1.6774%" height="15" fill="rgb(210,146,28)" fg:x="38068" fg:w="1093"/><text x="58.6732%" y="287.50"></text></g><g><title>[unknown] (1,029 samples, 1.58%)</title><rect x="58.5215%" y="261" width="1.5792%" height="15" fill="rgb(209,183,41)" fg:x="38132" fg:w="1029"/><text x="58.7715%" y="271.50"></text></g><g><title>[unknown] (193 samples, 0.30%)</title><rect x="59.8045%" y="245" width="0.2962%" height="15" fill="rgb(209,224,45)" fg:x="38968" fg:w="193"/><text x="60.0545%" y="255.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="60.0823%" y="229" width="0.0184%" height="15" fill="rgb(224,209,51)" fg:x="39149" fg:w="12"/><text x="60.3323%" y="239.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (2,147 samples, 3.30%)</title><rect x="56.8072%" y="501" width="3.2950%" height="15" fill="rgb(223,17,39)" fg:x="37015" fg:w="2147"/><text x="57.0572%" y="511.50">&lt;st..</text></g><g><title>std::sys::unix::fs::File::read (2,147 samples, 3.30%)</title><rect x="56.8072%" y="485" width="3.2950%" height="15" fill="rgb(234,204,37)" fg:x="37015" fg:w="2147"/><text x="57.0572%" y="495.50">std..</text></g><g><title>std::sys::unix::fd::FileDesc::read (2,147 samples, 3.30%)</title><rect x="56.8072%" y="469" width="3.2950%" height="15" fill="rgb(236,120,5)" fg:x="37015" fg:w="2147"/><text x="57.0572%" y="479.50">std..</text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (3,846 samples, 5.90%)</title><rect x="54.2013%" y="565" width="5.9025%" height="15" fill="rgb(248,97,27)" fg:x="35317" fg:w="3846"/><text x="54.4513%" y="575.50">&lt;yakvdb:..</text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (3,527 samples, 5.41%)</title><rect x="54.6908%" y="549" width="5.4129%" height="15" fill="rgb(240,66,17)" fg:x="35636" fg:w="3527"/><text x="54.9408%" y="559.50">yakvdb:..</text></g><g><title>std::io::Read::read_exact (2,150 samples, 3.30%)</title><rect x="56.8041%" y="533" width="3.2996%" height="15" fill="rgb(210,79,3)" fg:x="37013" fg:w="2150"/><text x="57.0541%" y="543.50">std..</text></g><g><title>std::io::default_read_exact (2,150 samples, 3.30%)</title><rect x="56.8041%" y="517" width="3.2996%" height="15" fill="rgb(214,176,27)" fg:x="37013" fg:w="2150"/><text x="57.0541%" y="527.50">std..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="60.1191%" y="389" width="0.0123%" height="15" fill="rgb(235,185,3)" fg:x="39173" fg:w="8"/><text x="60.3691%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="60.1191%" y="373" width="0.0123%" height="15" fill="rgb(227,24,12)" fg:x="39173" fg:w="8"/><text x="60.3691%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (20 samples, 0.03%)</title><rect x="60.1360%" y="373" width="0.0307%" height="15" fill="rgb(252,169,48)" fg:x="39184" fg:w="20"/><text x="60.3860%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (34 samples, 0.05%)</title><rect x="60.1176%" y="437" width="0.0522%" height="15" fill="rgb(212,65,1)" fg:x="39172" fg:w="34"/><text x="60.3676%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (34 samples, 0.05%)</title><rect x="60.1176%" y="421" width="0.0522%" height="15" fill="rgb(242,39,24)" fg:x="39172" fg:w="34"/><text x="60.3676%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (34 samples, 0.05%)</title><rect x="60.1176%" y="405" width="0.0522%" height="15" fill="rgb(249,32,23)" fg:x="39172" fg:w="34"/><text x="60.3676%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (25 samples, 0.04%)</title><rect x="60.1314%" y="389" width="0.0384%" height="15" fill="rgb(251,195,23)" fg:x="39181" fg:w="25"/><text x="60.3814%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (41 samples, 0.06%)</title><rect x="60.1099%" y="469" width="0.0629%" height="15" fill="rgb(236,174,8)" fg:x="39167" fg:w="41"/><text x="60.3599%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (41 samples, 0.06%)</title><rect x="60.1099%" y="453" width="0.0629%" height="15" fill="rgb(220,197,8)" fg:x="39167" fg:w="41"/><text x="60.3599%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.02%)</title><rect x="60.1820%" y="405" width="0.0184%" height="15" fill="rgb(240,108,37)" fg:x="39214" fg:w="12"/><text x="60.4320%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (12 samples, 0.02%)</title><rect x="60.1820%" y="389" width="0.0184%" height="15" fill="rgb(232,176,24)" fg:x="39214" fg:w="12"/><text x="60.4320%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (13 samples, 0.02%)</title><rect x="60.1820%" y="421" width="0.0200%" height="15" fill="rgb(243,35,29)" fg:x="39214" fg:w="13"/><text x="60.4320%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (69 samples, 0.11%)</title><rect x="60.1099%" y="517" width="0.1059%" height="15" fill="rgb(210,37,18)" fg:x="39167" fg:w="69"/><text x="60.3599%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (69 samples, 0.11%)</title><rect x="60.1099%" y="501" width="0.1059%" height="15" fill="rgb(224,184,40)" fg:x="39167" fg:w="69"/><text x="60.3599%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (69 samples, 0.11%)</title><rect x="60.1099%" y="485" width="0.1059%" height="15" fill="rgb(236,39,29)" fg:x="39167" fg:w="69"/><text x="60.3599%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (28 samples, 0.04%)</title><rect x="60.1728%" y="469" width="0.0430%" height="15" fill="rgb(232,48,39)" fg:x="39208" fg:w="28"/><text x="60.4228%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (28 samples, 0.04%)</title><rect x="60.1728%" y="453" width="0.0430%" height="15" fill="rgb(236,34,42)" fg:x="39208" fg:w="28"/><text x="60.4228%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (28 samples, 0.04%)</title><rect x="60.1728%" y="437" width="0.0430%" height="15" fill="rgb(243,106,37)" fg:x="39208" fg:w="28"/><text x="60.4228%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.01%)</title><rect x="60.2327%" y="373" width="0.0138%" height="15" fill="rgb(218,96,6)" fg:x="39247" fg:w="9"/><text x="60.4827%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.02%)</title><rect x="60.2327%" y="389" width="0.0184%" height="15" fill="rgb(235,130,12)" fg:x="39247" fg:w="12"/><text x="60.4827%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (21 samples, 0.03%)</title><rect x="60.2511%" y="373" width="0.0322%" height="15" fill="rgb(231,95,0)" fg:x="39259" fg:w="21"/><text x="60.5011%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (45 samples, 0.07%)</title><rect x="60.2265%" y="437" width="0.0691%" height="15" fill="rgb(228,12,23)" fg:x="39243" fg:w="45"/><text x="60.4765%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (45 samples, 0.07%)</title><rect x="60.2265%" y="421" width="0.0691%" height="15" fill="rgb(216,12,1)" fg:x="39243" fg:w="45"/><text x="60.4765%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (45 samples, 0.07%)</title><rect x="60.2265%" y="405" width="0.0691%" height="15" fill="rgb(219,59,3)" fg:x="39243" fg:w="45"/><text x="60.4765%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (29 samples, 0.04%)</title><rect x="60.2511%" y="389" width="0.0445%" height="15" fill="rgb(215,208,46)" fg:x="39259" fg:w="29"/><text x="60.5011%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.01%)</title><rect x="60.2833%" y="373" width="0.0123%" height="15" fill="rgb(254,224,29)" fg:x="39280" fg:w="8"/><text x="60.5333%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (48 samples, 0.07%)</title><rect x="60.2265%" y="469" width="0.0737%" height="15" fill="rgb(232,14,29)" fg:x="39243" fg:w="48"/><text x="60.4765%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (48 samples, 0.07%)</title><rect x="60.2265%" y="453" width="0.0737%" height="15" fill="rgb(208,45,52)" fg:x="39243" fg:w="48"/><text x="60.4765%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.01%)</title><rect x="60.3079%" y="405" width="0.0138%" height="15" fill="rgb(234,191,28)" fg:x="39296" fg:w="9"/><text x="60.5579%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (9 samples, 0.01%)</title><rect x="60.3079%" y="389" width="0.0138%" height="15" fill="rgb(244,67,43)" fg:x="39296" fg:w="9"/><text x="60.5579%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.02%)</title><rect x="60.3079%" y="421" width="0.0184%" height="15" fill="rgb(236,189,24)" fg:x="39296" fg:w="12"/><text x="60.5579%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (78 samples, 0.12%)</title><rect x="60.2158%" y="517" width="0.1197%" height="15" fill="rgb(239,214,33)" fg:x="39236" fg:w="78"/><text x="60.4658%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (78 samples, 0.12%)</title><rect x="60.2158%" y="501" width="0.1197%" height="15" fill="rgb(226,176,41)" fg:x="39236" fg:w="78"/><text x="60.4658%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (77 samples, 0.12%)</title><rect x="60.2173%" y="485" width="0.1182%" height="15" fill="rgb(248,47,8)" fg:x="39237" fg:w="77"/><text x="60.4673%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (23 samples, 0.04%)</title><rect x="60.3002%" y="469" width="0.0353%" height="15" fill="rgb(218,81,44)" fg:x="39291" fg:w="23"/><text x="60.5502%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (23 samples, 0.04%)</title><rect x="60.3002%" y="453" width="0.0353%" height="15" fill="rgb(213,98,6)" fg:x="39291" fg:w="23"/><text x="60.5502%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (23 samples, 0.04%)</title><rect x="60.3002%" y="437" width="0.0353%" height="15" fill="rgb(222,85,22)" fg:x="39291" fg:w="23"/><text x="60.5502%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (12 samples, 0.02%)</title><rect x="60.3631%" y="501" width="0.0184%" height="15" fill="rgb(239,46,39)" fg:x="39332" fg:w="12"/><text x="60.6131%" y="511.50"></text></g><g><title>core::intrinsics::copy (11 samples, 0.02%)</title><rect x="60.3646%" y="485" width="0.0169%" height="15" fill="rgb(237,12,29)" fg:x="39333" fg:w="11"/><text x="60.6146%" y="495.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (10 samples, 0.02%)</title><rect x="60.3662%" y="469" width="0.0153%" height="15" fill="rgb(214,77,8)" fg:x="39334" fg:w="10"/><text x="60.6162%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (33 samples, 0.05%)</title><rect x="60.4045%" y="453" width="0.0506%" height="15" fill="rgb(217,168,37)" fg:x="39359" fg:w="33"/><text x="60.6545%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (26 samples, 0.04%)</title><rect x="60.4153%" y="437" width="0.0399%" height="15" fill="rgb(221,217,23)" fg:x="39366" fg:w="26"/><text x="60.6653%" y="447.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (26 samples, 0.04%)</title><rect x="60.4153%" y="421" width="0.0399%" height="15" fill="rgb(243,229,36)" fg:x="39366" fg:w="26"/><text x="60.6653%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (26 samples, 0.04%)</title><rect x="60.4153%" y="405" width="0.0399%" height="15" fill="rgb(251,163,40)" fg:x="39366" fg:w="26"/><text x="60.6653%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (26 samples, 0.04%)</title><rect x="60.4153%" y="389" width="0.0399%" height="15" fill="rgb(237,222,12)" fg:x="39366" fg:w="26"/><text x="60.6653%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (26 samples, 0.04%)</title><rect x="60.4153%" y="373" width="0.0399%" height="15" fill="rgb(248,132,6)" fg:x="39366" fg:w="26"/><text x="60.6653%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (79 samples, 0.12%)</title><rect x="60.3892%" y="501" width="0.1212%" height="15" fill="rgb(227,167,50)" fg:x="39349" fg:w="79"/><text x="60.6392%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (79 samples, 0.12%)</title><rect x="60.3892%" y="485" width="0.1212%" height="15" fill="rgb(242,84,37)" fg:x="39349" fg:w="79"/><text x="60.6392%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (79 samples, 0.12%)</title><rect x="60.3892%" y="469" width="0.1212%" height="15" fill="rgb(212,4,50)" fg:x="39349" fg:w="79"/><text x="60.6392%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.06%)</title><rect x="60.4552%" y="453" width="0.0552%" height="15" fill="rgb(230,228,32)" fg:x="39392" fg:w="36"/><text x="60.7052%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.01%)</title><rect x="60.5227%" y="373" width="0.0107%" height="15" fill="rgb(248,217,23)" fg:x="39436" fg:w="7"/><text x="60.7727%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.01%)</title><rect x="60.5365%" y="357" width="0.0138%" height="15" fill="rgb(238,197,32)" fg:x="39445" fg:w="9"/><text x="60.7865%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.03%)</title><rect x="60.5227%" y="421" width="0.0322%" height="15" fill="rgb(236,106,1)" fg:x="39436" fg:w="21"/><text x="60.7727%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21 samples, 0.03%)</title><rect x="60.5227%" y="405" width="0.0322%" height="15" fill="rgb(219,228,13)" fg:x="39436" fg:w="21"/><text x="60.7727%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21 samples, 0.03%)</title><rect x="60.5227%" y="389" width="0.0322%" height="15" fill="rgb(238,30,35)" fg:x="39436" fg:w="21"/><text x="60.7727%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.02%)</title><rect x="60.5335%" y="373" width="0.0215%" height="15" fill="rgb(236,70,23)" fg:x="39443" fg:w="14"/><text x="60.7835%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.04%)</title><rect x="60.5212%" y="453" width="0.0353%" height="15" fill="rgb(249,104,48)" fg:x="39435" fg:w="23"/><text x="60.7712%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.04%)</title><rect x="60.5212%" y="437" width="0.0353%" height="15" fill="rgb(254,117,50)" fg:x="39435" fg:w="23"/><text x="60.7712%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="60.5672%" y="405" width="0.0107%" height="15" fill="rgb(223,152,4)" fg:x="39465" fg:w="7"/><text x="60.8172%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.01%)</title><rect x="60.5672%" y="389" width="0.0107%" height="15" fill="rgb(245,6,2)" fg:x="39465" fg:w="7"/><text x="60.8172%" y="399.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (10 samples, 0.02%)</title><rect x="60.5795%" y="389" width="0.0153%" height="15" fill="rgb(249,150,24)" fg:x="39473" fg:w="10"/><text x="60.8295%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (10 samples, 0.02%)</title><rect x="60.5795%" y="373" width="0.0153%" height="15" fill="rgb(228,185,42)" fg:x="39473" fg:w="10"/><text x="60.8295%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (14 samples, 0.02%)</title><rect x="60.5795%" y="405" width="0.0215%" height="15" fill="rgb(226,39,33)" fg:x="39473" fg:w="14"/><text x="60.8295%" y="415.50"></text></g><g><title>hashbrown::raw::h2 (8 samples, 0.01%)</title><rect x="60.6010%" y="405" width="0.0123%" height="15" fill="rgb(221,166,19)" fg:x="39487" fg:w="8"/><text x="60.8510%" y="415.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (334 samples, 0.51%)</title><rect x="60.1037%" y="565" width="0.5126%" height="15" fill="rgb(209,109,2)" fg:x="39163" fg:w="334"/><text x="60.3537%" y="575.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (334 samples, 0.51%)</title><rect x="60.1037%" y="549" width="0.5126%" height="15" fill="rgb(252,216,26)" fg:x="39163" fg:w="334"/><text x="60.3537%" y="559.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (333 samples, 0.51%)</title><rect x="60.1053%" y="533" width="0.5111%" height="15" fill="rgb(227,173,36)" fg:x="39164" fg:w="333"/><text x="60.3553%" y="543.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (183 samples, 0.28%)</title><rect x="60.3355%" y="517" width="0.2809%" height="15" fill="rgb(209,90,7)" fg:x="39314" fg:w="183"/><text x="60.5855%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (63 samples, 0.10%)</title><rect x="60.5197%" y="501" width="0.0967%" height="15" fill="rgb(250,194,11)" fg:x="39434" fg:w="63"/><text x="60.7697%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (63 samples, 0.10%)</title><rect x="60.5197%" y="485" width="0.0967%" height="15" fill="rgb(220,72,50)" fg:x="39434" fg:w="63"/><text x="60.7697%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (63 samples, 0.10%)</title><rect x="60.5197%" y="469" width="0.0967%" height="15" fill="rgb(222,106,48)" fg:x="39434" fg:w="63"/><text x="60.7697%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (39 samples, 0.06%)</title><rect x="60.5565%" y="453" width="0.0599%" height="15" fill="rgb(216,220,45)" fg:x="39458" fg:w="39"/><text x="60.8065%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (39 samples, 0.06%)</title><rect x="60.5565%" y="437" width="0.0599%" height="15" fill="rgb(234,112,18)" fg:x="39458" fg:w="39"/><text x="60.8065%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (39 samples, 0.06%)</title><rect x="60.5565%" y="421" width="0.0599%" height="15" fill="rgb(206,179,9)" fg:x="39458" fg:w="39"/><text x="60.8065%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (4,206 samples, 6.45%)</title><rect x="54.1951%" y="581" width="6.4550%" height="15" fill="rgb(215,115,40)" fg:x="35313" fg:w="4206"/><text x="54.4451%" y="591.50">&lt;yakvdb:..</text></g><g><title>core::result::Result&lt;T,E&gt;::ok (16 samples, 0.02%)</title><rect x="60.6255%" y="565" width="0.0246%" height="15" fill="rgb(222,69,34)" fg:x="39503" fg:w="16"/><text x="60.8755%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="60.6608%" y="389" width="0.0123%" height="15" fill="rgb(209,161,10)" fg:x="39526" fg:w="8"/><text x="60.9108%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="60.6608%" y="437" width="0.0276%" height="15" fill="rgb(217,6,38)" fg:x="39526" fg:w="18"/><text x="60.9108%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="60.6608%" y="421" width="0.0276%" height="15" fill="rgb(229,229,48)" fg:x="39526" fg:w="18"/><text x="60.9108%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="60.6608%" y="405" width="0.0276%" height="15" fill="rgb(225,21,28)" fg:x="39526" fg:w="18"/><text x="60.9108%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.02%)</title><rect x="60.6731%" y="389" width="0.0153%" height="15" fill="rgb(206,33,13)" fg:x="39534" fg:w="10"/><text x="60.9231%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.04%)</title><rect x="60.6562%" y="469" width="0.0353%" height="15" fill="rgb(242,178,17)" fg:x="39523" fg:w="23"/><text x="60.9062%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.04%)</title><rect x="60.6562%" y="453" width="0.0353%" height="15" fill="rgb(220,162,5)" fg:x="39523" fg:w="23"/><text x="60.9062%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (7 samples, 0.01%)</title><rect x="60.6946%" y="421" width="0.0107%" height="15" fill="rgb(210,33,43)" fg:x="39548" fg:w="7"/><text x="60.9446%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.01%)</title><rect x="60.6946%" y="405" width="0.0107%" height="15" fill="rgb(216,116,54)" fg:x="39548" fg:w="7"/><text x="60.9446%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (7 samples, 0.01%)</title><rect x="60.6946%" y="389" width="0.0107%" height="15" fill="rgb(249,92,24)" fg:x="39548" fg:w="7"/><text x="60.9446%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (8 samples, 0.01%)</title><rect x="60.7069%" y="421" width="0.0123%" height="15" fill="rgb(231,189,14)" fg:x="39556" fg:w="8"/><text x="60.9569%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.01%)</title><rect x="60.7069%" y="405" width="0.0123%" height="15" fill="rgb(230,8,41)" fg:x="39556" fg:w="8"/><text x="60.9569%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="60.7069%" y="389" width="0.0123%" height="15" fill="rgb(249,7,27)" fg:x="39556" fg:w="8"/><text x="60.9569%" y="399.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (47 samples, 0.07%)</title><rect x="60.6516%" y="533" width="0.0721%" height="15" fill="rgb(232,86,5)" fg:x="39520" fg:w="47"/><text x="60.9016%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (47 samples, 0.07%)</title><rect x="60.6516%" y="517" width="0.0721%" height="15" fill="rgb(224,175,18)" fg:x="39520" fg:w="47"/><text x="60.9016%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (47 samples, 0.07%)</title><rect x="60.6516%" y="501" width="0.0721%" height="15" fill="rgb(220,129,12)" fg:x="39520" fg:w="47"/><text x="60.9016%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (47 samples, 0.07%)</title><rect x="60.6516%" y="485" width="0.0721%" height="15" fill="rgb(210,19,36)" fg:x="39520" fg:w="47"/><text x="60.9016%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (21 samples, 0.03%)</title><rect x="60.6915%" y="469" width="0.0322%" height="15" fill="rgb(219,96,14)" fg:x="39546" fg:w="21"/><text x="60.9415%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.03%)</title><rect x="60.6915%" y="453" width="0.0322%" height="15" fill="rgb(249,106,1)" fg:x="39546" fg:w="21"/><text x="60.9415%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (21 samples, 0.03%)</title><rect x="60.6915%" y="437" width="0.0322%" height="15" fill="rgb(249,155,20)" fg:x="39546" fg:w="21"/><text x="60.9415%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (51 samples, 0.08%)</title><rect x="60.6516%" y="549" width="0.0783%" height="15" fill="rgb(244,168,9)" fg:x="39520" fg:w="51"/><text x="60.9016%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.02%)</title><rect x="60.7360%" y="453" width="0.0246%" height="15" fill="rgb(216,23,50)" fg:x="39575" fg:w="16"/><text x="60.9860%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.02%)</title><rect x="60.7360%" y="437" width="0.0246%" height="15" fill="rgb(224,219,20)" fg:x="39575" fg:w="16"/><text x="60.9860%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="60.7376%" y="421" width="0.0230%" height="15" fill="rgb(222,156,15)" fg:x="39576" fg:w="15"/><text x="60.9876%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="60.7376%" y="405" width="0.0230%" height="15" fill="rgb(231,97,17)" fg:x="39576" fg:w="15"/><text x="60.9876%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="60.7376%" y="389" width="0.0230%" height="15" fill="rgb(218,70,48)" fg:x="39576" fg:w="15"/><text x="60.9876%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="60.7499%" y="373" width="0.0107%" height="15" fill="rgb(212,196,52)" fg:x="39584" fg:w="7"/><text x="60.9999%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (26 samples, 0.04%)</title><rect x="60.7360%" y="501" width="0.0399%" height="15" fill="rgb(243,203,18)" fg:x="39575" fg:w="26"/><text x="60.9860%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (26 samples, 0.04%)</title><rect x="60.7360%" y="485" width="0.0399%" height="15" fill="rgb(252,125,41)" fg:x="39575" fg:w="26"/><text x="60.9860%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.04%)</title><rect x="60.7360%" y="469" width="0.0399%" height="15" fill="rgb(223,180,33)" fg:x="39575" fg:w="26"/><text x="60.9860%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.02%)</title><rect x="60.7606%" y="453" width="0.0153%" height="15" fill="rgb(254,159,46)" fg:x="39591" fg:w="10"/><text x="61.0106%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.02%)</title><rect x="60.7606%" y="437" width="0.0153%" height="15" fill="rgb(254,38,10)" fg:x="39591" fg:w="10"/><text x="61.0106%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.02%)</title><rect x="60.7606%" y="421" width="0.0153%" height="15" fill="rgb(208,217,32)" fg:x="39591" fg:w="10"/><text x="61.0106%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.02%)</title><rect x="60.7836%" y="357" width="0.0184%" height="15" fill="rgb(221,120,13)" fg:x="39606" fg:w="12"/><text x="61.0336%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.03%)</title><rect x="60.7790%" y="421" width="0.0307%" height="15" fill="rgb(246,54,52)" fg:x="39603" fg:w="20"/><text x="61.0290%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 0.03%)</title><rect x="60.7790%" y="405" width="0.0307%" height="15" fill="rgb(242,34,25)" fg:x="39603" fg:w="20"/><text x="61.0290%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 0.03%)</title><rect x="60.7790%" y="389" width="0.0307%" height="15" fill="rgb(247,209,9)" fg:x="39603" fg:w="20"/><text x="61.0290%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.03%)</title><rect x="60.7836%" y="373" width="0.0261%" height="15" fill="rgb(228,71,26)" fg:x="39606" fg:w="17"/><text x="61.0336%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.04%)</title><rect x="60.7790%" y="453" width="0.0353%" height="15" fill="rgb(222,145,49)" fg:x="39603" fg:w="23"/><text x="61.0290%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.04%)</title><rect x="60.7790%" y="437" width="0.0353%" height="15" fill="rgb(218,121,17)" fg:x="39603" fg:w="23"/><text x="61.0290%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.01%)</title><rect x="60.8189%" y="405" width="0.0123%" height="15" fill="rgb(244,50,7)" fg:x="39629" fg:w="8"/><text x="61.0689%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (44 samples, 0.07%)</title><rect x="60.7759%" y="501" width="0.0675%" height="15" fill="rgb(246,229,37)" fg:x="39601" fg:w="44"/><text x="61.0259%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (44 samples, 0.07%)</title><rect x="60.7759%" y="485" width="0.0675%" height="15" fill="rgb(225,18,5)" fg:x="39601" fg:w="44"/><text x="61.0259%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (44 samples, 0.07%)</title><rect x="60.7759%" y="469" width="0.0675%" height="15" fill="rgb(213,204,8)" fg:x="39601" fg:w="44"/><text x="61.0259%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19 samples, 0.03%)</title><rect x="60.8143%" y="453" width="0.0292%" height="15" fill="rgb(238,103,6)" fg:x="39626" fg:w="19"/><text x="61.0643%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.03%)</title><rect x="60.8143%" y="437" width="0.0292%" height="15" fill="rgb(222,25,35)" fg:x="39626" fg:w="19"/><text x="61.0643%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (19 samples, 0.03%)</title><rect x="60.8143%" y="421" width="0.0292%" height="15" fill="rgb(213,203,35)" fg:x="39626" fg:w="19"/><text x="61.0643%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (10 samples, 0.02%)</title><rect x="60.8496%" y="485" width="0.0153%" height="15" fill="rgb(221,79,53)" fg:x="39649" fg:w="10"/><text x="61.0996%" y="495.50"></text></g><g><title>core::intrinsics::copy (7 samples, 0.01%)</title><rect x="60.8542%" y="469" width="0.0107%" height="15" fill="rgb(243,200,35)" fg:x="39652" fg:w="7"/><text x="61.1042%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (18 samples, 0.03%)</title><rect x="60.8849%" y="437" width="0.0276%" height="15" fill="rgb(248,60,25)" fg:x="39672" fg:w="18"/><text x="61.1349%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (16 samples, 0.02%)</title><rect x="60.8880%" y="421" width="0.0246%" height="15" fill="rgb(227,53,46)" fg:x="39674" fg:w="16"/><text x="61.1380%" y="431.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (16 samples, 0.02%)</title><rect x="60.8880%" y="405" width="0.0246%" height="15" fill="rgb(216,120,32)" fg:x="39674" fg:w="16"/><text x="61.1380%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.02%)</title><rect x="60.8880%" y="389" width="0.0246%" height="15" fill="rgb(220,134,1)" fg:x="39674" fg:w="16"/><text x="61.1380%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.02%)</title><rect x="60.8880%" y="373" width="0.0246%" height="15" fill="rgb(237,168,5)" fg:x="39674" fg:w="16"/><text x="61.1380%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (16 samples, 0.02%)</title><rect x="60.8880%" y="357" width="0.0246%" height="15" fill="rgb(231,100,33)" fg:x="39674" fg:w="16"/><text x="61.1380%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (44 samples, 0.07%)</title><rect x="60.8696%" y="485" width="0.0675%" height="15" fill="rgb(236,177,47)" fg:x="39662" fg:w="44"/><text x="61.1196%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (44 samples, 0.07%)</title><rect x="60.8696%" y="469" width="0.0675%" height="15" fill="rgb(235,7,49)" fg:x="39662" fg:w="44"/><text x="61.1196%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (44 samples, 0.07%)</title><rect x="60.8696%" y="453" width="0.0675%" height="15" fill="rgb(232,119,22)" fg:x="39662" fg:w="44"/><text x="61.1196%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="60.9125%" y="437" width="0.0246%" height="15" fill="rgb(254,73,53)" fg:x="39690" fg:w="16"/><text x="61.1625%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.01%)</title><rect x="60.9448%" y="437" width="0.0138%" height="15" fill="rgb(251,35,20)" fg:x="39711" fg:w="9"/><text x="61.1948%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.01%)</title><rect x="60.9448%" y="421" width="0.0138%" height="15" fill="rgb(241,119,20)" fg:x="39711" fg:w="9"/><text x="61.1948%" y="431.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (161 samples, 0.25%)</title><rect x="60.7299%" y="549" width="0.2471%" height="15" fill="rgb(207,102,14)" fg:x="39571" fg:w="161"/><text x="60.9799%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (161 samples, 0.25%)</title><rect x="60.7299%" y="533" width="0.2471%" height="15" fill="rgb(248,201,50)" fg:x="39571" fg:w="161"/><text x="60.9799%" y="543.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (161 samples, 0.25%)</title><rect x="60.7299%" y="517" width="0.2471%" height="15" fill="rgb(222,185,44)" fg:x="39571" fg:w="161"/><text x="60.9799%" y="527.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (87 samples, 0.13%)</title><rect x="60.8435%" y="501" width="0.1335%" height="15" fill="rgb(218,107,18)" fg:x="39645" fg:w="87"/><text x="61.0935%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (21 samples, 0.03%)</title><rect x="60.9448%" y="485" width="0.0322%" height="15" fill="rgb(237,177,39)" fg:x="39711" fg:w="21"/><text x="61.1948%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (21 samples, 0.03%)</title><rect x="60.9448%" y="469" width="0.0322%" height="15" fill="rgb(246,69,6)" fg:x="39711" fg:w="21"/><text x="61.1948%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (21 samples, 0.03%)</title><rect x="60.9448%" y="453" width="0.0322%" height="15" fill="rgb(234,208,37)" fg:x="39711" fg:w="21"/><text x="61.1948%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.02%)</title><rect x="60.9586%" y="437" width="0.0184%" height="15" fill="rgb(225,4,6)" fg:x="39720" fg:w="12"/><text x="61.2086%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.02%)</title><rect x="60.9586%" y="421" width="0.0184%" height="15" fill="rgb(233,45,0)" fg:x="39720" fg:w="12"/><text x="61.2086%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.02%)</title><rect x="60.9586%" y="405" width="0.0184%" height="15" fill="rgb(226,136,5)" fg:x="39720" fg:w="12"/><text x="61.2086%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::root (216 samples, 0.33%)</title><rect x="60.6501%" y="581" width="0.3315%" height="15" fill="rgb(211,91,47)" fg:x="39519" fg:w="216"/><text x="60.9001%" y="591.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (215 samples, 0.33%)</title><rect x="60.6516%" y="565" width="0.3300%" height="15" fill="rgb(242,88,51)" fg:x="39520" fg:w="215"/><text x="60.9016%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.03%)</title><rect x="60.9908%" y="581" width="0.0261%" height="15" fill="rgb(230,91,28)" fg:x="39741" fg:w="17"/><text x="61.2408%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (17 samples, 0.03%)</title><rect x="60.9908%" y="565" width="0.0261%" height="15" fill="rgb(254,186,29)" fg:x="39741" fg:w="17"/><text x="61.2408%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (17 samples, 0.03%)</title><rect x="60.9908%" y="549" width="0.0261%" height="15" fill="rgb(238,6,4)" fg:x="39741" fg:w="17"/><text x="61.2408%" y="559.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.02%)</title><rect x="60.9939%" y="533" width="0.0230%" height="15" fill="rgb(221,151,16)" fg:x="39743" fg:w="15"/><text x="61.2439%" y="543.50"></text></g><g><title>__GI___libc_free (15 samples, 0.02%)</title><rect x="61.0230%" y="437" width="0.0230%" height="15" fill="rgb(251,143,52)" fg:x="39762" fg:w="15"/><text x="61.2730%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.04%)</title><rect x="61.0230%" y="469" width="0.0414%" height="15" fill="rgb(206,90,15)" fg:x="39762" fg:w="27"/><text x="61.2730%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.04%)</title><rect x="61.0230%" y="453" width="0.0414%" height="15" fill="rgb(218,35,8)" fg:x="39762" fg:w="27"/><text x="61.2730%" y="463.50"></text></g><g><title>_int_free (9 samples, 0.01%)</title><rect x="61.0507%" y="437" width="0.0138%" height="15" fill="rgb(239,215,6)" fg:x="39780" fg:w="9"/><text x="61.3007%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;u32&gt;&gt; (30 samples, 0.05%)</title><rect x="61.0230%" y="581" width="0.0460%" height="15" fill="rgb(245,116,39)" fg:x="39762" fg:w="30"/><text x="61.2730%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;u32,std::collections::hash::map::RandomState&gt;&gt; (30 samples, 0.05%)</title><rect x="61.0230%" y="565" width="0.0460%" height="15" fill="rgb(242,65,28)" fg:x="39762" fg:w="30"/><text x="61.2730%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,(),std::collections::hash::map::RandomState&gt;&gt; (30 samples, 0.05%)</title><rect x="61.0230%" y="549" width="0.0460%" height="15" fill="rgb(252,132,53)" fg:x="39762" fg:w="30"/><text x="61.2730%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,())&gt;&gt; (30 samples, 0.05%)</title><rect x="61.0230%" y="533" width="0.0460%" height="15" fill="rgb(224,159,50)" fg:x="39762" fg:w="30"/><text x="61.2730%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.05%)</title><rect x="61.0230%" y="517" width="0.0460%" height="15" fill="rgb(224,93,4)" fg:x="39762" fg:w="30"/><text x="61.2730%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (30 samples, 0.05%)</title><rect x="61.0230%" y="501" width="0.0460%" height="15" fill="rgb(208,81,34)" fg:x="39762" fg:w="30"/><text x="61.2730%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (30 samples, 0.05%)</title><rect x="61.0230%" y="485" width="0.0460%" height="15" fill="rgb(233,92,54)" fg:x="39762" fg:w="30"/><text x="61.2730%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.01%)</title><rect x="61.0752%" y="421" width="0.0138%" height="15" fill="rgb(237,21,14)" fg:x="39796" fg:w="9"/><text x="61.3252%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.02%)</title><rect x="61.0691%" y="517" width="0.0215%" height="15" fill="rgb(249,128,51)" fg:x="39792" fg:w="14"/><text x="61.3191%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.02%)</title><rect x="61.0706%" y="501" width="0.0200%" height="15" fill="rgb(223,129,24)" fg:x="39793" fg:w="13"/><text x="61.3206%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="61.0706%" y="485" width="0.0200%" height="15" fill="rgb(231,168,25)" fg:x="39793" fg:w="13"/><text x="61.3206%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="61.0706%" y="469" width="0.0200%" height="15" fill="rgb(224,39,20)" fg:x="39793" fg:w="13"/><text x="61.3206%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="61.0706%" y="453" width="0.0200%" height="15" fill="rgb(225,152,53)" fg:x="39793" fg:w="13"/><text x="61.3206%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12 samples, 0.02%)</title><rect x="61.0721%" y="437" width="0.0184%" height="15" fill="rgb(252,17,24)" fg:x="39794" fg:w="12"/><text x="61.3221%" y="447.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (25 samples, 0.04%)</title><rect x="61.0691%" y="581" width="0.0384%" height="15" fill="rgb(250,114,30)" fg:x="39792" fg:w="25"/><text x="61.3191%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (25 samples, 0.04%)</title><rect x="61.0691%" y="565" width="0.0384%" height="15" fill="rgb(229,5,4)" fg:x="39792" fg:w="25"/><text x="61.3191%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (25 samples, 0.04%)</title><rect x="61.0691%" y="549" width="0.0384%" height="15" fill="rgb(225,176,49)" fg:x="39792" fg:w="25"/><text x="61.3191%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (25 samples, 0.04%)</title><rect x="61.0691%" y="533" width="0.0384%" height="15" fill="rgb(224,221,49)" fg:x="39792" fg:w="25"/><text x="61.3191%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.02%)</title><rect x="61.0906%" y="517" width="0.0169%" height="15" fill="rgb(253,169,27)" fg:x="39806" fg:w="11"/><text x="61.3406%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.02%)</title><rect x="61.0906%" y="501" width="0.0169%" height="15" fill="rgb(211,206,16)" fg:x="39806" fg:w="11"/><text x="61.3406%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (11 samples, 0.02%)</title><rect x="61.0906%" y="485" width="0.0169%" height="15" fill="rgb(244,87,35)" fg:x="39806" fg:w="11"/><text x="61.3406%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.01%)</title><rect x="61.1167%" y="453" width="0.0138%" height="15" fill="rgb(246,28,10)" fg:x="39823" fg:w="9"/><text x="61.3667%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.01%)</title><rect x="61.1167%" y="437" width="0.0138%" height="15" fill="rgb(229,12,44)" fg:x="39823" fg:w="9"/><text x="61.3667%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.02%)</title><rect x="61.1351%" y="437" width="0.0230%" height="15" fill="rgb(210,145,37)" fg:x="39835" fg:w="15"/><text x="61.3851%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (35 samples, 0.05%)</title><rect x="61.1120%" y="501" width="0.0537%" height="15" fill="rgb(227,112,52)" fg:x="39820" fg:w="35"/><text x="61.3620%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (35 samples, 0.05%)</title><rect x="61.1120%" y="485" width="0.0537%" height="15" fill="rgb(238,155,34)" fg:x="39820" fg:w="35"/><text x="61.3620%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (35 samples, 0.05%)</title><rect x="61.1120%" y="469" width="0.0537%" height="15" fill="rgb(239,226,36)" fg:x="39820" fg:w="35"/><text x="61.3620%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (23 samples, 0.04%)</title><rect x="61.1305%" y="453" width="0.0353%" height="15" fill="rgb(230,16,23)" fg:x="39832" fg:w="23"/><text x="61.3805%" y="463.50"></text></g><g><title>hashbrown::map::make_insert_hash (36 samples, 0.06%)</title><rect x="61.1120%" y="533" width="0.0552%" height="15" fill="rgb(236,171,36)" fg:x="39820" fg:w="36"/><text x="61.3620%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (36 samples, 0.06%)</title><rect x="61.1120%" y="517" width="0.0552%" height="15" fill="rgb(221,22,14)" fg:x="39820" fg:w="36"/><text x="61.3620%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (19 samples, 0.03%)</title><rect x="61.1673%" y="533" width="0.0292%" height="15" fill="rgb(242,43,11)" fg:x="39856" fg:w="19"/><text x="61.4173%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.03%)</title><rect x="61.1673%" y="517" width="0.0292%" height="15" fill="rgb(232,69,23)" fg:x="39856" fg:w="19"/><text x="61.4173%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (19 samples, 0.03%)</title><rect x="61.1673%" y="501" width="0.0292%" height="15" fill="rgb(216,180,54)" fg:x="39856" fg:w="19"/><text x="61.4173%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (15 samples, 0.02%)</title><rect x="61.2041%" y="517" width="0.0230%" height="15" fill="rgb(216,5,24)" fg:x="39880" fg:w="15"/><text x="61.4541%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (82 samples, 0.13%)</title><rect x="61.1074%" y="581" width="0.1258%" height="15" fill="rgb(225,89,9)" fg:x="39817" fg:w="82"/><text x="61.3574%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (82 samples, 0.13%)</title><rect x="61.1074%" y="565" width="0.1258%" height="15" fill="rgb(243,75,33)" fg:x="39817" fg:w="82"/><text x="61.3574%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (82 samples, 0.13%)</title><rect x="61.1074%" y="549" width="0.1258%" height="15" fill="rgb(247,141,45)" fg:x="39817" fg:w="82"/><text x="61.3574%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (24 samples, 0.04%)</title><rect x="61.1965%" y="533" width="0.0368%" height="15" fill="rgb(232,177,36)" fg:x="39875" fg:w="24"/><text x="61.4465%" y="543.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (8 samples, 0.01%)</title><rect x="61.2563%" y="501" width="0.0123%" height="15" fill="rgb(219,125,36)" fg:x="39914" fg:w="8"/><text x="61.5063%" y="511.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (8 samples, 0.01%)</title><rect x="61.2563%" y="485" width="0.0123%" height="15" fill="rgb(227,94,9)" fg:x="39914" fg:w="8"/><text x="61.5063%" y="495.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (7 samples, 0.01%)</title><rect x="61.2578%" y="469" width="0.0107%" height="15" fill="rgb(240,34,52)" fg:x="39915" fg:w="7"/><text x="61.5078%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (7 samples, 0.01%)</title><rect x="61.2578%" y="453" width="0.0107%" height="15" fill="rgb(216,45,12)" fg:x="39915" fg:w="7"/><text x="61.5078%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (14 samples, 0.02%)</title><rect x="61.2563%" y="565" width="0.0215%" height="15" fill="rgb(246,21,19)" fg:x="39914" fg:w="14"/><text x="61.5063%" y="575.50"></text></g><g><title>std::collections::hash::map::RandomState::new (14 samples, 0.02%)</title><rect x="61.2563%" y="549" width="0.0215%" height="15" fill="rgb(213,98,42)" fg:x="39914" fg:w="14"/><text x="61.5063%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.02%)</title><rect x="61.2563%" y="533" width="0.0215%" height="15" fill="rgb(250,136,47)" fg:x="39914" fg:w="14"/><text x="61.5063%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.02%)</title><rect x="61.2563%" y="517" width="0.0215%" height="15" fill="rgb(251,124,27)" fg:x="39914" fg:w="14"/><text x="61.5063%" y="527.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (14 samples, 0.02%)</title><rect x="61.2947%" y="453" width="0.0215%" height="15" fill="rgb(229,180,14)" fg:x="39939" fg:w="14"/><text x="61.5447%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.02%)</title><rect x="61.2947%" y="437" width="0.0215%" height="15" fill="rgb(245,216,25)" fg:x="39939" fg:w="14"/><text x="61.5447%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="61.2947%" y="421" width="0.0215%" height="15" fill="rgb(251,43,5)" fg:x="39939" fg:w="14"/><text x="61.5447%" y="431.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.02%)</title><rect x="61.2947%" y="405" width="0.0215%" height="15" fill="rgb(250,128,24)" fg:x="39939" fg:w="14"/><text x="61.5447%" y="415.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.02%)</title><rect x="61.2977%" y="389" width="0.0184%" height="15" fill="rgb(217,117,27)" fg:x="39941" fg:w="12"/><text x="61.5477%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (18 samples, 0.03%)</title><rect x="61.2901%" y="469" width="0.0276%" height="15" fill="rgb(245,147,4)" fg:x="39936" fg:w="18"/><text x="61.5401%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::lookup (5,608 samples, 8.61%)</title><rect x="52.7203%" y="597" width="8.6066%" height="15" fill="rgb(242,201,35)" fg:x="34352" fg:w="5608"/><text x="52.9703%" y="607.50">&lt;yakvdb::dis..</text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::with_capacity (61 samples, 0.09%)</title><rect x="61.2333%" y="581" width="0.0936%" height="15" fill="rgb(218,181,1)" fg:x="39899" fg:w="61"/><text x="61.4833%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::with_capacity_and_hasher (32 samples, 0.05%)</title><rect x="61.2778%" y="565" width="0.0491%" height="15" fill="rgb(222,6,29)" fg:x="39928" fg:w="32"/><text x="61.5278%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (32 samples, 0.05%)</title><rect x="61.2778%" y="549" width="0.0491%" height="15" fill="rgb(208,186,3)" fg:x="39928" fg:w="32"/><text x="61.5278%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (32 samples, 0.05%)</title><rect x="61.2778%" y="533" width="0.0491%" height="15" fill="rgb(216,36,26)" fg:x="39928" fg:w="32"/><text x="61.5278%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (31 samples, 0.05%)</title><rect x="61.2793%" y="517" width="0.0476%" height="15" fill="rgb(248,201,23)" fg:x="39929" fg:w="31"/><text x="61.5293%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (30 samples, 0.05%)</title><rect x="61.2809%" y="501" width="0.0460%" height="15" fill="rgb(251,170,31)" fg:x="39930" fg:w="30"/><text x="61.5309%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (30 samples, 0.05%)</title><rect x="61.2809%" y="485" width="0.0460%" height="15" fill="rgb(207,110,25)" fg:x="39930" fg:w="30"/><text x="61.5309%" y="495.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.02%)</title><rect x="61.3361%" y="405" width="0.0200%" height="15" fill="rgb(250,54,15)" fg:x="39966" fg:w="13"/><text x="61.5861%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="61.3346%" y="501" width="0.0230%" height="15" fill="rgb(227,68,33)" fg:x="39965" fg:w="15"/><text x="61.5846%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="61.3346%" y="485" width="0.0230%" height="15" fill="rgb(238,34,41)" fg:x="39965" fg:w="15"/><text x="61.5846%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.02%)</title><rect x="61.3346%" y="469" width="0.0230%" height="15" fill="rgb(220,11,15)" fg:x="39965" fg:w="15"/><text x="61.5846%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.02%)</title><rect x="61.3361%" y="453" width="0.0215%" height="15" fill="rgb(246,111,35)" fg:x="39966" fg:w="14"/><text x="61.5861%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="61.3361%" y="437" width="0.0215%" height="15" fill="rgb(209,88,53)" fg:x="39966" fg:w="14"/><text x="61.5861%" y="447.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.02%)</title><rect x="61.3361%" y="421" width="0.0215%" height="15" fill="rgb(231,185,47)" fg:x="39966" fg:w="14"/><text x="61.5861%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 0.03%)</title><rect x="61.3346%" y="565" width="0.0276%" height="15" fill="rgb(233,154,1)" fg:x="39965" fg:w="18"/><text x="61.5846%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.03%)</title><rect x="61.3346%" y="549" width="0.0276%" height="15" fill="rgb(225,15,46)" fg:x="39965" fg:w="18"/><text x="61.5846%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.03%)</title><rect x="61.3346%" y="533" width="0.0276%" height="15" fill="rgb(211,135,41)" fg:x="39965" fg:w="18"/><text x="61.5846%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.03%)</title><rect x="61.3346%" y="517" width="0.0276%" height="15" fill="rgb(208,54,0)" fg:x="39965" fg:w="18"/><text x="61.5846%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24 samples, 0.04%)</title><rect x="61.3269%" y="597" width="0.0368%" height="15" fill="rgb(244,136,14)" fg:x="39960" fg:w="24"/><text x="61.5769%" y="607.50"></text></g><g><title>&lt;main::SelfStorage as main::Storage&gt;::lookup::{{closure}} (19 samples, 0.03%)</title><rect x="61.3346%" y="581" width="0.0292%" height="15" fill="rgb(241,56,14)" fg:x="39965" fg:w="19"/><text x="61.5846%" y="591.50"></text></g><g><title>&lt;main::SelfStorage as main::Storage&gt;::lookup (5,636 samples, 8.65%)</title><rect x="52.7203%" y="613" width="8.6496%" height="15" fill="rgb(205,80,24)" fg:x="34352" fg:w="5636"/><text x="52.9703%" y="623.50">&lt;main::SelfS..</text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="61.4865%" y="581" width="0.0138%" height="15" fill="rgb(220,57,4)" fg:x="40064" fg:w="9"/><text x="61.7365%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (9 samples, 0.01%)</title><rect x="61.4865%" y="565" width="0.0138%" height="15" fill="rgb(226,193,50)" fg:x="40064" fg:w="9"/><text x="61.7365%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.03%)</title><rect x="61.5003%" y="581" width="0.0261%" height="15" fill="rgb(231,168,22)" fg:x="40073" fg:w="17"/><text x="61.7503%" y="591.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (8 samples, 0.01%)</title><rect x="61.5448%" y="533" width="0.0123%" height="15" fill="rgb(254,215,14)" fg:x="40102" fg:w="8"/><text x="61.7948%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (17 samples, 0.03%)</title><rect x="61.5372%" y="549" width="0.0261%" height="15" fill="rgb(211,115,16)" fg:x="40097" fg:w="17"/><text x="61.7872%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (27 samples, 0.04%)</title><rect x="61.5341%" y="565" width="0.0414%" height="15" fill="rgb(236,210,16)" fg:x="40095" fg:w="27"/><text x="61.7841%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.01%)</title><rect x="61.5633%" y="549" width="0.0123%" height="15" fill="rgb(221,94,12)" fg:x="40114" fg:w="8"/><text x="61.8133%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (19 samples, 0.03%)</title><rect x="61.5832%" y="565" width="0.0292%" height="15" fill="rgb(235,218,49)" fg:x="40127" fg:w="19"/><text x="61.8332%" y="575.50"></text></g><g><title>core::cmp::PartialOrd::ge (19 samples, 0.03%)</title><rect x="61.5832%" y="549" width="0.0292%" height="15" fill="rgb(217,114,14)" fg:x="40127" fg:w="19"/><text x="61.8332%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (18 samples, 0.03%)</title><rect x="61.5847%" y="533" width="0.0276%" height="15" fill="rgb(216,145,22)" fg:x="40128" fg:w="18"/><text x="61.8347%" y="543.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (18 samples, 0.03%)</title><rect x="61.5847%" y="517" width="0.0276%" height="15" fill="rgb(217,112,39)" fg:x="40128" fg:w="18"/><text x="61.8347%" y="527.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (18 samples, 0.03%)</title><rect x="61.5847%" y="501" width="0.0276%" height="15" fill="rgb(225,85,32)" fg:x="40128" fg:w="18"/><text x="61.8347%" y="511.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.02%)</title><rect x="61.5909%" y="485" width="0.0215%" height="15" fill="rgb(245,209,47)" fg:x="40132" fg:w="14"/><text x="61.8409%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.01%)</title><rect x="61.8395%" y="469" width="0.0107%" height="15" fill="rgb(218,220,15)" fg:x="40294" fg:w="7"/><text x="62.0895%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="61.8395%" y="453" width="0.0107%" height="15" fill="rgb(222,202,31)" fg:x="40294" fg:w="7"/><text x="62.0895%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (17 samples, 0.03%)</title><rect x="61.8303%" y="501" width="0.0261%" height="15" fill="rgb(243,203,4)" fg:x="40288" fg:w="17"/><text x="62.0803%" y="511.50"></text></g><g><title>yakvdb::disk::block::get_u32 (16 samples, 0.02%)</title><rect x="61.8318%" y="485" width="0.0246%" height="15" fill="rgb(237,92,17)" fg:x="40289" fg:w="16"/><text x="62.0818%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (7 samples, 0.01%)</title><rect x="61.8671%" y="485" width="0.0107%" height="15" fill="rgb(231,119,7)" fg:x="40312" fg:w="7"/><text x="62.1171%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (7 samples, 0.01%)</title><rect x="61.8671%" y="469" width="0.0107%" height="15" fill="rgb(237,82,41)" fg:x="40312" fg:w="7"/><text x="62.1171%" y="479.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (7 samples, 0.01%)</title><rect x="61.8671%" y="453" width="0.0107%" height="15" fill="rgb(226,81,48)" fg:x="40312" fg:w="7"/><text x="62.1171%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (84 samples, 0.13%)</title><rect x="61.7781%" y="517" width="0.1289%" height="15" fill="rgb(234,70,51)" fg:x="40254" fg:w="84"/><text x="62.0281%" y="527.50"></text></g><g><title>yakvdb::disk::block::get_u32 (33 samples, 0.05%)</title><rect x="61.8564%" y="501" width="0.0506%" height="15" fill="rgb(251,86,4)" fg:x="40305" fg:w="33"/><text x="62.1064%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (18 samples, 0.03%)</title><rect x="61.8794%" y="485" width="0.0276%" height="15" fill="rgb(244,144,28)" fg:x="40320" fg:w="18"/><text x="62.1294%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (18 samples, 0.03%)</title><rect x="61.8794%" y="469" width="0.0276%" height="15" fill="rgb(232,161,39)" fg:x="40320" fg:w="18"/><text x="62.1294%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (116 samples, 0.18%)</title><rect x="61.7704%" y="549" width="0.1780%" height="15" fill="rgb(247,34,51)" fg:x="40249" fg:w="116"/><text x="62.0204%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (116 samples, 0.18%)</title><rect x="61.7704%" y="533" width="0.1780%" height="15" fill="rgb(225,132,2)" fg:x="40249" fg:w="116"/><text x="62.0204%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (27 samples, 0.04%)</title><rect x="61.9070%" y="517" width="0.0414%" height="15" fill="rgb(209,159,44)" fg:x="40338" fg:w="27"/><text x="62.1570%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key::{{closure}} (19 samples, 0.03%)</title><rect x="61.9193%" y="501" width="0.0292%" height="15" fill="rgb(251,214,1)" fg:x="40346" fg:w="19"/><text x="62.1693%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (13 samples, 0.02%)</title><rect x="61.9285%" y="485" width="0.0200%" height="15" fill="rgb(247,84,47)" fg:x="40352" fg:w="13"/><text x="62.1785%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.02%)</title><rect x="61.9285%" y="469" width="0.0200%" height="15" fill="rgb(240,111,43)" fg:x="40352" fg:w="13"/><text x="62.1785%" y="479.50"></text></g><g><title>[libc-2.31.so] (271 samples, 0.42%)</title><rect x="61.9730%" y="501" width="0.4159%" height="15" fill="rgb(215,214,35)" fg:x="40381" fg:w="271"/><text x="62.2230%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (294 samples, 0.45%)</title><rect x="61.9485%" y="549" width="0.4512%" height="15" fill="rgb(248,207,23)" fg:x="40365" fg:w="294"/><text x="62.1985%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (294 samples, 0.45%)</title><rect x="61.9485%" y="533" width="0.4512%" height="15" fill="rgb(214,186,4)" fg:x="40365" fg:w="294"/><text x="62.1985%" y="543.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (294 samples, 0.45%)</title><rect x="61.9485%" y="517" width="0.4512%" height="15" fill="rgb(220,133,22)" fg:x="40365" fg:w="294"/><text x="62.1985%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (7 samples, 0.01%)</title><rect x="62.3889%" y="501" width="0.0107%" height="15" fill="rgb(239,134,19)" fg:x="40652" fg:w="7"/><text x="62.6389%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (574 samples, 0.88%)</title><rect x="61.5264%" y="581" width="0.8809%" height="15" fill="rgb(250,140,9)" fg:x="40090" fg:w="574"/><text x="61.7764%" y="591.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (518 samples, 0.79%)</title><rect x="61.6124%" y="565" width="0.7950%" height="15" fill="rgb(225,59,14)" fg:x="40146" fg:w="518"/><text x="61.8624%" y="575.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (14 samples, 0.02%)</title><rect x="63.0688%" y="373" width="0.0215%" height="15" fill="rgb(214,152,51)" fg:x="41095" fg:w="14"/><text x="63.3188%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (14 samples, 0.02%)</title><rect x="63.0688%" y="357" width="0.0215%" height="15" fill="rgb(251,227,43)" fg:x="41095" fg:w="14"/><text x="63.3188%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (14 samples, 0.02%)</title><rect x="63.0688%" y="341" width="0.0215%" height="15" fill="rgb(241,96,17)" fg:x="41095" fg:w="14"/><text x="63.3188%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (40 samples, 0.06%)</title><rect x="63.0903%" y="373" width="0.0614%" height="15" fill="rgb(234,198,43)" fg:x="41109" fg:w="40"/><text x="63.3403%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (40 samples, 0.06%)</title><rect x="63.0903%" y="357" width="0.0614%" height="15" fill="rgb(220,108,29)" fg:x="41109" fg:w="40"/><text x="63.3403%" y="367.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (90 samples, 0.14%)</title><rect x="63.0320%" y="405" width="0.1381%" height="15" fill="rgb(226,163,33)" fg:x="41071" fg:w="90"/><text x="63.2820%" y="415.50"></text></g><g><title>yakvdb::disk::block::get_u32 (66 samples, 0.10%)</title><rect x="63.0688%" y="389" width="0.1013%" height="15" fill="rgb(205,194,45)" fg:x="41095" fg:w="66"/><text x="63.3188%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.02%)</title><rect x="63.1517%" y="373" width="0.0184%" height="15" fill="rgb(206,143,44)" fg:x="41149" fg:w="12"/><text x="63.4017%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.02%)</title><rect x="63.1517%" y="357" width="0.0184%" height="15" fill="rgb(236,136,36)" fg:x="41149" fg:w="12"/><text x="63.4017%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (42 samples, 0.06%)</title><rect x="63.2161%" y="389" width="0.0645%" height="15" fill="rgb(249,172,42)" fg:x="41191" fg:w="42"/><text x="63.4661%" y="399.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (42 samples, 0.06%)</title><rect x="63.2161%" y="373" width="0.0645%" height="15" fill="rgb(216,139,23)" fg:x="41191" fg:w="42"/><text x="63.4661%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (42 samples, 0.06%)</title><rect x="63.2161%" y="357" width="0.0645%" height="15" fill="rgb(207,166,20)" fg:x="41191" fg:w="42"/><text x="63.4661%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (16 samples, 0.02%)</title><rect x="63.2806%" y="389" width="0.0246%" height="15" fill="rgb(210,209,22)" fg:x="41233" fg:w="16"/><text x="63.5306%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.02%)</title><rect x="63.2806%" y="373" width="0.0246%" height="15" fill="rgb(232,118,20)" fg:x="41233" fg:w="16"/><text x="63.5306%" y="383.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (632 samples, 0.97%)</title><rect x="62.4534%" y="453" width="0.9699%" height="15" fill="rgb(238,113,42)" fg:x="40694" fg:w="632"/><text x="62.7034%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (462 samples, 0.71%)</title><rect x="62.7143%" y="437" width="0.7090%" height="15" fill="rgb(231,42,5)" fg:x="40864" fg:w="462"/><text x="62.9643%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (442 samples, 0.68%)</title><rect x="62.7450%" y="421" width="0.6783%" height="15" fill="rgb(243,166,24)" fg:x="40884" fg:w="442"/><text x="62.9950%" y="431.50"></text></g><g><title>yakvdb::disk::block::get_u32 (165 samples, 0.25%)</title><rect x="63.1701%" y="405" width="0.2532%" height="15" fill="rgb(237,226,12)" fg:x="41161" fg:w="165"/><text x="63.4201%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (77 samples, 0.12%)</title><rect x="63.3051%" y="389" width="0.1182%" height="15" fill="rgb(229,133,24)" fg:x="41249" fg:w="77"/><text x="63.5551%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (77 samples, 0.12%)</title><rect x="63.3051%" y="373" width="0.1182%" height="15" fill="rgb(238,33,43)" fg:x="41249" fg:w="77"/><text x="63.5551%" y="383.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (34 samples, 0.05%)</title><rect x="63.4325%" y="421" width="0.0522%" height="15" fill="rgb(227,59,38)" fg:x="41332" fg:w="34"/><text x="63.6825%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (34 samples, 0.05%)</title><rect x="63.4325%" y="405" width="0.0522%" height="15" fill="rgb(230,97,0)" fg:x="41332" fg:w="34"/><text x="63.6825%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (676 samples, 1.04%)</title><rect x="62.4534%" y="501" width="1.0375%" height="15" fill="rgb(250,173,50)" fg:x="40694" fg:w="676"/><text x="62.7034%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (676 samples, 1.04%)</title><rect x="62.4534%" y="485" width="1.0375%" height="15" fill="rgb(240,15,50)" fg:x="40694" fg:w="676"/><text x="62.7034%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (676 samples, 1.04%)</title><rect x="62.4534%" y="469" width="1.0375%" height="15" fill="rgb(221,93,22)" fg:x="40694" fg:w="676"/><text x="62.7034%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (44 samples, 0.07%)</title><rect x="63.4233%" y="453" width="0.0675%" height="15" fill="rgb(245,180,53)" fg:x="41326" fg:w="44"/><text x="63.6733%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (44 samples, 0.07%)</title><rect x="63.4233%" y="437" width="0.0675%" height="15" fill="rgb(231,88,51)" fg:x="41326" fg:w="44"/><text x="63.6733%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::full (717 samples, 1.10%)</title><rect x="62.4073%" y="581" width="1.1004%" height="15" fill="rgb(240,58,21)" fg:x="40664" fg:w="717"/><text x="62.6573%" y="591.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (696 samples, 1.07%)</title><rect x="62.4396%" y="565" width="1.0682%" height="15" fill="rgb(237,21,10)" fg:x="40685" fg:w="696"/><text x="62.6896%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (687 samples, 1.05%)</title><rect x="62.4534%" y="549" width="1.0543%" height="15" fill="rgb(218,43,11)" fg:x="40694" fg:w="687"/><text x="62.7034%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (687 samples, 1.05%)</title><rect x="62.4534%" y="533" width="1.0543%" height="15" fill="rgb(218,221,29)" fg:x="40694" fg:w="687"/><text x="62.7034%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (687 samples, 1.05%)</title><rect x="62.4534%" y="517" width="1.0543%" height="15" fill="rgb(214,118,42)" fg:x="40694" fg:w="687"/><text x="62.7034%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="63.4908%" y="501" width="0.0169%" height="15" fill="rgb(251,200,26)" fg:x="41370" fg:w="11"/><text x="63.7408%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="63.4908%" y="485" width="0.0169%" height="15" fill="rgb(237,101,39)" fg:x="41370" fg:w="11"/><text x="63.7408%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (11 samples, 0.02%)</title><rect x="63.4908%" y="469" width="0.0169%" height="15" fill="rgb(251,117,11)" fg:x="41370" fg:w="11"/><text x="63.7408%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.02%)</title><rect x="63.4908%" y="453" width="0.0169%" height="15" fill="rgb(216,223,23)" fg:x="41370" fg:w="11"/><text x="63.7408%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (11 samples, 0.02%)</title><rect x="63.4908%" y="437" width="0.0169%" height="15" fill="rgb(251,54,12)" fg:x="41370" fg:w="11"/><text x="63.7408%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.02%)</title><rect x="63.4924%" y="421" width="0.0153%" height="15" fill="rgb(254,176,54)" fg:x="41371" fg:w="10"/><text x="63.7424%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (10 samples, 0.02%)</title><rect x="63.4924%" y="405" width="0.0153%" height="15" fill="rgb(210,32,8)" fg:x="41371" fg:w="10"/><text x="63.7424%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (9 samples, 0.01%)</title><rect x="63.4939%" y="389" width="0.0138%" height="15" fill="rgb(235,52,38)" fg:x="41372" fg:w="9"/><text x="63.7439%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (12 samples, 0.02%)</title><rect x="63.5123%" y="565" width="0.0184%" height="15" fill="rgb(231,4,44)" fg:x="41384" fg:w="12"/><text x="63.7623%" y="575.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (13 samples, 0.02%)</title><rect x="63.5123%" y="581" width="0.0200%" height="15" fill="rgb(249,2,32)" fg:x="41384" fg:w="13"/><text x="63.7623%" y="591.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (7 samples, 0.01%)</title><rect x="63.5323%" y="565" width="0.0107%" height="15" fill="rgb(224,65,26)" fg:x="41397" fg:w="7"/><text x="63.7823%" y="575.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::max (9 samples, 0.01%)</title><rect x="63.5323%" y="581" width="0.0138%" height="15" fill="rgb(250,73,40)" fg:x="41397" fg:w="9"/><text x="63.7823%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.03%)</title><rect x="63.6996%" y="565" width="0.0276%" height="15" fill="rgb(253,177,16)" fg:x="41506" fg:w="18"/><text x="63.9496%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.03%)</title><rect x="63.6996%" y="549" width="0.0276%" height="15" fill="rgb(217,32,34)" fg:x="41506" fg:w="18"/><text x="63.9496%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::cap (8 samples, 0.01%)</title><rect x="63.7272%" y="565" width="0.0123%" height="15" fill="rgb(212,7,10)" fg:x="41524" fg:w="8"/><text x="63.9772%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (7 samples, 0.01%)</title><rect x="63.7410%" y="565" width="0.0107%" height="15" fill="rgb(245,89,8)" fg:x="41533" fg:w="7"/><text x="63.9910%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (7 samples, 0.01%)</title><rect x="63.7410%" y="549" width="0.0107%" height="15" fill="rgb(237,16,53)" fg:x="41533" fg:w="7"/><text x="63.9910%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.01%)</title><rect x="63.7517%" y="565" width="0.0123%" height="15" fill="rgb(250,204,30)" fg:x="41540" fg:w="8"/><text x="64.0017%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (9 samples, 0.01%)</title><rect x="63.7640%" y="565" width="0.0138%" height="15" fill="rgb(208,77,27)" fg:x="41548" fg:w="9"/><text x="64.0140%" y="575.50"></text></g><g><title>core::intrinsics::copy (8 samples, 0.01%)</title><rect x="63.7656%" y="549" width="0.0123%" height="15" fill="rgb(250,204,28)" fg:x="41549" fg:w="8"/><text x="64.0156%" y="559.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (7 samples, 0.01%)</title><rect x="63.7671%" y="533" width="0.0107%" height="15" fill="rgb(244,63,21)" fg:x="41550" fg:w="7"/><text x="64.0171%" y="543.50"></text></g><g><title>__calloc (26 samples, 0.04%)</title><rect x="63.7840%" y="453" width="0.0399%" height="15" fill="rgb(236,85,44)" fg:x="41561" fg:w="26"/><text x="64.0340%" y="463.50"></text></g><g><title>_int_malloc (22 samples, 0.03%)</title><rect x="63.7901%" y="437" width="0.0338%" height="15" fill="rgb(215,98,4)" fg:x="41565" fg:w="22"/><text x="64.0401%" y="447.50"></text></g><g><title>alloc::vec::from_elem (32 samples, 0.05%)</title><rect x="63.7778%" y="565" width="0.0491%" height="15" fill="rgb(235,38,11)" fg:x="41557" fg:w="32"/><text x="64.0278%" y="575.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (32 samples, 0.05%)</title><rect x="63.7778%" y="549" width="0.0491%" height="15" fill="rgb(254,186,25)" fg:x="41557" fg:w="32"/><text x="64.0278%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (29 samples, 0.04%)</title><rect x="63.7824%" y="533" width="0.0445%" height="15" fill="rgb(225,55,31)" fg:x="41560" fg:w="29"/><text x="64.0324%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (29 samples, 0.04%)</title><rect x="63.7824%" y="517" width="0.0445%" height="15" fill="rgb(211,15,21)" fg:x="41560" fg:w="29"/><text x="64.0324%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (28 samples, 0.04%)</title><rect x="63.7840%" y="501" width="0.0430%" height="15" fill="rgb(215,187,41)" fg:x="41561" fg:w="28"/><text x="64.0340%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.04%)</title><rect x="63.7840%" y="485" width="0.0430%" height="15" fill="rgb(248,69,32)" fg:x="41561" fg:w="28"/><text x="64.0340%" y="495.50"></text></g><g><title>alloc::alloc::alloc_zeroed (28 samples, 0.04%)</title><rect x="63.7840%" y="469" width="0.0430%" height="15" fill="rgb(252,102,52)" fg:x="41561" fg:w="28"/><text x="64.0340%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12 samples, 0.02%)</title><rect x="63.8454%" y="421" width="0.0184%" height="15" fill="rgb(253,140,32)" fg:x="41601" fg:w="12"/><text x="64.0954%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12 samples, 0.02%)</title><rect x="63.8454%" y="405" width="0.0184%" height="15" fill="rgb(216,56,42)" fg:x="41601" fg:w="12"/><text x="64.0954%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (12 samples, 0.02%)</title><rect x="63.8454%" y="389" width="0.0184%" height="15" fill="rgb(216,184,14)" fg:x="41601" fg:w="12"/><text x="64.0954%" y="399.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (8 samples, 0.01%)</title><rect x="64.6204%" y="325" width="0.0123%" height="15" fill="rgb(237,187,27)" fg:x="42106" fg:w="8"/><text x="64.8704%" y="335.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (8 samples, 0.01%)</title><rect x="64.6204%" y="309" width="0.0123%" height="15" fill="rgb(219,65,3)" fg:x="42106" fg:w="8"/><text x="64.8704%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (8 samples, 0.01%)</title><rect x="64.6204%" y="293" width="0.0123%" height="15" fill="rgb(245,83,25)" fg:x="42106" fg:w="8"/><text x="64.8704%" y="303.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (33 samples, 0.05%)</title><rect x="64.6158%" y="357" width="0.0506%" height="15" fill="rgb(214,205,45)" fg:x="42103" fg:w="33"/><text x="64.8658%" y="367.50"></text></g><g><title>yakvdb::disk::block::get_u32 (30 samples, 0.05%)</title><rect x="64.6204%" y="341" width="0.0460%" height="15" fill="rgb(241,20,18)" fg:x="42106" fg:w="30"/><text x="64.8704%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (19 samples, 0.03%)</title><rect x="64.6373%" y="325" width="0.0292%" height="15" fill="rgb(232,163,23)" fg:x="42117" fg:w="19"/><text x="64.8873%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (19 samples, 0.03%)</title><rect x="64.6373%" y="309" width="0.0292%" height="15" fill="rgb(214,5,46)" fg:x="42117" fg:w="19"/><text x="64.8873%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (10 samples, 0.02%)</title><rect x="64.6895%" y="341" width="0.0153%" height="15" fill="rgb(229,78,17)" fg:x="42151" fg:w="10"/><text x="64.9395%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (10 samples, 0.02%)</title><rect x="64.6895%" y="325" width="0.0153%" height="15" fill="rgb(248,89,10)" fg:x="42151" fg:w="10"/><text x="64.9395%" y="335.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (10 samples, 0.02%)</title><rect x="64.6895%" y="309" width="0.0153%" height="15" fill="rgb(248,54,15)" fg:x="42151" fg:w="10"/><text x="64.9395%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (585 samples, 0.90%)</title><rect x="63.8454%" y="469" width="0.8978%" height="15" fill="rgb(223,116,6)" fg:x="41601" fg:w="585"/><text x="64.0954%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (585 samples, 0.90%)</title><rect x="63.8454%" y="453" width="0.8978%" height="15" fill="rgb(205,125,38)" fg:x="41601" fg:w="585"/><text x="64.0954%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (585 samples, 0.90%)</title><rect x="63.8454%" y="437" width="0.8978%" height="15" fill="rgb(251,78,38)" fg:x="41601" fg:w="585"/><text x="64.0954%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (573 samples, 0.88%)</title><rect x="63.8638%" y="421" width="0.8794%" height="15" fill="rgb(253,78,28)" fg:x="41613" fg:w="573"/><text x="64.1138%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (147 samples, 0.23%)</title><rect x="64.5176%" y="405" width="0.2256%" height="15" fill="rgb(209,120,3)" fg:x="42039" fg:w="147"/><text x="64.7676%" y="415.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (147 samples, 0.23%)</title><rect x="64.5176%" y="389" width="0.2256%" height="15" fill="rgb(238,229,9)" fg:x="42039" fg:w="147"/><text x="64.7676%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (123 samples, 0.19%)</title><rect x="64.5544%" y="373" width="0.1888%" height="15" fill="rgb(253,159,18)" fg:x="42063" fg:w="123"/><text x="64.8044%" y="383.50"></text></g><g><title>yakvdb::disk::block::get_u32 (50 samples, 0.08%)</title><rect x="64.6664%" y="357" width="0.0767%" height="15" fill="rgb(244,42,34)" fg:x="42136" fg:w="50"/><text x="64.9164%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (24 samples, 0.04%)</title><rect x="64.7063%" y="341" width="0.0368%" height="15" fill="rgb(224,8,7)" fg:x="42162" fg:w="24"/><text x="64.9563%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (24 samples, 0.04%)</title><rect x="64.7063%" y="325" width="0.0368%" height="15" fill="rgb(210,201,45)" fg:x="42162" fg:w="24"/><text x="64.9563%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (10 samples, 0.02%)</title><rect x="64.7677%" y="405" width="0.0153%" height="15" fill="rgb(252,185,21)" fg:x="42202" fg:w="10"/><text x="65.0177%" y="415.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (32 samples, 0.05%)</title><rect x="64.8690%" y="309" width="0.0491%" height="15" fill="rgb(223,131,1)" fg:x="42268" fg:w="32"/><text x="65.1190%" y="319.50"></text></g><g><title>_int_free (37 samples, 0.06%)</title><rect x="64.9181%" y="309" width="0.0568%" height="15" fill="rgb(245,141,16)" fg:x="42300" fg:w="37"/><text x="65.1681%" y="319.50"></text></g><g><title>malloc_consolidate (28 samples, 0.04%)</title><rect x="65.1775%" y="293" width="0.0430%" height="15" fill="rgb(229,55,45)" fg:x="42469" fg:w="28"/><text x="65.4275%" y="303.50"></text></g><g><title>_int_malloc (168 samples, 0.26%)</title><rect x="64.9749%" y="309" width="0.2578%" height="15" fill="rgb(208,92,15)" fg:x="42337" fg:w="168"/><text x="65.2249%" y="319.50"></text></g><g><title>unlink_chunk.isra.0 (8 samples, 0.01%)</title><rect x="65.2205%" y="293" width="0.0123%" height="15" fill="rgb(234,185,47)" fg:x="42497" fg:w="8"/><text x="65.4705%" y="303.50"></text></g><g><title>__GI___libc_realloc (291 samples, 0.45%)</title><rect x="64.7877%" y="341" width="0.4466%" height="15" fill="rgb(253,104,50)" fg:x="42215" fg:w="291"/><text x="65.0377%" y="351.50"></text></g><g><title>_int_realloc (260 samples, 0.40%)</title><rect x="64.8352%" y="325" width="0.3990%" height="15" fill="rgb(205,70,7)" fg:x="42246" fg:w="260"/><text x="65.0852%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (293 samples, 0.45%)</title><rect x="64.7861%" y="389" width="0.4497%" height="15" fill="rgb(240,178,43)" fg:x="42214" fg:w="293"/><text x="65.0361%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (293 samples, 0.45%)</title><rect x="64.7861%" y="373" width="0.4497%" height="15" fill="rgb(214,112,2)" fg:x="42214" fg:w="293"/><text x="65.0361%" y="383.50"></text></g><g><title>alloc::alloc::realloc (292 samples, 0.45%)</title><rect x="64.7877%" y="357" width="0.4481%" height="15" fill="rgb(206,46,17)" fg:x="42215" fg:w="292"/><text x="65.0377%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (309 samples, 0.47%)</title><rect x="64.7831%" y="405" width="0.4742%" height="15" fill="rgb(225,220,16)" fg:x="42212" fg:w="309"/><text x="65.0331%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (14 samples, 0.02%)</title><rect x="65.2358%" y="389" width="0.0215%" height="15" fill="rgb(238,65,40)" fg:x="42507" fg:w="14"/><text x="65.4858%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (336 samples, 0.52%)</title><rect x="64.7462%" y="469" width="0.5157%" height="15" fill="rgb(230,151,21)" fg:x="42188" fg:w="336"/><text x="64.9962%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (336 samples, 0.52%)</title><rect x="64.7462%" y="453" width="0.5157%" height="15" fill="rgb(218,58,49)" fg:x="42188" fg:w="336"/><text x="64.9962%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (336 samples, 0.52%)</title><rect x="64.7462%" y="437" width="0.5157%" height="15" fill="rgb(219,179,14)" fg:x="42188" fg:w="336"/><text x="64.9962%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (336 samples, 0.52%)</title><rect x="64.7462%" y="421" width="0.5157%" height="15" fill="rgb(223,72,1)" fg:x="42188" fg:w="336"/><text x="64.9962%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,018 samples, 1.56%)</title><rect x="63.8362%" y="485" width="1.5623%" height="15" fill="rgb(238,126,10)" fg:x="41595" fg:w="1018"/><text x="64.0862%" y="495.50"></text></g><g><title>core::ptr::write (89 samples, 0.14%)</title><rect x="65.2619%" y="469" width="0.1366%" height="15" fill="rgb(224,206,38)" fg:x="42524" fg:w="89"/><text x="65.5119%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.04%)</title><rect x="65.4215%" y="437" width="0.0384%" height="15" fill="rgb(212,201,54)" fg:x="42628" fg:w="25"/><text x="65.6715%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (12 samples, 0.02%)</title><rect x="65.5596%" y="341" width="0.0184%" height="15" fill="rgb(218,154,48)" fg:x="42718" fg:w="12"/><text x="65.8096%" y="351.50"></text></g><g><title>__GI___libc_malloc (1,922 samples, 2.95%)</title><rect x="65.6839%" y="245" width="2.9497%" height="15" fill="rgb(232,93,24)" fg:x="42799" fg:w="1922"/><text x="65.9339%" y="255.50">__..</text></g><g><title>_int_malloc (1,487 samples, 2.28%)</title><rect x="66.3515%" y="229" width="2.2821%" height="15" fill="rgb(245,30,21)" fg:x="43234" fg:w="1487"/><text x="66.6015%" y="239.50">_..</text></g><g><title>unlink_chunk.isra.0 (122 samples, 0.19%)</title><rect x="68.4464%" y="213" width="0.1872%" height="15" fill="rgb(242,148,29)" fg:x="44599" fg:w="122"/><text x="68.6964%" y="223.50"></text></g><g><title>__rdl_alloc (36 samples, 0.06%)</title><rect x="68.6336%" y="245" width="0.0552%" height="15" fill="rgb(244,153,54)" fg:x="44721" fg:w="36"/><text x="68.8836%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (36 samples, 0.06%)</title><rect x="68.6336%" y="229" width="0.0552%" height="15" fill="rgb(252,87,22)" fg:x="44721" fg:w="36"/><text x="68.8836%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,059 samples, 3.16%)</title><rect x="65.5780%" y="341" width="3.1600%" height="15" fill="rgb(210,51,29)" fg:x="42730" fg:w="2059"/><text x="65.8280%" y="351.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,051 samples, 3.15%)</title><rect x="65.5903%" y="325" width="3.1477%" height="15" fill="rgb(242,136,47)" fg:x="42738" fg:w="2051"/><text x="65.8403%" y="335.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,051 samples, 3.15%)</title><rect x="65.5903%" y="309" width="3.1477%" height="15" fill="rgb(238,68,4)" fg:x="42738" fg:w="2051"/><text x="65.8403%" y="319.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,021 samples, 3.10%)</title><rect x="65.6364%" y="293" width="3.1016%" height="15" fill="rgb(242,161,30)" fg:x="42768" fg:w="2021"/><text x="65.8864%" y="303.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,021 samples, 3.10%)</title><rect x="65.6364%" y="277" width="3.1016%" height="15" fill="rgb(218,58,44)" fg:x="42768" fg:w="2021"/><text x="65.8864%" y="287.50">all..</text></g><g><title>alloc::alloc::alloc (2,021 samples, 3.10%)</title><rect x="65.6364%" y="261" width="3.1016%" height="15" fill="rgb(252,125,32)" fg:x="42768" fg:w="2021"/><text x="65.8864%" y="271.50">all..</text></g><g><title>__rust_alloc (32 samples, 0.05%)</title><rect x="68.6889%" y="245" width="0.0491%" height="15" fill="rgb(219,178,0)" fg:x="44757" fg:w="32"/><text x="68.9389%" y="255.50"></text></g><g><title>__memcpy_sse2_unaligned (40 samples, 0.06%)</title><rect x="68.7549%" y="309" width="0.0614%" height="15" fill="rgb(213,152,7)" fg:x="44800" fg:w="40"/><text x="69.0049%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,216 samples, 3.40%)</title><rect x="65.5596%" y="405" width="3.4009%" height="15" fill="rgb(249,109,34)" fg:x="42718" fg:w="2216"/><text x="65.8096%" y="415.50">all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,216 samples, 3.40%)</title><rect x="65.5596%" y="389" width="3.4009%" height="15" fill="rgb(232,96,21)" fg:x="42718" fg:w="2216"/><text x="65.8096%" y="399.50">all..</text></g><g><title>alloc::slice::hack::to_vec (2,216 samples, 3.40%)</title><rect x="65.5596%" y="373" width="3.4009%" height="15" fill="rgb(228,27,39)" fg:x="42718" fg:w="2216"/><text x="65.8096%" y="383.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,216 samples, 3.40%)</title><rect x="65.5596%" y="357" width="3.4009%" height="15" fill="rgb(211,182,52)" fg:x="42718" fg:w="2216"/><text x="65.8096%" y="367.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (145 samples, 0.22%)</title><rect x="68.7380%" y="341" width="0.2225%" height="15" fill="rgb(234,178,38)" fg:x="44789" fg:w="145"/><text x="68.9880%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (145 samples, 0.22%)</title><rect x="68.7380%" y="325" width="0.2225%" height="15" fill="rgb(221,111,3)" fg:x="44789" fg:w="145"/><text x="68.9880%" y="335.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (94 samples, 0.14%)</title><rect x="68.8163%" y="309" width="0.1443%" height="15" fill="rgb(228,175,21)" fg:x="44840" fg:w="94"/><text x="69.0663%" y="319.50"></text></g><g><title>yakvdb::disk::block::get_key (68 samples, 0.10%)</title><rect x="68.9605%" y="405" width="0.1044%" height="15" fill="rgb(228,174,43)" fg:x="44934" fg:w="68"/><text x="69.2105%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (30 samples, 0.05%)</title><rect x="69.0189%" y="389" width="0.0460%" height="15" fill="rgb(211,191,0)" fg:x="44972" fg:w="30"/><text x="69.2689%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (30 samples, 0.05%)</title><rect x="69.0189%" y="373" width="0.0460%" height="15" fill="rgb(253,117,3)" fg:x="44972" fg:w="30"/><text x="69.2689%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (2,414 samples, 3.70%)</title><rect x="65.4599%" y="421" width="3.7048%" height="15" fill="rgb(241,127,19)" fg:x="42653" fg:w="2414"/><text x="65.7099%" y="431.50">&lt;yak..</text></g><g><title>yakvdb::disk::block::get_val (65 samples, 0.10%)</title><rect x="69.0649%" y="405" width="0.0998%" height="15" fill="rgb(218,103,12)" fg:x="45002" fg:w="65"/><text x="69.3149%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (31 samples, 0.05%)</title><rect x="69.1171%" y="389" width="0.0476%" height="15" fill="rgb(236,214,43)" fg:x="45036" fg:w="31"/><text x="69.3671%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (31 samples, 0.05%)</title><rect x="69.1171%" y="373" width="0.0476%" height="15" fill="rgb(244,144,19)" fg:x="45036" fg:w="31"/><text x="69.3671%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.01%)</title><rect x="69.1508%" y="357" width="0.0138%" height="15" fill="rgb(246,188,10)" fg:x="45058" fg:w="9"/><text x="69.4008%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (9 samples, 0.01%)</title><rect x="69.1508%" y="341" width="0.0138%" height="15" fill="rgb(212,193,33)" fg:x="45058" fg:w="9"/><text x="69.4008%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (9 samples, 0.01%)</title><rect x="69.1508%" y="325" width="0.0138%" height="15" fill="rgb(241,51,29)" fg:x="45058" fg:w="9"/><text x="69.4008%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2,467 samples, 3.79%)</title><rect x="65.4599%" y="437" width="3.7861%" height="15" fill="rgb(211,58,19)" fg:x="42653" fg:w="2467"/><text x="65.7099%" y="447.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (53 samples, 0.08%)</title><rect x="69.1647%" y="421" width="0.0813%" height="15" fill="rgb(229,111,26)" fg:x="45067" fg:w="53"/><text x="69.4147%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (53 samples, 0.08%)</title><rect x="69.1647%" y="405" width="0.0813%" height="15" fill="rgb(213,115,40)" fg:x="45067" fg:w="53"/><text x="69.4147%" y="415.50"></text></g><g><title>core::ptr::write (49 samples, 0.08%)</title><rect x="69.1708%" y="389" width="0.0752%" height="15" fill="rgb(209,56,44)" fg:x="45071" fg:w="49"/><text x="69.4208%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,532 samples, 5.42%)</title><rect x="63.8362%" y="501" width="5.4206%" height="15" fill="rgb(230,108,32)" fg:x="41595" fg:w="3532"/><text x="64.0862%" y="511.50">&lt;alloc:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,514 samples, 3.86%)</title><rect x="65.3985%" y="485" width="3.8583%" height="15" fill="rgb(216,165,31)" fg:x="42613" fg:w="2514"/><text x="65.6485%" y="495.50">core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,511 samples, 3.85%)</title><rect x="65.4031%" y="469" width="3.8537%" height="15" fill="rgb(218,122,21)" fg:x="42616" fg:w="2511"/><text x="65.6531%" y="479.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,506 samples, 3.85%)</title><rect x="65.4108%" y="453" width="3.8460%" height="15" fill="rgb(223,224,47)" fg:x="42621" fg:w="2506"/><text x="65.6608%" y="463.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::map_fold&lt;&amp;yakvdb::api::page::Slot,(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;),(),&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}},core::iter::traits::iterator::Iterator::for_each::call&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;),&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; as alloc::vec::spec_extend::SpecExtend&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;),core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;yakvdb::api::page::Slot&gt;,&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}}&gt;&gt;&gt;::spec_extend::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt; (7 samples, 0.01%)</title><rect x="69.2460%" y="437" width="0.0107%" height="15" fill="rgb(238,102,44)" fg:x="45120" fg:w="7"/><text x="69.4960%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;),&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; as alloc::vec::spec_extend::SpecExtend&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;),core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;yakvdb::api::page::Slot&gt;,&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}}&gt;&gt;&gt;::spec_extend::{{closure}}&gt;::{{closure}}&gt; (7 samples, 0.01%)</title><rect x="69.2460%" y="421" width="0.0107%" height="15" fill="rgb(236,46,40)" fg:x="45120" fg:w="7"/><text x="69.4960%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; as alloc::vec::spec_extend::SpecExtend&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;),core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;yakvdb::api::page::Slot&gt;,&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}}&gt;&gt;&gt;::spec_extend::{{closure}}&gt; (7 samples, 0.01%)</title><rect x="69.2460%" y="405" width="0.0107%" height="15" fill="rgb(247,202,50)" fg:x="45120" fg:w="7"/><text x="69.4960%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (7 samples, 0.01%)</title><rect x="69.2460%" y="389" width="0.0107%" height="15" fill="rgb(209,99,20)" fg:x="45120" fg:w="7"/><text x="69.4960%" y="399.50"></text></g><g><title>&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="69.2460%" y="373" width="0.0107%" height="15" fill="rgb(252,27,34)" fg:x="45120" fg:w="7"/><text x="69.4960%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="69.2567%" y="501" width="0.0184%" height="15" fill="rgb(215,206,23)" fg:x="45127" fg:w="12"/><text x="69.5067%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (12 samples, 0.02%)</title><rect x="69.2567%" y="485" width="0.0184%" height="15" fill="rgb(212,135,36)" fg:x="45127" fg:w="12"/><text x="69.5067%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.02%)</title><rect x="69.2567%" y="469" width="0.0184%" height="15" fill="rgb(240,189,1)" fg:x="45127" fg:w="12"/><text x="69.5067%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (11 samples, 0.02%)</title><rect x="69.2583%" y="453" width="0.0169%" height="15" fill="rgb(242,56,20)" fg:x="45128" fg:w="11"/><text x="69.5083%" y="463.50"></text></g><g><title>__GI___libc_malloc (90 samples, 0.14%)</title><rect x="69.2890%" y="389" width="0.1381%" height="15" fill="rgb(247,132,33)" fg:x="45148" fg:w="90"/><text x="69.5390%" y="399.50"></text></g><g><title>_int_malloc (68 samples, 0.10%)</title><rect x="69.3227%" y="373" width="0.1044%" height="15" fill="rgb(208,149,11)" fg:x="45170" fg:w="68"/><text x="69.5727%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (95 samples, 0.15%)</title><rect x="69.2844%" y="437" width="0.1458%" height="15" fill="rgb(211,33,11)" fg:x="45145" fg:w="95"/><text x="69.5344%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (95 samples, 0.15%)</title><rect x="69.2844%" y="421" width="0.1458%" height="15" fill="rgb(221,29,38)" fg:x="45145" fg:w="95"/><text x="69.5344%" y="431.50"></text></g><g><title>alloc::alloc::alloc (94 samples, 0.14%)</title><rect x="69.2859%" y="405" width="0.1443%" height="15" fill="rgb(206,182,49)" fg:x="45146" fg:w="94"/><text x="69.5359%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,652 samples, 5.60%)</title><rect x="63.8269%" y="565" width="5.6048%" height="15" fill="rgb(216,140,1)" fg:x="41589" fg:w="3652"/><text x="64.0769%" y="575.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,652 samples, 5.60%)</title><rect x="63.8269%" y="549" width="5.6048%" height="15" fill="rgb(232,57,40)" fg:x="41589" fg:w="3652"/><text x="64.0769%" y="559.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,650 samples, 5.60%)</title><rect x="63.8300%" y="533" width="5.6017%" height="15" fill="rgb(224,186,18)" fg:x="41591" fg:w="3650"/><text x="64.0800%" y="543.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,649 samples, 5.60%)</title><rect x="63.8316%" y="517" width="5.6001%" height="15" fill="rgb(215,121,11)" fg:x="41592" fg:w="3649"/><text x="64.0816%" y="527.50">&lt;alloc:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (102 samples, 0.16%)</title><rect x="69.2752%" y="501" width="0.1565%" height="15" fill="rgb(245,147,10)" fg:x="45139" fg:w="102"/><text x="69.5252%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (102 samples, 0.16%)</title><rect x="69.2752%" y="485" width="0.1565%" height="15" fill="rgb(238,153,13)" fg:x="45139" fg:w="102"/><text x="69.5252%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (99 samples, 0.15%)</title><rect x="69.2798%" y="469" width="0.1519%" height="15" fill="rgb(233,108,0)" fg:x="45142" fg:w="99"/><text x="69.5298%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (99 samples, 0.15%)</title><rect x="69.2798%" y="453" width="0.1519%" height="15" fill="rgb(212,157,17)" fg:x="45142" fg:w="99"/><text x="69.5298%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="69.4317%" y="517" width="0.0200%" height="15" fill="rgb(225,213,38)" fg:x="45241" fg:w="13"/><text x="69.6817%" y="527.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (18 samples, 0.03%)</title><rect x="69.4977%" y="437" width="0.0276%" height="15" fill="rgb(248,16,11)" fg:x="45284" fg:w="18"/><text x="69.7477%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (18 samples, 0.03%)</title><rect x="69.4977%" y="421" width="0.0276%" height="15" fill="rgb(241,33,4)" fg:x="45284" fg:w="18"/><text x="69.7477%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (18 samples, 0.03%)</title><rect x="69.4977%" y="405" width="0.0276%" height="15" fill="rgb(222,26,43)" fg:x="45284" fg:w="18"/><text x="69.7477%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (47 samples, 0.07%)</title><rect x="69.5253%" y="437" width="0.0721%" height="15" fill="rgb(243,29,36)" fg:x="45302" fg:w="47"/><text x="69.7753%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47 samples, 0.07%)</title><rect x="69.5253%" y="421" width="0.0721%" height="15" fill="rgb(241,9,27)" fg:x="45302" fg:w="47"/><text x="69.7753%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (128 samples, 0.20%)</title><rect x="69.4516%" y="517" width="0.1964%" height="15" fill="rgb(205,117,26)" fg:x="45254" fg:w="128"/><text x="69.7016%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (128 samples, 0.20%)</title><rect x="69.4516%" y="501" width="0.1964%" height="15" fill="rgb(209,80,39)" fg:x="45254" fg:w="128"/><text x="69.7016%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (128 samples, 0.20%)</title><rect x="69.4516%" y="485" width="0.1964%" height="15" fill="rgb(239,155,6)" fg:x="45254" fg:w="128"/><text x="69.7016%" y="495.50"></text></g><g><title>yakvdb::disk::block::put_slot (112 samples, 0.17%)</title><rect x="69.4762%" y="469" width="0.1719%" height="15" fill="rgb(212,104,12)" fg:x="45270" fg:w="112"/><text x="69.7262%" y="479.50"></text></g><g><title>yakvdb::disk::block::put_u32 (106 samples, 0.16%)</title><rect x="69.4854%" y="453" width="0.1627%" height="15" fill="rgb(234,204,3)" fg:x="45276" fg:w="106"/><text x="69.7354%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (33 samples, 0.05%)</title><rect x="69.5974%" y="437" width="0.0506%" height="15" fill="rgb(251,218,7)" fg:x="45349" fg:w="33"/><text x="69.8474%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (33 samples, 0.05%)</title><rect x="69.5974%" y="421" width="0.0506%" height="15" fill="rgb(221,81,32)" fg:x="45349" fg:w="33"/><text x="69.8474%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.03%)</title><rect x="69.6481%" y="421" width="0.0292%" height="15" fill="rgb(214,152,26)" fg:x="45382" fg:w="19"/><text x="69.8981%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.03%)</title><rect x="69.6481%" y="405" width="0.0292%" height="15" fill="rgb(223,22,3)" fg:x="45382" fg:w="19"/><text x="69.8981%" y="415.50"></text></g><g><title>_int_free (15 samples, 0.02%)</title><rect x="69.6542%" y="389" width="0.0230%" height="15" fill="rgb(207,174,7)" fg:x="45386" fg:w="15"/><text x="69.9042%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (172 samples, 0.26%)</title><rect x="69.4317%" y="565" width="0.2640%" height="15" fill="rgb(224,19,52)" fg:x="45241" fg:w="172"/><text x="69.6817%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (172 samples, 0.26%)</title><rect x="69.4317%" y="549" width="0.2640%" height="15" fill="rgb(228,24,14)" fg:x="45241" fg:w="172"/><text x="69.6817%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (172 samples, 0.26%)</title><rect x="69.4317%" y="533" width="0.2640%" height="15" fill="rgb(230,153,43)" fg:x="45241" fg:w="172"/><text x="69.6817%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;yakvdb::api::page::Slot&gt;&gt; (31 samples, 0.05%)</title><rect x="69.6481%" y="517" width="0.0476%" height="15" fill="rgb(231,106,12)" fg:x="45382" fg:w="31"/><text x="69.8981%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.05%)</title><rect x="69.6481%" y="501" width="0.0476%" height="15" fill="rgb(215,92,2)" fg:x="45382" fg:w="31"/><text x="69.8981%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;yakvdb::api::page::Slot,alloc::alloc::Global&gt;&gt; (31 samples, 0.05%)</title><rect x="69.6481%" y="485" width="0.0476%" height="15" fill="rgb(249,143,25)" fg:x="45382" fg:w="31"/><text x="69.8981%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.05%)</title><rect x="69.6481%" y="469" width="0.0476%" height="15" fill="rgb(252,7,35)" fg:x="45382" fg:w="31"/><text x="69.8981%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;yakvdb::api::page::Slot&gt;&gt; (31 samples, 0.05%)</title><rect x="69.6481%" y="453" width="0.0476%" height="15" fill="rgb(216,69,40)" fg:x="45382" fg:w="31"/><text x="69.8981%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.05%)</title><rect x="69.6481%" y="437" width="0.0476%" height="15" fill="rgb(240,36,33)" fg:x="45382" fg:w="31"/><text x="69.8981%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.02%)</title><rect x="69.6773%" y="421" width="0.0184%" height="15" fill="rgb(231,128,14)" fg:x="45401" fg:w="12"/><text x="69.9273%" y="431.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (23 samples, 0.04%)</title><rect x="69.6972%" y="485" width="0.0353%" height="15" fill="rgb(245,143,14)" fg:x="45414" fg:w="23"/><text x="69.9472%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (40 samples, 0.06%)</title><rect x="69.6957%" y="565" width="0.0614%" height="15" fill="rgb(222,130,28)" fg:x="45413" fg:w="40"/><text x="69.9457%" y="575.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum (40 samples, 0.06%)</title><rect x="69.6957%" y="549" width="0.0614%" height="15" fill="rgb(212,10,48)" fg:x="45413" fg:w="40"/><text x="69.9457%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 0.06%)</title><rect x="69.6957%" y="533" width="0.0614%" height="15" fill="rgb(254,118,45)" fg:x="45413" fg:w="40"/><text x="69.9457%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (40 samples, 0.06%)</title><rect x="69.6957%" y="517" width="0.0614%" height="15" fill="rgb(228,6,45)" fg:x="45413" fg:w="40"/><text x="69.9457%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (39 samples, 0.06%)</title><rect x="69.6972%" y="501" width="0.0599%" height="15" fill="rgb(241,18,35)" fg:x="45414" fg:w="39"/><text x="69.9472%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove::{{closure}} (16 samples, 0.02%)</title><rect x="69.7325%" y="485" width="0.0246%" height="15" fill="rgb(227,214,53)" fg:x="45437" fg:w="16"/><text x="69.9825%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (17 samples, 0.03%)</title><rect x="69.7571%" y="565" width="0.0261%" height="15" fill="rgb(224,107,51)" fg:x="45453" fg:w="17"/><text x="70.0071%" y="575.50"></text></g><g><title>__GI___libc_free (179 samples, 0.27%)</title><rect x="69.8783%" y="421" width="0.2747%" height="15" fill="rgb(248,60,28)" fg:x="45532" fg:w="179"/><text x="70.1283%" y="431.50"></text></g><g><title>__rdl_dealloc (19 samples, 0.03%)</title><rect x="70.1530%" y="421" width="0.0292%" height="15" fill="rgb(249,101,23)" fg:x="45711" fg:w="19"/><text x="70.4030%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (19 samples, 0.03%)</title><rect x="70.1530%" y="405" width="0.0292%" height="15" fill="rgb(228,51,19)" fg:x="45711" fg:w="19"/><text x="70.4030%" y="415.50"></text></g><g><title>__rust_dealloc (29 samples, 0.04%)</title><rect x="70.1914%" y="421" width="0.0445%" height="15" fill="rgb(213,20,6)" fg:x="45736" fg:w="29"/><text x="70.4414%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (922 samples, 1.42%)</title><rect x="69.8599%" y="453" width="1.4150%" height="15" fill="rgb(212,124,10)" fg:x="45520" fg:w="922"/><text x="70.1099%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (922 samples, 1.42%)</title><rect x="69.8599%" y="437" width="1.4150%" height="15" fill="rgb(248,3,40)" fg:x="45520" fg:w="922"/><text x="70.1099%" y="447.50"></text></g><g><title>_int_free (677 samples, 1.04%)</title><rect x="70.2359%" y="421" width="1.0390%" height="15" fill="rgb(223,178,23)" fg:x="45765" fg:w="677"/><text x="70.4859%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,045 samples, 1.60%)</title><rect x="69.7831%" y="549" width="1.6038%" height="15" fill="rgb(240,132,45)" fg:x="45470" fg:w="1045"/><text x="70.0331%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (1,045 samples, 1.60%)</title><rect x="69.7831%" y="533" width="1.6038%" height="15" fill="rgb(245,164,36)" fg:x="45470" fg:w="1045"/><text x="70.0331%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (1,041 samples, 1.60%)</title><rect x="69.7893%" y="517" width="1.5976%" height="15" fill="rgb(231,188,53)" fg:x="45474" fg:w="1041"/><text x="70.0393%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,041 samples, 1.60%)</title><rect x="69.7893%" y="501" width="1.5976%" height="15" fill="rgb(237,198,39)" fg:x="45474" fg:w="1041"/><text x="70.0393%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,041 samples, 1.60%)</title><rect x="69.7893%" y="485" width="1.5976%" height="15" fill="rgb(223,120,35)" fg:x="45474" fg:w="1041"/><text x="70.0393%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,041 samples, 1.60%)</title><rect x="69.7893%" y="469" width="1.5976%" height="15" fill="rgb(253,107,49)" fg:x="45474" fg:w="1041"/><text x="70.0393%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (73 samples, 0.11%)</title><rect x="71.2749%" y="453" width="0.1120%" height="15" fill="rgb(216,44,31)" fg:x="46442" fg:w="73"/><text x="71.5249%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (33 samples, 0.05%)</title><rect x="71.3363%" y="437" width="0.0506%" height="15" fill="rgb(253,87,21)" fg:x="46482" fg:w="33"/><text x="71.5863%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (33 samples, 0.05%)</title><rect x="71.3363%" y="421" width="0.0506%" height="15" fill="rgb(226,18,2)" fg:x="46482" fg:w="33"/><text x="71.5863%" y="431.50"></text></g><g><title>malloc_consolidate (48 samples, 0.07%)</title><rect x="71.4284%" y="469" width="0.0737%" height="15" fill="rgb(216,8,46)" fg:x="46542" fg:w="48"/><text x="71.6784%" y="479.50"></text></g><g><title>unlink_chunk.isra.0 (12 samples, 0.02%)</title><rect x="71.4836%" y="453" width="0.0184%" height="15" fill="rgb(226,140,39)" fg:x="46578" fg:w="12"/><text x="71.7336%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (75 samples, 0.12%)</title><rect x="71.3931%" y="517" width="0.1151%" height="15" fill="rgb(221,194,54)" fg:x="46519" fg:w="75"/><text x="71.6431%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (75 samples, 0.12%)</title><rect x="71.3931%" y="501" width="0.1151%" height="15" fill="rgb(213,92,11)" fg:x="46519" fg:w="75"/><text x="71.6431%" y="511.50"></text></g><g><title>_int_free (69 samples, 0.11%)</title><rect x="71.4023%" y="485" width="0.1059%" height="15" fill="rgb(229,162,46)" fg:x="46525" fg:w="69"/><text x="71.6523%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (1,125 samples, 1.73%)</title><rect x="69.7831%" y="565" width="1.7265%" height="15" fill="rgb(214,111,36)" fg:x="45470" fg:w="1125"/><text x="70.0331%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (80 samples, 0.12%)</title><rect x="71.3869%" y="549" width="0.1228%" height="15" fill="rgb(207,6,21)" fg:x="46515" fg:w="80"/><text x="71.6369%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.12%)</title><rect x="71.3869%" y="533" width="0.1228%" height="15" fill="rgb(213,127,38)" fg:x="46515" fg:w="80"/><text x="71.6369%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="71.5097%" y="565" width="0.0138%" height="15" fill="rgb(238,118,32)" fg:x="46595" fg:w="9"/><text x="71.7597%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.01%)</title><rect x="71.5097%" y="549" width="0.0138%" height="15" fill="rgb(240,139,39)" fg:x="46595" fg:w="9"/><text x="71.7597%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="71.5097%" y="533" width="0.0138%" height="15" fill="rgb(235,10,37)" fg:x="46595" fg:w="9"/><text x="71.7597%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.01%)</title><rect x="71.5097%" y="517" width="0.0138%" height="15" fill="rgb(249,171,38)" fg:x="46595" fg:w="9"/><text x="71.7597%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="71.5097%" y="501" width="0.0138%" height="15" fill="rgb(242,144,32)" fg:x="46595" fg:w="9"/><text x="71.7597%" y="511.50"></text></g><g><title>__memcpy_sse2_unaligned (43 samples, 0.07%)</title><rect x="71.5527%" y="517" width="0.0660%" height="15" fill="rgb(217,117,21)" fg:x="46623" fg:w="43"/><text x="71.8027%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (205 samples, 0.31%)</title><rect x="71.5527%" y="549" width="0.3146%" height="15" fill="rgb(249,87,1)" fg:x="46623" fg:w="205"/><text x="71.8027%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (205 samples, 0.31%)</title><rect x="71.5527%" y="533" width="0.3146%" height="15" fill="rgb(248,196,48)" fg:x="46623" fg:w="205"/><text x="71.8027%" y="543.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (162 samples, 0.25%)</title><rect x="71.6187%" y="517" width="0.2486%" height="15" fill="rgb(251,206,33)" fg:x="46666" fg:w="162"/><text x="71.8687%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::remove (5,460 samples, 8.38%)</title><rect x="63.5461%" y="581" width="8.3795%" height="15" fill="rgb(232,141,28)" fg:x="41406" fg:w="5460"/><text x="63.7961%" y="591.50">&lt;yakvdb::dis..</text></g><g><title>yakvdb::disk::block::put_slice (257 samples, 0.39%)</title><rect x="71.5312%" y="565" width="0.3944%" height="15" fill="rgb(209,167,14)" fg:x="46609" fg:w="257"/><text x="71.7812%" y="575.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (38 samples, 0.06%)</title><rect x="71.8673%" y="549" width="0.0583%" height="15" fill="rgb(225,11,50)" fg:x="46828" fg:w="38"/><text x="72.1173%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (38 samples, 0.06%)</title><rect x="71.8673%" y="533" width="0.0583%" height="15" fill="rgb(209,50,20)" fg:x="46828" fg:w="38"/><text x="72.1173%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (7 samples, 0.01%)</title><rect x="71.9149%" y="517" width="0.0107%" height="15" fill="rgb(212,17,46)" fg:x="46859" fg:w="7"/><text x="72.1649%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.01%)</title><rect x="71.9149%" y="501" width="0.0107%" height="15" fill="rgb(216,101,39)" fg:x="46859" fg:w="7"/><text x="72.1649%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (7 samples, 0.01%)</title><rect x="71.9149%" y="485" width="0.0107%" height="15" fill="rgb(212,228,48)" fg:x="46859" fg:w="7"/><text x="72.1649%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (9 samples, 0.01%)</title><rect x="71.9256%" y="581" width="0.0138%" height="15" fill="rgb(250,6,50)" fg:x="46866" fg:w="9"/><text x="72.1756%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="71.9824%" y="565" width="0.0153%" height="15" fill="rgb(250,160,48)" fg:x="46903" fg:w="10"/><text x="72.2324%" y="575.50"></text></g><g><title>core::ptr::read (7 samples, 0.01%)</title><rect x="71.9870%" y="549" width="0.0107%" height="15" fill="rgb(244,216,33)" fg:x="46906" fg:w="7"/><text x="72.2370%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="72.0192%" y="389" width="0.0123%" height="15" fill="rgb(207,157,5)" fg:x="46927" fg:w="8"/><text x="72.2692%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16 samples, 0.02%)</title><rect x="72.0330%" y="373" width="0.0246%" height="15" fill="rgb(228,199,8)" fg:x="46936" fg:w="16"/><text x="72.2830%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (37 samples, 0.06%)</title><rect x="72.0146%" y="437" width="0.0568%" height="15" fill="rgb(227,80,20)" fg:x="46924" fg:w="37"/><text x="72.2646%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (37 samples, 0.06%)</title><rect x="72.0146%" y="421" width="0.0568%" height="15" fill="rgb(222,9,33)" fg:x="46924" fg:w="37"/><text x="72.2646%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (37 samples, 0.06%)</title><rect x="72.0146%" y="405" width="0.0568%" height="15" fill="rgb(239,44,28)" fg:x="46924" fg:w="37"/><text x="72.2646%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (26 samples, 0.04%)</title><rect x="72.0315%" y="389" width="0.0399%" height="15" fill="rgb(249,187,43)" fg:x="46935" fg:w="26"/><text x="72.2815%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.01%)</title><rect x="72.0576%" y="373" width="0.0138%" height="15" fill="rgb(216,141,28)" fg:x="46952" fg:w="9"/><text x="72.3076%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (41 samples, 0.06%)</title><rect x="72.0100%" y="469" width="0.0629%" height="15" fill="rgb(230,154,53)" fg:x="46921" fg:w="41"/><text x="72.2600%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (41 samples, 0.06%)</title><rect x="72.0100%" y="453" width="0.0629%" height="15" fill="rgb(227,82,4)" fg:x="46921" fg:w="41"/><text x="72.2600%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (16 samples, 0.02%)</title><rect x="72.0852%" y="421" width="0.0246%" height="15" fill="rgb(220,107,16)" fg:x="46970" fg:w="16"/><text x="72.3352%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (16 samples, 0.02%)</title><rect x="72.0852%" y="405" width="0.0246%" height="15" fill="rgb(207,187,2)" fg:x="46970" fg:w="16"/><text x="72.3352%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (16 samples, 0.02%)</title><rect x="72.0852%" y="389" width="0.0246%" height="15" fill="rgb(210,162,52)" fg:x="46970" fg:w="16"/><text x="72.3352%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (10 samples, 0.02%)</title><rect x="72.1144%" y="421" width="0.0153%" height="15" fill="rgb(217,216,49)" fg:x="46989" fg:w="10"/><text x="72.3644%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (10 samples, 0.02%)</title><rect x="72.1144%" y="405" width="0.0153%" height="15" fill="rgb(218,146,49)" fg:x="46989" fg:w="10"/><text x="72.3644%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.02%)</title><rect x="72.1144%" y="389" width="0.0153%" height="15" fill="rgb(216,55,40)" fg:x="46989" fg:w="10"/><text x="72.3644%" y="399.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (85 samples, 0.13%)</title><rect x="72.0023%" y="533" width="0.1305%" height="15" fill="rgb(208,196,21)" fg:x="46916" fg:w="85"/><text x="72.2523%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (85 samples, 0.13%)</title><rect x="72.0023%" y="517" width="0.1305%" height="15" fill="rgb(242,117,42)" fg:x="46916" fg:w="85"/><text x="72.2523%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (85 samples, 0.13%)</title><rect x="72.0023%" y="501" width="0.1305%" height="15" fill="rgb(210,11,23)" fg:x="46916" fg:w="85"/><text x="72.2523%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (85 samples, 0.13%)</title><rect x="72.0023%" y="485" width="0.1305%" height="15" fill="rgb(217,110,2)" fg:x="46916" fg:w="85"/><text x="72.2523%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (39 samples, 0.06%)</title><rect x="72.0729%" y="469" width="0.0599%" height="15" fill="rgb(229,77,54)" fg:x="46962" fg:w="39"/><text x="72.3229%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (39 samples, 0.06%)</title><rect x="72.0729%" y="453" width="0.0599%" height="15" fill="rgb(218,53,16)" fg:x="46962" fg:w="39"/><text x="72.3229%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (39 samples, 0.06%)</title><rect x="72.0729%" y="437" width="0.0599%" height="15" fill="rgb(215,38,13)" fg:x="46962" fg:w="39"/><text x="72.3229%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (88 samples, 0.14%)</title><rect x="72.0008%" y="549" width="0.1351%" height="15" fill="rgb(235,42,18)" fg:x="46915" fg:w="88"/><text x="72.2508%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.02%)</title><rect x="72.1497%" y="357" width="0.0200%" height="15" fill="rgb(219,66,54)" fg:x="47012" fg:w="13"/><text x="72.3997%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.03%)</title><rect x="72.1405%" y="421" width="0.0307%" height="15" fill="rgb(222,205,4)" fg:x="47006" fg:w="20"/><text x="72.3905%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 0.03%)</title><rect x="72.1405%" y="405" width="0.0307%" height="15" fill="rgb(227,213,46)" fg:x="47006" fg:w="20"/><text x="72.3905%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 0.03%)</title><rect x="72.1405%" y="389" width="0.0307%" height="15" fill="rgb(250,145,42)" fg:x="47006" fg:w="20"/><text x="72.3905%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.02%)</title><rect x="72.1481%" y="373" width="0.0230%" height="15" fill="rgb(219,15,2)" fg:x="47011" fg:w="15"/><text x="72.3981%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.03%)</title><rect x="72.1405%" y="453" width="0.0338%" height="15" fill="rgb(231,181,52)" fg:x="47006" fg:w="22"/><text x="72.3905%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (22 samples, 0.03%)</title><rect x="72.1405%" y="437" width="0.0338%" height="15" fill="rgb(235,1,42)" fg:x="47006" fg:w="22"/><text x="72.3905%" y="447.50"></text></g><g><title>hashbrown::raw::h2 (9 samples, 0.01%)</title><rect x="72.1880%" y="405" width="0.0138%" height="15" fill="rgb(249,88,27)" fg:x="47037" fg:w="9"/><text x="72.4380%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (42 samples, 0.06%)</title><rect x="72.1389%" y="501" width="0.0645%" height="15" fill="rgb(235,145,16)" fg:x="47005" fg:w="42"/><text x="72.3889%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (42 samples, 0.06%)</title><rect x="72.1389%" y="485" width="0.0645%" height="15" fill="rgb(237,114,19)" fg:x="47005" fg:w="42"/><text x="72.3889%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (42 samples, 0.06%)</title><rect x="72.1389%" y="469" width="0.0645%" height="15" fill="rgb(238,51,50)" fg:x="47005" fg:w="42"/><text x="72.3889%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19 samples, 0.03%)</title><rect x="72.1742%" y="453" width="0.0292%" height="15" fill="rgb(205,194,25)" fg:x="47028" fg:w="19"/><text x="72.4242%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.03%)</title><rect x="72.1742%" y="437" width="0.0292%" height="15" fill="rgb(215,203,17)" fg:x="47028" fg:w="19"/><text x="72.4242%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (19 samples, 0.03%)</title><rect x="72.1742%" y="421" width="0.0292%" height="15" fill="rgb(233,112,49)" fg:x="47028" fg:w="19"/><text x="72.4242%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="72.2172%" y="373" width="0.0123%" height="15" fill="rgb(241,130,26)" fg:x="47056" fg:w="8"/><text x="72.4672%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19 samples, 0.03%)</title><rect x="72.2310%" y="357" width="0.0292%" height="15" fill="rgb(252,223,19)" fg:x="47065" fg:w="19"/><text x="72.4810%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (34 samples, 0.05%)</title><rect x="72.2141%" y="421" width="0.0522%" height="15" fill="rgb(211,95,25)" fg:x="47054" fg:w="34"/><text x="72.4641%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (34 samples, 0.05%)</title><rect x="72.2141%" y="405" width="0.0522%" height="15" fill="rgb(251,182,27)" fg:x="47054" fg:w="34"/><text x="72.4641%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (34 samples, 0.05%)</title><rect x="72.2141%" y="389" width="0.0522%" height="15" fill="rgb(238,24,4)" fg:x="47054" fg:w="34"/><text x="72.4641%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.04%)</title><rect x="72.2295%" y="373" width="0.0368%" height="15" fill="rgb(224,220,25)" fg:x="47064" fg:w="24"/><text x="72.4795%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (35 samples, 0.05%)</title><rect x="72.2141%" y="453" width="0.0537%" height="15" fill="rgb(239,133,26)" fg:x="47054" fg:w="35"/><text x="72.4641%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (35 samples, 0.05%)</title><rect x="72.2141%" y="437" width="0.0537%" height="15" fill="rgb(211,94,48)" fg:x="47054" fg:w="35"/><text x="72.4641%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (59 samples, 0.09%)</title><rect x="72.2034%" y="501" width="0.0905%" height="15" fill="rgb(239,87,6)" fg:x="47047" fg:w="59"/><text x="72.4534%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (59 samples, 0.09%)</title><rect x="72.2034%" y="485" width="0.0905%" height="15" fill="rgb(227,62,0)" fg:x="47047" fg:w="59"/><text x="72.4534%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (58 samples, 0.09%)</title><rect x="72.2049%" y="469" width="0.0890%" height="15" fill="rgb(211,226,4)" fg:x="47048" fg:w="58"/><text x="72.4549%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 0.03%)</title><rect x="72.2678%" y="453" width="0.0261%" height="15" fill="rgb(253,38,52)" fg:x="47089" fg:w="17"/><text x="72.5178%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.03%)</title><rect x="72.2678%" y="437" width="0.0261%" height="15" fill="rgb(229,126,40)" fg:x="47089" fg:w="17"/><text x="72.5178%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 0.03%)</title><rect x="72.2678%" y="421" width="0.0261%" height="15" fill="rgb(229,165,44)" fg:x="47089" fg:w="17"/><text x="72.5178%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (14 samples, 0.02%)</title><rect x="72.3077%" y="485" width="0.0215%" height="15" fill="rgb(247,95,47)" fg:x="47115" fg:w="14"/><text x="72.5577%" y="495.50"></text></g><g><title>core::intrinsics::copy (12 samples, 0.02%)</title><rect x="72.3108%" y="469" width="0.0184%" height="15" fill="rgb(216,140,30)" fg:x="47117" fg:w="12"/><text x="72.5608%" y="479.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (11 samples, 0.02%)</title><rect x="72.3123%" y="453" width="0.0169%" height="15" fill="rgb(246,214,8)" fg:x="47118" fg:w="11"/><text x="72.5623%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (26 samples, 0.04%)</title><rect x="72.3630%" y="437" width="0.0399%" height="15" fill="rgb(227,224,15)" fg:x="47151" fg:w="26"/><text x="72.6130%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (19 samples, 0.03%)</title><rect x="72.3737%" y="421" width="0.0292%" height="15" fill="rgb(233,175,4)" fg:x="47158" fg:w="19"/><text x="72.6237%" y="431.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (19 samples, 0.03%)</title><rect x="72.3737%" y="405" width="0.0292%" height="15" fill="rgb(221,66,45)" fg:x="47158" fg:w="19"/><text x="72.6237%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.03%)</title><rect x="72.3737%" y="389" width="0.0292%" height="15" fill="rgb(221,178,18)" fg:x="47158" fg:w="19"/><text x="72.6237%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.03%)</title><rect x="72.3737%" y="373" width="0.0292%" height="15" fill="rgb(213,81,29)" fg:x="47158" fg:w="19"/><text x="72.6237%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (19 samples, 0.03%)</title><rect x="72.3737%" y="357" width="0.0292%" height="15" fill="rgb(220,89,49)" fg:x="47158" fg:w="19"/><text x="72.6237%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (81 samples, 0.12%)</title><rect x="72.3338%" y="485" width="0.1243%" height="15" fill="rgb(227,60,33)" fg:x="47132" fg:w="81"/><text x="72.5838%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (81 samples, 0.12%)</title><rect x="72.3338%" y="469" width="0.1243%" height="15" fill="rgb(205,113,12)" fg:x="47132" fg:w="81"/><text x="72.5838%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (81 samples, 0.12%)</title><rect x="72.3338%" y="453" width="0.1243%" height="15" fill="rgb(211,32,1)" fg:x="47132" fg:w="81"/><text x="72.5838%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.06%)</title><rect x="72.4029%" y="437" width="0.0552%" height="15" fill="rgb(246,2,12)" fg:x="47177" fg:w="36"/><text x="72.6529%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;alloc::vec::Vec&lt;u32&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="72.4581%" y="485" width="0.0123%" height="15" fill="rgb(243,37,27)" fg:x="47213" fg:w="8"/><text x="72.7081%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (8 samples, 0.01%)</title><rect x="72.4581%" y="469" width="0.0123%" height="15" fill="rgb(248,211,31)" fg:x="47213" fg:w="8"/><text x="72.7081%" y="479.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="72.4581%" y="453" width="0.0123%" height="15" fill="rgb(242,146,47)" fg:x="47213" fg:w="8"/><text x="72.7081%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (8 samples, 0.01%)</title><rect x="72.4581%" y="437" width="0.0123%" height="15" fill="rgb(206,70,20)" fg:x="47213" fg:w="8"/><text x="72.7081%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (8 samples, 0.01%)</title><rect x="72.4581%" y="421" width="0.0123%" height="15" fill="rgb(215,10,51)" fg:x="47213" fg:w="8"/><text x="72.7081%" y="431.50"></text></g><g><title>core::mem::replace (8 samples, 0.01%)</title><rect x="72.4581%" y="405" width="0.0123%" height="15" fill="rgb(243,178,53)" fg:x="47213" fg:w="8"/><text x="72.7081%" y="415.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="72.4581%" y="389" width="0.0123%" height="15" fill="rgb(233,221,20)" fg:x="47213" fg:w="8"/><text x="72.7081%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.01%)</title><rect x="72.4842%" y="341" width="0.0138%" height="15" fill="rgb(218,95,35)" fg:x="47230" fg:w="9"/><text x="72.7342%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="72.4735%" y="405" width="0.0276%" height="15" fill="rgb(229,13,5)" fg:x="47223" fg:w="18"/><text x="72.7235%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="72.4735%" y="389" width="0.0276%" height="15" fill="rgb(252,164,30)" fg:x="47223" fg:w="18"/><text x="72.7235%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.03%)</title><rect x="72.4735%" y="373" width="0.0276%" height="15" fill="rgb(232,68,36)" fg:x="47223" fg:w="18"/><text x="72.7235%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.03%)</title><rect x="72.4750%" y="357" width="0.0261%" height="15" fill="rgb(219,59,54)" fg:x="47224" fg:w="17"/><text x="72.7250%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.03%)</title><rect x="72.4720%" y="437" width="0.0307%" height="15" fill="rgb(250,92,33)" fg:x="47222" fg:w="20"/><text x="72.7220%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20 samples, 0.03%)</title><rect x="72.4720%" y="421" width="0.0307%" height="15" fill="rgb(229,162,54)" fg:x="47222" fg:w="20"/><text x="72.7220%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (10 samples, 0.02%)</title><rect x="72.5134%" y="373" width="0.0153%" height="15" fill="rgb(244,114,52)" fg:x="47249" fg:w="10"/><text x="72.7634%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (10 samples, 0.02%)</title><rect x="72.5134%" y="357" width="0.0153%" height="15" fill="rgb(212,211,43)" fg:x="47249" fg:w="10"/><text x="72.7634%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.02%)</title><rect x="72.5134%" y="389" width="0.0184%" height="15" fill="rgb(226,147,8)" fg:x="47249" fg:w="12"/><text x="72.7634%" y="399.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (267 samples, 0.41%)</title><rect x="72.1359%" y="549" width="0.4098%" height="15" fill="rgb(226,23,13)" fg:x="47003" fg:w="267"/><text x="72.3859%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (267 samples, 0.41%)</title><rect x="72.1359%" y="533" width="0.4098%" height="15" fill="rgb(240,63,4)" fg:x="47003" fg:w="267"/><text x="72.3859%" y="543.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (267 samples, 0.41%)</title><rect x="72.1359%" y="517" width="0.4098%" height="15" fill="rgb(221,1,32)" fg:x="47003" fg:w="267"/><text x="72.3859%" y="527.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (164 samples, 0.25%)</title><rect x="72.2939%" y="501" width="0.2517%" height="15" fill="rgb(242,117,10)" fg:x="47106" fg:w="164"/><text x="72.5439%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (49 samples, 0.08%)</title><rect x="72.4704%" y="485" width="0.0752%" height="15" fill="rgb(249,172,44)" fg:x="47221" fg:w="49"/><text x="72.7204%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (49 samples, 0.08%)</title><rect x="72.4704%" y="469" width="0.0752%" height="15" fill="rgb(244,46,45)" fg:x="47221" fg:w="49"/><text x="72.7204%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (49 samples, 0.08%)</title><rect x="72.4704%" y="453" width="0.0752%" height="15" fill="rgb(206,43,17)" fg:x="47221" fg:w="49"/><text x="72.7204%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (28 samples, 0.04%)</title><rect x="72.5026%" y="437" width="0.0430%" height="15" fill="rgb(239,218,39)" fg:x="47242" fg:w="28"/><text x="72.7526%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (28 samples, 0.04%)</title><rect x="72.5026%" y="421" width="0.0430%" height="15" fill="rgb(208,169,54)" fg:x="47242" fg:w="28"/><text x="72.7526%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (28 samples, 0.04%)</title><rect x="72.5026%" y="405" width="0.0430%" height="15" fill="rgb(247,25,42)" fg:x="47242" fg:w="28"/><text x="72.7526%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (358 samples, 0.55%)</title><rect x="71.9977%" y="565" width="0.5494%" height="15" fill="rgb(226,23,31)" fg:x="46913" fg:w="358"/><text x="72.2477%" y="575.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.03%)</title><rect x="72.5610%" y="453" width="0.0276%" height="15" fill="rgb(247,16,28)" fg:x="47280" fg:w="18"/><text x="72.8110%" y="463.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.03%)</title><rect x="72.5610%" y="437" width="0.0276%" height="15" fill="rgb(231,147,38)" fg:x="47280" fg:w="18"/><text x="72.8110%" y="447.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.03%)</title><rect x="72.5610%" y="421" width="0.0276%" height="15" fill="rgb(253,81,48)" fg:x="47280" fg:w="18"/><text x="72.8110%" y="431.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.03%)</title><rect x="72.5610%" y="405" width="0.0276%" height="15" fill="rgb(249,222,43)" fg:x="47280" fg:w="18"/><text x="72.8110%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.03%)</title><rect x="72.5610%" y="389" width="0.0276%" height="15" fill="rgb(221,3,27)" fg:x="47280" fg:w="18"/><text x="72.8110%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (14 samples, 0.02%)</title><rect x="72.5671%" y="373" width="0.0215%" height="15" fill="rgb(228,180,5)" fg:x="47284" fg:w="14"/><text x="72.8171%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.04%)</title><rect x="72.5610%" y="469" width="0.0368%" height="15" fill="rgb(227,131,42)" fg:x="47280" fg:w="24"/><text x="72.8110%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (28 samples, 0.04%)</title><rect x="72.5579%" y="501" width="0.0430%" height="15" fill="rgb(212,3,39)" fg:x="47278" fg:w="28"/><text x="72.8079%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (26 samples, 0.04%)</title><rect x="72.5610%" y="485" width="0.0399%" height="15" fill="rgb(226,45,5)" fg:x="47280" fg:w="26"/><text x="72.8110%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="72.6009%" y="501" width="0.0184%" height="15" fill="rgb(215,167,45)" fg:x="47306" fg:w="12"/><text x="72.8509%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="72.6009%" y="485" width="0.0184%" height="15" fill="rgb(250,218,53)" fg:x="47306" fg:w="12"/><text x="72.8509%" y="495.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="72.6009%" y="469" width="0.0184%" height="15" fill="rgb(207,140,0)" fg:x="47306" fg:w="12"/><text x="72.8509%" y="479.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="72.6009%" y="453" width="0.0184%" height="15" fill="rgb(238,133,51)" fg:x="47306" fg:w="12"/><text x="72.8509%" y="463.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="72.6009%" y="437" width="0.0184%" height="15" fill="rgb(218,203,53)" fg:x="47306" fg:w="12"/><text x="72.8509%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="72.6024%" y="421" width="0.0169%" height="15" fill="rgb(226,184,25)" fg:x="47307" fg:w="11"/><text x="72.8524%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (20 samples, 0.03%)</title><rect x="72.6193%" y="501" width="0.0307%" height="15" fill="rgb(231,121,21)" fg:x="47318" fg:w="20"/><text x="72.8693%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.03%)</title><rect x="72.6193%" y="485" width="0.0307%" height="15" fill="rgb(251,14,34)" fg:x="47318" fg:w="20"/><text x="72.8693%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.03%)</title><rect x="72.6193%" y="469" width="0.0307%" height="15" fill="rgb(249,193,11)" fg:x="47318" fg:w="20"/><text x="72.8693%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.03%)</title><rect x="72.6193%" y="453" width="0.0307%" height="15" fill="rgb(220,172,37)" fg:x="47318" fg:w="20"/><text x="72.8693%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.03%)</title><rect x="72.6193%" y="437" width="0.0307%" height="15" fill="rgb(231,229,43)" fg:x="47318" fg:w="20"/><text x="72.8693%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.03%)</title><rect x="72.6193%" y="421" width="0.0307%" height="15" fill="rgb(250,161,5)" fg:x="47318" fg:w="20"/><text x="72.8693%" y="431.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.03%)</title><rect x="72.6193%" y="405" width="0.0307%" height="15" fill="rgb(218,225,18)" fg:x="47318" fg:w="20"/><text x="72.8693%" y="415.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.03%)</title><rect x="72.6208%" y="389" width="0.0292%" height="15" fill="rgb(245,45,42)" fg:x="47319" fg:w="19"/><text x="72.8708%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (70 samples, 0.11%)</title><rect x="72.5472%" y="565" width="0.1074%" height="15" fill="rgb(211,115,1)" fg:x="47271" fg:w="70"/><text x="72.7972%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (70 samples, 0.11%)</title><rect x="72.5472%" y="549" width="0.1074%" height="15" fill="rgb(248,133,52)" fg:x="47271" fg:w="70"/><text x="72.7972%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (70 samples, 0.11%)</title><rect x="72.5472%" y="533" width="0.1074%" height="15" fill="rgb(238,100,21)" fg:x="47271" fg:w="70"/><text x="72.7972%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (70 samples, 0.11%)</title><rect x="72.5472%" y="517" width="0.1074%" height="15" fill="rgb(247,144,11)" fg:x="47271" fg:w="70"/><text x="72.7972%" y="527.50"></text></g><g><title>__GI___libc_free (22 samples, 0.03%)</title><rect x="72.6546%" y="437" width="0.0338%" height="15" fill="rgb(206,164,16)" fg:x="47341" fg:w="22"/><text x="72.9046%" y="447.50"></text></g><g><title>__rdl_dealloc (12 samples, 0.02%)</title><rect x="72.6883%" y="437" width="0.0184%" height="15" fill="rgb(222,34,3)" fg:x="47363" fg:w="12"/><text x="72.9383%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (12 samples, 0.02%)</title><rect x="72.6883%" y="421" width="0.0184%" height="15" fill="rgb(248,82,4)" fg:x="47363" fg:w="12"/><text x="72.9383%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57 samples, 0.09%)</title><rect x="72.6546%" y="469" width="0.0875%" height="15" fill="rgb(228,81,46)" fg:x="47341" fg:w="57"/><text x="72.9046%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (57 samples, 0.09%)</title><rect x="72.6546%" y="453" width="0.0875%" height="15" fill="rgb(227,67,47)" fg:x="47341" fg:w="57"/><text x="72.9046%" y="463.50"></text></g><g><title>_int_free (22 samples, 0.03%)</title><rect x="72.7083%" y="437" width="0.0338%" height="15" fill="rgb(215,93,53)" fg:x="47376" fg:w="22"/><text x="72.9583%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u32&gt;&gt; (60 samples, 0.09%)</title><rect x="72.6546%" y="565" width="0.0921%" height="15" fill="rgb(248,194,39)" fg:x="47341" fg:w="60"/><text x="72.9046%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.09%)</title><rect x="72.6546%" y="549" width="0.0921%" height="15" fill="rgb(215,5,19)" fg:x="47341" fg:w="60"/><text x="72.9046%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u32,alloc::alloc::Global&gt;&gt; (60 samples, 0.09%)</title><rect x="72.6546%" y="533" width="0.0921%" height="15" fill="rgb(226,215,51)" fg:x="47341" fg:w="60"/><text x="72.9046%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.09%)</title><rect x="72.6546%" y="517" width="0.0921%" height="15" fill="rgb(225,56,26)" fg:x="47341" fg:w="60"/><text x="72.9046%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (60 samples, 0.09%)</title><rect x="72.6546%" y="501" width="0.0921%" height="15" fill="rgb(222,75,29)" fg:x="47341" fg:w="60"/><text x="72.9046%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.09%)</title><rect x="72.6546%" y="485" width="0.0921%" height="15" fill="rgb(236,139,6)" fg:x="47341" fg:w="60"/><text x="72.9046%" y="495.50"></text></g><g><title>__memset_sse2_unaligned (12 samples, 0.02%)</title><rect x="72.7605%" y="389" width="0.0184%" height="15" fill="rgb(223,137,36)" fg:x="47410" fg:w="12"/><text x="73.0105%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (22 samples, 0.03%)</title><rect x="72.7605%" y="421" width="0.0338%" height="15" fill="rgb(226,99,2)" fg:x="47410" fg:w="22"/><text x="73.0105%" y="431.50"></text></g><g><title>core::intrinsics::write_bytes (22 samples, 0.03%)</title><rect x="72.7605%" y="405" width="0.0338%" height="15" fill="rgb(206,133,23)" fg:x="47410" fg:w="22"/><text x="73.0105%" y="415.50"></text></g><g><title>__memset_sse2_unaligned_erms (10 samples, 0.02%)</title><rect x="72.7789%" y="389" width="0.0153%" height="15" fill="rgb(243,173,15)" fg:x="47422" fg:w="10"/><text x="73.0289%" y="399.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (23 samples, 0.04%)</title><rect x="72.7605%" y="565" width="0.0353%" height="15" fill="rgb(228,69,28)" fg:x="47410" fg:w="23"/><text x="73.0105%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (23 samples, 0.04%)</title><rect x="72.7605%" y="549" width="0.0353%" height="15" fill="rgb(212,51,22)" fg:x="47410" fg:w="23"/><text x="73.0105%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (23 samples, 0.04%)</title><rect x="72.7605%" y="533" width="0.0353%" height="15" fill="rgb(227,113,0)" fg:x="47410" fg:w="23"/><text x="73.0105%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (23 samples, 0.04%)</title><rect x="72.7605%" y="517" width="0.0353%" height="15" fill="rgb(252,84,27)" fg:x="47410" fg:w="23"/><text x="73.0105%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(u32,())&gt;,hashbrown::raw::RawTable&lt;(u32,())&gt;::clear::{{closure}}&gt;&gt; (23 samples, 0.04%)</title><rect x="72.7605%" y="501" width="0.0353%" height="15" fill="rgb(223,145,39)" fg:x="47410" fg:w="23"/><text x="73.0105%" y="511.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.04%)</title><rect x="72.7605%" y="485" width="0.0353%" height="15" fill="rgb(239,219,30)" fg:x="47410" fg:w="23"/><text x="73.0105%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (23 samples, 0.04%)</title><rect x="72.7605%" y="469" width="0.0353%" height="15" fill="rgb(224,196,39)" fg:x="47410" fg:w="23"/><text x="73.0105%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (23 samples, 0.04%)</title><rect x="72.7605%" y="453" width="0.0353%" height="15" fill="rgb(205,35,43)" fg:x="47410" fg:w="23"/><text x="73.0105%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (23 samples, 0.04%)</title><rect x="72.7605%" y="437" width="0.0353%" height="15" fill="rgb(228,201,21)" fg:x="47410" fg:w="23"/><text x="73.0105%" y="447.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (1,190 samples, 1.83%)</title><rect x="72.8234%" y="549" width="1.8263%" height="15" fill="rgb(237,118,16)" fg:x="47451" fg:w="1190"/><text x="73.0734%" y="559.50">&lt;..</text></g><g><title>std::sys::unix::fs::File::seek (1,187 samples, 1.82%)</title><rect x="72.8280%" y="533" width="1.8217%" height="15" fill="rgb(241,17,19)" fg:x="47454" fg:w="1187"/><text x="73.0780%" y="543.50">s..</text></g><g><title>__lseek64 (1,172 samples, 1.80%)</title><rect x="72.8510%" y="517" width="1.7987%" height="15" fill="rgb(214,10,25)" fg:x="47469" fg:w="1172"/><text x="73.1010%" y="527.50">_..</text></g><g><title>[unknown] (1,133 samples, 1.74%)</title><rect x="72.9109%" y="501" width="1.7388%" height="15" fill="rgb(238,37,29)" fg:x="47508" fg:w="1133"/><text x="73.1609%" y="511.50"></text></g><g><title>[unknown] (820 samples, 1.26%)</title><rect x="73.3912%" y="485" width="1.2585%" height="15" fill="rgb(253,83,25)" fg:x="47821" fg:w="820"/><text x="73.6412%" y="495.50"></text></g><g><title>[unknown] (246 samples, 0.38%)</title><rect x="74.2722%" y="469" width="0.3775%" height="15" fill="rgb(234,192,12)" fg:x="48395" fg:w="246"/><text x="74.5222%" y="479.50"></text></g><g><title>[unknown] (233 samples, 0.36%)</title><rect x="74.2921%" y="453" width="0.3576%" height="15" fill="rgb(241,216,45)" fg:x="48408" fg:w="233"/><text x="74.5421%" y="463.50"></text></g><g><title>[unknown] (180 samples, 0.28%)</title><rect x="74.3735%" y="437" width="0.2762%" height="15" fill="rgb(242,22,33)" fg:x="48461" fg:w="180"/><text x="74.6235%" y="447.50"></text></g><g><title>[unknown] (102 samples, 0.16%)</title><rect x="74.4932%" y="421" width="0.1565%" height="15" fill="rgb(231,105,49)" fg:x="48539" fg:w="102"/><text x="74.7432%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::id (8 samples, 0.01%)</title><rect x="74.6512%" y="549" width="0.0123%" height="15" fill="rgb(218,204,15)" fg:x="48642" fg:w="8"/><text x="74.9012%" y="559.50"></text></g><g><title>yakvdb::disk::block::get_u32 (7 samples, 0.01%)</title><rect x="74.6528%" y="533" width="0.0107%" height="15" fill="rgb(235,138,41)" fg:x="48643" fg:w="7"/><text x="74.9028%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.01%)</title><rect x="74.6528%" y="517" width="0.0107%" height="15" fill="rgb(246,0,9)" fg:x="48643" fg:w="7"/><text x="74.9028%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="74.6528%" y="501" width="0.0107%" height="15" fill="rgb(210,74,4)" fg:x="48643" fg:w="7"/><text x="74.9028%" y="511.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (57 samples, 0.09%)</title><rect x="74.6635%" y="501" width="0.0875%" height="15" fill="rgb(250,60,41)" fg:x="48650" fg:w="57"/><text x="74.9135%" y="511.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (57 samples, 0.09%)</title><rect x="74.6635%" y="485" width="0.0875%" height="15" fill="rgb(220,115,12)" fg:x="48650" fg:w="57"/><text x="74.9135%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (57 samples, 0.09%)</title><rect x="74.6635%" y="469" width="0.0875%" height="15" fill="rgb(237,100,13)" fg:x="48650" fg:w="57"/><text x="74.9135%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (57 samples, 0.09%)</title><rect x="74.6635%" y="453" width="0.0875%" height="15" fill="rgb(213,55,26)" fg:x="48650" fg:w="57"/><text x="74.9135%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (57 samples, 0.09%)</title><rect x="74.6635%" y="437" width="0.0875%" height="15" fill="rgb(216,17,4)" fg:x="48650" fg:w="57"/><text x="74.9135%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (57 samples, 0.09%)</title><rect x="74.6635%" y="421" width="0.0875%" height="15" fill="rgb(220,153,47)" fg:x="48650" fg:w="57"/><text x="74.9135%" y="431.50"></text></g><g><title>__libc_read (57 samples, 0.09%)</title><rect x="74.6635%" y="405" width="0.0875%" height="15" fill="rgb(215,131,9)" fg:x="48650" fg:w="57"/><text x="74.9135%" y="415.50"></text></g><g><title>[unknown] (57 samples, 0.09%)</title><rect x="74.6635%" y="389" width="0.0875%" height="15" fill="rgb(233,46,42)" fg:x="48650" fg:w="57"/><text x="74.9135%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (62 samples, 0.10%)</title><rect x="74.6635%" y="549" width="0.0952%" height="15" fill="rgb(226,86,7)" fg:x="48650" fg:w="62"/><text x="74.9135%" y="559.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (62 samples, 0.10%)</title><rect x="74.6635%" y="533" width="0.0952%" height="15" fill="rgb(239,226,21)" fg:x="48650" fg:w="62"/><text x="74.9135%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (62 samples, 0.10%)</title><rect x="74.6635%" y="517" width="0.0952%" height="15" fill="rgb(244,137,22)" fg:x="48650" fg:w="62"/><text x="74.9135%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::fs::File&gt;&gt; (22 samples, 0.03%)</title><rect x="74.7648%" y="549" width="0.0338%" height="15" fill="rgb(211,139,35)" fg:x="48716" fg:w="22"/><text x="75.0148%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (22 samples, 0.03%)</title><rect x="74.7648%" y="533" width="0.0338%" height="15" fill="rgb(214,62,50)" fg:x="48716" fg:w="22"/><text x="75.0148%" y="543.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="74.7648%" y="517" width="0.0338%" height="15" fill="rgb(212,113,44)" fg:x="48716" fg:w="22"/><text x="75.0148%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (22 samples, 0.03%)</title><rect x="74.7648%" y="501" width="0.0338%" height="15" fill="rgb(226,150,43)" fg:x="48716" fg:w="22"/><text x="75.0148%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (22 samples, 0.03%)</title><rect x="74.7648%" y="485" width="0.0338%" height="15" fill="rgb(250,71,37)" fg:x="48716" fg:w="22"/><text x="75.0148%" y="495.50"></text></g><g><title>core::mem::replace (22 samples, 0.03%)</title><rect x="74.7648%" y="469" width="0.0338%" height="15" fill="rgb(219,76,19)" fg:x="48716" fg:w="22"/><text x="75.0148%" y="479.50"></text></g><g><title>core::ptr::write (22 samples, 0.03%)</title><rect x="74.7648%" y="453" width="0.0338%" height="15" fill="rgb(250,39,11)" fg:x="48716" fg:w="22"/><text x="75.0148%" y="463.50"></text></g><g><title>__libc_write (7,882 samples, 12.10%)</title><rect x="74.8707%" y="485" width="12.0966%" height="15" fill="rgb(230,64,31)" fg:x="48785" fg:w="7882"/><text x="75.1207%" y="495.50">__libc_write</text></g><g><title>[unknown] (7,838 samples, 12.03%)</title><rect x="74.9382%" y="469" width="12.0290%" height="15" fill="rgb(208,222,23)" fg:x="48829" fg:w="7838"/><text x="75.1882%" y="479.50">[unknown]</text></g><g><title>[unknown] (7,527 samples, 11.55%)</title><rect x="75.4155%" y="453" width="11.5517%" height="15" fill="rgb(227,125,18)" fg:x="49140" fg:w="7527"/><text x="75.6655%" y="463.50">[unknown]</text></g><g><title>[unknown] (7,004 samples, 10.75%)</title><rect x="76.2182%" y="437" width="10.7491%" height="15" fill="rgb(234,210,9)" fg:x="49663" fg:w="7004"/><text x="76.4682%" y="447.50">[unknown]</text></g><g><title>[unknown] (6,983 samples, 10.72%)</title><rect x="76.2504%" y="421" width="10.7169%" height="15" fill="rgb(217,127,24)" fg:x="49684" fg:w="6983"/><text x="76.5004%" y="431.50">[unknown]</text></g><g><title>[unknown] (6,941 samples, 10.65%)</title><rect x="76.3149%" y="405" width="10.6524%" height="15" fill="rgb(239,141,48)" fg:x="49726" fg:w="6941"/><text x="76.5649%" y="415.50">[unknown]</text></g><g><title>[unknown] (6,841 samples, 10.50%)</title><rect x="76.4683%" y="389" width="10.4989%" height="15" fill="rgb(227,109,8)" fg:x="49826" fg:w="6841"/><text x="76.7183%" y="399.50">[unknown]</text></g><g><title>[unknown] (6,604 samples, 10.14%)</title><rect x="76.8321%" y="373" width="10.1352%" height="15" fill="rgb(235,184,23)" fg:x="50063" fg:w="6604"/><text x="77.0821%" y="383.50">[unknown]</text></g><g><title>[unknown] (6,043 samples, 9.27%)</title><rect x="77.6930%" y="357" width="9.2742%" height="15" fill="rgb(227,226,48)" fg:x="50624" fg:w="6043"/><text x="77.9430%" y="367.50">[unknown]</text></g><g><title>[unknown] (5,654 samples, 8.68%)</title><rect x="78.2900%" y="341" width="8.6772%" height="15" fill="rgb(206,150,11)" fg:x="51013" fg:w="5654"/><text x="78.5400%" y="351.50">[unknown]</text></g><g><title>[unknown] (5,323 samples, 8.17%)</title><rect x="78.7980%" y="325" width="8.1692%" height="15" fill="rgb(254,2,33)" fg:x="51344" fg:w="5323"/><text x="79.0480%" y="335.50">[unknown]</text></g><g><title>[unknown] (4,820 samples, 7.40%)</title><rect x="79.5700%" y="309" width="7.3973%" height="15" fill="rgb(243,160,20)" fg:x="51847" fg:w="4820"/><text x="79.8200%" y="319.50">[unknown]</text></g><g><title>[unknown] (4,282 samples, 6.57%)</title><rect x="80.3956%" y="293" width="6.5716%" height="15" fill="rgb(218,208,30)" fg:x="52385" fg:w="4282"/><text x="80.6456%" y="303.50">[unknown]</text></g><g><title>[unknown] (3,050 samples, 4.68%)</title><rect x="82.2864%" y="277" width="4.6809%" height="15" fill="rgb(224,120,49)" fg:x="53617" fg:w="3050"/><text x="82.5364%" y="287.50">[unkn..</text></g><g><title>[unknown] (2,647 samples, 4.06%)</title><rect x="82.9049%" y="261" width="4.0624%" height="15" fill="rgb(246,12,2)" fg:x="54020" fg:w="2647"/><text x="83.1549%" y="271.50">[unk..</text></g><g><title>[unknown] (1,678 samples, 2.58%)</title><rect x="84.3920%" y="245" width="2.5752%" height="15" fill="rgb(236,117,3)" fg:x="54989" fg:w="1678"/><text x="84.6420%" y="255.50">[u..</text></g><g><title>[unknown] (1,122 samples, 1.72%)</title><rect x="85.2453%" y="229" width="1.7219%" height="15" fill="rgb(216,128,52)" fg:x="55545" fg:w="1122"/><text x="85.4953%" y="239.50"></text></g><g><title>[unknown] (775 samples, 1.19%)</title><rect x="85.7779%" y="213" width="1.1894%" height="15" fill="rgb(246,145,19)" fg:x="55892" fg:w="775"/><text x="86.0279%" y="223.50"></text></g><g><title>[unknown] (712 samples, 1.09%)</title><rect x="85.8746%" y="197" width="1.0927%" height="15" fill="rgb(222,11,46)" fg:x="55955" fg:w="712"/><text x="86.1246%" y="207.50"></text></g><g><title>[unknown] (425 samples, 0.65%)</title><rect x="86.3150%" y="181" width="0.6523%" height="15" fill="rgb(245,82,36)" fg:x="56242" fg:w="425"/><text x="86.5650%" y="191.50"></text></g><g><title>[unknown] (263 samples, 0.40%)</title><rect x="86.5636%" y="165" width="0.4036%" height="15" fill="rgb(250,73,51)" fg:x="56404" fg:w="263"/><text x="86.8136%" y="175.50"></text></g><g><title>[unknown] (143 samples, 0.22%)</title><rect x="86.7478%" y="149" width="0.2195%" height="15" fill="rgb(221,189,23)" fg:x="56524" fg:w="143"/><text x="86.9978%" y="159.50"></text></g><g><title>std::io::Write::write_all (7,950 samples, 12.20%)</title><rect x="74.7986%" y="549" width="12.2009%" height="15" fill="rgb(210,33,7)" fg:x="48738" fg:w="7950"/><text x="75.0486%" y="559.50">std::io::Write::wr..</text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (7,910 samples, 12.14%)</title><rect x="74.8600%" y="533" width="12.1395%" height="15" fill="rgb(210,107,22)" fg:x="48778" fg:w="7910"/><text x="75.1100%" y="543.50">std::os::unix::net..</text></g><g><title>std::sys::unix::net::Socket::write (7,910 samples, 12.14%)</title><rect x="74.8600%" y="517" width="12.1395%" height="15" fill="rgb(222,116,37)" fg:x="48778" fg:w="7910"/><text x="75.1100%" y="527.50">std::sys::unix::ne..</text></g><g><title>std::sys::unix::fd::FileDesc::write (7,910 samples, 12.14%)</title><rect x="74.8600%" y="501" width="12.1395%" height="15" fill="rgb(254,17,48)" fg:x="48778" fg:w="7910"/><text x="75.1100%" y="511.50">std::sys::unix::fd..</text></g><g><title>std::sys::unix::cvt (20 samples, 0.03%)</title><rect x="86.9688%" y="485" width="0.0307%" height="15" fill="rgb(224,36,32)" fg:x="56668" fg:w="20"/><text x="87.2188%" y="495.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (18 samples, 0.03%)</title><rect x="86.9719%" y="469" width="0.0276%" height="15" fill="rgb(232,90,46)" fg:x="56670" fg:w="18"/><text x="87.2219%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::flush (9,814 samples, 15.06%)</title><rect x="71.9394%" y="581" width="15.0616%" height="15" fill="rgb(241,66,40)" fg:x="46875" fg:w="9814"/><text x="72.1894%" y="591.50">&lt;yakvdb::disk::file::Fi..</text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::save (9,253 samples, 14.20%)</title><rect x="72.8004%" y="565" width="14.2006%" height="15" fill="rgb(249,184,29)" fg:x="47436" fg:w="9253"/><text x="73.0504%" y="575.50">yakvdb::disk::file::Fi..</text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::clear (11 samples, 0.02%)</title><rect x="87.0072%" y="565" width="0.0169%" height="15" fill="rgb(231,181,1)" fg:x="56693" fg:w="11"/><text x="87.2572%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="87.0287%" y="325" width="0.0184%" height="15" fill="rgb(224,94,2)" fg:x="56707" fg:w="12"/><text x="87.2787%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="87.0287%" y="309" width="0.0184%" height="15" fill="rgb(229,170,15)" fg:x="56707" fg:w="12"/><text x="87.2787%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.02%)</title><rect x="87.0287%" y="293" width="0.0184%" height="15" fill="rgb(240,127,35)" fg:x="56707" fg:w="12"/><text x="87.2787%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="87.0287%" y="277" width="0.0184%" height="15" fill="rgb(248,196,34)" fg:x="56707" fg:w="12"/><text x="87.2787%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="87.0287%" y="261" width="0.0184%" height="15" fill="rgb(236,137,7)" fg:x="56707" fg:w="12"/><text x="87.2787%" y="271.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.02%)</title><rect x="87.0287%" y="245" width="0.0184%" height="15" fill="rgb(235,127,16)" fg:x="56707" fg:w="12"/><text x="87.2787%" y="255.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.02%)</title><rect x="87.0287%" y="229" width="0.0184%" height="15" fill="rgb(250,192,54)" fg:x="56707" fg:w="12"/><text x="87.2787%" y="239.50"></text></g><g><title>_int_malloc (8 samples, 0.01%)</title><rect x="87.0348%" y="213" width="0.0123%" height="15" fill="rgb(218,98,20)" fg:x="56711" fg:w="8"/><text x="87.2848%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="87.0256%" y="453" width="0.0230%" height="15" fill="rgb(230,176,47)" fg:x="56705" fg:w="15"/><text x="87.2756%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.02%)</title><rect x="87.0256%" y="437" width="0.0230%" height="15" fill="rgb(244,2,33)" fg:x="56705" fg:w="15"/><text x="87.2756%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.02%)</title><rect x="87.0287%" y="421" width="0.0200%" height="15" fill="rgb(231,100,17)" fg:x="56707" fg:w="13"/><text x="87.2787%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::copy::{{closure}} (13 samples, 0.02%)</title><rect x="87.0287%" y="405" width="0.0200%" height="15" fill="rgb(245,23,12)" fg:x="56707" fg:w="13"/><text x="87.2787%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 0.02%)</title><rect x="87.0287%" y="389" width="0.0200%" height="15" fill="rgb(249,55,22)" fg:x="56707" fg:w="13"/><text x="87.2787%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.02%)</title><rect x="87.0287%" y="373" width="0.0200%" height="15" fill="rgb(207,134,9)" fg:x="56707" fg:w="13"/><text x="87.2787%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.02%)</title><rect x="87.0287%" y="357" width="0.0200%" height="15" fill="rgb(218,134,0)" fg:x="56707" fg:w="13"/><text x="87.2787%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.02%)</title><rect x="87.0287%" y="341" width="0.0200%" height="15" fill="rgb(213,212,33)" fg:x="56707" fg:w="13"/><text x="87.2787%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.01%)</title><rect x="87.0486%" y="453" width="0.0107%" height="15" fill="rgb(252,106,18)" fg:x="56720" fg:w="7"/><text x="87.2986%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.01%)</title><rect x="87.0486%" y="437" width="0.0107%" height="15" fill="rgb(208,126,42)" fg:x="56720" fg:w="7"/><text x="87.2986%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.01%)</title><rect x="87.0486%" y="421" width="0.0107%" height="15" fill="rgb(246,175,29)" fg:x="56720" fg:w="7"/><text x="87.2986%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.01%)</title><rect x="87.0486%" y="405" width="0.0107%" height="15" fill="rgb(215,13,50)" fg:x="56720" fg:w="7"/><text x="87.2986%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="87.0486%" y="389" width="0.0107%" height="15" fill="rgb(216,172,15)" fg:x="56720" fg:w="7"/><text x="87.2986%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.01%)</title><rect x="87.0486%" y="373" width="0.0107%" height="15" fill="rgb(212,103,13)" fg:x="56720" fg:w="7"/><text x="87.2986%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.01%)</title><rect x="87.0486%" y="357" width="0.0107%" height="15" fill="rgb(231,171,36)" fg:x="56720" fg:w="7"/><text x="87.2986%" y="367.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.01%)</title><rect x="87.0486%" y="341" width="0.0107%" height="15" fill="rgb(250,123,20)" fg:x="56720" fg:w="7"/><text x="87.2986%" y="351.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.01%)</title><rect x="87.0486%" y="325" width="0.0107%" height="15" fill="rgb(212,53,50)" fg:x="56720" fg:w="7"/><text x="87.2986%" y="335.50"></text></g><g><title>_int_realloc (7 samples, 0.01%)</title><rect x="87.0486%" y="309" width="0.0107%" height="15" fill="rgb(243,54,12)" fg:x="56720" fg:w="7"/><text x="87.2986%" y="319.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::copy (25 samples, 0.04%)</title><rect x="87.0240%" y="565" width="0.0384%" height="15" fill="rgb(234,101,34)" fg:x="56704" fg:w="25"/><text x="87.2740%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (25 samples, 0.04%)</title><rect x="87.0240%" y="549" width="0.0384%" height="15" fill="rgb(254,67,22)" fg:x="56704" fg:w="25"/><text x="87.2740%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (25 samples, 0.04%)</title><rect x="87.0240%" y="533" width="0.0384%" height="15" fill="rgb(250,35,47)" fg:x="56704" fg:w="25"/><text x="87.2740%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.04%)</title><rect x="87.0240%" y="517" width="0.0384%" height="15" fill="rgb(226,126,38)" fg:x="56704" fg:w="25"/><text x="87.2740%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (25 samples, 0.04%)</title><rect x="87.0240%" y="501" width="0.0384%" height="15" fill="rgb(216,138,53)" fg:x="56704" fg:w="25"/><text x="87.2740%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.04%)</title><rect x="87.0240%" y="485" width="0.0384%" height="15" fill="rgb(246,199,43)" fg:x="56704" fg:w="25"/><text x="87.2740%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (25 samples, 0.04%)</title><rect x="87.0240%" y="469" width="0.0384%" height="15" fill="rgb(232,125,11)" fg:x="56704" fg:w="25"/><text x="87.2740%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.02%)</title><rect x="87.0732%" y="565" width="0.0200%" height="15" fill="rgb(218,219,45)" fg:x="56736" fg:w="13"/><text x="87.3232%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.02%)</title><rect x="87.0732%" y="549" width="0.0200%" height="15" fill="rgb(216,102,54)" fg:x="56736" fg:w="13"/><text x="87.3232%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="87.0732%" y="533" width="0.0200%" height="15" fill="rgb(250,228,7)" fg:x="56736" fg:w="13"/><text x="87.3232%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.02%)</title><rect x="87.0732%" y="517" width="0.0200%" height="15" fill="rgb(226,125,25)" fg:x="56736" fg:w="13"/><text x="87.3232%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.02%)</title><rect x="87.0732%" y="501" width="0.0200%" height="15" fill="rgb(224,165,27)" fg:x="56736" fg:w="13"/><text x="87.3232%" y="511.50"></text></g><g><title>_int_free (10 samples, 0.02%)</title><rect x="87.0778%" y="485" width="0.0153%" height="15" fill="rgb(233,86,3)" fg:x="56739" fg:w="10"/><text x="87.3278%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (16 samples, 0.02%)</title><rect x="87.1315%" y="485" width="0.0246%" height="15" fill="rgb(228,116,20)" fg:x="56774" fg:w="16"/><text x="87.3815%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::find::{{closure}} (18 samples, 0.03%)</title><rect x="87.1315%" y="517" width="0.0276%" height="15" fill="rgb(209,192,17)" fg:x="56774" fg:w="18"/><text x="87.3815%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::key (18 samples, 0.03%)</title><rect x="87.1315%" y="501" width="0.0276%" height="15" fill="rgb(224,88,34)" fg:x="56774" fg:w="18"/><text x="87.3815%" y="511.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.03%)</title><rect x="87.1668%" y="469" width="0.0307%" height="15" fill="rgb(233,38,6)" fg:x="56797" fg:w="20"/><text x="87.4168%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (27 samples, 0.04%)</title><rect x="87.1591%" y="517" width="0.0414%" height="15" fill="rgb(212,59,30)" fg:x="56792" fg:w="27"/><text x="87.4091%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (27 samples, 0.04%)</title><rect x="87.1591%" y="501" width="0.0414%" height="15" fill="rgb(213,80,3)" fg:x="56792" fg:w="27"/><text x="87.4091%" y="511.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (27 samples, 0.04%)</title><rect x="87.1591%" y="485" width="0.0414%" height="15" fill="rgb(251,178,7)" fg:x="56792" fg:w="27"/><text x="87.4091%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::ceil (67 samples, 0.10%)</title><rect x="87.0992%" y="549" width="0.1028%" height="15" fill="rgb(213,154,26)" fg:x="56753" fg:w="67"/><text x="87.3492%" y="559.50"></text></g><g><title>yakvdb::util::bsearch::bsearch (55 samples, 0.08%)</title><rect x="87.1177%" y="533" width="0.0844%" height="15" fill="rgb(238,165,49)" fg:x="56765" fg:w="55"/><text x="87.3677%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::len (9 samples, 0.01%)</title><rect x="87.2573%" y="373" width="0.0138%" height="15" fill="rgb(248,91,46)" fg:x="56856" fg:w="9"/><text x="87.5073%" y="383.50"></text></g><g><title>yakvdb::disk::block::get_u32 (7 samples, 0.01%)</title><rect x="87.2604%" y="357" width="0.0107%" height="15" fill="rgb(244,21,52)" fg:x="56858" fg:w="7"/><text x="87.5104%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (9 samples, 0.01%)</title><rect x="87.2757%" y="357" width="0.0138%" height="15" fill="rgb(247,122,20)" fg:x="56868" fg:w="9"/><text x="87.5257%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (9 samples, 0.01%)</title><rect x="87.2757%" y="341" width="0.0138%" height="15" fill="rgb(218,27,9)" fg:x="56868" fg:w="9"/><text x="87.5257%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (9 samples, 0.01%)</title><rect x="87.2757%" y="325" width="0.0138%" height="15" fill="rgb(246,7,6)" fg:x="56868" fg:w="9"/><text x="87.5257%" y="335.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (66 samples, 0.10%)</title><rect x="87.2036%" y="421" width="0.1013%" height="15" fill="rgb(227,135,54)" fg:x="56821" fg:w="66"/><text x="87.4536%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (46 samples, 0.07%)</title><rect x="87.2343%" y="405" width="0.0706%" height="15" fill="rgb(247,14,11)" fg:x="56841" fg:w="46"/><text x="87.4843%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (45 samples, 0.07%)</title><rect x="87.2358%" y="389" width="0.0691%" height="15" fill="rgb(206,149,34)" fg:x="56842" fg:w="45"/><text x="87.4858%" y="399.50"></text></g><g><title>yakvdb::disk::block::get_u32 (22 samples, 0.03%)</title><rect x="87.2711%" y="373" width="0.0338%" height="15" fill="rgb(227,228,4)" fg:x="56865" fg:w="22"/><text x="87.5211%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.01%)</title><rect x="87.2926%" y="357" width="0.0123%" height="15" fill="rgb(238,218,28)" fg:x="56879" fg:w="8"/><text x="87.5426%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.01%)</title><rect x="87.2926%" y="341" width="0.0123%" height="15" fill="rgb(252,86,40)" fg:x="56879" fg:w="8"/><text x="87.5426%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (70 samples, 0.11%)</title><rect x="87.2036%" y="469" width="0.1074%" height="15" fill="rgb(251,225,11)" fg:x="56821" fg:w="70"/><text x="87.4536%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (70 samples, 0.11%)</title><rect x="87.2036%" y="453" width="0.1074%" height="15" fill="rgb(206,46,49)" fg:x="56821" fg:w="70"/><text x="87.4536%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (70 samples, 0.11%)</title><rect x="87.2036%" y="437" width="0.1074%" height="15" fill="rgb(245,128,24)" fg:x="56821" fg:w="70"/><text x="87.4536%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::fits (73 samples, 0.11%)</title><rect x="87.2021%" y="549" width="0.1120%" height="15" fill="rgb(219,177,34)" fg:x="56820" fg:w="73"/><text x="87.4521%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (73 samples, 0.11%)</title><rect x="87.2021%" y="533" width="0.1120%" height="15" fill="rgb(218,60,48)" fg:x="56820" fg:w="73"/><text x="87.4521%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (72 samples, 0.11%)</title><rect x="87.2036%" y="517" width="0.1105%" height="15" fill="rgb(221,11,5)" fg:x="56821" fg:w="72"/><text x="87.4536%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (72 samples, 0.11%)</title><rect x="87.2036%" y="501" width="0.1105%" height="15" fill="rgb(220,148,13)" fg:x="56821" fg:w="72"/><text x="87.4536%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (72 samples, 0.11%)</title><rect x="87.2036%" y="485" width="0.1105%" height="15" fill="rgb(210,16,3)" fg:x="56821" fg:w="72"/><text x="87.4536%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.02%)</title><rect x="87.3172%" y="533" width="0.0200%" height="15" fill="rgb(236,80,2)" fg:x="56895" fg:w="13"/><text x="87.5672%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.02%)</title><rect x="87.3172%" y="517" width="0.0200%" height="15" fill="rgb(239,129,19)" fg:x="56895" fg:w="13"/><text x="87.5672%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.02%)</title><rect x="87.3172%" y="501" width="0.0200%" height="15" fill="rgb(220,106,35)" fg:x="56895" fg:w="13"/><text x="87.5672%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.02%)</title><rect x="87.3172%" y="485" width="0.0200%" height="15" fill="rgb(252,139,45)" fg:x="56895" fg:w="13"/><text x="87.5672%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.02%)</title><rect x="87.3187%" y="469" width="0.0184%" height="15" fill="rgb(229,8,36)" fg:x="56896" fg:w="12"/><text x="87.5687%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.02%)</title><rect x="87.3187%" y="453" width="0.0184%" height="15" fill="rgb(230,126,33)" fg:x="56896" fg:w="12"/><text x="87.5687%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.02%)</title><rect x="87.3187%" y="437" width="0.0184%" height="15" fill="rgb(239,140,21)" fg:x="56896" fg:w="12"/><text x="87.5687%" y="447.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.02%)</title><rect x="87.3187%" y="421" width="0.0184%" height="15" fill="rgb(254,104,9)" fg:x="56896" fg:w="12"/><text x="87.5687%" y="431.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.02%)</title><rect x="87.3187%" y="405" width="0.0184%" height="15" fill="rgb(239,52,14)" fg:x="56896" fg:w="12"/><text x="87.5687%" y="415.50"></text></g><g><title>_int_realloc (12 samples, 0.02%)</title><rect x="87.3187%" y="389" width="0.0184%" height="15" fill="rgb(208,227,44)" fg:x="56896" fg:w="12"/><text x="87.5687%" y="399.50"></text></g><g><title>_int_malloc (12 samples, 0.02%)</title><rect x="87.3187%" y="373" width="0.0184%" height="15" fill="rgb(246,18,19)" fg:x="56896" fg:w="12"/><text x="87.5687%" y="383.50"></text></g><g><title>malloc_consolidate (9 samples, 0.01%)</title><rect x="87.3233%" y="357" width="0.0138%" height="15" fill="rgb(235,228,25)" fg:x="56899" fg:w="9"/><text x="87.5733%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (19 samples, 0.03%)</title><rect x="87.3141%" y="549" width="0.0292%" height="15" fill="rgb(240,156,20)" fg:x="56893" fg:w="19"/><text x="87.5641%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (108 samples, 0.17%)</title><rect x="87.3586%" y="453" width="0.1657%" height="15" fill="rgb(224,8,20)" fg:x="56922" fg:w="108"/><text x="87.6086%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (108 samples, 0.17%)</title><rect x="87.3586%" y="437" width="0.1657%" height="15" fill="rgb(214,12,52)" fg:x="56922" fg:w="108"/><text x="87.6086%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (108 samples, 0.17%)</title><rect x="87.3586%" y="421" width="0.1657%" height="15" fill="rgb(211,220,47)" fg:x="56922" fg:w="108"/><text x="87.6086%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (106 samples, 0.16%)</title><rect x="87.3617%" y="405" width="0.1627%" height="15" fill="rgb(250,173,5)" fg:x="56924" fg:w="106"/><text x="87.6117%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (36 samples, 0.06%)</title><rect x="87.4691%" y="389" width="0.0552%" height="15" fill="rgb(250,125,52)" fg:x="56994" fg:w="36"/><text x="87.7191%" y="399.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (36 samples, 0.06%)</title><rect x="87.4691%" y="373" width="0.0552%" height="15" fill="rgb(209,133,18)" fg:x="56994" fg:w="36"/><text x="87.7191%" y="383.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (33 samples, 0.05%)</title><rect x="87.4737%" y="357" width="0.0506%" height="15" fill="rgb(216,173,22)" fg:x="56997" fg:w="33"/><text x="87.7237%" y="367.50"></text></g><g><title>yakvdb::disk::block::get_u32 (20 samples, 0.03%)</title><rect x="87.4937%" y="341" width="0.0307%" height="15" fill="rgb(205,3,22)" fg:x="57010" fg:w="20"/><text x="87.7437%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.01%)</title><rect x="87.5121%" y="325" width="0.0123%" height="15" fill="rgb(248,22,20)" fg:x="57022" fg:w="8"/><text x="87.7621%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.01%)</title><rect x="87.5121%" y="309" width="0.0123%" height="15" fill="rgb(233,6,29)" fg:x="57022" fg:w="8"/><text x="87.7621%" y="319.50"></text></g><g><title>__GI___libc_realloc (68 samples, 0.10%)</title><rect x="87.5320%" y="325" width="0.1044%" height="15" fill="rgb(240,22,54)" fg:x="57035" fg:w="68"/><text x="87.7820%" y="335.50"></text></g><g><title>_int_realloc (63 samples, 0.10%)</title><rect x="87.5397%" y="309" width="0.0967%" height="15" fill="rgb(231,133,32)" fg:x="57040" fg:w="63"/><text x="87.7897%" y="319.50"></text></g><g><title>_int_malloc (48 samples, 0.07%)</title><rect x="87.5627%" y="293" width="0.0737%" height="15" fill="rgb(248,193,4)" fg:x="57055" fg:w="48"/><text x="87.8127%" y="303.50"></text></g><g><title>malloc_consolidate (14 samples, 0.02%)</title><rect x="87.6149%" y="277" width="0.0215%" height="15" fill="rgb(211,178,46)" fg:x="57089" fg:w="14"/><text x="87.8649%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (69 samples, 0.11%)</title><rect x="87.5320%" y="373" width="0.1059%" height="15" fill="rgb(224,5,42)" fg:x="57035" fg:w="69"/><text x="87.7820%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (69 samples, 0.11%)</title><rect x="87.5320%" y="357" width="0.1059%" height="15" fill="rgb(239,176,25)" fg:x="57035" fg:w="69"/><text x="87.7820%" y="367.50"></text></g><g><title>alloc::alloc::realloc (69 samples, 0.11%)</title><rect x="87.5320%" y="341" width="0.1059%" height="15" fill="rgb(245,187,50)" fg:x="57035" fg:w="69"/><text x="87.7820%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (70 samples, 0.11%)</title><rect x="87.5320%" y="389" width="0.1074%" height="15" fill="rgb(248,24,15)" fg:x="57035" fg:w="70"/><text x="87.7820%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (76 samples, 0.12%)</title><rect x="87.5244%" y="453" width="0.1166%" height="15" fill="rgb(205,166,13)" fg:x="57030" fg:w="76"/><text x="87.7744%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (76 samples, 0.12%)</title><rect x="87.5244%" y="437" width="0.1166%" height="15" fill="rgb(208,114,23)" fg:x="57030" fg:w="76"/><text x="87.7744%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (76 samples, 0.12%)</title><rect x="87.5244%" y="421" width="0.1166%" height="15" fill="rgb(239,127,18)" fg:x="57030" fg:w="76"/><text x="87.7744%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (76 samples, 0.12%)</title><rect x="87.5244%" y="405" width="0.1166%" height="15" fill="rgb(219,154,28)" fg:x="57030" fg:w="76"/><text x="87.7744%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (203 samples, 0.31%)</title><rect x="87.3525%" y="485" width="0.3115%" height="15" fill="rgb(225,157,23)" fg:x="56918" fg:w="203"/><text x="87.6025%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (203 samples, 0.31%)</title><rect x="87.3525%" y="469" width="0.3115%" height="15" fill="rgb(219,8,6)" fg:x="56918" fg:w="203"/><text x="87.6025%" y="479.50"></text></g><g><title>core::ptr::write (15 samples, 0.02%)</title><rect x="87.6410%" y="453" width="0.0230%" height="15" fill="rgb(212,47,6)" fg:x="57106" fg:w="15"/><text x="87.8910%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (209 samples, 0.32%)</title><rect x="87.3479%" y="549" width="0.3208%" height="15" fill="rgb(224,190,4)" fg:x="56915" fg:w="209"/><text x="87.5979%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (209 samples, 0.32%)</title><rect x="87.3479%" y="533" width="0.3208%" height="15" fill="rgb(239,183,29)" fg:x="56915" fg:w="209"/><text x="87.5979%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (208 samples, 0.32%)</title><rect x="87.3494%" y="517" width="0.3192%" height="15" fill="rgb(213,57,7)" fg:x="56916" fg:w="208"/><text x="87.5994%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (207 samples, 0.32%)</title><rect x="87.3509%" y="501" width="0.3177%" height="15" fill="rgb(216,148,1)" fg:x="56917" fg:w="207"/><text x="87.6009%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (8 samples, 0.01%)</title><rect x="87.6855%" y="421" width="0.0123%" height="15" fill="rgb(236,182,29)" fg:x="57135" fg:w="8"/><text x="87.9355%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="87.6855%" y="405" width="0.0123%" height="15" fill="rgb(244,120,48)" fg:x="57135" fg:w="8"/><text x="87.9355%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (26 samples, 0.04%)</title><rect x="87.6717%" y="501" width="0.0399%" height="15" fill="rgb(206,71,34)" fg:x="57126" fg:w="26"/><text x="87.9217%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (26 samples, 0.04%)</title><rect x="87.6717%" y="485" width="0.0399%" height="15" fill="rgb(242,32,6)" fg:x="57126" fg:w="26"/><text x="87.9217%" y="495.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (26 samples, 0.04%)</title><rect x="87.6717%" y="469" width="0.0399%" height="15" fill="rgb(241,35,3)" fg:x="57126" fg:w="26"/><text x="87.9217%" y="479.50"></text></g><g><title>yakvdb::disk::block::put_slot (24 samples, 0.04%)</title><rect x="87.6748%" y="453" width="0.0368%" height="15" fill="rgb(222,62,19)" fg:x="57128" fg:w="24"/><text x="87.9248%" y="463.50"></text></g><g><title>yakvdb::disk::block::put_u32 (23 samples, 0.04%)</title><rect x="87.6763%" y="437" width="0.0353%" height="15" fill="rgb(223,110,41)" fg:x="57129" fg:w="23"/><text x="87.9263%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (9 samples, 0.01%)</title><rect x="87.6978%" y="421" width="0.0138%" height="15" fill="rgb(208,224,4)" fg:x="57143" fg:w="9"/><text x="87.9478%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (9 samples, 0.01%)</title><rect x="87.6978%" y="405" width="0.0138%" height="15" fill="rgb(241,137,19)" fg:x="57143" fg:w="9"/><text x="87.9478%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.01%)</title><rect x="87.7116%" y="405" width="0.0123%" height="15" fill="rgb(244,24,17)" fg:x="57152" fg:w="8"/><text x="87.9616%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="87.7116%" y="389" width="0.0123%" height="15" fill="rgb(245,178,49)" fg:x="57152" fg:w="8"/><text x="87.9616%" y="399.50"></text></g><g><title>_int_free (8 samples, 0.01%)</title><rect x="87.7116%" y="373" width="0.0123%" height="15" fill="rgb(219,160,38)" fg:x="57152" fg:w="8"/><text x="87.9616%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (38 samples, 0.06%)</title><rect x="87.6686%" y="549" width="0.0583%" height="15" fill="rgb(228,137,14)" fg:x="57124" fg:w="38"/><text x="87.9186%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38 samples, 0.06%)</title><rect x="87.6686%" y="533" width="0.0583%" height="15" fill="rgb(237,134,11)" fg:x="57124" fg:w="38"/><text x="87.9186%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (38 samples, 0.06%)</title><rect x="87.6686%" y="517" width="0.0583%" height="15" fill="rgb(211,126,44)" fg:x="57124" fg:w="38"/><text x="87.9186%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;yakvdb::api::page::Slot&gt;&gt; (10 samples, 0.02%)</title><rect x="87.7116%" y="501" width="0.0153%" height="15" fill="rgb(226,171,33)" fg:x="57152" fg:w="10"/><text x="87.9616%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="87.7116%" y="485" width="0.0153%" height="15" fill="rgb(253,99,13)" fg:x="57152" fg:w="10"/><text x="87.9616%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;yakvdb::api::page::Slot,alloc::alloc::Global&gt;&gt; (10 samples, 0.02%)</title><rect x="87.7116%" y="469" width="0.0153%" height="15" fill="rgb(244,48,7)" fg:x="57152" fg:w="10"/><text x="87.9616%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="87.7116%" y="453" width="0.0153%" height="15" fill="rgb(244,217,54)" fg:x="57152" fg:w="10"/><text x="87.9616%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;yakvdb::api::page::Slot&gt;&gt; (10 samples, 0.02%)</title><rect x="87.7116%" y="437" width="0.0153%" height="15" fill="rgb(224,15,18)" fg:x="57152" fg:w="10"/><text x="87.9616%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="87.7116%" y="421" width="0.0153%" height="15" fill="rgb(244,99,12)" fg:x="57152" fg:w="10"/><text x="87.9616%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.02%)</title><rect x="87.7269%" y="501" width="0.0153%" height="15" fill="rgb(233,226,8)" fg:x="57162" fg:w="10"/><text x="87.9769%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.02%)</title><rect x="87.7269%" y="485" width="0.0153%" height="15" fill="rgb(229,211,3)" fg:x="57162" fg:w="10"/><text x="87.9769%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (11 samples, 0.02%)</title><rect x="87.7269%" y="549" width="0.0169%" height="15" fill="rgb(216,140,21)" fg:x="57162" fg:w="11"/><text x="87.9769%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (11 samples, 0.02%)</title><rect x="87.7269%" y="533" width="0.0169%" height="15" fill="rgb(234,122,30)" fg:x="57162" fg:w="11"/><text x="87.9769%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (11 samples, 0.02%)</title><rect x="87.7269%" y="517" width="0.0169%" height="15" fill="rgb(236,25,46)" fg:x="57162" fg:w="11"/><text x="87.9769%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::merge (485 samples, 0.74%)</title><rect x="87.0010%" y="581" width="0.7443%" height="15" fill="rgb(217,52,54)" fg:x="56689" fg:w="485"/><text x="87.2510%" y="591.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry (425 samples, 0.65%)</title><rect x="87.0931%" y="565" width="0.6523%" height="15" fill="rgb(222,29,26)" fg:x="56749" fg:w="425"/><text x="87.3431%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.03%)</title><rect x="87.7730%" y="389" width="0.0276%" height="15" fill="rgb(216,177,29)" fg:x="57192" fg:w="18"/><text x="88.0230%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (33 samples, 0.05%)</title><rect x="87.7576%" y="453" width="0.0506%" height="15" fill="rgb(247,136,51)" fg:x="57182" fg:w="33"/><text x="88.0076%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (33 samples, 0.05%)</title><rect x="87.7576%" y="437" width="0.0506%" height="15" fill="rgb(231,47,47)" fg:x="57182" fg:w="33"/><text x="88.0076%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (33 samples, 0.05%)</title><rect x="87.7576%" y="421" width="0.0506%" height="15" fill="rgb(211,192,36)" fg:x="57182" fg:w="33"/><text x="88.0076%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (25 samples, 0.04%)</title><rect x="87.7699%" y="405" width="0.0384%" height="15" fill="rgb(229,156,32)" fg:x="57190" fg:w="25"/><text x="88.0199%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (34 samples, 0.05%)</title><rect x="87.7576%" y="485" width="0.0522%" height="15" fill="rgb(248,213,20)" fg:x="57182" fg:w="34"/><text x="88.0076%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (34 samples, 0.05%)</title><rect x="87.7576%" y="469" width="0.0522%" height="15" fill="rgb(217,64,7)" fg:x="57182" fg:w="34"/><text x="88.0076%" y="479.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.01%)</title><rect x="87.8221%" y="421" width="0.0107%" height="15" fill="rgb(232,142,8)" fg:x="57224" fg:w="7"/><text x="88.0721%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (7 samples, 0.01%)</title><rect x="87.8221%" y="405" width="0.0107%" height="15" fill="rgb(224,92,44)" fg:x="57224" fg:w="7"/><text x="88.0721%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.01%)</title><rect x="87.8221%" y="437" width="0.0123%" height="15" fill="rgb(214,169,17)" fg:x="57224" fg:w="8"/><text x="88.0721%" y="447.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (56 samples, 0.09%)</title><rect x="87.7546%" y="549" width="0.0859%" height="15" fill="rgb(210,59,37)" fg:x="57180" fg:w="56"/><text x="88.0046%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (56 samples, 0.09%)</title><rect x="87.7546%" y="533" width="0.0859%" height="15" fill="rgb(214,116,48)" fg:x="57180" fg:w="56"/><text x="88.0046%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (56 samples, 0.09%)</title><rect x="87.7546%" y="517" width="0.0859%" height="15" fill="rgb(244,191,6)" fg:x="57180" fg:w="56"/><text x="88.0046%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (56 samples, 0.09%)</title><rect x="87.7546%" y="501" width="0.0859%" height="15" fill="rgb(241,50,52)" fg:x="57180" fg:w="56"/><text x="88.0046%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (20 samples, 0.03%)</title><rect x="87.8098%" y="485" width="0.0307%" height="15" fill="rgb(236,75,39)" fg:x="57216" fg:w="20"/><text x="88.0598%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.03%)</title><rect x="87.8098%" y="469" width="0.0307%" height="15" fill="rgb(236,99,0)" fg:x="57216" fg:w="20"/><text x="88.0598%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (20 samples, 0.03%)</title><rect x="87.8098%" y="453" width="0.0307%" height="15" fill="rgb(207,202,15)" fg:x="57216" fg:w="20"/><text x="88.0598%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (64 samples, 0.10%)</title><rect x="87.7500%" y="565" width="0.0982%" height="15" fill="rgb(233,207,14)" fg:x="57177" fg:w="64"/><text x="88.0000%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.01%)</title><rect x="87.8589%" y="389" width="0.0138%" height="15" fill="rgb(226,27,51)" fg:x="57248" fg:w="9"/><text x="88.1089%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="87.8605%" y="373" width="0.0123%" height="15" fill="rgb(206,104,42)" fg:x="57249" fg:w="8"/><text x="88.1105%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.01%)</title><rect x="87.8789%" y="373" width="0.0107%" height="15" fill="rgb(212,225,4)" fg:x="57261" fg:w="7"/><text x="88.1289%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.04%)</title><rect x="87.8543%" y="437" width="0.0384%" height="15" fill="rgb(233,96,42)" fg:x="57245" fg:w="25"/><text x="88.1043%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (25 samples, 0.04%)</title><rect x="87.8543%" y="421" width="0.0384%" height="15" fill="rgb(229,21,32)" fg:x="57245" fg:w="25"/><text x="88.1043%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (25 samples, 0.04%)</title><rect x="87.8543%" y="405" width="0.0384%" height="15" fill="rgb(226,216,24)" fg:x="57245" fg:w="25"/><text x="88.1043%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.02%)</title><rect x="87.8727%" y="389" width="0.0200%" height="15" fill="rgb(221,163,17)" fg:x="57257" fg:w="13"/><text x="88.1227%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.04%)</title><rect x="87.8528%" y="469" width="0.0445%" height="15" fill="rgb(216,216,42)" fg:x="57244" fg:w="29"/><text x="88.1028%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29 samples, 0.04%)</title><rect x="87.8528%" y="453" width="0.0445%" height="15" fill="rgb(240,118,7)" fg:x="57244" fg:w="29"/><text x="88.1028%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.02%)</title><rect x="87.9188%" y="405" width="0.0184%" height="15" fill="rgb(221,67,37)" fg:x="57287" fg:w="12"/><text x="88.1688%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (12 samples, 0.02%)</title><rect x="87.9188%" y="389" width="0.0184%" height="15" fill="rgb(241,32,44)" fg:x="57287" fg:w="12"/><text x="88.1688%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (16 samples, 0.02%)</title><rect x="87.9188%" y="421" width="0.0246%" height="15" fill="rgb(235,204,43)" fg:x="57287" fg:w="16"/><text x="88.1688%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (67 samples, 0.10%)</title><rect x="87.8528%" y="517" width="0.1028%" height="15" fill="rgb(213,116,10)" fg:x="57244" fg:w="67"/><text x="88.1028%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (67 samples, 0.10%)</title><rect x="87.8528%" y="501" width="0.1028%" height="15" fill="rgb(239,15,48)" fg:x="57244" fg:w="67"/><text x="88.1028%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (67 samples, 0.10%)</title><rect x="87.8528%" y="485" width="0.1028%" height="15" fill="rgb(207,123,36)" fg:x="57244" fg:w="67"/><text x="88.1028%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (38 samples, 0.06%)</title><rect x="87.8973%" y="469" width="0.0583%" height="15" fill="rgb(209,103,30)" fg:x="57273" fg:w="38"/><text x="88.1473%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.06%)</title><rect x="87.8973%" y="453" width="0.0583%" height="15" fill="rgb(238,100,19)" fg:x="57273" fg:w="38"/><text x="88.1473%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (38 samples, 0.06%)</title><rect x="87.8973%" y="437" width="0.0583%" height="15" fill="rgb(244,30,14)" fg:x="57273" fg:w="38"/><text x="88.1473%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.02%)</title><rect x="87.9817%" y="373" width="0.0184%" height="15" fill="rgb(249,174,6)" fg:x="57328" fg:w="12"/><text x="88.2317%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.03%)</title><rect x="87.9802%" y="389" width="0.0261%" height="15" fill="rgb(235,213,41)" fg:x="57327" fg:w="17"/><text x="88.2302%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (46 samples, 0.07%)</title><rect x="87.9725%" y="437" width="0.0706%" height="15" fill="rgb(213,118,6)" fg:x="57322" fg:w="46"/><text x="88.2225%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (46 samples, 0.07%)</title><rect x="87.9725%" y="421" width="0.0706%" height="15" fill="rgb(235,44,51)" fg:x="57322" fg:w="46"/><text x="88.2225%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (46 samples, 0.07%)</title><rect x="87.9725%" y="405" width="0.0706%" height="15" fill="rgb(217,9,53)" fg:x="57322" fg:w="46"/><text x="88.2225%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.04%)</title><rect x="88.0063%" y="389" width="0.0368%" height="15" fill="rgb(237,172,34)" fg:x="57344" fg:w="24"/><text x="88.2563%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (23 samples, 0.04%)</title><rect x="88.0078%" y="373" width="0.0353%" height="15" fill="rgb(206,206,11)" fg:x="57345" fg:w="23"/><text x="88.2578%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (51 samples, 0.08%)</title><rect x="87.9725%" y="469" width="0.0783%" height="15" fill="rgb(214,149,29)" fg:x="57322" fg:w="51"/><text x="88.2225%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (51 samples, 0.08%)</title><rect x="87.9725%" y="453" width="0.0783%" height="15" fill="rgb(208,123,3)" fg:x="57322" fg:w="51"/><text x="88.2225%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (8 samples, 0.01%)</title><rect x="88.0646%" y="421" width="0.0123%" height="15" fill="rgb(229,126,4)" fg:x="57382" fg:w="8"/><text x="88.3146%" y="431.50"></text></g><g><title>hashbrown::raw::h2 (8 samples, 0.01%)</title><rect x="88.0769%" y="421" width="0.0123%" height="15" fill="rgb(222,92,36)" fg:x="57390" fg:w="8"/><text x="88.3269%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (94 samples, 0.14%)</title><rect x="87.9556%" y="517" width="0.1443%" height="15" fill="rgb(216,39,41)" fg:x="57311" fg:w="94"/><text x="88.2056%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (94 samples, 0.14%)</title><rect x="87.9556%" y="501" width="0.1443%" height="15" fill="rgb(253,127,28)" fg:x="57311" fg:w="94"/><text x="88.2056%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (91 samples, 0.14%)</title><rect x="87.9602%" y="485" width="0.1397%" height="15" fill="rgb(249,152,51)" fg:x="57314" fg:w="91"/><text x="88.2102%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (32 samples, 0.05%)</title><rect x="88.0508%" y="469" width="0.0491%" height="15" fill="rgb(209,123,42)" fg:x="57373" fg:w="32"/><text x="88.3008%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (32 samples, 0.05%)</title><rect x="88.0508%" y="453" width="0.0491%" height="15" fill="rgb(241,118,22)" fg:x="57373" fg:w="32"/><text x="88.3008%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (32 samples, 0.05%)</title><rect x="88.0508%" y="437" width="0.0491%" height="15" fill="rgb(208,25,7)" fg:x="57373" fg:w="32"/><text x="88.3008%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (13 samples, 0.02%)</title><rect x="88.1244%" y="501" width="0.0200%" height="15" fill="rgb(243,144,39)" fg:x="57421" fg:w="13"/><text x="88.3744%" y="511.50"></text></g><g><title>core::intrinsics::copy (10 samples, 0.02%)</title><rect x="88.1290%" y="485" width="0.0153%" height="15" fill="rgb(250,50,5)" fg:x="57424" fg:w="10"/><text x="88.3790%" y="495.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (7 samples, 0.01%)</title><rect x="88.1336%" y="469" width="0.0107%" height="15" fill="rgb(207,67,11)" fg:x="57427" fg:w="7"/><text x="88.3836%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (42 samples, 0.06%)</title><rect x="88.1797%" y="453" width="0.0645%" height="15" fill="rgb(245,204,40)" fg:x="57457" fg:w="42"/><text x="88.4297%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (30 samples, 0.05%)</title><rect x="88.1981%" y="437" width="0.0460%" height="15" fill="rgb(238,228,24)" fg:x="57469" fg:w="30"/><text x="88.4481%" y="447.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (30 samples, 0.05%)</title><rect x="88.1981%" y="421" width="0.0460%" height="15" fill="rgb(217,116,22)" fg:x="57469" fg:w="30"/><text x="88.4481%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (30 samples, 0.05%)</title><rect x="88.1981%" y="405" width="0.0460%" height="15" fill="rgb(234,98,12)" fg:x="57469" fg:w="30"/><text x="88.4481%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (30 samples, 0.05%)</title><rect x="88.1981%" y="389" width="0.0460%" height="15" fill="rgb(242,170,50)" fg:x="57469" fg:w="30"/><text x="88.4481%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (30 samples, 0.05%)</title><rect x="88.1981%" y="373" width="0.0460%" height="15" fill="rgb(235,7,5)" fg:x="57469" fg:w="30"/><text x="88.4481%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (94 samples, 0.14%)</title><rect x="88.1536%" y="501" width="0.1443%" height="15" fill="rgb(241,114,28)" fg:x="57440" fg:w="94"/><text x="88.4036%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (94 samples, 0.14%)</title><rect x="88.1536%" y="485" width="0.1443%" height="15" fill="rgb(246,112,42)" fg:x="57440" fg:w="94"/><text x="88.4036%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (94 samples, 0.14%)</title><rect x="88.1536%" y="469" width="0.1443%" height="15" fill="rgb(248,228,14)" fg:x="57440" fg:w="94"/><text x="88.4036%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.05%)</title><rect x="88.2441%" y="453" width="0.0537%" height="15" fill="rgb(208,133,18)" fg:x="57499" fg:w="35"/><text x="88.4941%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;alloc::vec::Vec&lt;u32&gt;&gt;&gt; (22 samples, 0.03%)</title><rect x="88.2979%" y="501" width="0.0338%" height="15" fill="rgb(207,35,49)" fg:x="57534" fg:w="22"/><text x="88.5479%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (22 samples, 0.03%)</title><rect x="88.2979%" y="485" width="0.0338%" height="15" fill="rgb(205,68,36)" fg:x="57534" fg:w="22"/><text x="88.5479%" y="495.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="88.2979%" y="469" width="0.0338%" height="15" fill="rgb(245,62,40)" fg:x="57534" fg:w="22"/><text x="88.5479%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (22 samples, 0.03%)</title><rect x="88.2979%" y="453" width="0.0338%" height="15" fill="rgb(228,27,24)" fg:x="57534" fg:w="22"/><text x="88.5479%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (22 samples, 0.03%)</title><rect x="88.2979%" y="437" width="0.0338%" height="15" fill="rgb(253,19,12)" fg:x="57534" fg:w="22"/><text x="88.5479%" y="447.50"></text></g><g><title>core::mem::replace (22 samples, 0.03%)</title><rect x="88.2979%" y="421" width="0.0338%" height="15" fill="rgb(232,28,20)" fg:x="57534" fg:w="22"/><text x="88.5479%" y="431.50"></text></g><g><title>core::ptr::write (22 samples, 0.03%)</title><rect x="88.2979%" y="405" width="0.0338%" height="15" fill="rgb(218,35,51)" fg:x="57534" fg:w="22"/><text x="88.5479%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.01%)</title><rect x="88.3347%" y="373" width="0.0138%" height="15" fill="rgb(212,90,40)" fg:x="57558" fg:w="9"/><text x="88.5847%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (20 samples, 0.03%)</title><rect x="88.3562%" y="357" width="0.0307%" height="15" fill="rgb(220,172,12)" fg:x="57572" fg:w="20"/><text x="88.6062%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (35 samples, 0.05%)</title><rect x="88.3347%" y="421" width="0.0537%" height="15" fill="rgb(226,159,20)" fg:x="57558" fg:w="35"/><text x="88.5847%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (35 samples, 0.05%)</title><rect x="88.3347%" y="405" width="0.0537%" height="15" fill="rgb(234,205,16)" fg:x="57558" fg:w="35"/><text x="88.5847%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (35 samples, 0.05%)</title><rect x="88.3347%" y="389" width="0.0537%" height="15" fill="rgb(207,9,39)" fg:x="57558" fg:w="35"/><text x="88.5847%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (26 samples, 0.04%)</title><rect x="88.3485%" y="373" width="0.0399%" height="15" fill="rgb(249,143,15)" fg:x="57567" fg:w="26"/><text x="88.5985%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (41 samples, 0.06%)</title><rect x="88.3316%" y="453" width="0.0629%" height="15" fill="rgb(253,133,29)" fg:x="57556" fg:w="41"/><text x="88.5816%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (41 samples, 0.06%)</title><rect x="88.3316%" y="437" width="0.0629%" height="15" fill="rgb(221,187,0)" fg:x="57556" fg:w="41"/><text x="88.5816%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (10 samples, 0.02%)</title><rect x="88.4130%" y="405" width="0.0153%" height="15" fill="rgb(205,204,26)" fg:x="57609" fg:w="10"/><text x="88.6630%" y="415.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (391 samples, 0.60%)</title><rect x="87.8482%" y="565" width="0.6001%" height="15" fill="rgb(224,68,54)" fg:x="57241" fg:w="391"/><text x="88.0982%" y="575.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (391 samples, 0.60%)</title><rect x="87.8482%" y="549" width="0.6001%" height="15" fill="rgb(209,67,4)" fg:x="57241" fg:w="391"/><text x="88.0982%" y="559.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (391 samples, 0.60%)</title><rect x="87.8482%" y="533" width="0.6001%" height="15" fill="rgb(228,229,18)" fg:x="57241" fg:w="391"/><text x="88.0982%" y="543.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (227 samples, 0.35%)</title><rect x="88.0999%" y="517" width="0.3484%" height="15" fill="rgb(231,89,13)" fg:x="57405" fg:w="227"/><text x="88.3499%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (76 samples, 0.12%)</title><rect x="88.3316%" y="501" width="0.1166%" height="15" fill="rgb(210,182,18)" fg:x="57556" fg:w="76"/><text x="88.5816%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (76 samples, 0.12%)</title><rect x="88.3316%" y="485" width="0.1166%" height="15" fill="rgb(240,105,2)" fg:x="57556" fg:w="76"/><text x="88.5816%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (76 samples, 0.12%)</title><rect x="88.3316%" y="469" width="0.1166%" height="15" fill="rgb(207,170,50)" fg:x="57556" fg:w="76"/><text x="88.5816%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (35 samples, 0.05%)</title><rect x="88.3945%" y="453" width="0.0537%" height="15" fill="rgb(232,133,24)" fg:x="57597" fg:w="35"/><text x="88.6445%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (35 samples, 0.05%)</title><rect x="88.3945%" y="437" width="0.0537%" height="15" fill="rgb(235,166,27)" fg:x="57597" fg:w="35"/><text x="88.6445%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (35 samples, 0.05%)</title><rect x="88.3945%" y="421" width="0.0537%" height="15" fill="rgb(209,19,13)" fg:x="57597" fg:w="35"/><text x="88.6445%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (463 samples, 0.71%)</title><rect x="87.7454%" y="581" width="0.7106%" height="15" fill="rgb(226,79,39)" fg:x="57174" fg:w="463"/><text x="87.9954%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (19 samples, 0.03%)</title><rect x="88.4667%" y="549" width="0.0292%" height="15" fill="rgb(222,163,10)" fg:x="57644" fg:w="19"/><text x="88.7167%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.02%)</title><rect x="88.5112%" y="405" width="0.0169%" height="15" fill="rgb(214,44,19)" fg:x="57673" fg:w="11"/><text x="88.7612%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.02%)</title><rect x="88.5342%" y="389" width="0.0184%" height="15" fill="rgb(210,217,13)" fg:x="57688" fg:w="12"/><text x="88.7842%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (34 samples, 0.05%)</title><rect x="88.5050%" y="453" width="0.0522%" height="15" fill="rgb(237,61,54)" fg:x="57669" fg:w="34"/><text x="88.7550%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (34 samples, 0.05%)</title><rect x="88.5050%" y="437" width="0.0522%" height="15" fill="rgb(226,184,24)" fg:x="57669" fg:w="34"/><text x="88.7550%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (34 samples, 0.05%)</title><rect x="88.5050%" y="421" width="0.0522%" height="15" fill="rgb(223,226,4)" fg:x="57669" fg:w="34"/><text x="88.7550%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19 samples, 0.03%)</title><rect x="88.5281%" y="405" width="0.0292%" height="15" fill="rgb(210,26,41)" fg:x="57684" fg:w="19"/><text x="88.7781%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (36 samples, 0.06%)</title><rect x="88.5050%" y="485" width="0.0552%" height="15" fill="rgb(220,221,6)" fg:x="57669" fg:w="36"/><text x="88.7550%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (36 samples, 0.06%)</title><rect x="88.5050%" y="469" width="0.0552%" height="15" fill="rgb(225,89,49)" fg:x="57669" fg:w="36"/><text x="88.7550%" y="479.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (8 samples, 0.01%)</title><rect x="88.5741%" y="421" width="0.0123%" height="15" fill="rgb(218,70,45)" fg:x="57714" fg:w="8"/><text x="88.8241%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (8 samples, 0.01%)</title><rect x="88.5741%" y="405" width="0.0123%" height="15" fill="rgb(238,166,21)" fg:x="57714" fg:w="8"/><text x="88.8241%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.02%)</title><rect x="88.5741%" y="437" width="0.0184%" height="15" fill="rgb(224,141,44)" fg:x="57714" fg:w="12"/><text x="88.8241%" y="447.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (80 samples, 0.12%)</title><rect x="88.4958%" y="549" width="0.1228%" height="15" fill="rgb(230,12,49)" fg:x="57663" fg:w="80"/><text x="88.7458%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (80 samples, 0.12%)</title><rect x="88.4958%" y="533" width="0.1228%" height="15" fill="rgb(212,174,12)" fg:x="57663" fg:w="80"/><text x="88.7458%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (80 samples, 0.12%)</title><rect x="88.4958%" y="517" width="0.1228%" height="15" fill="rgb(246,67,9)" fg:x="57663" fg:w="80"/><text x="88.7458%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (80 samples, 0.12%)</title><rect x="88.4958%" y="501" width="0.1228%" height="15" fill="rgb(239,35,23)" fg:x="57663" fg:w="80"/><text x="88.7458%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (38 samples, 0.06%)</title><rect x="88.5603%" y="485" width="0.0583%" height="15" fill="rgb(211,167,0)" fg:x="57705" fg:w="38"/><text x="88.8103%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.06%)</title><rect x="88.5603%" y="469" width="0.0583%" height="15" fill="rgb(225,119,45)" fg:x="57705" fg:w="38"/><text x="88.8103%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (38 samples, 0.06%)</title><rect x="88.5603%" y="453" width="0.0583%" height="15" fill="rgb(210,162,6)" fg:x="57705" fg:w="38"/><text x="88.8103%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (9 samples, 0.01%)</title><rect x="88.6048%" y="437" width="0.0138%" height="15" fill="rgb(208,118,35)" fg:x="57734" fg:w="9"/><text x="88.8548%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (9 samples, 0.01%)</title><rect x="88.6048%" y="421" width="0.0138%" height="15" fill="rgb(239,4,53)" fg:x="57734" fg:w="9"/><text x="88.8548%" y="431.50"></text></g><g><title>__GI___libc_free (12 samples, 0.02%)</title><rect x="88.6309%" y="485" width="0.0184%" height="15" fill="rgb(213,130,21)" fg:x="57751" fg:w="12"/><text x="88.8809%" y="495.50"></text></g><g><title>__rdl_dealloc (13 samples, 0.02%)</title><rect x="88.6493%" y="485" width="0.0200%" height="15" fill="rgb(235,148,0)" fg:x="57763" fg:w="13"/><text x="88.8993%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (13 samples, 0.02%)</title><rect x="88.6493%" y="469" width="0.0200%" height="15" fill="rgb(244,224,18)" fg:x="57763" fg:w="13"/><text x="88.8993%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;yakvdb::disk::block::Block&gt;&gt; (80 samples, 0.12%)</title><rect x="88.6232%" y="533" width="0.1228%" height="15" fill="rgb(211,214,4)" fg:x="57746" fg:w="80"/><text x="88.8732%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;yakvdb::disk::block::Block&gt; (78 samples, 0.12%)</title><rect x="88.6263%" y="517" width="0.1197%" height="15" fill="rgb(206,119,25)" fg:x="57748" fg:w="78"/><text x="88.8763%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (78 samples, 0.12%)</title><rect x="88.6263%" y="501" width="0.1197%" height="15" fill="rgb(243,93,47)" fg:x="57748" fg:w="78"/><text x="88.8763%" y="511.50"></text></g><g><title>_int_free (49 samples, 0.08%)</title><rect x="88.6708%" y="485" width="0.0752%" height="15" fill="rgb(224,194,6)" fg:x="57777" fg:w="49"/><text x="88.9208%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.02%)</title><rect x="88.7567%" y="405" width="0.0153%" height="15" fill="rgb(243,229,6)" fg:x="57833" fg:w="10"/><text x="89.0067%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="88.7506%" y="469" width="0.0230%" height="15" fill="rgb(207,23,50)" fg:x="57829" fg:w="15"/><text x="89.0006%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="88.7506%" y="453" width="0.0230%" height="15" fill="rgb(253,192,32)" fg:x="57829" fg:w="15"/><text x="89.0006%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="88.7506%" y="437" width="0.0230%" height="15" fill="rgb(213,21,6)" fg:x="57829" fg:w="15"/><text x="89.0006%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.02%)</title><rect x="88.7567%" y="421" width="0.0169%" height="15" fill="rgb(243,151,13)" fg:x="57833" fg:w="11"/><text x="89.0067%" y="431.50"></text></g><g><title>hashbrown::map::make_insert_hash (18 samples, 0.03%)</title><rect x="88.7506%" y="501" width="0.0276%" height="15" fill="rgb(233,165,41)" fg:x="57829" fg:w="18"/><text x="89.0006%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.03%)</title><rect x="88.7506%" y="485" width="0.0276%" height="15" fill="rgb(246,176,45)" fg:x="57829" fg:w="18"/><text x="89.0006%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (15 samples, 0.02%)</title><rect x="88.7782%" y="501" width="0.0230%" height="15" fill="rgb(217,170,52)" fg:x="57847" fg:w="15"/><text x="89.0282%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.02%)</title><rect x="88.7782%" y="485" width="0.0230%" height="15" fill="rgb(214,203,54)" fg:x="57847" fg:w="15"/><text x="89.0282%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.02%)</title><rect x="88.7782%" y="469" width="0.0230%" height="15" fill="rgb(248,215,49)" fg:x="57847" fg:w="15"/><text x="89.0282%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (11 samples, 0.02%)</title><rect x="88.8120%" y="485" width="0.0169%" height="15" fill="rgb(208,46,10)" fg:x="57869" fg:w="11"/><text x="89.0620%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (59 samples, 0.09%)</title><rect x="88.7460%" y="533" width="0.0905%" height="15" fill="rgb(254,5,31)" fg:x="57826" fg:w="59"/><text x="88.9960%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (58 samples, 0.09%)</title><rect x="88.7475%" y="517" width="0.0890%" height="15" fill="rgb(222,104,33)" fg:x="57827" fg:w="58"/><text x="88.9975%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (23 samples, 0.04%)</title><rect x="88.8012%" y="501" width="0.0353%" height="15" fill="rgb(248,49,16)" fg:x="57862" fg:w="23"/><text x="89.0512%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.01%)</title><rect x="88.8534%" y="389" width="0.0107%" height="15" fill="rgb(232,198,41)" fg:x="57896" fg:w="7"/><text x="89.1034%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.03%)</title><rect x="88.8396%" y="453" width="0.0338%" height="15" fill="rgb(214,125,3)" fg:x="57887" fg:w="22"/><text x="89.0896%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22 samples, 0.03%)</title><rect x="88.8396%" y="437" width="0.0338%" height="15" fill="rgb(229,220,28)" fg:x="57887" fg:w="22"/><text x="89.0896%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.03%)</title><rect x="88.8396%" y="421" width="0.0338%" height="15" fill="rgb(222,64,37)" fg:x="57887" fg:w="22"/><text x="89.0896%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.02%)</title><rect x="88.8488%" y="405" width="0.0246%" height="15" fill="rgb(249,184,13)" fg:x="57893" fg:w="16"/><text x="89.0988%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.04%)</title><rect x="88.8396%" y="485" width="0.0353%" height="15" fill="rgb(252,176,6)" fg:x="57887" fg:w="23"/><text x="89.0896%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.04%)</title><rect x="88.8396%" y="469" width="0.0353%" height="15" fill="rgb(228,153,7)" fg:x="57887" fg:w="23"/><text x="89.0896%" y="479.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (19 samples, 0.03%)</title><rect x="88.8872%" y="421" width="0.0292%" height="15" fill="rgb(242,193,5)" fg:x="57918" fg:w="19"/><text x="89.1372%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (19 samples, 0.03%)</title><rect x="88.8872%" y="405" width="0.0292%" height="15" fill="rgb(232,140,9)" fg:x="57918" fg:w="19"/><text x="89.1372%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (21 samples, 0.03%)</title><rect x="88.8872%" y="437" width="0.0322%" height="15" fill="rgb(213,222,16)" fg:x="57918" fg:w="21"/><text x="89.1372%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.06%)</title><rect x="88.8749%" y="469" width="0.0583%" height="15" fill="rgb(222,75,50)" fg:x="57910" fg:w="38"/><text x="89.1249%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (38 samples, 0.06%)</title><rect x="88.8749%" y="453" width="0.0583%" height="15" fill="rgb(205,180,2)" fg:x="57910" fg:w="38"/><text x="89.1249%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (67 samples, 0.10%)</title><rect x="88.8365%" y="533" width="0.1028%" height="15" fill="rgb(216,34,7)" fg:x="57885" fg:w="67"/><text x="89.0865%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (67 samples, 0.10%)</title><rect x="88.8365%" y="517" width="0.1028%" height="15" fill="rgb(253,16,32)" fg:x="57885" fg:w="67"/><text x="89.0865%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (65 samples, 0.10%)</title><rect x="88.8396%" y="501" width="0.0998%" height="15" fill="rgb(208,97,28)" fg:x="57887" fg:w="65"/><text x="89.0896%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (42 samples, 0.06%)</title><rect x="88.8749%" y="485" width="0.0645%" height="15" fill="rgb(225,92,11)" fg:x="57910" fg:w="42"/><text x="89.1249%" y="495.50"></text></g><g><title>core::intrinsics::copy (21 samples, 0.03%)</title><rect x="88.9424%" y="501" width="0.0322%" height="15" fill="rgb(243,38,12)" fg:x="57954" fg:w="21"/><text x="89.1924%" y="511.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (20 samples, 0.03%)</title><rect x="88.9440%" y="485" width="0.0307%" height="15" fill="rgb(208,139,16)" fg:x="57955" fg:w="20"/><text x="89.1940%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (23 samples, 0.04%)</title><rect x="88.9424%" y="517" width="0.0353%" height="15" fill="rgb(227,24,9)" fg:x="57954" fg:w="23"/><text x="89.1924%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.02%)</title><rect x="88.9885%" y="373" width="0.0184%" height="15" fill="rgb(206,62,11)" fg:x="57984" fg:w="12"/><text x="89.2385%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.03%)</title><rect x="88.9823%" y="437" width="0.0307%" height="15" fill="rgb(228,134,27)" fg:x="57980" fg:w="20"/><text x="89.2323%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 0.03%)</title><rect x="88.9823%" y="421" width="0.0307%" height="15" fill="rgb(205,55,33)" fg:x="57980" fg:w="20"/><text x="89.2323%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 0.03%)</title><rect x="88.9823%" y="405" width="0.0307%" height="15" fill="rgb(243,75,43)" fg:x="57980" fg:w="20"/><text x="89.2323%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.03%)</title><rect x="88.9869%" y="389" width="0.0261%" height="15" fill="rgb(223,27,42)" fg:x="57983" fg:w="17"/><text x="89.2369%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.04%)</title><rect x="88.9823%" y="469" width="0.0353%" height="15" fill="rgb(232,189,33)" fg:x="57980" fg:w="23"/><text x="89.2323%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.04%)</title><rect x="88.9823%" y="453" width="0.0353%" height="15" fill="rgb(210,9,39)" fg:x="57980" fg:w="23"/><text x="89.2323%" y="463.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::put (276 samples, 0.42%)</title><rect x="88.6186%" y="549" width="0.4236%" height="15" fill="rgb(242,85,26)" fg:x="57743" fg:w="276"/><text x="88.8686%" y="559.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (67 samples, 0.10%)</title><rect x="88.9394%" y="533" width="0.1028%" height="15" fill="rgb(248,44,4)" fg:x="57952" fg:w="67"/><text x="89.1894%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (42 samples, 0.06%)</title><rect x="88.9777%" y="517" width="0.0645%" height="15" fill="rgb(250,96,46)" fg:x="57977" fg:w="42"/><text x="89.2277%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (42 samples, 0.06%)</title><rect x="88.9777%" y="501" width="0.0645%" height="15" fill="rgb(229,116,26)" fg:x="57977" fg:w="42"/><text x="89.2277%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (42 samples, 0.06%)</title><rect x="88.9777%" y="485" width="0.0645%" height="15" fill="rgb(246,94,34)" fg:x="57977" fg:w="42"/><text x="89.2277%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (16 samples, 0.02%)</title><rect x="89.0176%" y="469" width="0.0246%" height="15" fill="rgb(251,73,21)" fg:x="58003" fg:w="16"/><text x="89.2676%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.02%)</title><rect x="89.0176%" y="453" width="0.0246%" height="15" fill="rgb(254,121,25)" fg:x="58003" fg:w="16"/><text x="89.2676%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (16 samples, 0.02%)</title><rect x="89.0176%" y="437" width="0.0246%" height="15" fill="rgb(215,161,49)" fg:x="58003" fg:w="16"/><text x="89.2676%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (10 samples, 0.02%)</title><rect x="89.0268%" y="421" width="0.0153%" height="15" fill="rgb(221,43,13)" fg:x="58009" fg:w="10"/><text x="89.2768%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (10 samples, 0.02%)</title><rect x="89.0268%" y="405" width="0.0153%" height="15" fill="rgb(249,5,37)" fg:x="58009" fg:w="10"/><text x="89.2768%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.02%)</title><rect x="89.0268%" y="389" width="0.0153%" height="15" fill="rgb(226,25,44)" fg:x="58009" fg:w="10"/><text x="89.2768%" y="399.50"></text></g><g><title>__libc_write (55 samples, 0.08%)</title><rect x="89.0852%" y="501" width="0.0844%" height="15" fill="rgb(238,189,16)" fg:x="58047" fg:w="55"/><text x="89.3352%" y="511.50"></text></g><g><title>[unknown] (55 samples, 0.08%)</title><rect x="89.0852%" y="485" width="0.0844%" height="15" fill="rgb(251,186,8)" fg:x="58047" fg:w="55"/><text x="89.3352%" y="495.50"></text></g><g><title>__lseek64 (650 samples, 1.00%)</title><rect x="89.1696%" y="501" width="0.9976%" height="15" fill="rgb(254,34,31)" fg:x="58102" fg:w="650"/><text x="89.4196%" y="511.50"></text></g><g><title>[unknown] (626 samples, 0.96%)</title><rect x="89.2064%" y="485" width="0.9607%" height="15" fill="rgb(225,215,27)" fg:x="58126" fg:w="626"/><text x="89.4564%" y="495.50"></text></g><g><title>[unknown] (465 samples, 0.71%)</title><rect x="89.4535%" y="469" width="0.7136%" height="15" fill="rgb(221,192,48)" fg:x="58287" fg:w="465"/><text x="89.7035%" y="479.50"></text></g><g><title>[unknown] (148 samples, 0.23%)</title><rect x="89.9400%" y="453" width="0.2271%" height="15" fill="rgb(219,137,20)" fg:x="58604" fg:w="148"/><text x="90.1900%" y="463.50"></text></g><g><title>[unknown] (144 samples, 0.22%)</title><rect x="89.9461%" y="437" width="0.2210%" height="15" fill="rgb(219,84,11)" fg:x="58608" fg:w="144"/><text x="90.1961%" y="447.50"></text></g><g><title>[unknown] (104 samples, 0.16%)</title><rect x="90.0075%" y="421" width="0.1596%" height="15" fill="rgb(224,10,23)" fg:x="58648" fg:w="104"/><text x="90.2575%" y="431.50"></text></g><g><title>[unknown] (56 samples, 0.09%)</title><rect x="90.0812%" y="405" width="0.0859%" height="15" fill="rgb(248,22,39)" fg:x="58696" fg:w="56"/><text x="90.3312%" y="415.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (715 samples, 1.10%)</title><rect x="89.0713%" y="533" width="1.0973%" height="15" fill="rgb(212,154,20)" fg:x="58038" fg:w="715"/><text x="89.3213%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::seek (715 samples, 1.10%)</title><rect x="89.0713%" y="517" width="1.0973%" height="15" fill="rgb(236,199,50)" fg:x="58038" fg:w="715"/><text x="89.3213%" y="527.50"></text></g><g><title>__PRETTY_FUNCTION__.10159 (10 samples, 0.02%)</title><rect x="90.2561%" y="389" width="0.0153%" height="15" fill="rgb(211,9,17)" fg:x="58810" fg:w="10"/><text x="90.5061%" y="399.50"></text></g><g><title>__memset_sse2_unaligned_erms (202 samples, 0.31%)</title><rect x="90.2715%" y="389" width="0.3100%" height="15" fill="rgb(243,216,36)" fg:x="58820" fg:w="202"/><text x="90.5215%" y="399.50"></text></g><g><title>__calloc (409 samples, 0.63%)</title><rect x="90.1917%" y="405" width="0.6277%" height="15" fill="rgb(250,2,10)" fg:x="58768" fg:w="409"/><text x="90.4417%" y="415.50"></text></g><g><title>_int_malloc (155 samples, 0.24%)</title><rect x="90.5815%" y="389" width="0.2379%" height="15" fill="rgb(226,50,48)" fg:x="59022" fg:w="155"/><text x="90.8315%" y="399.50"></text></g><g><title>alloc::vec::from_elem (421 samples, 0.65%)</title><rect x="90.1794%" y="517" width="0.6461%" height="15" fill="rgb(243,81,16)" fg:x="58760" fg:w="421"/><text x="90.4294%" y="527.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (421 samples, 0.65%)</title><rect x="90.1794%" y="501" width="0.6461%" height="15" fill="rgb(250,14,2)" fg:x="58760" fg:w="421"/><text x="90.4294%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (417 samples, 0.64%)</title><rect x="90.1855%" y="485" width="0.6400%" height="15" fill="rgb(233,135,29)" fg:x="58764" fg:w="417"/><text x="90.4355%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (417 samples, 0.64%)</title><rect x="90.1855%" y="469" width="0.6400%" height="15" fill="rgb(224,64,43)" fg:x="58764" fg:w="417"/><text x="90.4355%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (414 samples, 0.64%)</title><rect x="90.1902%" y="453" width="0.6354%" height="15" fill="rgb(238,84,13)" fg:x="58767" fg:w="414"/><text x="90.4402%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (414 samples, 0.64%)</title><rect x="90.1902%" y="437" width="0.6354%" height="15" fill="rgb(253,48,26)" fg:x="58767" fg:w="414"/><text x="90.4402%" y="447.50"></text></g><g><title>alloc::alloc::alloc_zeroed (414 samples, 0.64%)</title><rect x="90.1902%" y="421" width="0.6354%" height="15" fill="rgb(205,223,31)" fg:x="58767" fg:w="414"/><text x="90.4402%" y="431.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (243 samples, 0.37%)</title><rect x="90.8255%" y="517" width="0.3729%" height="15" fill="rgb(221,41,32)" fg:x="59181" fg:w="243"/><text x="91.0755%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (235 samples, 0.36%)</title><rect x="90.8378%" y="501" width="0.3607%" height="15" fill="rgb(213,158,31)" fg:x="59189" fg:w="235"/><text x="91.0878%" y="511.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (233 samples, 0.36%)</title><rect x="90.8409%" y="485" width="0.3576%" height="15" fill="rgb(245,126,43)" fg:x="59191" fg:w="233"/><text x="91.0909%" y="495.50"></text></g><g><title>malloc_consolidate (709 samples, 1.09%)</title><rect x="91.4041%" y="357" width="1.0881%" height="15" fill="rgb(227,7,22)" fg:x="59558" fg:w="709"/><text x="91.6541%" y="367.50"></text></g><g><title>unlink_chunk.isra.0 (111 samples, 0.17%)</title><rect x="92.3219%" y="341" width="0.1704%" height="15" fill="rgb(252,90,44)" fg:x="60156" fg:w="111"/><text x="92.5719%" y="351.50"></text></g><g><title>__GI___libc_malloc (844 samples, 1.30%)</title><rect x="91.1985%" y="389" width="1.2953%" height="15" fill="rgb(253,91,0)" fg:x="59424" fg:w="844"/><text x="91.4485%" y="399.50"></text></g><g><title>_int_malloc (830 samples, 1.27%)</title><rect x="91.2199%" y="373" width="1.2738%" height="15" fill="rgb(252,175,49)" fg:x="59438" fg:w="830"/><text x="91.4699%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (845 samples, 1.30%)</title><rect x="91.1985%" y="501" width="1.2968%" height="15" fill="rgb(246,150,1)" fg:x="59424" fg:w="845"/><text x="91.4485%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (845 samples, 1.30%)</title><rect x="91.1985%" y="485" width="1.2968%" height="15" fill="rgb(241,192,25)" fg:x="59424" fg:w="845"/><text x="91.4485%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (845 samples, 1.30%)</title><rect x="91.1985%" y="469" width="1.2968%" height="15" fill="rgb(239,187,11)" fg:x="59424" fg:w="845"/><text x="91.4485%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (845 samples, 1.30%)</title><rect x="91.1985%" y="453" width="1.2968%" height="15" fill="rgb(218,202,51)" fg:x="59424" fg:w="845"/><text x="91.4485%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (845 samples, 1.30%)</title><rect x="91.1985%" y="437" width="1.2968%" height="15" fill="rgb(225,176,8)" fg:x="59424" fg:w="845"/><text x="91.4485%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (845 samples, 1.30%)</title><rect x="91.1985%" y="421" width="1.2968%" height="15" fill="rgb(219,122,41)" fg:x="59424" fg:w="845"/><text x="91.4485%" y="431.50"></text></g><g><title>alloc::alloc::alloc (845 samples, 1.30%)</title><rect x="91.1985%" y="405" width="1.2968%" height="15" fill="rgb(248,140,20)" fg:x="59424" fg:w="845"/><text x="91.4485%" y="415.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (855 samples, 1.31%)</title><rect x="91.1985%" y="517" width="1.3122%" height="15" fill="rgb(245,41,37)" fg:x="59424" fg:w="855"/><text x="91.4485%" y="527.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (10 samples, 0.02%)</title><rect x="92.4953%" y="501" width="0.0153%" height="15" fill="rgb(235,82,39)" fg:x="60269" fg:w="10"/><text x="92.7453%" y="511.50"></text></g><g><title>__libc_read (63 samples, 0.10%)</title><rect x="92.5214%" y="437" width="0.0967%" height="15" fill="rgb(230,108,42)" fg:x="60286" fg:w="63"/><text x="92.7714%" y="447.50"></text></g><g><title>[unknown] (63 samples, 0.10%)</title><rect x="92.5214%" y="421" width="0.0967%" height="15" fill="rgb(215,150,50)" fg:x="60286" fg:w="63"/><text x="92.7714%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::reserve (1,661 samples, 2.55%)</title><rect x="90.1687%" y="533" width="2.5491%" height="15" fill="rgb(233,212,5)" fg:x="58753" fg:w="1661"/><text x="90.4187%" y="543.50">&lt;y..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (135 samples, 0.21%)</title><rect x="92.5106%" y="517" width="0.2072%" height="15" fill="rgb(245,80,22)" fg:x="60279" fg:w="135"/><text x="92.7606%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (135 samples, 0.21%)</title><rect x="92.5106%" y="501" width="0.2072%" height="15" fill="rgb(238,129,16)" fg:x="60279" fg:w="135"/><text x="92.7606%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (135 samples, 0.21%)</title><rect x="92.5106%" y="485" width="0.2072%" height="15" fill="rgb(240,19,0)" fg:x="60279" fg:w="135"/><text x="92.7606%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (135 samples, 0.21%)</title><rect x="92.5106%" y="469" width="0.2072%" height="15" fill="rgb(232,42,35)" fg:x="60279" fg:w="135"/><text x="92.7606%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (135 samples, 0.21%)</title><rect x="92.5106%" y="453" width="0.2072%" height="15" fill="rgb(223,130,24)" fg:x="60279" fg:w="135"/><text x="92.7606%" y="463.50"></text></g><g><title>_int_free (63 samples, 0.10%)</title><rect x="92.6211%" y="437" width="0.0967%" height="15" fill="rgb(237,16,22)" fg:x="60351" fg:w="63"/><text x="92.8711%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::fs::File&gt;&gt; (14 samples, 0.02%)</title><rect x="92.7255%" y="533" width="0.0215%" height="15" fill="rgb(248,192,20)" fg:x="60419" fg:w="14"/><text x="92.9755%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (14 samples, 0.02%)</title><rect x="92.7255%" y="517" width="0.0215%" height="15" fill="rgb(233,167,2)" fg:x="60419" fg:w="14"/><text x="92.9755%" y="527.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="92.7255%" y="501" width="0.0215%" height="15" fill="rgb(252,71,44)" fg:x="60419" fg:w="14"/><text x="92.9755%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (14 samples, 0.02%)</title><rect x="92.7255%" y="485" width="0.0215%" height="15" fill="rgb(238,37,47)" fg:x="60419" fg:w="14"/><text x="92.9755%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (14 samples, 0.02%)</title><rect x="92.7255%" y="469" width="0.0215%" height="15" fill="rgb(214,202,54)" fg:x="60419" fg:w="14"/><text x="92.9755%" y="479.50"></text></g><g><title>core::mem::replace (14 samples, 0.02%)</title><rect x="92.7255%" y="453" width="0.0215%" height="15" fill="rgb(254,165,40)" fg:x="60419" fg:w="14"/><text x="92.9755%" y="463.50"></text></g><g><title>core::ptr::write (14 samples, 0.02%)</title><rect x="92.7255%" y="437" width="0.0215%" height="15" fill="rgb(246,173,38)" fg:x="60419" fg:w="14"/><text x="92.9755%" y="447.50"></text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (4,957 samples, 7.61%)</title><rect x="89.0606%" y="549" width="7.6075%" height="15" fill="rgb(215,3,27)" fg:x="58031" fg:w="4957"/><text x="89.3106%" y="559.50">yakvdb::di..</text></g><g><title>std::io::Read::read_exact (2,551 samples, 3.92%)</title><rect x="92.7531%" y="533" width="3.9150%" height="15" fill="rgb(239,169,51)" fg:x="60437" fg:w="2551"/><text x="93.0031%" y="543.50">std:..</text></g><g><title>std::io::default_read_exact (2,551 samples, 3.92%)</title><rect x="92.7531%" y="517" width="3.9150%" height="15" fill="rgb(212,5,25)" fg:x="60437" fg:w="2551"/><text x="93.0031%" y="527.50">std:..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (2,544 samples, 3.90%)</title><rect x="92.7639%" y="501" width="3.9043%" height="15" fill="rgb(243,45,17)" fg:x="60444" fg:w="2544"/><text x="93.0139%" y="511.50">&lt;std..</text></g><g><title>std::sys::unix::fs::File::read (2,544 samples, 3.90%)</title><rect x="92.7639%" y="485" width="3.9043%" height="15" fill="rgb(242,97,9)" fg:x="60444" fg:w="2544"/><text x="93.0139%" y="495.50">std:..</text></g><g><title>std::sys::unix::fd::FileDesc::read (2,544 samples, 3.90%)</title><rect x="92.7639%" y="469" width="3.9043%" height="15" fill="rgb(228,71,31)" fg:x="60444" fg:w="2544"/><text x="93.0139%" y="479.50">std:..</text></g><g><title>__libc_read (2,540 samples, 3.90%)</title><rect x="92.7700%" y="453" width="3.8982%" height="15" fill="rgb(252,184,16)" fg:x="60448" fg:w="2540"/><text x="93.0200%" y="463.50">__li..</text></g><g><title>[unknown] (2,513 samples, 3.86%)</title><rect x="92.8114%" y="437" width="3.8567%" height="15" fill="rgb(236,169,46)" fg:x="60475" fg:w="2513"/><text x="93.0614%" y="447.50">[unk..</text></g><g><title>[unknown] (2,341 samples, 3.59%)</title><rect x="93.0754%" y="421" width="3.5928%" height="15" fill="rgb(207,17,47)" fg:x="60647" fg:w="2341"/><text x="93.3254%" y="431.50">[unk..</text></g><g><title>[unknown] (2,003 samples, 3.07%)</title><rect x="93.5941%" y="405" width="3.0740%" height="15" fill="rgb(206,201,28)" fg:x="60985" fg:w="2003"/><text x="93.8441%" y="415.50">[un..</text></g><g><title>[unknown] (1,992 samples, 3.06%)</title><rect x="93.6110%" y="389" width="3.0571%" height="15" fill="rgb(224,184,23)" fg:x="60996" fg:w="1992"/><text x="93.8610%" y="399.50">[un..</text></g><g><title>[unknown] (1,977 samples, 3.03%)</title><rect x="93.6340%" y="373" width="3.0341%" height="15" fill="rgb(208,139,48)" fg:x="61011" fg:w="1977"/><text x="93.8840%" y="383.50">[un..</text></g><g><title>[unknown] (1,936 samples, 2.97%)</title><rect x="93.6970%" y="357" width="2.9712%" height="15" fill="rgb(208,130,10)" fg:x="61052" fg:w="1936"/><text x="93.9470%" y="367.50">[un..</text></g><g><title>[unknown] (1,828 samples, 2.81%)</title><rect x="93.8627%" y="341" width="2.8054%" height="15" fill="rgb(211,213,45)" fg:x="61160" fg:w="1828"/><text x="94.1127%" y="351.50">[u..</text></g><g><title>[unknown] (1,688 samples, 2.59%)</title><rect x="94.0776%" y="325" width="2.5906%" height="15" fill="rgb(235,100,30)" fg:x="61300" fg:w="1688"/><text x="94.3276%" y="335.50">[u..</text></g><g><title>[unknown] (1,596 samples, 2.45%)</title><rect x="94.2188%" y="309" width="2.4494%" height="15" fill="rgb(206,144,31)" fg:x="61392" fg:w="1596"/><text x="94.4688%" y="319.50">[u..</text></g><g><title>[unknown] (1,521 samples, 2.33%)</title><rect x="94.3339%" y="293" width="2.3343%" height="15" fill="rgb(224,200,26)" fg:x="61467" fg:w="1521"/><text x="94.5839%" y="303.50">[..</text></g><g><title>[unknown] (1,348 samples, 2.07%)</title><rect x="94.5994%" y="277" width="2.0688%" height="15" fill="rgb(247,104,53)" fg:x="61640" fg:w="1348"/><text x="94.8494%" y="287.50">[..</text></g><g><title>[unknown] (1,265 samples, 1.94%)</title><rect x="94.7267%" y="261" width="1.9414%" height="15" fill="rgb(220,14,17)" fg:x="61723" fg:w="1265"/><text x="94.9767%" y="271.50">[..</text></g><g><title>[unknown] (272 samples, 0.42%)</title><rect x="96.2507%" y="245" width="0.4174%" height="15" fill="rgb(230,140,40)" fg:x="62716" fg:w="272"/><text x="96.5007%" y="255.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="96.6451%" y="229" width="0.0230%" height="15" fill="rgb(229,2,41)" fg:x="62973" fg:w="15"/><text x="96.8951%" y="239.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="96.6528%" y="213" width="0.0153%" height="15" fill="rgb(232,89,16)" fg:x="62978" fg:w="10"/><text x="96.9028%" y="223.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="96.6543%" y="197" width="0.0138%" height="15" fill="rgb(247,59,52)" fg:x="62979" fg:w="9"/><text x="96.9043%" y="207.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (5,349 samples, 8.21%)</title><rect x="88.4605%" y="565" width="8.2091%" height="15" fill="rgb(226,110,21)" fg:x="57640" fg:w="5349"/><text x="88.7105%" y="575.50">&lt;yakvdb::di..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="96.6804%" y="421" width="0.0123%" height="15" fill="rgb(224,176,43)" fg:x="62996" fg:w="8"/><text x="96.9304%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.01%)</title><rect x="96.6820%" y="405" width="0.0107%" height="15" fill="rgb(221,73,6)" fg:x="62997" fg:w="7"/><text x="96.9320%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.02%)</title><rect x="96.6973%" y="405" width="0.0200%" height="15" fill="rgb(232,78,19)" fg:x="63007" fg:w="13"/><text x="96.9473%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (31 samples, 0.05%)</title><rect x="96.6758%" y="469" width="0.0476%" height="15" fill="rgb(233,112,48)" fg:x="62993" fg:w="31"/><text x="96.9258%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (31 samples, 0.05%)</title><rect x="96.6758%" y="453" width="0.0476%" height="15" fill="rgb(243,131,47)" fg:x="62993" fg:w="31"/><text x="96.9258%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (31 samples, 0.05%)</title><rect x="96.6758%" y="437" width="0.0476%" height="15" fill="rgb(226,51,1)" fg:x="62993" fg:w="31"/><text x="96.9258%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.03%)</title><rect x="96.6927%" y="421" width="0.0307%" height="15" fill="rgb(247,58,7)" fg:x="63004" fg:w="20"/><text x="96.9427%" y="431.50"></text></g><g><title>hashbrown::map::make_insert_hash (35 samples, 0.05%)</title><rect x="96.6758%" y="501" width="0.0537%" height="15" fill="rgb(209,7,32)" fg:x="62993" fg:w="35"/><text x="96.9258%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (35 samples, 0.05%)</title><rect x="96.6758%" y="485" width="0.0537%" height="15" fill="rgb(209,39,41)" fg:x="62993" fg:w="35"/><text x="96.9258%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.02%)</title><rect x="96.7387%" y="453" width="0.0184%" height="15" fill="rgb(226,182,46)" fg:x="63034" fg:w="12"/><text x="96.9887%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.02%)</title><rect x="96.7387%" y="437" width="0.0184%" height="15" fill="rgb(230,219,10)" fg:x="63034" fg:w="12"/><text x="96.9887%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (9 samples, 0.01%)</title><rect x="96.7434%" y="421" width="0.0138%" height="15" fill="rgb(227,175,30)" fg:x="63037" fg:w="9"/><text x="96.9934%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (10 samples, 0.02%)</title><rect x="96.7633%" y="453" width="0.0153%" height="15" fill="rgb(217,2,50)" fg:x="63050" fg:w="10"/><text x="97.0133%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (10 samples, 0.02%)</title><rect x="96.7633%" y="437" width="0.0153%" height="15" fill="rgb(229,160,0)" fg:x="63050" fg:w="10"/><text x="97.0133%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.02%)</title><rect x="96.7633%" y="421" width="0.0153%" height="15" fill="rgb(207,78,37)" fg:x="63050" fg:w="10"/><text x="97.0133%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (40 samples, 0.06%)</title><rect x="96.7295%" y="501" width="0.0614%" height="15" fill="rgb(225,57,0)" fg:x="63028" fg:w="40"/><text x="96.9795%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.06%)</title><rect x="96.7295%" y="485" width="0.0614%" height="15" fill="rgb(232,154,2)" fg:x="63028" fg:w="40"/><text x="96.9795%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (40 samples, 0.06%)</title><rect x="96.7295%" y="469" width="0.0614%" height="15" fill="rgb(241,212,25)" fg:x="63028" fg:w="40"/><text x="96.9795%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (8 samples, 0.01%)</title><rect x="96.7786%" y="453" width="0.0123%" height="15" fill="rgb(226,69,20)" fg:x="63060" fg:w="8"/><text x="97.0286%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.01%)</title><rect x="96.7786%" y="437" width="0.0123%" height="15" fill="rgb(247,184,54)" fg:x="63060" fg:w="8"/><text x="97.0286%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (11 samples, 0.02%)</title><rect x="96.7971%" y="485" width="0.0169%" height="15" fill="rgb(210,145,0)" fg:x="63072" fg:w="11"/><text x="97.0471%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (95 samples, 0.15%)</title><rect x="96.6697%" y="565" width="0.1458%" height="15" fill="rgb(253,82,12)" fg:x="62989" fg:w="95"/><text x="96.9197%" y="575.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (91 samples, 0.14%)</title><rect x="96.6758%" y="549" width="0.1397%" height="15" fill="rgb(245,42,11)" fg:x="62993" fg:w="91"/><text x="96.9258%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (91 samples, 0.14%)</title><rect x="96.6758%" y="533" width="0.1397%" height="15" fill="rgb(219,147,32)" fg:x="62993" fg:w="91"/><text x="96.9258%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (91 samples, 0.14%)</title><rect x="96.6758%" y="517" width="0.1397%" height="15" fill="rgb(246,12,7)" fg:x="62993" fg:w="91"/><text x="96.9258%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (16 samples, 0.02%)</title><rect x="96.7909%" y="501" width="0.0246%" height="15" fill="rgb(243,50,9)" fg:x="63068" fg:w="16"/><text x="97.0409%" y="511.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (8 samples, 0.01%)</title><rect x="96.8155%" y="565" width="0.0123%" height="15" fill="rgb(219,149,6)" fg:x="63084" fg:w="8"/><text x="97.0655%" y="575.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (8 samples, 0.01%)</title><rect x="96.8155%" y="549" width="0.0123%" height="15" fill="rgb(241,51,42)" fg:x="63084" fg:w="8"/><text x="97.0655%" y="559.50"></text></g><g><title>core::cell::BorrowRefMut::new (8 samples, 0.01%)</title><rect x="96.8155%" y="533" width="0.0123%" height="15" fill="rgb(226,128,27)" fg:x="63084" fg:w="8"/><text x="97.0655%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.02%)</title><rect x="96.8446%" y="373" width="0.0215%" height="15" fill="rgb(244,144,4)" fg:x="63103" fg:w="14"/><text x="97.0946%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.04%)</title><rect x="96.8339%" y="437" width="0.0384%" height="15" fill="rgb(221,4,13)" fg:x="63096" fg:w="25"/><text x="97.0839%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (25 samples, 0.04%)</title><rect x="96.8339%" y="421" width="0.0384%" height="15" fill="rgb(208,170,28)" fg:x="63096" fg:w="25"/><text x="97.0839%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (25 samples, 0.04%)</title><rect x="96.8339%" y="405" width="0.0384%" height="15" fill="rgb(226,131,13)" fg:x="63096" fg:w="25"/><text x="97.0839%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.03%)</title><rect x="96.8446%" y="389" width="0.0276%" height="15" fill="rgb(215,72,41)" fg:x="63103" fg:w="18"/><text x="97.0946%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (30 samples, 0.05%)</title><rect x="96.8324%" y="469" width="0.0460%" height="15" fill="rgb(243,108,20)" fg:x="63095" fg:w="30"/><text x="97.0824%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (30 samples, 0.05%)</title><rect x="96.8324%" y="453" width="0.0460%" height="15" fill="rgb(230,189,17)" fg:x="63095" fg:w="30"/><text x="97.0824%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.01%)</title><rect x="96.8891%" y="405" width="0.0138%" height="15" fill="rgb(220,50,17)" fg:x="63132" fg:w="9"/><text x="97.1391%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (9 samples, 0.01%)</title><rect x="96.8891%" y="389" width="0.0138%" height="15" fill="rgb(248,152,48)" fg:x="63132" fg:w="9"/><text x="97.1391%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (10 samples, 0.02%)</title><rect x="96.8891%" y="421" width="0.0153%" height="15" fill="rgb(244,91,11)" fg:x="63132" fg:w="10"/><text x="97.1391%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (53 samples, 0.08%)</title><rect x="96.8308%" y="517" width="0.0813%" height="15" fill="rgb(220,157,5)" fg:x="63094" fg:w="53"/><text x="97.0808%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (53 samples, 0.08%)</title><rect x="96.8308%" y="501" width="0.0813%" height="15" fill="rgb(253,137,8)" fg:x="63094" fg:w="53"/><text x="97.0808%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (53 samples, 0.08%)</title><rect x="96.8308%" y="485" width="0.0813%" height="15" fill="rgb(217,137,51)" fg:x="63094" fg:w="53"/><text x="97.0808%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 0.03%)</title><rect x="96.8784%" y="469" width="0.0338%" height="15" fill="rgb(218,209,53)" fg:x="63125" fg:w="22"/><text x="97.1284%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.03%)</title><rect x="96.8784%" y="453" width="0.0338%" height="15" fill="rgb(249,137,25)" fg:x="63125" fg:w="22"/><text x="97.1284%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (22 samples, 0.03%)</title><rect x="96.8784%" y="437" width="0.0338%" height="15" fill="rgb(239,155,26)" fg:x="63125" fg:w="22"/><text x="97.1284%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (8 samples, 0.01%)</title><rect x="96.9337%" y="501" width="0.0123%" height="15" fill="rgb(227,85,46)" fg:x="63161" fg:w="8"/><text x="97.1837%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (34 samples, 0.05%)</title><rect x="96.9782%" y="453" width="0.0522%" height="15" fill="rgb(251,107,43)" fg:x="63190" fg:w="34"/><text x="97.2282%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (22 samples, 0.03%)</title><rect x="96.9966%" y="437" width="0.0338%" height="15" fill="rgb(234,170,33)" fg:x="63202" fg:w="22"/><text x="97.2466%" y="447.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (22 samples, 0.03%)</title><rect x="96.9966%" y="421" width="0.0338%" height="15" fill="rgb(206,29,35)" fg:x="63202" fg:w="22"/><text x="97.2466%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (22 samples, 0.03%)</title><rect x="96.9966%" y="405" width="0.0338%" height="15" fill="rgb(227,138,25)" fg:x="63202" fg:w="22"/><text x="97.2466%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (22 samples, 0.03%)</title><rect x="96.9966%" y="389" width="0.0338%" height="15" fill="rgb(249,131,35)" fg:x="63202" fg:w="22"/><text x="97.2466%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (22 samples, 0.03%)</title><rect x="96.9966%" y="373" width="0.0338%" height="15" fill="rgb(239,6,40)" fg:x="63202" fg:w="22"/><text x="97.2466%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (82 samples, 0.13%)</title><rect x="96.9551%" y="501" width="0.1258%" height="15" fill="rgb(246,136,47)" fg:x="63175" fg:w="82"/><text x="97.2051%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (82 samples, 0.13%)</title><rect x="96.9551%" y="485" width="0.1258%" height="15" fill="rgb(253,58,26)" fg:x="63175" fg:w="82"/><text x="97.2051%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (82 samples, 0.13%)</title><rect x="96.9551%" y="469" width="0.1258%" height="15" fill="rgb(237,141,10)" fg:x="63175" fg:w="82"/><text x="97.2051%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.05%)</title><rect x="97.0303%" y="453" width="0.0506%" height="15" fill="rgb(234,156,12)" fg:x="63224" fg:w="33"/><text x="97.2803%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;alloc::vec::Vec&lt;u32&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="97.0810%" y="501" width="0.0107%" height="15" fill="rgb(243,224,36)" fg:x="63257" fg:w="7"/><text x="97.3310%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (7 samples, 0.01%)</title><rect x="97.0810%" y="485" width="0.0107%" height="15" fill="rgb(205,229,51)" fg:x="63257" fg:w="7"/><text x="97.3310%" y="495.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="97.0810%" y="469" width="0.0107%" height="15" fill="rgb(223,189,4)" fg:x="63257" fg:w="7"/><text x="97.3310%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (7 samples, 0.01%)</title><rect x="97.0810%" y="453" width="0.0107%" height="15" fill="rgb(249,167,54)" fg:x="63257" fg:w="7"/><text x="97.3310%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (7 samples, 0.01%)</title><rect x="97.0810%" y="437" width="0.0107%" height="15" fill="rgb(218,34,28)" fg:x="63257" fg:w="7"/><text x="97.3310%" y="447.50"></text></g><g><title>core::mem::replace (7 samples, 0.01%)</title><rect x="97.0810%" y="421" width="0.0107%" height="15" fill="rgb(232,109,42)" fg:x="63257" fg:w="7"/><text x="97.3310%" y="431.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="97.0810%" y="405" width="0.0107%" height="15" fill="rgb(248,214,46)" fg:x="63257" fg:w="7"/><text x="97.3310%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.01%)</title><rect x="97.0933%" y="373" width="0.0107%" height="15" fill="rgb(244,216,40)" fg:x="63265" fg:w="7"/><text x="97.3433%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.02%)</title><rect x="97.1055%" y="357" width="0.0215%" height="15" fill="rgb(231,226,31)" fg:x="63273" fg:w="14"/><text x="97.3555%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (24 samples, 0.04%)</title><rect x="97.0917%" y="421" width="0.0368%" height="15" fill="rgb(238,38,43)" fg:x="63264" fg:w="24"/><text x="97.3417%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (24 samples, 0.04%)</title><rect x="97.0917%" y="405" width="0.0368%" height="15" fill="rgb(208,88,43)" fg:x="63264" fg:w="24"/><text x="97.3417%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (24 samples, 0.04%)</title><rect x="97.0917%" y="389" width="0.0368%" height="15" fill="rgb(205,136,37)" fg:x="63264" fg:w="24"/><text x="97.3417%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.02%)</title><rect x="97.1040%" y="373" width="0.0246%" height="15" fill="rgb(237,34,14)" fg:x="63272" fg:w="16"/><text x="97.3540%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 0.04%)</title><rect x="97.0917%" y="453" width="0.0384%" height="15" fill="rgb(236,193,44)" fg:x="63264" fg:w="25"/><text x="97.3417%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (25 samples, 0.04%)</title><rect x="97.0917%" y="437" width="0.0384%" height="15" fill="rgb(231,48,10)" fg:x="63264" fg:w="25"/><text x="97.3417%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.01%)</title><rect x="97.1485%" y="389" width="0.0107%" height="15" fill="rgb(213,141,34)" fg:x="63301" fg:w="7"/><text x="97.3985%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (7 samples, 0.01%)</title><rect x="97.1485%" y="373" width="0.0107%" height="15" fill="rgb(249,130,34)" fg:x="63301" fg:w="7"/><text x="97.3985%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (10 samples, 0.02%)</title><rect x="97.1485%" y="405" width="0.0153%" height="15" fill="rgb(219,42,41)" fg:x="63301" fg:w="10"/><text x="97.3985%" y="415.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get_mut (228 samples, 0.35%)</title><rect x="96.8278%" y="533" width="0.3499%" height="15" fill="rgb(224,100,54)" fg:x="63092" fg:w="228"/><text x="97.0778%" y="543.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (171 samples, 0.26%)</title><rect x="96.9152%" y="517" width="0.2624%" height="15" fill="rgb(229,200,27)" fg:x="63149" fg:w="171"/><text x="97.1652%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (56 samples, 0.09%)</title><rect x="97.0917%" y="501" width="0.0859%" height="15" fill="rgb(217,118,10)" fg:x="63264" fg:w="56"/><text x="97.3417%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (56 samples, 0.09%)</title><rect x="97.0917%" y="485" width="0.0859%" height="15" fill="rgb(206,22,3)" fg:x="63264" fg:w="56"/><text x="97.3417%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (56 samples, 0.09%)</title><rect x="97.0917%" y="469" width="0.0859%" height="15" fill="rgb(232,163,46)" fg:x="63264" fg:w="56"/><text x="97.3417%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (31 samples, 0.05%)</title><rect x="97.1301%" y="453" width="0.0476%" height="15" fill="rgb(206,95,13)" fg:x="63289" fg:w="31"/><text x="97.3801%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (31 samples, 0.05%)</title><rect x="97.1301%" y="437" width="0.0476%" height="15" fill="rgb(253,154,18)" fg:x="63289" fg:w="31"/><text x="97.3801%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (31 samples, 0.05%)</title><rect x="97.1301%" y="421" width="0.0476%" height="15" fill="rgb(219,32,23)" fg:x="63289" fg:w="31"/><text x="97.3801%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.02%)</title><rect x="97.1915%" y="405" width="0.0153%" height="15" fill="rgb(230,191,45)" fg:x="63329" fg:w="10"/><text x="97.4415%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.02%)</title><rect x="97.1915%" y="421" width="0.0169%" height="15" fill="rgb(229,64,36)" fg:x="63329" fg:w="11"/><text x="97.4415%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (29 samples, 0.04%)</title><rect x="97.2099%" y="405" width="0.0445%" height="15" fill="rgb(205,129,25)" fg:x="63341" fg:w="29"/><text x="97.4599%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (50 samples, 0.08%)</title><rect x="97.1900%" y="469" width="0.0767%" height="15" fill="rgb(254,112,7)" fg:x="63328" fg:w="50"/><text x="97.4400%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (50 samples, 0.08%)</title><rect x="97.1900%" y="453" width="0.0767%" height="15" fill="rgb(226,53,48)" fg:x="63328" fg:w="50"/><text x="97.4400%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (50 samples, 0.08%)</title><rect x="97.1900%" y="437" width="0.0767%" height="15" fill="rgb(214,153,38)" fg:x="63328" fg:w="50"/><text x="97.4400%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (38 samples, 0.06%)</title><rect x="97.2084%" y="421" width="0.0583%" height="15" fill="rgb(243,101,7)" fg:x="63340" fg:w="38"/><text x="97.4584%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.01%)</title><rect x="97.2544%" y="405" width="0.0123%" height="15" fill="rgb(240,140,22)" fg:x="63370" fg:w="8"/><text x="97.5044%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (55 samples, 0.08%)</title><rect x="97.1884%" y="501" width="0.0844%" height="15" fill="rgb(235,114,2)" fg:x="63327" fg:w="55"/><text x="97.4384%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (55 samples, 0.08%)</title><rect x="97.1884%" y="485" width="0.0844%" height="15" fill="rgb(242,59,12)" fg:x="63327" fg:w="55"/><text x="97.4384%" y="495.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (10 samples, 0.02%)</title><rect x="97.2820%" y="437" width="0.0153%" height="15" fill="rgb(252,134,9)" fg:x="63388" fg:w="10"/><text x="97.5320%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (10 samples, 0.02%)</title><rect x="97.2820%" y="421" width="0.0153%" height="15" fill="rgb(236,4,44)" fg:x="63388" fg:w="10"/><text x="97.5320%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (15 samples, 0.02%)</title><rect x="97.2820%" y="453" width="0.0230%" height="15" fill="rgb(254,172,41)" fg:x="63388" fg:w="15"/><text x="97.5320%" y="463.50"></text></g><g><title>hashbrown::raw::h2 (9 samples, 0.01%)</title><rect x="97.3051%" y="453" width="0.0138%" height="15" fill="rgb(244,63,20)" fg:x="63403" fg:w="9"/><text x="97.5551%" y="463.50"></text></g><g><title>core::cell::RefMut&lt;T&gt;::map (325 samples, 0.50%)</title><rect x="96.8278%" y="565" width="0.4988%" height="15" fill="rgb(250,73,31)" fg:x="63092" fg:w="325"/><text x="97.0778%" y="575.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut::{{closure}} (325 samples, 0.50%)</title><rect x="96.8278%" y="549" width="0.4988%" height="15" fill="rgb(241,38,36)" fg:x="63092" fg:w="325"/><text x="97.0778%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (95 samples, 0.15%)</title><rect x="97.1807%" y="533" width="0.1458%" height="15" fill="rgb(245,211,2)" fg:x="63322" fg:w="95"/><text x="97.4307%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (93 samples, 0.14%)</title><rect x="97.1838%" y="517" width="0.1427%" height="15" fill="rgb(206,120,28)" fg:x="63324" fg:w="93"/><text x="97.4338%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (35 samples, 0.05%)</title><rect x="97.2728%" y="501" width="0.0537%" height="15" fill="rgb(211,59,34)" fg:x="63382" fg:w="35"/><text x="97.5228%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (35 samples, 0.05%)</title><rect x="97.2728%" y="485" width="0.0537%" height="15" fill="rgb(233,168,5)" fg:x="63382" fg:w="35"/><text x="97.5228%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (35 samples, 0.05%)</title><rect x="97.2728%" y="469" width="0.0537%" height="15" fill="rgb(234,33,13)" fg:x="63382" fg:w="35"/><text x="97.5228%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut (5,791 samples, 8.89%)</title><rect x="88.4559%" y="581" width="8.8875%" height="15" fill="rgb(231,150,26)" fg:x="57637" fg:w="5791"/><text x="88.7059%" y="591.50">&lt;yakvdb::disk..</text></g><g><title>core::result::Result&lt;T,E&gt;::ok (11 samples, 0.02%)</title><rect x="97.3265%" y="565" width="0.0169%" height="15" fill="rgb(217,191,4)" fg:x="63417" fg:w="11"/><text x="97.5765%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="97.3465%" y="469" width="0.0200%" height="15" fill="rgb(246,198,38)" fg:x="63430" fg:w="13"/><text x="97.5965%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="97.3465%" y="453" width="0.0200%" height="15" fill="rgb(245,64,37)" fg:x="63430" fg:w="13"/><text x="97.5965%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="97.3465%" y="437" width="0.0200%" height="15" fill="rgb(250,30,36)" fg:x="63430" fg:w="13"/><text x="97.5965%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.01%)</title><rect x="97.3526%" y="421" width="0.0138%" height="15" fill="rgb(217,86,53)" fg:x="63434" fg:w="9"/><text x="97.6026%" y="431.50"></text></g><g><title>hashbrown::map::make_insert_hash (16 samples, 0.02%)</title><rect x="97.3450%" y="501" width="0.0246%" height="15" fill="rgb(228,157,16)" fg:x="63429" fg:w="16"/><text x="97.5950%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.02%)</title><rect x="97.3450%" y="485" width="0.0246%" height="15" fill="rgb(217,59,31)" fg:x="63429" fg:w="16"/><text x="97.5950%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (24 samples, 0.04%)</title><rect x="97.3434%" y="565" width="0.0368%" height="15" fill="rgb(237,138,41)" fg:x="63428" fg:w="24"/><text x="97.5934%" y="575.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (24 samples, 0.04%)</title><rect x="97.3434%" y="549" width="0.0368%" height="15" fill="rgb(227,91,49)" fg:x="63428" fg:w="24"/><text x="97.5934%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (24 samples, 0.04%)</title><rect x="97.3434%" y="533" width="0.0368%" height="15" fill="rgb(247,21,44)" fg:x="63428" fg:w="24"/><text x="97.5934%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (24 samples, 0.04%)</title><rect x="97.3434%" y="517" width="0.0368%" height="15" fill="rgb(219,210,51)" fg:x="63428" fg:w="24"/><text x="97.5934%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="97.3925%" y="437" width="0.0230%" height="15" fill="rgb(209,140,6)" fg:x="63460" fg:w="15"/><text x="97.6425%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="97.3925%" y="421" width="0.0230%" height="15" fill="rgb(221,188,24)" fg:x="63460" fg:w="15"/><text x="97.6425%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.02%)</title><rect x="97.3925%" y="405" width="0.0230%" height="15" fill="rgb(232,154,20)" fg:x="63460" fg:w="15"/><text x="97.6425%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.01%)</title><rect x="97.4017%" y="389" width="0.0138%" height="15" fill="rgb(244,137,50)" fg:x="63466" fg:w="9"/><text x="97.6517%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.03%)</title><rect x="97.3895%" y="469" width="0.0276%" height="15" fill="rgb(225,185,43)" fg:x="63458" fg:w="18"/><text x="97.6395%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.03%)</title><rect x="97.3895%" y="453" width="0.0276%" height="15" fill="rgb(213,205,38)" fg:x="63458" fg:w="18"/><text x="97.6395%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (31 samples, 0.05%)</title><rect x="97.3879%" y="549" width="0.0476%" height="15" fill="rgb(236,73,12)" fg:x="63457" fg:w="31"/><text x="97.6379%" y="559.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::has (31 samples, 0.05%)</title><rect x="97.3879%" y="533" width="0.0476%" height="15" fill="rgb(235,219,13)" fg:x="63457" fg:w="31"/><text x="97.6379%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (31 samples, 0.05%)</title><rect x="97.3879%" y="517" width="0.0476%" height="15" fill="rgb(218,59,36)" fg:x="63457" fg:w="31"/><text x="97.6379%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (31 samples, 0.05%)</title><rect x="97.3879%" y="501" width="0.0476%" height="15" fill="rgb(205,110,39)" fg:x="63457" fg:w="31"/><text x="97.6379%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (31 samples, 0.05%)</title><rect x="97.3879%" y="485" width="0.0476%" height="15" fill="rgb(218,206,42)" fg:x="63457" fg:w="31"/><text x="97.6379%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.02%)</title><rect x="97.4171%" y="469" width="0.0184%" height="15" fill="rgb(248,125,24)" fg:x="63476" fg:w="12"/><text x="97.6671%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.02%)</title><rect x="97.4171%" y="453" width="0.0184%" height="15" fill="rgb(242,28,27)" fg:x="63476" fg:w="12"/><text x="97.6671%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.02%)</title><rect x="97.4171%" y="437" width="0.0184%" height="15" fill="rgb(216,228,15)" fg:x="63476" fg:w="12"/><text x="97.6671%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (9 samples, 0.01%)</title><rect x="97.4217%" y="421" width="0.0138%" height="15" fill="rgb(235,116,46)" fg:x="63479" fg:w="9"/><text x="97.6717%" y="431.50"></text></g><g><title>hashbrown::map::make_insert_hash (8 samples, 0.01%)</title><rect x="97.4386%" y="485" width="0.0123%" height="15" fill="rgb(224,18,32)" fg:x="63490" fg:w="8"/><text x="97.6886%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.01%)</title><rect x="97.4386%" y="469" width="0.0123%" height="15" fill="rgb(252,5,12)" fg:x="63490" fg:w="8"/><text x="97.6886%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="97.4386%" y="453" width="0.0123%" height="15" fill="rgb(251,36,5)" fg:x="63490" fg:w="8"/><text x="97.6886%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="97.4386%" y="437" width="0.0123%" height="15" fill="rgb(217,53,14)" fg:x="63490" fg:w="8"/><text x="97.6886%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.01%)</title><rect x="97.4386%" y="421" width="0.0123%" height="15" fill="rgb(215,86,45)" fg:x="63490" fg:w="8"/><text x="97.6886%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::mark (22 samples, 0.03%)</title><rect x="97.4355%" y="549" width="0.0338%" height="15" fill="rgb(242,169,11)" fg:x="63488" fg:w="22"/><text x="97.6855%" y="559.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (20 samples, 0.03%)</title><rect x="97.4386%" y="533" width="0.0307%" height="15" fill="rgb(211,213,45)" fg:x="63490" fg:w="20"/><text x="97.6886%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (20 samples, 0.03%)</title><rect x="97.4386%" y="517" width="0.0307%" height="15" fill="rgb(205,88,11)" fg:x="63490" fg:w="20"/><text x="97.6886%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.03%)</title><rect x="97.4386%" y="501" width="0.0307%" height="15" fill="rgb(252,69,26)" fg:x="63490" fg:w="20"/><text x="97.6886%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (12 samples, 0.02%)</title><rect x="97.4509%" y="485" width="0.0184%" height="15" fill="rgb(246,123,37)" fg:x="63498" fg:w="12"/><text x="97.7009%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.02%)</title><rect x="97.4509%" y="469" width="0.0184%" height="15" fill="rgb(212,205,5)" fg:x="63498" fg:w="12"/><text x="97.7009%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.02%)</title><rect x="97.4509%" y="453" width="0.0184%" height="15" fill="rgb(253,148,0)" fg:x="63498" fg:w="12"/><text x="97.7009%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.02%)</title><rect x="97.4708%" y="421" width="0.0169%" height="15" fill="rgb(239,22,4)" fg:x="63511" fg:w="11"/><text x="97.7208%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.02%)</title><rect x="97.4708%" y="405" width="0.0169%" height="15" fill="rgb(226,26,53)" fg:x="63511" fg:w="11"/><text x="97.7208%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.02%)</title><rect x="97.4708%" y="389" width="0.0169%" height="15" fill="rgb(225,229,45)" fg:x="63511" fg:w="11"/><text x="97.7208%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="97.4754%" y="373" width="0.0123%" height="15" fill="rgb(220,60,37)" fg:x="63514" fg:w="8"/><text x="97.7254%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="97.4708%" y="453" width="0.0184%" height="15" fill="rgb(217,180,35)" fg:x="63511" fg:w="12"/><text x="97.7208%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="97.4708%" y="437" width="0.0184%" height="15" fill="rgb(229,7,53)" fg:x="63511" fg:w="12"/><text x="97.7208%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (22 samples, 0.03%)</title><rect x="97.4708%" y="501" width="0.0338%" height="15" fill="rgb(254,137,3)" fg:x="63511" fg:w="22"/><text x="97.7208%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (22 samples, 0.03%)</title><rect x="97.4708%" y="485" width="0.0338%" height="15" fill="rgb(215,140,41)" fg:x="63511" fg:w="22"/><text x="97.7208%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22 samples, 0.03%)</title><rect x="97.4708%" y="469" width="0.0338%" height="15" fill="rgb(250,80,15)" fg:x="63511" fg:w="22"/><text x="97.7208%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.02%)</title><rect x="97.4892%" y="453" width="0.0153%" height="15" fill="rgb(252,191,6)" fg:x="63523" fg:w="10"/><text x="97.7392%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.02%)</title><rect x="97.4892%" y="437" width="0.0153%" height="15" fill="rgb(246,217,18)" fg:x="63523" fg:w="10"/><text x="97.7392%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.02%)</title><rect x="97.4892%" y="421" width="0.0153%" height="15" fill="rgb(223,93,7)" fg:x="63523" fg:w="10"/><text x="97.7392%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (11 samples, 0.02%)</title><rect x="97.5230%" y="437" width="0.0169%" height="15" fill="rgb(225,55,52)" fg:x="63545" fg:w="11"/><text x="97.7730%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (7 samples, 0.01%)</title><rect x="97.5291%" y="421" width="0.0107%" height="15" fill="rgb(240,31,24)" fg:x="63549" fg:w="7"/><text x="97.7791%" y="431.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch::{{closure}} (7 samples, 0.01%)</title><rect x="97.5291%" y="405" width="0.0107%" height="15" fill="rgb(205,56,52)" fg:x="63549" fg:w="7"/><text x="97.7791%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.01%)</title><rect x="97.5291%" y="389" width="0.0107%" height="15" fill="rgb(246,146,12)" fg:x="63549" fg:w="7"/><text x="97.7791%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.01%)</title><rect x="97.5291%" y="373" width="0.0107%" height="15" fill="rgb(239,84,36)" fg:x="63549" fg:w="7"/><text x="97.7791%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (7 samples, 0.01%)</title><rect x="97.5291%" y="357" width="0.0107%" height="15" fill="rgb(207,41,40)" fg:x="63549" fg:w="7"/><text x="97.7791%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (18 samples, 0.03%)</title><rect x="97.5184%" y="485" width="0.0276%" height="15" fill="rgb(241,179,25)" fg:x="63542" fg:w="18"/><text x="97.7684%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.03%)</title><rect x="97.5184%" y="469" width="0.0276%" height="15" fill="rgb(210,0,34)" fg:x="63542" fg:w="18"/><text x="97.7684%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.03%)</title><rect x="97.5184%" y="453" width="0.0276%" height="15" fill="rgb(225,217,29)" fg:x="63542" fg:w="18"/><text x="97.7684%" y="463.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get_mut (64 samples, 0.10%)</title><rect x="97.4693%" y="517" width="0.0982%" height="15" fill="rgb(216,191,38)" fg:x="63510" fg:w="64"/><text x="97.7193%" y="527.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (41 samples, 0.06%)</title><rect x="97.5046%" y="501" width="0.0629%" height="15" fill="rgb(232,140,52)" fg:x="63533" fg:w="41"/><text x="97.7546%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (14 samples, 0.02%)</title><rect x="97.5460%" y="485" width="0.0215%" height="15" fill="rgb(223,158,51)" fg:x="63560" fg:w="14"/><text x="97.7960%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (14 samples, 0.02%)</title><rect x="97.5460%" y="469" width="0.0215%" height="15" fill="rgb(235,29,51)" fg:x="63560" fg:w="14"/><text x="97.7960%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.02%)</title><rect x="97.5460%" y="453" width="0.0215%" height="15" fill="rgb(215,181,18)" fg:x="63560" fg:w="14"/><text x="97.7960%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.01%)</title><rect x="97.5552%" y="437" width="0.0123%" height="15" fill="rgb(227,125,34)" fg:x="63566" fg:w="8"/><text x="97.8052%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.01%)</title><rect x="97.5552%" y="421" width="0.0123%" height="15" fill="rgb(230,197,49)" fg:x="63566" fg:w="8"/><text x="97.8052%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.01%)</title><rect x="97.5552%" y="405" width="0.0123%" height="15" fill="rgb(239,141,16)" fg:x="63566" fg:w="8"/><text x="97.8052%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.01%)</title><rect x="97.5736%" y="389" width="0.0107%" height="15" fill="rgb(225,105,43)" fg:x="63578" fg:w="7"/><text x="97.8236%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="97.5675%" y="453" width="0.0184%" height="15" fill="rgb(214,131,14)" fg:x="63574" fg:w="12"/><text x="97.8175%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="97.5675%" y="437" width="0.0184%" height="15" fill="rgb(229,177,11)" fg:x="63574" fg:w="12"/><text x="97.8175%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="97.5675%" y="421" width="0.0184%" height="15" fill="rgb(231,180,14)" fg:x="63574" fg:w="12"/><text x="97.8175%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="97.5736%" y="405" width="0.0123%" height="15" fill="rgb(232,88,2)" fg:x="63578" fg:w="8"/><text x="97.8236%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.02%)</title><rect x="97.5675%" y="485" width="0.0215%" height="15" fill="rgb(205,220,8)" fg:x="63574" fg:w="14"/><text x="97.8175%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.02%)</title><rect x="97.5675%" y="469" width="0.0215%" height="15" fill="rgb(225,23,53)" fg:x="63574" fg:w="14"/><text x="97.8175%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::root_mut (172 samples, 0.26%)</title><rect x="97.3434%" y="581" width="0.2640%" height="15" fill="rgb(213,62,29)" fg:x="63428" fg:w="172"/><text x="97.5934%" y="591.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut (148 samples, 0.23%)</title><rect x="97.3803%" y="565" width="0.2271%" height="15" fill="rgb(227,75,7)" fg:x="63452" fg:w="148"/><text x="97.6303%" y="575.50"></text></g><g><title>core::cell::RefMut&lt;T&gt;::map (90 samples, 0.14%)</title><rect x="97.4693%" y="549" width="0.1381%" height="15" fill="rgb(207,105,14)" fg:x="63510" fg:w="90"/><text x="97.7193%" y="559.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page_mut::{{closure}} (90 samples, 0.14%)</title><rect x="97.4693%" y="533" width="0.1381%" height="15" fill="rgb(245,62,29)" fg:x="63510" fg:w="90"/><text x="97.7193%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (26 samples, 0.04%)</title><rect x="97.5675%" y="517" width="0.0399%" height="15" fill="rgb(236,202,4)" fg:x="63574" fg:w="26"/><text x="97.8175%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (26 samples, 0.04%)</title><rect x="97.5675%" y="501" width="0.0399%" height="15" fill="rgb(250,67,1)" fg:x="63574" fg:w="26"/><text x="97.8175%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (12 samples, 0.02%)</title><rect x="97.5890%" y="485" width="0.0184%" height="15" fill="rgb(253,115,44)" fg:x="63588" fg:w="12"/><text x="97.8390%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.02%)</title><rect x="97.5890%" y="469" width="0.0184%" height="15" fill="rgb(251,139,18)" fg:x="63588" fg:w="12"/><text x="97.8390%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.02%)</title><rect x="97.5890%" y="453" width="0.0184%" height="15" fill="rgb(218,22,32)" fg:x="63588" fg:w="12"/><text x="97.8390%" y="463.50"></text></g><g><title>__GI___libc_malloc (31 samples, 0.05%)</title><rect x="97.6135%" y="421" width="0.0476%" height="15" fill="rgb(243,53,5)" fg:x="63604" fg:w="31"/><text x="97.8635%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.06%)</title><rect x="97.6105%" y="469" width="0.0552%" height="15" fill="rgb(227,56,16)" fg:x="63602" fg:w="36"/><text x="97.8605%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.06%)</title><rect x="97.6105%" y="453" width="0.0552%" height="15" fill="rgb(245,53,0)" fg:x="63602" fg:w="36"/><text x="97.8605%" y="463.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.06%)</title><rect x="97.6105%" y="437" width="0.0552%" height="15" fill="rgb(216,170,35)" fg:x="63602" fg:w="36"/><text x="97.8605%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (38 samples, 0.06%)</title><rect x="97.6089%" y="517" width="0.0583%" height="15" fill="rgb(211,200,8)" fg:x="63601" fg:w="38"/><text x="97.8589%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (38 samples, 0.06%)</title><rect x="97.6089%" y="501" width="0.0583%" height="15" fill="rgb(228,204,44)" fg:x="63601" fg:w="38"/><text x="97.8589%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (38 samples, 0.06%)</title><rect x="97.6089%" y="485" width="0.0583%" height="15" fill="rgb(214,121,17)" fg:x="63601" fg:w="38"/><text x="97.8589%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (52 samples, 0.08%)</title><rect x="97.6089%" y="581" width="0.0798%" height="15" fill="rgb(233,64,38)" fg:x="63601" fg:w="52"/><text x="97.8589%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (52 samples, 0.08%)</title><rect x="97.6089%" y="565" width="0.0798%" height="15" fill="rgb(253,54,19)" fg:x="63601" fg:w="52"/><text x="97.8589%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (52 samples, 0.08%)</title><rect x="97.6089%" y="549" width="0.0798%" height="15" fill="rgb(253,94,18)" fg:x="63601" fg:w="52"/><text x="97.8589%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (52 samples, 0.08%)</title><rect x="97.6089%" y="533" width="0.0798%" height="15" fill="rgb(227,57,52)" fg:x="63601" fg:w="52"/><text x="97.8589%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (14 samples, 0.02%)</title><rect x="97.6672%" y="517" width="0.0215%" height="15" fill="rgb(230,228,50)" fg:x="63639" fg:w="14"/><text x="97.9172%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.02%)</title><rect x="97.6672%" y="501" width="0.0215%" height="15" fill="rgb(217,205,27)" fg:x="63639" fg:w="14"/><text x="97.9172%" y="511.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (11 samples, 0.02%)</title><rect x="97.6718%" y="485" width="0.0169%" height="15" fill="rgb(252,71,50)" fg:x="63642" fg:w="11"/><text x="97.9218%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.01%)</title><rect x="97.6887%" y="581" width="0.0138%" height="15" fill="rgb(209,86,4)" fg:x="63653" fg:w="9"/><text x="97.9387%" y="591.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="97.6918%" y="565" width="0.0107%" height="15" fill="rgb(229,94,0)" fg:x="63655" fg:w="7"/><text x="97.9418%" y="575.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.02%)</title><rect x="97.7133%" y="501" width="0.0169%" height="15" fill="rgb(252,223,21)" fg:x="63669" fg:w="11"/><text x="97.9633%" y="511.50"></text></g><g><title>core::cmp::PartialOrd::lt (13 samples, 0.02%)</title><rect x="97.7118%" y="581" width="0.0200%" height="15" fill="rgb(230,210,4)" fg:x="63668" fg:w="13"/><text x="97.9618%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::PartialOrd&gt;::partial_cmp (13 samples, 0.02%)</title><rect x="97.7118%" y="565" width="0.0200%" height="15" fill="rgb(240,149,38)" fg:x="63668" fg:w="13"/><text x="97.9618%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (13 samples, 0.02%)</title><rect x="97.7118%" y="549" width="0.0200%" height="15" fill="rgb(254,105,20)" fg:x="63668" fg:w="13"/><text x="97.9618%" y="559.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (13 samples, 0.02%)</title><rect x="97.7118%" y="533" width="0.0200%" height="15" fill="rgb(253,87,46)" fg:x="63668" fg:w="13"/><text x="97.9618%" y="543.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (13 samples, 0.02%)</title><rect x="97.7118%" y="517" width="0.0200%" height="15" fill="rgb(253,116,33)" fg:x="63668" fg:w="13"/><text x="97.9618%" y="527.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (12 samples, 0.02%)</title><rect x="97.7332%" y="437" width="0.0184%" height="15" fill="rgb(229,198,5)" fg:x="63682" fg:w="12"/><text x="97.9832%" y="447.50"></text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (11 samples, 0.02%)</title><rect x="97.7348%" y="421" width="0.0169%" height="15" fill="rgb(242,38,37)" fg:x="63683" fg:w="11"/><text x="97.9848%" y="431.50"></text></g><g><title>std::io::Read::read_exact (9 samples, 0.01%)</title><rect x="97.7378%" y="405" width="0.0138%" height="15" fill="rgb(242,69,53)" fg:x="63685" fg:w="9"/><text x="97.9878%" y="415.50"></text></g><g><title>std::io::default_read_exact (9 samples, 0.01%)</title><rect x="97.7378%" y="389" width="0.0138%" height="15" fill="rgb(249,80,16)" fg:x="63685" fg:w="9"/><text x="97.9878%" y="399.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (9 samples, 0.01%)</title><rect x="97.7378%" y="373" width="0.0138%" height="15" fill="rgb(206,128,11)" fg:x="63685" fg:w="9"/><text x="97.9878%" y="383.50"></text></g><g><title>std::sys::unix::fs::File::read (9 samples, 0.01%)</title><rect x="97.7378%" y="357" width="0.0138%" height="15" fill="rgb(212,35,20)" fg:x="63685" fg:w="9"/><text x="97.9878%" y="367.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (9 samples, 0.01%)</title><rect x="97.7378%" y="341" width="0.0138%" height="15" fill="rgb(236,79,13)" fg:x="63685" fg:w="9"/><text x="97.9878%" y="351.50"></text></g><g><title>__libc_read (9 samples, 0.01%)</title><rect x="97.7378%" y="325" width="0.0138%" height="15" fill="rgb(233,123,3)" fg:x="63685" fg:w="9"/><text x="97.9878%" y="335.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="97.7378%" y="309" width="0.0138%" height="15" fill="rgb(214,93,52)" fg:x="63685" fg:w="9"/><text x="97.9878%" y="319.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="97.7378%" y="293" width="0.0138%" height="15" fill="rgb(251,37,40)" fg:x="63685" fg:w="9"/><text x="97.9878%" y="303.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (14 samples, 0.02%)</title><rect x="97.7317%" y="485" width="0.0215%" height="15" fill="rgb(227,80,54)" fg:x="63681" fg:w="14"/><text x="97.9817%" y="495.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::remove::{{closure}} (14 samples, 0.02%)</title><rect x="97.7317%" y="469" width="0.0215%" height="15" fill="rgb(254,48,11)" fg:x="63681" fg:w="14"/><text x="97.9817%" y="479.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (13 samples, 0.02%)</title><rect x="97.7332%" y="453" width="0.0200%" height="15" fill="rgb(235,193,26)" fg:x="63682" fg:w="13"/><text x="97.9832%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.02%)</title><rect x="97.7317%" y="533" width="0.0246%" height="15" fill="rgb(229,99,21)" fg:x="63681" fg:w="16"/><text x="97.9817%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.02%)</title><rect x="97.7317%" y="517" width="0.0246%" height="15" fill="rgb(211,140,41)" fg:x="63681" fg:w="16"/><text x="97.9817%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.02%)</title><rect x="97.7317%" y="501" width="0.0246%" height="15" fill="rgb(240,227,30)" fg:x="63681" fg:w="16"/><text x="97.9817%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.04%)</title><rect x="97.7609%" y="341" width="0.0384%" height="15" fill="rgb(215,224,45)" fg:x="63700" fg:w="25"/><text x="98.0109%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.04%)</title><rect x="97.7609%" y="325" width="0.0384%" height="15" fill="rgb(206,123,31)" fg:x="63700" fg:w="25"/><text x="98.0109%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (25 samples, 0.04%)</title><rect x="97.7609%" y="309" width="0.0384%" height="15" fill="rgb(210,138,16)" fg:x="63700" fg:w="25"/><text x="98.0109%" y="319.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (25 samples, 0.04%)</title><rect x="97.7609%" y="293" width="0.0384%" height="15" fill="rgb(228,57,28)" fg:x="63700" fg:w="25"/><text x="98.0109%" y="303.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (21 samples, 0.03%)</title><rect x="97.7670%" y="277" width="0.0322%" height="15" fill="rgb(242,170,10)" fg:x="63704" fg:w="21"/><text x="98.0170%" y="287.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (19 samples, 0.03%)</title><rect x="97.7701%" y="261" width="0.0292%" height="15" fill="rgb(228,214,39)" fg:x="63706" fg:w="19"/><text x="98.0201%" y="271.50"></text></g><g><title>yakvdb::disk::block::get_u32 (8 samples, 0.01%)</title><rect x="97.7870%" y="245" width="0.0123%" height="15" fill="rgb(218,179,33)" fg:x="63717" fg:w="8"/><text x="98.0370%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.01%)</title><rect x="97.7885%" y="229" width="0.0107%" height="15" fill="rgb(235,193,39)" fg:x="63718" fg:w="7"/><text x="98.0385%" y="239.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.01%)</title><rect x="97.7885%" y="213" width="0.0107%" height="15" fill="rgb(219,221,36)" fg:x="63718" fg:w="7"/><text x="98.0385%" y="223.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::full (28 samples, 0.04%)</title><rect x="97.7578%" y="421" width="0.0430%" height="15" fill="rgb(248,218,19)" fg:x="63698" fg:w="28"/><text x="98.0078%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (27 samples, 0.04%)</title><rect x="97.7593%" y="405" width="0.0414%" height="15" fill="rgb(205,50,9)" fg:x="63699" fg:w="27"/><text x="98.0093%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (26 samples, 0.04%)</title><rect x="97.7609%" y="389" width="0.0399%" height="15" fill="rgb(238,81,28)" fg:x="63700" fg:w="26"/><text x="98.0109%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (26 samples, 0.04%)</title><rect x="97.7609%" y="373" width="0.0399%" height="15" fill="rgb(235,110,19)" fg:x="63700" fg:w="26"/><text x="98.0109%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (26 samples, 0.04%)</title><rect x="97.7609%" y="357" width="0.0399%" height="15" fill="rgb(214,7,14)" fg:x="63700" fg:w="26"/><text x="98.0109%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.01%)</title><rect x="97.8192%" y="373" width="0.0107%" height="15" fill="rgb(211,77,3)" fg:x="63738" fg:w="7"/><text x="98.0692%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.01%)</title><rect x="97.8192%" y="357" width="0.0107%" height="15" fill="rgb(229,5,9)" fg:x="63738" fg:w="7"/><text x="98.0692%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.01%)</title><rect x="97.8315%" y="309" width="0.0107%" height="15" fill="rgb(225,90,11)" fg:x="63746" fg:w="7"/><text x="98.0815%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (7 samples, 0.01%)</title><rect x="97.8315%" y="293" width="0.0107%" height="15" fill="rgb(242,56,8)" fg:x="63746" fg:w="7"/><text x="98.0815%" y="303.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (9 samples, 0.01%)</title><rect x="97.8299%" y="373" width="0.0138%" height="15" fill="rgb(249,212,39)" fg:x="63745" fg:w="9"/><text x="98.0799%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (9 samples, 0.01%)</title><rect x="97.8299%" y="357" width="0.0138%" height="15" fill="rgb(236,90,9)" fg:x="63745" fg:w="9"/><text x="98.0799%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (9 samples, 0.01%)</title><rect x="97.8299%" y="341" width="0.0138%" height="15" fill="rgb(206,88,35)" fg:x="63745" fg:w="9"/><text x="98.0799%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (8 samples, 0.01%)</title><rect x="97.8315%" y="325" width="0.0123%" height="15" fill="rgb(205,126,30)" fg:x="63746" fg:w="8"/><text x="98.0815%" y="335.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::put (26 samples, 0.04%)</title><rect x="97.8115%" y="389" width="0.0399%" height="15" fill="rgb(230,176,12)" fg:x="63733" fg:w="26"/><text x="98.0615%" y="399.50"></text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (64 samples, 0.10%)</title><rect x="97.8560%" y="373" width="0.0982%" height="15" fill="rgb(243,19,9)" fg:x="63762" fg:w="64"/><text x="98.1060%" y="383.50"></text></g><g><title>std::sys::unix::fs::File::seek (63 samples, 0.10%)</title><rect x="97.8575%" y="357" width="0.0967%" height="15" fill="rgb(245,171,17)" fg:x="63763" fg:w="63"/><text x="98.1075%" y="367.50"></text></g><g><title>__lseek64 (62 samples, 0.10%)</title><rect x="97.8591%" y="341" width="0.0952%" height="15" fill="rgb(227,52,21)" fg:x="63764" fg:w="62"/><text x="98.1091%" y="351.50"></text></g><g><title>[unknown] (61 samples, 0.09%)</title><rect x="97.8606%" y="325" width="0.0936%" height="15" fill="rgb(238,69,14)" fg:x="63765" fg:w="61"/><text x="98.1106%" y="335.50"></text></g><g><title>[unknown] (43 samples, 0.07%)</title><rect x="97.8882%" y="309" width="0.0660%" height="15" fill="rgb(241,156,39)" fg:x="63783" fg:w="43"/><text x="98.1382%" y="319.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="97.9374%" y="293" width="0.0169%" height="15" fill="rgb(212,227,28)" fg:x="63815" fg:w="11"/><text x="98.1874%" y="303.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="97.9374%" y="277" width="0.0169%" height="15" fill="rgb(209,118,27)" fg:x="63815" fg:w="11"/><text x="98.1874%" y="287.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="97.9420%" y="261" width="0.0123%" height="15" fill="rgb(226,102,5)" fg:x="63818" fg:w="8"/><text x="98.1920%" y="271.50"></text></g><g><title>__memset_sse2_unaligned_erms (24 samples, 0.04%)</title><rect x="97.9604%" y="229" width="0.0368%" height="15" fill="rgb(223,34,3)" fg:x="63830" fg:w="24"/><text x="98.2104%" y="239.50"></text></g><g><title>alloc::vec::from_elem (30 samples, 0.05%)</title><rect x="97.9573%" y="357" width="0.0460%" height="15" fill="rgb(221,81,38)" fg:x="63828" fg:w="30"/><text x="98.2073%" y="367.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (30 samples, 0.05%)</title><rect x="97.9573%" y="341" width="0.0460%" height="15" fill="rgb(236,219,28)" fg:x="63828" fg:w="30"/><text x="98.2073%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (30 samples, 0.05%)</title><rect x="97.9573%" y="325" width="0.0460%" height="15" fill="rgb(213,200,14)" fg:x="63828" fg:w="30"/><text x="98.2073%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.05%)</title><rect x="97.9573%" y="309" width="0.0460%" height="15" fill="rgb(240,33,19)" fg:x="63828" fg:w="30"/><text x="98.2073%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (30 samples, 0.05%)</title><rect x="97.9573%" y="293" width="0.0460%" height="15" fill="rgb(233,113,27)" fg:x="63828" fg:w="30"/><text x="98.2073%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.05%)</title><rect x="97.9573%" y="277" width="0.0460%" height="15" fill="rgb(220,221,18)" fg:x="63828" fg:w="30"/><text x="98.2073%" y="287.50"></text></g><g><title>alloc::alloc::alloc_zeroed (30 samples, 0.05%)</title><rect x="97.9573%" y="261" width="0.0460%" height="15" fill="rgb(238,92,8)" fg:x="63828" fg:w="30"/><text x="98.2073%" y="271.50"></text></g><g><title>__calloc (30 samples, 0.05%)</title><rect x="97.9573%" y="245" width="0.0460%" height="15" fill="rgb(222,164,16)" fg:x="63828" fg:w="30"/><text x="98.2073%" y="255.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (24 samples, 0.04%)</title><rect x="98.0033%" y="357" width="0.0368%" height="15" fill="rgb(241,119,3)" fg:x="63858" fg:w="24"/><text x="98.2533%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.03%)</title><rect x="98.0064%" y="341" width="0.0338%" height="15" fill="rgb(241,44,8)" fg:x="63860" fg:w="22"/><text x="98.2564%" y="351.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (22 samples, 0.03%)</title><rect x="98.0064%" y="325" width="0.0338%" height="15" fill="rgb(230,36,40)" fg:x="63860" fg:w="22"/><text x="98.2564%" y="335.50"></text></g><g><title>malloc_consolidate (46 samples, 0.07%)</title><rect x="98.0693%" y="197" width="0.0706%" height="15" fill="rgb(243,16,36)" fg:x="63901" fg:w="46"/><text x="98.3193%" y="207.50"></text></g><g><title>unlink_chunk.isra.0 (10 samples, 0.02%)</title><rect x="98.1246%" y="181" width="0.0153%" height="15" fill="rgb(231,4,26)" fg:x="63937" fg:w="10"/><text x="98.3746%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (66 samples, 0.10%)</title><rect x="98.0402%" y="341" width="0.1013%" height="15" fill="rgb(240,9,31)" fg:x="63882" fg:w="66"/><text x="98.2902%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (66 samples, 0.10%)</title><rect x="98.0402%" y="325" width="0.1013%" height="15" fill="rgb(207,173,15)" fg:x="63882" fg:w="66"/><text x="98.2902%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (66 samples, 0.10%)</title><rect x="98.0402%" y="309" width="0.1013%" height="15" fill="rgb(224,192,53)" fg:x="63882" fg:w="66"/><text x="98.2902%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (66 samples, 0.10%)</title><rect x="98.0402%" y="293" width="0.1013%" height="15" fill="rgb(223,67,28)" fg:x="63882" fg:w="66"/><text x="98.2902%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (65 samples, 0.10%)</title><rect x="98.0417%" y="277" width="0.0998%" height="15" fill="rgb(211,20,47)" fg:x="63883" fg:w="65"/><text x="98.2917%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (65 samples, 0.10%)</title><rect x="98.0417%" y="261" width="0.0998%" height="15" fill="rgb(240,228,2)" fg:x="63883" fg:w="65"/><text x="98.2917%" y="271.50"></text></g><g><title>alloc::alloc::alloc (65 samples, 0.10%)</title><rect x="98.0417%" y="245" width="0.0998%" height="15" fill="rgb(248,151,12)" fg:x="63883" fg:w="65"/><text x="98.2917%" y="255.50"></text></g><g><title>__GI___libc_malloc (65 samples, 0.10%)</title><rect x="98.0417%" y="229" width="0.0998%" height="15" fill="rgb(244,8,39)" fg:x="63883" fg:w="65"/><text x="98.2917%" y="239.50"></text></g><g><title>_int_malloc (63 samples, 0.10%)</title><rect x="98.0448%" y="213" width="0.0967%" height="15" fill="rgb(222,26,8)" fg:x="63885" fg:w="63"/><text x="98.2948%" y="223.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (67 samples, 0.10%)</title><rect x="98.0402%" y="357" width="0.1028%" height="15" fill="rgb(213,106,44)" fg:x="63882" fg:w="67"/><text x="98.2902%" y="367.50"></text></g><g><title>__libc_read (9 samples, 0.01%)</title><rect x="98.1461%" y="277" width="0.0138%" height="15" fill="rgb(214,129,20)" fg:x="63951" fg:w="9"/><text x="98.3961%" y="287.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="98.1461%" y="261" width="0.0138%" height="15" fill="rgb(212,32,13)" fg:x="63951" fg:w="9"/><text x="98.3961%" y="271.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::reserve (137 samples, 0.21%)</title><rect x="97.9542%" y="373" width="0.2103%" height="15" fill="rgb(208,168,33)" fg:x="63826" fg:w="137"/><text x="98.2042%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.02%)</title><rect x="98.1430%" y="357" width="0.0215%" height="15" fill="rgb(231,207,8)" fg:x="63949" fg:w="14"/><text x="98.3930%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.02%)</title><rect x="98.1430%" y="341" width="0.0215%" height="15" fill="rgb(235,219,23)" fg:x="63949" fg:w="14"/><text x="98.3930%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="98.1430%" y="325" width="0.0215%" height="15" fill="rgb(226,216,26)" fg:x="63949" fg:w="14"/><text x="98.3930%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.02%)</title><rect x="98.1430%" y="309" width="0.0215%" height="15" fill="rgb(239,137,16)" fg:x="63949" fg:w="14"/><text x="98.3930%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.02%)</title><rect x="98.1430%" y="293" width="0.0215%" height="15" fill="rgb(207,12,36)" fg:x="63949" fg:w="14"/><text x="98.3930%" y="303.50"></text></g><g><title>yakvdb::disk::file::File&lt;P&gt;::load (462 samples, 0.71%)</title><rect x="97.8529%" y="389" width="0.7090%" height="15" fill="rgb(210,214,24)" fg:x="63760" fg:w="462"/><text x="98.1029%" y="399.50"></text></g><g><title>std::io::Read::read_exact (258 samples, 0.40%)</title><rect x="98.1660%" y="373" width="0.3960%" height="15" fill="rgb(206,56,30)" fg:x="63964" fg:w="258"/><text x="98.4160%" y="383.50"></text></g><g><title>std::io::default_read_exact (258 samples, 0.40%)</title><rect x="98.1660%" y="357" width="0.3960%" height="15" fill="rgb(228,143,26)" fg:x="63964" fg:w="258"/><text x="98.4160%" y="367.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (258 samples, 0.40%)</title><rect x="98.1660%" y="341" width="0.3960%" height="15" fill="rgb(216,218,46)" fg:x="63964" fg:w="258"/><text x="98.4160%" y="351.50"></text></g><g><title>std::sys::unix::fs::File::read (258 samples, 0.40%)</title><rect x="98.1660%" y="325" width="0.3960%" height="15" fill="rgb(206,6,19)" fg:x="63964" fg:w="258"/><text x="98.4160%" y="335.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (258 samples, 0.40%)</title><rect x="98.1660%" y="309" width="0.3960%" height="15" fill="rgb(239,177,51)" fg:x="63964" fg:w="258"/><text x="98.4160%" y="319.50"></text></g><g><title>__libc_read (258 samples, 0.40%)</title><rect x="98.1660%" y="293" width="0.3960%" height="15" fill="rgb(216,55,25)" fg:x="63964" fg:w="258"/><text x="98.4160%" y="303.50"></text></g><g><title>[unknown] (255 samples, 0.39%)</title><rect x="98.1706%" y="277" width="0.3914%" height="15" fill="rgb(231,163,29)" fg:x="63967" fg:w="255"/><text x="98.4206%" y="287.50"></text></g><g><title>[unknown] (236 samples, 0.36%)</title><rect x="98.1998%" y="261" width="0.3622%" height="15" fill="rgb(232,149,50)" fg:x="63986" fg:w="236"/><text x="98.4498%" y="271.50"></text></g><g><title>[unknown] (198 samples, 0.30%)</title><rect x="98.2581%" y="245" width="0.3039%" height="15" fill="rgb(223,142,48)" fg:x="64024" fg:w="198"/><text x="98.5081%" y="255.50"></text></g><g><title>[unknown] (198 samples, 0.30%)</title><rect x="98.2581%" y="229" width="0.3039%" height="15" fill="rgb(245,83,23)" fg:x="64024" fg:w="198"/><text x="98.5081%" y="239.50"></text></g><g><title>[unknown] (196 samples, 0.30%)</title><rect x="98.2612%" y="213" width="0.3008%" height="15" fill="rgb(224,63,2)" fg:x="64026" fg:w="196"/><text x="98.5112%" y="223.50"></text></g><g><title>[unknown] (190 samples, 0.29%)</title><rect x="98.2704%" y="197" width="0.2916%" height="15" fill="rgb(218,65,53)" fg:x="64032" fg:w="190"/><text x="98.5204%" y="207.50"></text></g><g><title>[unknown] (184 samples, 0.28%)</title><rect x="98.2796%" y="181" width="0.2824%" height="15" fill="rgb(221,84,29)" fg:x="64038" fg:w="184"/><text x="98.5296%" y="191.50"></text></g><g><title>[unknown] (169 samples, 0.26%)</title><rect x="98.3026%" y="165" width="0.2594%" height="15" fill="rgb(234,0,32)" fg:x="64053" fg:w="169"/><text x="98.5526%" y="175.50"></text></g><g><title>[unknown] (164 samples, 0.25%)</title><rect x="98.3103%" y="149" width="0.2517%" height="15" fill="rgb(206,20,16)" fg:x="64058" fg:w="164"/><text x="98.5603%" y="159.50"></text></g><g><title>[unknown] (160 samples, 0.25%)</title><rect x="98.3164%" y="133" width="0.2456%" height="15" fill="rgb(244,172,18)" fg:x="64062" fg:w="160"/><text x="98.5664%" y="143.50"></text></g><g><title>[unknown] (149 samples, 0.23%)</title><rect x="98.3333%" y="117" width="0.2287%" height="15" fill="rgb(254,133,1)" fg:x="64073" fg:w="149"/><text x="98.5833%" y="127.50"></text></g><g><title>[unknown] (139 samples, 0.21%)</title><rect x="98.3487%" y="101" width="0.2133%" height="15" fill="rgb(222,206,41)" fg:x="64083" fg:w="139"/><text x="98.5987%" y="111.50"></text></g><g><title>[unknown] (27 samples, 0.04%)</title><rect x="98.5205%" y="85" width="0.0414%" height="15" fill="rgb(212,3,42)" fg:x="64195" fg:w="27"/><text x="98.7705%" y="95.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::cache (497 samples, 0.76%)</title><rect x="97.8008%" y="405" width="0.7627%" height="15" fill="rgb(241,11,4)" fg:x="63726" fg:w="497"/><text x="98.0508%" y="415.50"></text></g><g><title>core::cell::Ref&lt;T&gt;::map (16 samples, 0.02%)</title><rect x="98.5635%" y="405" width="0.0246%" height="15" fill="rgb(205,19,26)" fg:x="64223" fg:w="16"/><text x="98.8135%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page::{{closure}} (16 samples, 0.02%)</title><rect x="98.5635%" y="389" width="0.0246%" height="15" fill="rgb(210,179,32)" fg:x="64223" fg:w="16"/><text x="98.8135%" y="399.50"></text></g><g><title>&lt;yakvdb::util::cache::LruCache&lt;K,V&gt; as yakvdb::util::cache::Cache&lt;K,V&gt;&gt;::get (16 samples, 0.02%)</title><rect x="98.5635%" y="373" width="0.0246%" height="15" fill="rgb(227,116,49)" fg:x="64223" fg:w="16"/><text x="98.8135%" y="383.50"></text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (7 samples, 0.01%)</title><rect x="98.5773%" y="357" width="0.0107%" height="15" fill="rgb(211,146,6)" fg:x="64232" fg:w="7"/><text x="98.8273%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by_key (561 samples, 0.86%)</title><rect x="97.7317%" y="581" width="0.8610%" height="15" fill="rgb(219,44,39)" fg:x="63681" fg:w="561"/><text x="97.9817%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (561 samples, 0.86%)</title><rect x="97.7317%" y="565" width="0.8610%" height="15" fill="rgb(234,128,11)" fg:x="63681" fg:w="561"/><text x="97.9817%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (561 samples, 0.86%)</title><rect x="97.7317%" y="549" width="0.8610%" height="15" fill="rgb(220,183,53)" fg:x="63681" fg:w="561"/><text x="97.9817%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (545 samples, 0.84%)</title><rect x="97.7563%" y="533" width="0.8364%" height="15" fill="rgb(213,219,32)" fg:x="63697" fg:w="545"/><text x="98.0063%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (545 samples, 0.84%)</title><rect x="97.7563%" y="517" width="0.8364%" height="15" fill="rgb(232,156,16)" fg:x="63697" fg:w="545"/><text x="98.0063%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (545 samples, 0.84%)</title><rect x="97.7563%" y="501" width="0.8364%" height="15" fill="rgb(246,135,34)" fg:x="63697" fg:w="545"/><text x="98.0063%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (545 samples, 0.84%)</title><rect x="97.7563%" y="485" width="0.8364%" height="15" fill="rgb(241,99,0)" fg:x="63697" fg:w="545"/><text x="98.0063%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (545 samples, 0.84%)</title><rect x="97.7563%" y="469" width="0.8364%" height="15" fill="rgb(222,103,45)" fg:x="63697" fg:w="545"/><text x="98.0063%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (545 samples, 0.84%)</title><rect x="97.7563%" y="453" width="0.8364%" height="15" fill="rgb(212,57,4)" fg:x="63697" fg:w="545"/><text x="98.0063%" y="463.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::remove::{{closure}} (545 samples, 0.84%)</title><rect x="97.7563%" y="437" width="0.8364%" height="15" fill="rgb(215,68,47)" fg:x="63697" fg:w="545"/><text x="98.0063%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::page (516 samples, 0.79%)</title><rect x="97.8008%" y="421" width="0.7919%" height="15" fill="rgb(230,84,2)" fg:x="63726" fg:w="516"/><text x="98.0508%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.02%)</title><rect x="98.6142%" y="533" width="0.0169%" height="15" fill="rgb(220,102,14)" fg:x="64256" fg:w="11"/><text x="98.8642%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.02%)</title><rect x="98.6142%" y="517" width="0.0169%" height="15" fill="rgb(240,10,32)" fg:x="64256" fg:w="11"/><text x="98.8642%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u32,u32)&gt;&gt; (16 samples, 0.02%)</title><rect x="98.6080%" y="581" width="0.0246%" height="15" fill="rgb(215,47,27)" fg:x="64252" fg:w="16"/><text x="98.8580%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u32,u32)&gt;&gt; (16 samples, 0.02%)</title><rect x="98.6080%" y="565" width="0.0246%" height="15" fill="rgb(233,188,43)" fg:x="64252" fg:w="16"/><text x="98.8580%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="98.6080%" y="549" width="0.0246%" height="15" fill="rgb(253,190,1)" fg:x="64252" fg:w="16"/><text x="98.8580%" y="559.50"></text></g><g><title>__GI___libc_free (11 samples, 0.02%)</title><rect x="98.6341%" y="501" width="0.0169%" height="15" fill="rgb(206,114,52)" fg:x="64269" fg:w="11"/><text x="98.8841%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (32 samples, 0.05%)</title><rect x="98.6326%" y="533" width="0.0491%" height="15" fill="rgb(233,120,37)" fg:x="64268" fg:w="32"/><text x="98.8826%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.05%)</title><rect x="98.6326%" y="517" width="0.0491%" height="15" fill="rgb(214,52,39)" fg:x="64268" fg:w="32"/><text x="98.8826%" y="527.50"></text></g><g><title>_int_free (19 samples, 0.03%)</title><rect x="98.6525%" y="501" width="0.0292%" height="15" fill="rgb(223,80,29)" fg:x="64281" fg:w="19"/><text x="98.9025%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (35 samples, 0.05%)</title><rect x="98.6326%" y="581" width="0.0537%" height="15" fill="rgb(230,101,40)" fg:x="64268" fg:w="35"/><text x="98.8826%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (35 samples, 0.05%)</title><rect x="98.6326%" y="565" width="0.0537%" height="15" fill="rgb(219,211,8)" fg:x="64268" fg:w="35"/><text x="98.8826%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.05%)</title><rect x="98.6326%" y="549" width="0.0537%" height="15" fill="rgb(252,126,28)" fg:x="64268" fg:w="35"/><text x="98.8826%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.02%)</title><rect x="98.6894%" y="469" width="0.0153%" height="15" fill="rgb(215,56,38)" fg:x="64305" fg:w="10"/><text x="98.9394%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.01%)</title><rect x="98.6909%" y="453" width="0.0138%" height="15" fill="rgb(249,55,44)" fg:x="64306" fg:w="9"/><text x="98.9409%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (11 samples, 0.02%)</title><rect x="98.6894%" y="501" width="0.0169%" height="15" fill="rgb(220,221,32)" fg:x="64305" fg:w="11"/><text x="98.9394%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (11 samples, 0.02%)</title><rect x="98.6894%" y="485" width="0.0169%" height="15" fill="rgb(212,216,41)" fg:x="64305" fg:w="11"/><text x="98.9394%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;u32&gt;&gt; (13 samples, 0.02%)</title><rect x="98.6878%" y="581" width="0.0200%" height="15" fill="rgb(228,213,43)" fg:x="64304" fg:w="13"/><text x="98.9378%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;u32,std::collections::hash::map::RandomState&gt;&gt; (13 samples, 0.02%)</title><rect x="98.6878%" y="565" width="0.0200%" height="15" fill="rgb(211,31,26)" fg:x="64304" fg:w="13"/><text x="98.9378%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,(),std::collections::hash::map::RandomState&gt;&gt; (13 samples, 0.02%)</title><rect x="98.6878%" y="549" width="0.0200%" height="15" fill="rgb(229,202,19)" fg:x="64304" fg:w="13"/><text x="98.9378%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,())&gt;&gt; (13 samples, 0.02%)</title><rect x="98.6878%" y="533" width="0.0200%" height="15" fill="rgb(229,105,46)" fg:x="64304" fg:w="13"/><text x="98.9378%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="98.6878%" y="517" width="0.0200%" height="15" fill="rgb(235,108,1)" fg:x="64304" fg:w="13"/><text x="98.9378%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="98.7216%" y="421" width="0.0123%" height="15" fill="rgb(245,111,35)" fg:x="64326" fg:w="8"/><text x="98.9716%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.03%)</title><rect x="98.7108%" y="517" width="0.0261%" height="15" fill="rgb(219,185,31)" fg:x="64319" fg:w="17"/><text x="98.9608%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.03%)</title><rect x="98.7108%" y="501" width="0.0261%" height="15" fill="rgb(214,4,43)" fg:x="64319" fg:w="17"/><text x="98.9608%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="98.7108%" y="485" width="0.0261%" height="15" fill="rgb(235,227,40)" fg:x="64319" fg:w="17"/><text x="98.9608%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="98.7108%" y="469" width="0.0261%" height="15" fill="rgb(230,88,30)" fg:x="64319" fg:w="17"/><text x="98.9608%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.03%)</title><rect x="98.7108%" y="453" width="0.0261%" height="15" fill="rgb(216,217,1)" fg:x="64319" fg:w="17"/><text x="98.9608%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.02%)</title><rect x="98.7201%" y="437" width="0.0169%" height="15" fill="rgb(248,139,50)" fg:x="64325" fg:w="11"/><text x="98.9701%" y="447.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (22 samples, 0.03%)</title><rect x="98.7093%" y="581" width="0.0338%" height="15" fill="rgb(233,1,21)" fg:x="64318" fg:w="22"/><text x="98.9593%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (22 samples, 0.03%)</title><rect x="98.7093%" y="565" width="0.0338%" height="15" fill="rgb(215,183,12)" fg:x="64318" fg:w="22"/><text x="98.9593%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (22 samples, 0.03%)</title><rect x="98.7093%" y="549" width="0.0338%" height="15" fill="rgb(229,104,42)" fg:x="64318" fg:w="22"/><text x="98.9593%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22 samples, 0.03%)</title><rect x="98.7093%" y="533" width="0.0338%" height="15" fill="rgb(243,34,48)" fg:x="64318" fg:w="22"/><text x="98.9593%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="98.7461%" y="501" width="0.0246%" height="15" fill="rgb(239,11,44)" fg:x="64342" fg:w="16"/><text x="98.9961%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="98.7461%" y="485" width="0.0246%" height="15" fill="rgb(231,98,35)" fg:x="64342" fg:w="16"/><text x="98.9961%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="98.7461%" y="469" width="0.0246%" height="15" fill="rgb(233,28,25)" fg:x="64342" fg:w="16"/><text x="98.9961%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.02%)</title><rect x="98.7554%" y="453" width="0.0153%" height="15" fill="rgb(234,123,11)" fg:x="64348" fg:w="10"/><text x="99.0054%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.01%)</title><rect x="98.7584%" y="437" width="0.0123%" height="15" fill="rgb(220,69,3)" fg:x="64350" fg:w="8"/><text x="99.0084%" y="447.50"></text></g><g><title>hashbrown::map::make_insert_hash (17 samples, 0.03%)</title><rect x="98.7461%" y="533" width="0.0261%" height="15" fill="rgb(214,64,36)" fg:x="64342" fg:w="17"/><text x="98.9961%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.03%)</title><rect x="98.7461%" y="517" width="0.0261%" height="15" fill="rgb(211,138,32)" fg:x="64342" fg:w="17"/><text x="98.9961%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 0.02%)</title><rect x="98.7722%" y="533" width="0.0153%" height="15" fill="rgb(213,118,47)" fg:x="64359" fg:w="10"/><text x="99.0222%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.02%)</title><rect x="98.7722%" y="517" width="0.0153%" height="15" fill="rgb(243,124,49)" fg:x="64359" fg:w="10"/><text x="99.0222%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 0.02%)</title><rect x="98.7722%" y="501" width="0.0153%" height="15" fill="rgb(221,30,28)" fg:x="64359" fg:w="10"/><text x="99.0222%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (10 samples, 0.02%)</title><rect x="98.7891%" y="517" width="0.0153%" height="15" fill="rgb(246,37,13)" fg:x="64370" fg:w="10"/><text x="99.0391%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (42 samples, 0.06%)</title><rect x="98.7431%" y="581" width="0.0645%" height="15" fill="rgb(249,66,14)" fg:x="64340" fg:w="42"/><text x="98.9931%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (42 samples, 0.06%)</title><rect x="98.7431%" y="565" width="0.0645%" height="15" fill="rgb(213,166,5)" fg:x="64340" fg:w="42"/><text x="98.9931%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (42 samples, 0.06%)</title><rect x="98.7431%" y="549" width="0.0645%" height="15" fill="rgb(221,66,24)" fg:x="64340" fg:w="42"/><text x="98.9931%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (13 samples, 0.02%)</title><rect x="98.7876%" y="533" width="0.0200%" height="15" fill="rgb(210,132,17)" fg:x="64369" fg:w="13"/><text x="99.0376%" y="543.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.02%)</title><rect x="98.8290%" y="389" width="0.0184%" height="15" fill="rgb(243,202,5)" fg:x="64396" fg:w="12"/><text x="99.0790%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (18 samples, 0.03%)</title><rect x="98.8229%" y="469" width="0.0276%" height="15" fill="rgb(233,70,48)" fg:x="64392" fg:w="18"/><text x="99.0729%" y="479.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (14 samples, 0.02%)</title><rect x="98.8290%" y="453" width="0.0215%" height="15" fill="rgb(238,41,26)" fg:x="64396" fg:w="14"/><text x="99.0790%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.02%)</title><rect x="98.8290%" y="437" width="0.0215%" height="15" fill="rgb(241,19,31)" fg:x="64396" fg:w="14"/><text x="99.0790%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.02%)</title><rect x="98.8290%" y="421" width="0.0215%" height="15" fill="rgb(214,76,10)" fg:x="64396" fg:w="14"/><text x="99.0790%" y="431.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.02%)</title><rect x="98.8290%" y="405" width="0.0215%" height="15" fill="rgb(254,202,22)" fg:x="64396" fg:w="14"/><text x="99.0790%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::with_capacity (33 samples, 0.05%)</title><rect x="98.8075%" y="581" width="0.0506%" height="15" fill="rgb(214,72,24)" fg:x="64382" fg:w="33"/><text x="99.0575%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::with_capacity_and_hasher (32 samples, 0.05%)</title><rect x="98.8091%" y="565" width="0.0491%" height="15" fill="rgb(221,92,46)" fg:x="64383" fg:w="32"/><text x="99.0591%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (24 samples, 0.04%)</title><rect x="98.8213%" y="549" width="0.0368%" height="15" fill="rgb(246,13,50)" fg:x="64391" fg:w="24"/><text x="99.0713%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (24 samples, 0.04%)</title><rect x="98.8213%" y="533" width="0.0368%" height="15" fill="rgb(240,165,38)" fg:x="64391" fg:w="24"/><text x="99.0713%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (24 samples, 0.04%)</title><rect x="98.8213%" y="517" width="0.0368%" height="15" fill="rgb(241,24,51)" fg:x="64391" fg:w="24"/><text x="99.0713%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (24 samples, 0.04%)</title><rect x="98.8213%" y="501" width="0.0368%" height="15" fill="rgb(227,51,44)" fg:x="64391" fg:w="24"/><text x="99.0713%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (24 samples, 0.04%)</title><rect x="98.8213%" y="485" width="0.0368%" height="15" fill="rgb(231,121,3)" fg:x="64391" fg:w="24"/><text x="99.0713%" y="495.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (11 samples, 0.02%)</title><rect x="98.8659%" y="437" width="0.0169%" height="15" fill="rgb(245,3,41)" fg:x="64420" fg:w="11"/><text x="99.1159%" y="447.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free::{{closure}} (9 samples, 0.01%)</title><rect x="98.8689%" y="421" width="0.0138%" height="15" fill="rgb(214,13,26)" fg:x="64422" fg:w="9"/><text x="99.1189%" y="431.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (9 samples, 0.01%)</title><rect x="98.8689%" y="405" width="0.0138%" height="15" fill="rgb(252,75,11)" fg:x="64422" fg:w="9"/><text x="99.1189%" y="415.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::fits (12 samples, 0.02%)</title><rect x="98.8659%" y="565" width="0.0184%" height="15" fill="rgb(218,226,17)" fg:x="64420" fg:w="12"/><text x="99.1159%" y="575.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::free (12 samples, 0.02%)</title><rect x="98.8659%" y="549" width="0.0184%" height="15" fill="rgb(248,89,38)" fg:x="64420" fg:w="12"/><text x="99.1159%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (12 samples, 0.02%)</title><rect x="98.8659%" y="533" width="0.0184%" height="15" fill="rgb(237,73,46)" fg:x="64420" fg:w="12"/><text x="99.1159%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (12 samples, 0.02%)</title><rect x="98.8659%" y="517" width="0.0184%" height="15" fill="rgb(242,78,33)" fg:x="64420" fg:w="12"/><text x="99.1159%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (12 samples, 0.02%)</title><rect x="98.8659%" y="501" width="0.0184%" height="15" fill="rgb(235,60,3)" fg:x="64420" fg:w="12"/><text x="99.1159%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.02%)</title><rect x="98.8659%" y="485" width="0.0184%" height="15" fill="rgb(216,172,19)" fg:x="64420" fg:w="12"/><text x="99.1159%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.02%)</title><rect x="98.8659%" y="469" width="0.0184%" height="15" fill="rgb(227,6,42)" fg:x="64420" fg:w="12"/><text x="99.1159%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.02%)</title><rect x="98.8659%" y="453" width="0.0184%" height="15" fill="rgb(223,207,42)" fg:x="64420" fg:w="12"/><text x="99.1159%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.05%)</title><rect x="98.8904%" y="469" width="0.0491%" height="15" fill="rgb(246,138,30)" fg:x="64436" fg:w="32"/><text x="99.1404%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (32 samples, 0.05%)</title><rect x="98.8904%" y="453" width="0.0491%" height="15" fill="rgb(251,199,47)" fg:x="64436" fg:w="32"/><text x="99.1404%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (32 samples, 0.05%)</title><rect x="98.8904%" y="437" width="0.0491%" height="15" fill="rgb(228,218,44)" fg:x="64436" fg:w="32"/><text x="99.1404%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (30 samples, 0.05%)</title><rect x="98.8935%" y="421" width="0.0460%" height="15" fill="rgb(220,68,6)" fg:x="64438" fg:w="30"/><text x="99.1435%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.01%)</title><rect x="98.9272%" y="405" width="0.0123%" height="15" fill="rgb(240,60,26)" fg:x="64460" fg:w="8"/><text x="99.1772%" y="415.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (8 samples, 0.01%)</title><rect x="98.9272%" y="389" width="0.0123%" height="15" fill="rgb(211,200,19)" fg:x="64460" fg:w="8"/><text x="99.1772%" y="399.50"></text></g><g><title>&lt;yakvdb::disk::block::Block as yakvdb::api::page::Page&gt;::slot (7 samples, 0.01%)</title><rect x="98.9288%" y="373" width="0.0107%" height="15" fill="rgb(242,145,30)" fg:x="64461" fg:w="7"/><text x="99.1788%" y="383.50"></text></g><g><title>_int_malloc (15 samples, 0.02%)</title><rect x="98.9487%" y="309" width="0.0230%" height="15" fill="rgb(225,64,13)" fg:x="64474" fg:w="15"/><text x="99.1987%" y="319.50"></text></g><g><title>malloc_consolidate (9 samples, 0.01%)</title><rect x="98.9579%" y="293" width="0.0138%" height="15" fill="rgb(218,103,35)" fg:x="64480" fg:w="9"/><text x="99.2079%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.03%)</title><rect x="98.9441%" y="405" width="0.0292%" height="15" fill="rgb(216,93,46)" fg:x="64471" fg:w="19"/><text x="99.1941%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 0.03%)</title><rect x="98.9441%" y="389" width="0.0292%" height="15" fill="rgb(225,159,27)" fg:x="64471" fg:w="19"/><text x="99.1941%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.03%)</title><rect x="98.9441%" y="373" width="0.0292%" height="15" fill="rgb(225,204,11)" fg:x="64471" fg:w="19"/><text x="99.1941%" y="383.50"></text></g><g><title>alloc::alloc::realloc (19 samples, 0.03%)</title><rect x="98.9441%" y="357" width="0.0292%" height="15" fill="rgb(205,56,4)" fg:x="64471" fg:w="19"/><text x="99.1941%" y="367.50"></text></g><g><title>__GI___libc_realloc (19 samples, 0.03%)</title><rect x="98.9441%" y="341" width="0.0292%" height="15" fill="rgb(206,6,35)" fg:x="64471" fg:w="19"/><text x="99.1941%" y="351.50"></text></g><g><title>_int_realloc (17 samples, 0.03%)</title><rect x="98.9472%" y="325" width="0.0261%" height="15" fill="rgb(247,73,52)" fg:x="64473" fg:w="17"/><text x="99.1972%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.03%)</title><rect x="98.9411%" y="469" width="0.0338%" height="15" fill="rgb(246,97,4)" fg:x="64469" fg:w="22"/><text x="99.1911%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.03%)</title><rect x="98.9411%" y="453" width="0.0338%" height="15" fill="rgb(212,37,15)" fg:x="64469" fg:w="22"/><text x="99.1911%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.03%)</title><rect x="98.9411%" y="437" width="0.0338%" height="15" fill="rgb(208,130,40)" fg:x="64469" fg:w="22"/><text x="99.1911%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.03%)</title><rect x="98.9411%" y="421" width="0.0338%" height="15" fill="rgb(236,55,29)" fg:x="64469" fg:w="22"/><text x="99.1911%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (58 samples, 0.09%)</title><rect x="98.8889%" y="501" width="0.0890%" height="15" fill="rgb(209,156,45)" fg:x="64435" fg:w="58"/><text x="99.1389%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (58 samples, 0.09%)</title><rect x="98.8889%" y="485" width="0.0890%" height="15" fill="rgb(249,107,4)" fg:x="64435" fg:w="58"/><text x="99.1389%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (59 samples, 0.09%)</title><rect x="98.8889%" y="565" width="0.0905%" height="15" fill="rgb(227,7,13)" fg:x="64435" fg:w="59"/><text x="99.1389%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (59 samples, 0.09%)</title><rect x="98.8889%" y="549" width="0.0905%" height="15" fill="rgb(250,129,14)" fg:x="64435" fg:w="59"/><text x="99.1389%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (59 samples, 0.09%)</title><rect x="98.8889%" y="533" width="0.0905%" height="15" fill="rgb(229,92,13)" fg:x="64435" fg:w="59"/><text x="99.1389%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (59 samples, 0.09%)</title><rect x="98.8889%" y="517" width="0.0905%" height="15" fill="rgb(245,98,39)" fg:x="64435" fg:w="59"/><text x="99.1389%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (9 samples, 0.01%)</title><rect x="98.9825%" y="517" width="0.0138%" height="15" fill="rgb(234,135,48)" fg:x="64496" fg:w="9"/><text x="99.2325%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (9 samples, 0.01%)</title><rect x="98.9825%" y="501" width="0.0138%" height="15" fill="rgb(230,98,28)" fg:x="64496" fg:w="9"/><text x="99.2325%" y="511.50"></text></g><g><title>yakvdb::disk::block::Block::put_entry::{{closure}} (9 samples, 0.01%)</title><rect x="98.9825%" y="485" width="0.0138%" height="15" fill="rgb(223,121,0)" fg:x="64496" fg:w="9"/><text x="99.2325%" y="495.50"></text></g><g><title>yakvdb::disk::block::put_slot (9 samples, 0.01%)</title><rect x="98.9825%" y="469" width="0.0138%" height="15" fill="rgb(234,173,33)" fg:x="64496" fg:w="9"/><text x="99.2325%" y="479.50"></text></g><g><title>yakvdb::disk::block::put_u32 (9 samples, 0.01%)</title><rect x="98.9825%" y="453" width="0.0138%" height="15" fill="rgb(245,47,8)" fg:x="64496" fg:w="9"/><text x="99.2325%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 0.02%)</title><rect x="98.9794%" y="565" width="0.0200%" height="15" fill="rgb(205,17,20)" fg:x="64494" fg:w="13"/><text x="99.2294%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.02%)</title><rect x="98.9794%" y="549" width="0.0200%" height="15" fill="rgb(232,151,16)" fg:x="64494" fg:w="13"/><text x="99.2294%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 0.02%)</title><rect x="98.9794%" y="533" width="0.0200%" height="15" fill="rgb(208,30,32)" fg:x="64494" fg:w="13"/><text x="99.2294%" y="543.50"></text></g><g><title>&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::remove (24,522 samples, 37.63%)</title><rect x="61.3699%" y="597" width="37.6341%" height="15" fill="rgb(254,26,3)" fg:x="39988" fg:w="24522"/><text x="61.6199%" y="607.50">&lt;yakvdb::disk::file::File&lt;P&gt; as yakvdb::api::tree::Tree&lt;P&gt;&gt;::..</text></g><g><title>yakvdb::disk::block::Block::put_entry (95 samples, 0.15%)</title><rect x="98.8582%" y="581" width="0.1458%" height="15" fill="rgb(240,177,30)" fg:x="64415" fg:w="95"/><text x="99.1082%" y="591.50"></text></g><g><title>&lt;main::SelfStorage as main::Storage&gt;::remove (24,532 samples, 37.65%)</title><rect x="61.3699%" y="613" width="37.6494%" height="15" fill="rgb(248,76,44)" fg:x="39988" fg:w="24532"/><text x="61.6199%" y="623.50">&lt;main::SelfStorage as main::Storage&gt;::remove</text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (10 samples, 0.02%)</title><rect x="99.0040%" y="597" width="0.0153%" height="15" fill="rgb(241,186,54)" fg:x="64510" fg:w="10"/><text x="99.2540%" y="607.50"></text></g><g><title>__GI___libc_malloc (71 samples, 0.11%)</title><rect x="99.0331%" y="453" width="0.1090%" height="15" fill="rgb(249,171,29)" fg:x="64529" fg:w="71"/><text x="99.2831%" y="463.50"></text></g><g><title>_int_malloc (65 samples, 0.10%)</title><rect x="99.0423%" y="437" width="0.0998%" height="15" fill="rgb(237,151,44)" fg:x="64535" fg:w="65"/><text x="99.2923%" y="447.50"></text></g><g><title>unlink_chunk.isra.0 (7 samples, 0.01%)</title><rect x="99.1314%" y="421" width="0.0107%" height="15" fill="rgb(228,174,30)" fg:x="64593" fg:w="7"/><text x="99.3814%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (73 samples, 0.11%)</title><rect x="99.0316%" y="549" width="0.1120%" height="15" fill="rgb(252,14,37)" fg:x="64528" fg:w="73"/><text x="99.2816%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (73 samples, 0.11%)</title><rect x="99.0316%" y="533" width="0.1120%" height="15" fill="rgb(207,111,40)" fg:x="64528" fg:w="73"/><text x="99.2816%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (73 samples, 0.11%)</title><rect x="99.0316%" y="517" width="0.1120%" height="15" fill="rgb(248,171,54)" fg:x="64528" fg:w="73"/><text x="99.2816%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (73 samples, 0.11%)</title><rect x="99.0316%" y="501" width="0.1120%" height="15" fill="rgb(211,127,2)" fg:x="64528" fg:w="73"/><text x="99.2816%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (73 samples, 0.11%)</title><rect x="99.0316%" y="485" width="0.1120%" height="15" fill="rgb(236,87,47)" fg:x="64528" fg:w="73"/><text x="99.2816%" y="495.50"></text></g><g><title>alloc::alloc::alloc (73 samples, 0.11%)</title><rect x="99.0316%" y="469" width="0.1120%" height="15" fill="rgb(223,190,45)" fg:x="64528" fg:w="73"/><text x="99.2816%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (74 samples, 0.11%)</title><rect x="99.0316%" y="613" width="0.1136%" height="15" fill="rgb(215,5,16)" fg:x="64528" fg:w="74"/><text x="99.2816%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (74 samples, 0.11%)</title><rect x="99.0316%" y="597" width="0.1136%" height="15" fill="rgb(252,82,33)" fg:x="64528" fg:w="74"/><text x="99.2816%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (74 samples, 0.11%)</title><rect x="99.0316%" y="581" width="0.1136%" height="15" fill="rgb(247,213,44)" fg:x="64528" fg:w="74"/><text x="99.2816%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (74 samples, 0.11%)</title><rect x="99.0316%" y="565" width="0.1136%" height="15" fill="rgb(205,196,44)" fg:x="64528" fg:w="74"/><text x="99.2816%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.02%)</title><rect x="99.1452%" y="613" width="0.0246%" height="15" fill="rgb(237,96,54)" fg:x="64602" fg:w="16"/><text x="99.3952%" y="623.50"></text></g><g><title>core::ptr::write (15 samples, 0.02%)</title><rect x="99.1467%" y="597" width="0.0230%" height="15" fill="rgb(230,113,34)" fg:x="64603" fg:w="15"/><text x="99.3967%" y="607.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="99.1482%" y="581" width="0.0215%" height="15" fill="rgb(221,224,12)" fg:x="64604" fg:w="14"/><text x="99.3982%" y="591.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="99.1544%" y="565" width="0.0153%" height="15" fill="rgb(219,112,44)" fg:x="64608" fg:w="10"/><text x="99.4044%" y="575.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="99.1559%" y="549" width="0.0138%" height="15" fill="rgb(210,31,13)" fg:x="64609" fg:w="9"/><text x="99.4059%" y="559.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="99.1559%" y="533" width="0.0138%" height="15" fill="rgb(230,25,16)" fg:x="64609" fg:w="9"/><text x="99.4059%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="99.1559%" y="517" width="0.0138%" height="15" fill="rgb(246,108,53)" fg:x="64609" fg:w="9"/><text x="99.4059%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="99.1590%" y="501" width="0.0107%" height="15" fill="rgb(241,172,50)" fg:x="64611" fg:w="7"/><text x="99.4090%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="99.1590%" y="485" width="0.0107%" height="15" fill="rgb(235,141,10)" fg:x="64611" fg:w="7"/><text x="99.4090%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (8 samples, 0.01%)</title><rect x="99.1697%" y="613" width="0.0123%" height="15" fill="rgb(220,174,43)" fg:x="64618" fg:w="8"/><text x="99.4197%" y="623.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::ne (7 samples, 0.01%)</title><rect x="99.1713%" y="597" width="0.0107%" height="15" fill="rgb(215,181,40)" fg:x="64619" fg:w="7"/><text x="99.4213%" y="607.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::ne (7 samples, 0.01%)</title><rect x="99.1713%" y="581" width="0.0107%" height="15" fill="rgb(230,97,2)" fg:x="64619" fg:w="7"/><text x="99.4213%" y="591.50"></text></g><g><title>core::slice::cmp::SlicePartialEq::not_equal (7 samples, 0.01%)</title><rect x="99.1713%" y="565" width="0.0107%" height="15" fill="rgb(211,25,27)" fg:x="64619" fg:w="7"/><text x="99.4213%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.01%)</title><rect x="99.1713%" y="549" width="0.0107%" height="15" fill="rgb(230,87,26)" fg:x="64619" fg:w="7"/><text x="99.4213%" y="559.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.01%)</title><rect x="99.1713%" y="533" width="0.0107%" height="15" fill="rgb(227,160,17)" fg:x="64619" fg:w="7"/><text x="99.4213%" y="543.50"></text></g><g><title>__GI___libc_free (80 samples, 0.12%)</title><rect x="99.1835%" y="469" width="0.1228%" height="15" fill="rgb(244,85,34)" fg:x="64627" fg:w="80"/><text x="99.4335%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (98 samples, 0.15%)</title><rect x="99.1835%" y="501" width="0.1504%" height="15" fill="rgb(207,70,0)" fg:x="64627" fg:w="98"/><text x="99.4335%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (98 samples, 0.15%)</title><rect x="99.1835%" y="485" width="0.1504%" height="15" fill="rgb(223,129,7)" fg:x="64627" fg:w="98"/><text x="99.4335%" y="495.50"></text></g><g><title>_int_free (16 samples, 0.02%)</title><rect x="99.3094%" y="469" width="0.0246%" height="15" fill="rgb(246,105,7)" fg:x="64709" fg:w="16"/><text x="99.5594%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.16%)</title><rect x="99.1820%" y="597" width="0.1550%" height="15" fill="rgb(215,154,42)" fg:x="64626" fg:w="101"/><text x="99.4320%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (101 samples, 0.16%)</title><rect x="99.1820%" y="581" width="0.1550%" height="15" fill="rgb(220,215,30)" fg:x="64626" fg:w="101"/><text x="99.4320%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (101 samples, 0.16%)</title><rect x="99.1820%" y="565" width="0.1550%" height="15" fill="rgb(228,81,51)" fg:x="64626" fg:w="101"/><text x="99.4320%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (101 samples, 0.16%)</title><rect x="99.1820%" y="549" width="0.1550%" height="15" fill="rgb(247,71,54)" fg:x="64626" fg:w="101"/><text x="99.4320%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (101 samples, 0.16%)</title><rect x="99.1820%" y="533" width="0.1550%" height="15" fill="rgb(234,176,34)" fg:x="64626" fg:w="101"/><text x="99.4320%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.16%)</title><rect x="99.1820%" y="517" width="0.1550%" height="15" fill="rgb(241,103,54)" fg:x="64626" fg:w="101"/><text x="99.4320%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (104 samples, 0.16%)</title><rect x="99.1820%" y="613" width="0.1596%" height="15" fill="rgb(228,22,34)" fg:x="64626" fg:w="104"/><text x="99.4320%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="99.3416%" y="597" width="0.0200%" height="15" fill="rgb(241,179,48)" fg:x="64730" fg:w="13"/><text x="99.5916%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (13 samples, 0.02%)</title><rect x="99.3416%" y="581" width="0.0200%" height="15" fill="rgb(235,167,37)" fg:x="64730" fg:w="13"/><text x="99.5916%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.02%)</title><rect x="99.3416%" y="565" width="0.0200%" height="15" fill="rgb(213,109,30)" fg:x="64730" fg:w="13"/><text x="99.5916%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.02%)</title><rect x="99.3416%" y="549" width="0.0200%" height="15" fill="rgb(222,172,16)" fg:x="64730" fg:w="13"/><text x="99.5916%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="99.3416%" y="533" width="0.0200%" height="15" fill="rgb(233,192,5)" fg:x="64730" fg:w="13"/><text x="99.5916%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.02%)</title><rect x="99.3416%" y="517" width="0.0200%" height="15" fill="rgb(247,189,41)" fg:x="64730" fg:w="13"/><text x="99.5916%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.02%)</title><rect x="99.3416%" y="501" width="0.0200%" height="15" fill="rgb(218,134,47)" fg:x="64730" fg:w="13"/><text x="99.5916%" y="511.50"></text></g><g><title>_int_free (9 samples, 0.01%)</title><rect x="99.3477%" y="485" width="0.0138%" height="15" fill="rgb(216,29,3)" fg:x="64734" fg:w="9"/><text x="99.5977%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="99.3416%" y="613" width="0.0230%" height="15" fill="rgb(246,140,12)" fg:x="64730" fg:w="15"/><text x="99.5916%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;main::SelfStorage&gt; (217 samples, 0.33%)</title><rect x="99.3662%" y="613" width="0.3330%" height="15" fill="rgb(230,136,11)" fg:x="64746" fg:w="217"/><text x="99.6162%" y="623.50"></text></g><g><title>_int_free (217 samples, 0.33%)</title><rect x="99.3662%" y="597" width="0.3330%" height="15" fill="rgb(247,22,47)" fg:x="64746" fg:w="217"/><text x="99.6162%" y="607.50"></text></g><g><title>malloc_consolidate (214 samples, 0.33%)</title><rect x="99.3708%" y="581" width="0.3284%" height="15" fill="rgb(218,84,22)" fg:x="64749" fg:w="214"/><text x="99.6208%" y="591.50"></text></g><g><title>unlink_chunk.isra.0 (69 samples, 0.11%)</title><rect x="99.5933%" y="565" width="0.1059%" height="15" fill="rgb(216,87,39)" fg:x="64894" fg:w="69"/><text x="99.8433%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (17 samples, 0.03%)</title><rect x="99.7007%" y="453" width="0.0261%" height="15" fill="rgb(221,178,8)" fg:x="64964" fg:w="17"/><text x="99.9507%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (17 samples, 0.03%)</title><rect x="99.7007%" y="437" width="0.0261%" height="15" fill="rgb(230,42,11)" fg:x="64964" fg:w="17"/><text x="99.9507%" y="447.50"></text></g><g><title>core::ptr::write (17 samples, 0.03%)</title><rect x="99.7007%" y="421" width="0.0261%" height="15" fill="rgb(237,229,4)" fg:x="64964" fg:w="17"/><text x="99.9507%" y="431.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="99.7023%" y="405" width="0.0246%" height="15" fill="rgb(222,31,33)" fg:x="64965" fg:w="16"/><text x="99.9523%" y="415.50"></text></g><g><title>[unknown] (12 samples, 0.02%)</title><rect x="99.7084%" y="389" width="0.0184%" height="15" fill="rgb(210,17,39)" fg:x="64969" fg:w="12"/><text x="99.9584%" y="399.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="99.7099%" y="373" width="0.0169%" height="15" fill="rgb(244,93,20)" fg:x="64970" fg:w="11"/><text x="99.9599%" y="383.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="99.7099%" y="357" width="0.0169%" height="15" fill="rgb(210,40,47)" fg:x="64970" fg:w="11"/><text x="99.9599%" y="367.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="99.7099%" y="341" width="0.0169%" height="15" fill="rgb(239,211,47)" fg:x="64970" fg:w="11"/><text x="99.9599%" y="351.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="99.7130%" y="325" width="0.0138%" height="15" fill="rgb(251,223,49)" fg:x="64972" fg:w="9"/><text x="99.9630%" y="335.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="99.7130%" y="309" width="0.0138%" height="15" fill="rgb(221,149,5)" fg:x="64972" fg:w="9"/><text x="99.9630%" y="319.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="99.7145%" y="293" width="0.0123%" height="15" fill="rgb(219,224,51)" fg:x="64973" fg:w="8"/><text x="99.9645%" y="303.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="99.7145%" y="277" width="0.0123%" height="15" fill="rgb(223,7,8)" fg:x="64973" fg:w="8"/><text x="99.9645%" y="287.50"></text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u64 (9 samples, 0.01%)</title><rect x="99.7268%" y="437" width="0.0138%" height="15" fill="rgb(241,217,22)" fg:x="64981" fg:w="9"/><text x="99.9768%" y="447.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u64 (9 samples, 0.01%)</title><rect x="99.7268%" y="421" width="0.0138%" height="15" fill="rgb(248,209,0)" fg:x="64981" fg:w="9"/><text x="99.9768%" y="431.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (9 samples, 0.01%)</title><rect x="99.7268%" y="405" width="0.0138%" height="15" fill="rgb(217,205,4)" fg:x="64981" fg:w="9"/><text x="99.9768%" y="415.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (8 samples, 0.01%)</title><rect x="99.7284%" y="389" width="0.0123%" height="15" fill="rgb(228,124,39)" fg:x="64982" fg:w="8"/><text x="99.9784%" y="399.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (8 samples, 0.01%)</title><rect x="99.7284%" y="373" width="0.0123%" height="15" fill="rgb(250,116,42)" fg:x="64982" fg:w="8"/><text x="99.9784%" y="383.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (8 samples, 0.01%)</title><rect x="99.7284%" y="357" width="0.0123%" height="15" fill="rgb(223,202,9)" fg:x="64982" fg:w="8"/><text x="99.9784%" y="367.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx (8 samples, 0.01%)</title><rect x="99.7284%" y="341" width="0.0123%" height="15" fill="rgb(242,222,40)" fg:x="64982" fg:w="8"/><text x="99.9784%" y="351.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (8 samples, 0.01%)</title><rect x="99.7284%" y="325" width="0.0123%" height="15" fill="rgb(229,99,46)" fg:x="64982" fg:w="8"/><text x="99.9784%" y="335.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (8 samples, 0.01%)</title><rect x="99.7284%" y="309" width="0.0123%" height="15" fill="rgb(225,56,46)" fg:x="64982" fg:w="8"/><text x="99.9784%" y="319.50"></text></g><g><title>rand_chacha::guts::round (7 samples, 0.01%)</title><rect x="99.7299%" y="293" width="0.0107%" height="15" fill="rgb(227,94,5)" fg:x="64983" fg:w="7"/><text x="99.9799%" y="303.50"></text></g><g><title>__GI___libc_malloc (54 samples, 0.08%)</title><rect x="99.7437%" y="277" width="0.0829%" height="15" fill="rgb(205,112,38)" fg:x="64992" fg:w="54"/><text x="99.9937%" y="287.50"></text></g><g><title>_int_malloc (43 samples, 0.07%)</title><rect x="99.7606%" y="261" width="0.0660%" height="15" fill="rgb(231,133,46)" fg:x="65003" fg:w="43"/><text x="100.0106%" y="271.50"></text></g><g><title>[unknown] (19 samples, 0.03%)</title><rect x="99.7974%" y="245" width="0.0292%" height="15" fill="rgb(217,16,9)" fg:x="65027" fg:w="19"/><text x="100.0474%" y="255.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="99.8020%" y="229" width="0.0246%" height="15" fill="rgb(249,173,9)" fg:x="65030" fg:w="16"/><text x="100.0520%" y="239.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="99.8097%" y="213" width="0.0169%" height="15" fill="rgb(205,163,53)" fg:x="65035" fg:w="11"/><text x="100.0597%" y="223.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="99.8097%" y="197" width="0.0169%" height="15" fill="rgb(217,54,41)" fg:x="65035" fg:w="11"/><text x="100.0597%" y="207.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="99.8097%" y="181" width="0.0169%" height="15" fill="rgb(228,216,12)" fg:x="65035" fg:w="11"/><text x="100.0597%" y="191.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="99.8097%" y="165" width="0.0169%" height="15" fill="rgb(244,228,15)" fg:x="65035" fg:w="11"/><text x="100.0597%" y="175.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="99.8097%" y="149" width="0.0169%" height="15" fill="rgb(221,176,53)" fg:x="65035" fg:w="11"/><text x="100.0597%" y="159.50"></text></g><g><title>[unknown] (11 samples, 0.02%)</title><rect x="99.8097%" y="133" width="0.0169%" height="15" fill="rgb(205,94,34)" fg:x="65035" fg:w="11"/><text x="100.0597%" y="143.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="99.8112%" y="117" width="0.0153%" height="15" fill="rgb(213,110,48)" fg:x="65036" fg:w="10"/><text x="100.0612%" y="127.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="99.8143%" y="101" width="0.0123%" height="15" fill="rgb(236,142,28)" fg:x="65038" fg:w="8"/><text x="100.0643%" y="111.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (85 samples, 0.13%)</title><rect x="99.7007%" y="469" width="0.1305%" height="15" fill="rgb(225,135,29)" fg:x="64964" fg:w="85"/><text x="99.9507%" y="479.50"></text></g><g><title>yakvdb::util::data::{{closure}} (68 samples, 0.10%)</title><rect x="99.7268%" y="453" width="0.1044%" height="15" fill="rgb(252,45,31)" fg:x="64981" fg:w="68"/><text x="99.9768%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (59 samples, 0.09%)</title><rect x="99.7406%" y="437" width="0.0905%" height="15" fill="rgb(211,187,50)" fg:x="64990" fg:w="59"/><text x="99.9906%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59 samples, 0.09%)</title><rect x="99.7406%" y="421" width="0.0905%" height="15" fill="rgb(229,109,7)" fg:x="64990" fg:w="59"/><text x="99.9906%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (59 samples, 0.09%)</title><rect x="99.7406%" y="405" width="0.0905%" height="15" fill="rgb(251,131,51)" fg:x="64990" fg:w="59"/><text x="99.9906%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59 samples, 0.09%)</title><rect x="99.7406%" y="389" width="0.0905%" height="15" fill="rgb(251,180,35)" fg:x="64990" fg:w="59"/><text x="99.9906%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (59 samples, 0.09%)</title><rect x="99.7406%" y="373" width="0.0905%" height="15" fill="rgb(211,46,32)" fg:x="64990" fg:w="59"/><text x="99.9906%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (59 samples, 0.09%)</title><rect x="99.7406%" y="357" width="0.0905%" height="15" fill="rgb(248,123,17)" fg:x="64990" fg:w="59"/><text x="99.9906%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (59 samples, 0.09%)</title><rect x="99.7406%" y="341" width="0.0905%" height="15" fill="rgb(227,141,18)" fg:x="64990" fg:w="59"/><text x="99.9906%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (58 samples, 0.09%)</title><rect x="99.7422%" y="325" width="0.0890%" height="15" fill="rgb(216,102,9)" fg:x="64991" fg:w="58"/><text x="99.9922%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (58 samples, 0.09%)</title><rect x="99.7422%" y="309" width="0.0890%" height="15" fill="rgb(253,47,13)" fg:x="64991" fg:w="58"/><text x="99.9922%" y="319.50"></text></g><g><title>alloc::alloc::alloc (58 samples, 0.09%)</title><rect x="99.7422%" y="293" width="0.0890%" height="15" fill="rgb(226,93,23)" fg:x="64991" fg:w="58"/><text x="99.9922%" y="303.50"></text></g><g><title>yakvdb::util::data (86 samples, 0.13%)</title><rect x="99.7007%" y="613" width="0.1320%" height="15" fill="rgb(247,104,17)" fg:x="64964" fg:w="86"/><text x="99.9507%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (86 samples, 0.13%)</title><rect x="99.7007%" y="597" width="0.1320%" height="15" fill="rgb(233,203,26)" fg:x="64964" fg:w="86"/><text x="99.9507%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (86 samples, 0.13%)</title><rect x="99.7007%" y="581" width="0.1320%" height="15" fill="rgb(244,98,49)" fg:x="64964" fg:w="86"/><text x="99.9507%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (86 samples, 0.13%)</title><rect x="99.7007%" y="565" width="0.1320%" height="15" fill="rgb(235,134,22)" fg:x="64964" fg:w="86"/><text x="99.9507%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (86 samples, 0.13%)</title><rect x="99.7007%" y="549" width="0.1320%" height="15" fill="rgb(221,70,32)" fg:x="64964" fg:w="86"/><text x="99.9507%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (86 samples, 0.13%)</title><rect x="99.7007%" y="533" width="0.1320%" height="15" fill="rgb(238,15,50)" fg:x="64964" fg:w="86"/><text x="99.9507%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (86 samples, 0.13%)</title><rect x="99.7007%" y="517" width="0.1320%" height="15" fill="rgb(215,221,48)" fg:x="64964" fg:w="86"/><text x="99.9507%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (86 samples, 0.13%)</title><rect x="99.7007%" y="501" width="0.1320%" height="15" fill="rgb(236,73,3)" fg:x="64964" fg:w="86"/><text x="99.9507%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (86 samples, 0.13%)</title><rect x="99.7007%" y="485" width="0.1320%" height="15" fill="rgb(250,107,11)" fg:x="64964" fg:w="86"/><text x="99.9507%" y="495.50"></text></g><g><title>core::intrinsics::copy (39 samples, 0.06%)</title><rect x="99.8358%" y="549" width="0.0599%" height="15" fill="rgb(242,39,14)" fg:x="65052" fg:w="39"/><text x="100.0858%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (42 samples, 0.06%)</title><rect x="99.8343%" y="581" width="0.0645%" height="15" fill="rgb(248,164,37)" fg:x="65051" fg:w="42"/><text x="100.0843%" y="591.50"></text></g><g><title>core::ptr::swap (41 samples, 0.06%)</title><rect x="99.8358%" y="565" width="0.0629%" height="15" fill="rgb(217,60,12)" fg:x="65052" fg:w="41"/><text x="100.0858%" y="575.50"></text></g><g><title>std::panic::catch_unwind (59,881 samples, 91.90%)</title><rect x="8.0096%" y="757" width="91.8998%" height="15" fill="rgb(240,125,29)" fg:x="5219" fg:w="59881"/><text x="8.2596%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (59,881 samples, 91.90%)</title><rect x="8.0096%" y="741" width="91.8998%" height="15" fill="rgb(208,207,28)" fg:x="5219" fg:w="59881"/><text x="8.2596%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (59,881 samples, 91.90%)</title><rect x="8.0096%" y="725" width="91.8998%" height="15" fill="rgb(209,159,27)" fg:x="5219" fg:w="59881"/><text x="8.2596%" y="735.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (59,881 samples, 91.90%)</title><rect x="8.0096%" y="709" width="91.8998%" height="15" fill="rgb(251,176,53)" fg:x="5219" fg:w="59881"/><text x="8.2596%" y="719.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (59,881 samples, 91.90%)</title><rect x="8.0096%" y="693" width="91.8998%" height="15" fill="rgb(211,85,7)" fg:x="5219" fg:w="59881"/><text x="8.2596%" y="703.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (59,881 samples, 91.90%)</title><rect x="8.0096%" y="677" width="91.8998%" height="15" fill="rgb(216,64,54)" fg:x="5219" fg:w="59881"/><text x="8.2596%" y="687.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (59,881 samples, 91.90%)</title><rect x="8.0096%" y="661" width="91.8998%" height="15" fill="rgb(217,54,24)" fg:x="5219" fg:w="59881"/><text x="8.2596%" y="671.50">core::ops::function::FnOnce::call_once</text></g><g><title>main::main (59,881 samples, 91.90%)</title><rect x="8.0096%" y="645" width="91.8998%" height="15" fill="rgb(208,206,53)" fg:x="5219" fg:w="59881"/><text x="8.2596%" y="655.50">main::main</text></g><g><title>main::benchmark (59,881 samples, 91.90%)</title><rect x="8.0096%" y="629" width="91.8998%" height="15" fill="rgb(251,74,39)" fg:x="5219" fg:w="59881"/><text x="8.2596%" y="639.50">main::benchmark</text></g><g><title>yakvdb::util::shuffle (50 samples, 0.08%)</title><rect x="99.8327%" y="613" width="0.0767%" height="15" fill="rgb(226,47,5)" fg:x="65050" fg:w="50"/><text x="100.0827%" y="623.50"></text></g><g><title>&lt;[T] as rand::seq::SliceRandom&gt;::shuffle (50 samples, 0.08%)</title><rect x="99.8327%" y="597" width="0.0767%" height="15" fill="rgb(234,111,33)" fg:x="65050" fg:w="50"/><text x="100.0827%" y="607.50"></text></g><g><title>rand::seq::gen_index (7 samples, 0.01%)</title><rect x="99.8987%" y="581" width="0.0107%" height="15" fill="rgb(251,14,10)" fg:x="65093" fg:w="7"/><text x="100.1487%" y="591.50"></text></g><g><title>rand::rng::Rng::gen_range (7 samples, 0.01%)</title><rect x="99.8987%" y="565" width="0.0107%" height="15" fill="rgb(232,43,0)" fg:x="65093" fg:w="7"/><text x="100.1487%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (7 samples, 0.01%)</title><rect x="99.8987%" y="549" width="0.0107%" height="15" fill="rgb(222,68,43)" fg:x="65093" fg:w="7"/><text x="100.1487%" y="559.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (7 samples, 0.01%)</title><rect x="99.8987%" y="533" width="0.0107%" height="15" fill="rgb(217,24,23)" fg:x="65093" fg:w="7"/><text x="100.1487%" y="543.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (7 samples, 0.01%)</title><rect x="99.8987%" y="517" width="0.0107%" height="15" fill="rgb(229,209,14)" fg:x="65093" fg:w="7"/><text x="100.1487%" y="527.50"></text></g><g><title>__libc_start_main (59,882 samples, 91.90%)</title><rect x="8.0096%" y="869" width="91.9013%" height="15" fill="rgb(250,149,48)" fg:x="5219" fg:w="59882"/><text x="8.2596%" y="879.50">__libc_start_main</text></g><g><title>main (59,882 samples, 91.90%)</title><rect x="8.0096%" y="853" width="91.9013%" height="15" fill="rgb(210,120,37)" fg:x="5219" fg:w="59882"/><text x="8.2596%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (59,882 samples, 91.90%)</title><rect x="8.0096%" y="837" width="91.9013%" height="15" fill="rgb(210,21,8)" fg:x="5219" fg:w="59882"/><text x="8.2596%" y="847.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (59,882 samples, 91.90%)</title><rect x="8.0096%" y="821" width="91.9013%" height="15" fill="rgb(243,145,7)" fg:x="5219" fg:w="59882"/><text x="8.2596%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (59,882 samples, 91.90%)</title><rect x="8.0096%" y="805" width="91.9013%" height="15" fill="rgb(238,178,32)" fg:x="5219" fg:w="59882"/><text x="8.2596%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (59,882 samples, 91.90%)</title><rect x="8.0096%" y="789" width="91.9013%" height="15" fill="rgb(222,4,10)" fg:x="5219" fg:w="59882"/><text x="8.2596%" y="799.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (59,882 samples, 91.90%)</title><rect x="8.0096%" y="773" width="91.9013%" height="15" fill="rgb(239,7,37)" fg:x="5219" fg:w="59882"/><text x="8.2596%" y="783.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>_start (59,885 samples, 91.91%)</title><rect x="8.0096%" y="885" width="91.9060%" height="15" fill="rgb(215,31,37)" fg:x="5219" fg:w="59885"/><text x="8.2596%" y="895.50">_start</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (12 samples, 0.02%)</title><rect x="99.9340%" y="885" width="0.0184%" height="15" fill="rgb(224,83,33)" fg:x="65116" fg:w="12"/><text x="100.1840%" y="895.50"></text></g><g><title>main (65,151 samples, 99.99%)</title><rect x="0.0000%" y="901" width="99.9877%" height="15" fill="rgb(239,55,3)" fg:x="0" fg:w="65151"/><text x="0.2500%" y="911.50">main</text></g><g><title>yakvdb::util::cache::LruCache&lt;K,V&gt;::touch (18 samples, 0.03%)</title><rect x="99.9601%" y="885" width="0.0276%" height="15" fill="rgb(247,92,11)" fg:x="65133" fg:w="18"/><text x="100.2101%" y="895.50"></text></g><g><title>all (65,159 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(239,200,7)" fg:x="0" fg:w="65159"/><text x="0.2500%" y="927.50"></text></g><g><title>perf (8 samples, 0.01%)</title><rect x="99.9877%" y="901" width="0.0123%" height="15" fill="rgb(227,115,8)" fg:x="65151" fg:w="8"/><text x="100.2377%" y="911.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="99.9877%" y="885" width="0.0123%" height="15" fill="rgb(215,189,27)" fg:x="65151" fg:w="8"/><text x="100.2377%" y="895.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="99.9877%" y="869" width="0.0123%" height="15" fill="rgb(251,216,39)" fg:x="65151" fg:w="8"/><text x="100.2377%" y="879.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="99.9877%" y="853" width="0.0123%" height="15" fill="rgb(207,29,47)" fg:x="65151" fg:w="8"/><text x="100.2377%" y="863.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="99.9877%" y="837" width="0.0123%" height="15" fill="rgb(210,71,34)" fg:x="65151" fg:w="8"/><text x="100.2377%" y="847.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="99.9877%" y="821" width="0.0123%" height="15" fill="rgb(253,217,51)" fg:x="65151" fg:w="8"/><text x="100.2377%" y="831.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="99.9877%" y="805" width="0.0123%" height="15" fill="rgb(222,117,46)" fg:x="65151" fg:w="8"/><text x="100.2377%" y="815.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="99.9877%" y="789" width="0.0123%" height="15" fill="rgb(226,132,6)" fg:x="65151" fg:w="8"/><text x="100.2377%" y="799.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="99.9893%" y="773" width="0.0107%" height="15" fill="rgb(254,145,51)" fg:x="65152" fg:w="7"/><text x="100.2393%" y="783.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="99.9893%" y="757" width="0.0107%" height="15" fill="rgb(231,199,27)" fg:x="65152" fg:w="7"/><text x="100.2393%" y="767.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="99.9893%" y="741" width="0.0107%" height="15" fill="rgb(245,158,14)" fg:x="65152" fg:w="7"/><text x="100.2393%" y="751.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="99.9893%" y="725" width="0.0107%" height="15" fill="rgb(240,113,14)" fg:x="65152" fg:w="7"/><text x="100.2393%" y="735.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="99.9893%" y="709" width="0.0107%" height="15" fill="rgb(210,20,13)" fg:x="65152" fg:w="7"/><text x="100.2393%" y="719.50"></text></g><g><title>[unknown] (7 samples, 0.01%)</title><rect x="99.9893%" y="693" width="0.0107%" height="15" fill="rgb(241,144,13)" fg:x="65152" fg:w="7"/><text x="100.2393%" y="703.50"></text></g></svg></svg>